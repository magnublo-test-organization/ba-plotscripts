<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:45:30.670" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.258" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:31.267" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:32.415" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:31.257" endtime="20201029 12:45:32.416"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.418" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:32.417" endtime="20201029 12:45:32.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.256" endtime="20201029 12:45:32.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.421" endtime="20201029 12:45:32.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.420" endtime="20201029 12:45:32.618"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.631" endtime="20201029 12:45:32.648"></status>
</kw>
<msg timestamp="20201029 12:45:32.649" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.629" endtime="20201029 12:45:32.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.655" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.652" endtime="20201029 12:45:32.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.661" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:32.657" endtime="20201029 12:45:32.662"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.627" endtime="20201029 12:45:32.663"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.624" endtime="20201029 12:45:32.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.623" endtime="20201029 12:45:32.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:32.673" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:32.671" endtime="20201029 12:45:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.667" endtime="20201029 12:45:32.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.622" endtime="20201029 12:45:32.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.621" endtime="20201029 12:45:32.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.678" endtime="20201029 12:45:32.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.620" endtime="20201029 12:45:32.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.684" endtime="20201029 12:45:32.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.618" endtime="20201029 12:45:32.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.254" endtime="20201029 12:45:32.689"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.702" endtime="20201029 12:45:32.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.699" endtime="20201029 12:45:32.724"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.745" endtime="20201029 12:45:32.757"></status>
</kw>
<msg timestamp="20201029 12:45:32.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.743" endtime="20201029 12:45:32.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.759" endtime="20201029 12:45:32.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.763" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:32.761" endtime="20201029 12:45:32.764"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.741" endtime="20201029 12:45:32.764"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:32.738" endtime="20201029 12:45:32.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.735" endtime="20201029 12:45:32.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:32.769" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:32.768" endtime="20201029 12:45:32.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.766" endtime="20201029 12:45:32.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.733" endtime="20201029 12:45:32.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.732" endtime="20201029 12:45:32.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.771" endtime="20201029 12:45:32.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.729" endtime="20201029 12:45:32.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.726" endtime="20201029 12:45:32.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.696" endtime="20201029 12:45:32.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.781" endtime="20201029 12:45:32.789"></status>
</kw>
<msg timestamp="20201029 12:45:32.790" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.778" endtime="20201029 12:45:32.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.792" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.791" endtime="20201029 12:45:32.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.793" endtime="20201029 12:45:32.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.776" endtime="20201029 12:45:32.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.774" endtime="20201029 12:45:32.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.800" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:45:32.799" endtime="20201029 12:45:32.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.802" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:45:32.801" endtime="20201029 12:45:32.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.796" endtime="20201029 12:45:32.802"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:32.690" endtime="20201029 12:45:32.803" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:30.781" endtime="20201029 12:45:32.805"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.857" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:32.865" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:34.035" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:32.855" endtime="20201029 12:45:34.036"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.039" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:34.037" endtime="20201029 12:45:34.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.854" endtime="20201029 12:45:34.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.043" endtime="20201029 12:45:34.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.041" endtime="20201029 12:45:34.323"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.335" endtime="20201029 12:45:34.347"></status>
</kw>
<msg timestamp="20201029 12:45:34.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.334" endtime="20201029 12:45:34.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.350" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.349" endtime="20201029 12:45:34.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.353" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:34.352" endtime="20201029 12:45:34.354"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.331" endtime="20201029 12:45:34.354"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.329" endtime="20201029 12:45:34.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.328" endtime="20201029 12:45:34.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:34.359" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:34.358" endtime="20201029 12:45:34.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.356" endtime="20201029 12:45:34.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.327" endtime="20201029 12:45:34.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.326" endtime="20201029 12:45:34.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.361" endtime="20201029 12:45:34.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.325" endtime="20201029 12:45:34.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.363" endtime="20201029 12:45:34.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.324" endtime="20201029 12:45:34.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.853" endtime="20201029 12:45:34.366"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.372" endtime="20201029 12:45:34.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.370" endtime="20201029 12:45:34.392"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.406" endtime="20201029 12:45:34.418"></status>
</kw>
<msg timestamp="20201029 12:45:34.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.404" endtime="20201029 12:45:34.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.420" endtime="20201029 12:45:34.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.424" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:34.422" endtime="20201029 12:45:34.425"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.402" endtime="20201029 12:45:34.425"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:34.398" endtime="20201029 12:45:34.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.397" endtime="20201029 12:45:34.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:34.430" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:34.429" endtime="20201029 12:45:34.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.427" endtime="20201029 12:45:34.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.396" endtime="20201029 12:45:34.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.396" endtime="20201029 12:45:34.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.431" endtime="20201029 12:45:34.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.394" endtime="20201029 12:45:34.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.393" endtime="20201029 12:45:34.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.368" endtime="20201029 12:45:34.434"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.442" endtime="20201029 12:45:34.454"></status>
</kw>
<msg timestamp="20201029 12:45:34.454" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.441" endtime="20201029 12:45:34.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.455" endtime="20201029 12:45:34.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.458" endtime="20201029 12:45:34.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.438" endtime="20201029 12:45:34.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.437" endtime="20201029 12:45:34.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.466" endtime="20201029 12:45:34.757"></status>
</kw>
<msg timestamp="20201029 12:45:34.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061354153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061355403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.465" endtime="20201029 12:45:34.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061354153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061355403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.761" endtime="20201029 12:45:34.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.769" endtime="20201029 12:45:34.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.462" endtime="20201029 12:45:34.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.461" endtime="20201029 12:45:34.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:34.776" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.0560000000062186e-06}, {'diff': 1.0969999999985158e-06}, {'diff': 1.0559999999992797e-...</msg>
<status status="PASS" starttime="20201029 12:45:34.772" endtime="20201029 12:45:34.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:34.780" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2500000000012501e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000062186e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0970000000054547e-06, 1.054999999999806e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:34.777" endtime="20201029 12:45:34.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.784" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:34.783" endtime="20201029 12:45:34.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.789" level="INFO">VALUE: [1.2500000000012501e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000062186e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0970000000054547e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 9.999999999940612e-07, 1.054999999999806e-06, 1.0700000000057885e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.1249999999976557e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.069000000006315e-06, 1.0970000000054547e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0420000000066487e-06, 1.000000000001e-06, 1.069000000006315e-06, 1.0839999999984196e-06, 1.041000000007175e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.014000000007509e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0970000000054547e-06]</msg>
<status status="PASS" starttime="20201029 12:45:34.786" endtime="20201029 12:45:34.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.781" endtime="20201029 12:45:34.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.435" endtime="20201029 12:45:34.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.435" endtime="20201029 12:45:34.792"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.804" endtime="20201029 12:45:34.815"></status>
</kw>
<msg timestamp="20201029 12:45:34.816" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.801" endtime="20201029 12:45:34.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.820" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.818" endtime="20201029 12:45:34.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.821" endtime="20201029 12:45:34.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.798" endtime="20201029 12:45:34.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.794" endtime="20201029 12:45:34.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.831" endtime="20201029 12:45:35.151"></status>
</kw>
<msg timestamp="20201029 12:45:35.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0628905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:34.829" endtime="20201029 12:45:35.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0628905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:35.157" endtime="20201029 12:45:35.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.168" endtime="20201029 12:45:35.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.827" endtime="20201029 12:45:35.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.825" endtime="20201029 12:45:35.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.175" level="INFO">${RESULT} = [{'diff': 1.0420000000066487e-06}, {'diff': 1.054999999999806e-06}, {'diff': 1.02800000000014e-06}, {'diff': 1.0420000000066487e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.069000000006315e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:35.171" endtime="20201029 12:45:35.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:35.180" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0420000000066487e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0420000000066487e-06, 1.000000000001e-06, 1.069000000006315e-06, 1.0839999999984196e-06, 1.041000000007175e-06, 1.05599...</msg>
<status status="PASS" starttime="20201029 12:45:35.176" endtime="20201029 12:45:35.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.185" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:35.184" endtime="20201029 12:45:35.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.187" level="INFO">VALUE: [1.0420000000066487e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0420000000066487e-06, 1.000000000001e-06, 1.069000000006315e-06, 1.0839999999984196e-06, 1.041000000007175e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.014000000007509e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0970000000054547e-06, 1.26400000000082e-06, 1.0420000000066487e-06, 1.0420000000066487e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0410000000349307e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0549999999720505e-06, 1.0559999999992797e-06, 1.0280000000140177e-06, 1.1249999999907168e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0420000000066487e-06, 1.0420000000066487e-06, 1.0690000000201927e-06, 1.0140000000213867e-06, 1.0839999999845418e-06, 1.0559999999992797e-06, 1.0279999999585065e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0549999999720505e-06, 1.0689999999646815e-06, 1.0280000000140177e-06, 1.0559999999992797e-06, 1.0549999999720505e-06, 1.0690000000201927e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0689999999646815e-06, 1.0550000000275617e-06, 1.0420000000066487e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0699999999919108e-06, 1.0699999999919108e-06, 1.0549999999720505e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0699999999919108e-06, 1.0549999999720505e-06]</msg>
<status status="PASS" starttime="20201029 12:45:35.186" endtime="20201029 12:45:35.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.181" endtime="20201029 12:45:35.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.793" endtime="20201029 12:45:35.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.792" endtime="20201029 12:45:35.189"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.196" endtime="20201029 12:45:35.207"></status>
</kw>
<msg timestamp="20201029 12:45:35.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.195" endtime="20201029 12:45:35.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.210" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.208" endtime="20201029 12:45:35.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.211" endtime="20201029 12:45:35.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.192" endtime="20201029 12:45:35.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.191" endtime="20201029 12:45:35.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.221" endtime="20201029 12:45:35.531"></status>
</kw>
<msg timestamp="20201029 12:45:35.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416387667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416388736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.219" endtime="20201029 12:45:35.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416387667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416388736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.537" endtime="20201029 12:45:35.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.550" endtime="20201029 12:45:35.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.216" endtime="20201029 12:45:35.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.214" endtime="20201029 12:45:35.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.559" level="INFO">${RESULT} = [{'diff': 1.0689999999646815e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0420000000066487e-06}, {'diff': 1.0420000000066487e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.0420000000066487e-...</msg>
<status status="PASS" starttime="20201029 12:45:35.555" endtime="20201029 12:45:35.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:35.565" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0689999999646815e-06, 1.0550000000275617e-06, 1.0420000000066487e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0699999999919108e-06, 1.0699999999919108e-06...</msg>
<status status="PASS" starttime="20201029 12:45:35.560" endtime="20201029 12:45:35.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.571" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:35.570" endtime="20201029 12:45:35.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.574" level="INFO">VALUE: [1.0689999999646815e-06, 1.0550000000275617e-06, 1.0420000000066487e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0699999999919108e-06, 1.0699999999919108e-06, 1.0549999999720505e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0699999999919108e-06, 1.0549999999720505e-06, 1.26400000000082e-06, 1.0409999999794195e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0410000000904418e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0280000000140177e-06, 1.0690000000757038e-06, 1.0559999999992797e-06, 1.0689999999646815e-06, 1.0690000000757038e-06, 1.0280000000140177e-06, 1.0419999999511376e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0410000000904418e-06, 1.0559999999992797e-06, 1.0419999999511376e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0419999999511376e-06, 1.0419999999511376e-06, 1.0969999999499436e-06, 1.070000000047422e-06, 1.0689999999646815e-06, 1.0140000000768978e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0830000000128237e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0140000000768978e-06, 1.0830000000128237e-06, 1.070000000047422e-06, 1.0689999999646815e-06, 1.0699999999363996e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0280000000140177e-06, 1.0830000000128237e-06, 1.0420000000621599e-06, 1.070000000047422e-06]</msg>
<status status="PASS" starttime="20201029 12:45:35.572" endtime="20201029 12:45:35.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.566" endtime="20201029 12:45:35.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.189" endtime="20201029 12:45:35.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.189" endtime="20201029 12:45:35.576"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.584" endtime="20201029 12:45:35.594"></status>
</kw>
<msg timestamp="20201029 12:45:35.595" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.582" endtime="20201029 12:45:35.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.597" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.596" endtime="20201029 12:45:35.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.598" endtime="20201029 12:45:35.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.579" endtime="20201029 12:45:35.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.578" endtime="20201029 12:45:35.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.607" endtime="20201029 12:45:35.907"></status>
</kw>
<msg timestamp="20201029 12:45:35.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.798570806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.798571889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.606" endtime="20201029 12:45:35.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.798570806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.798571889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.912" endtime="20201029 12:45:35.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.922" endtime="20201029 12:45:35.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.603" endtime="20201029 12:45:35.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.601" endtime="20201029 12:45:35.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.928" level="INFO">${RESULT} = [{'diff': 1.0830000000128237e-06}, {'diff': 1.070000000047422e-06}, {'diff': 1.0689999999646815e-06}, {'diff': 1.0699999999363996e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.0969999999499436e-0...</msg>
<status status="PASS" starttime="20201029 12:45:35.925" endtime="20201029 12:45:35.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:35.934" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0830000000128237e-06, 1.070000000047422e-06, 1.0689999999646815e-06, 1.0699999999363996e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0689999999646815e-06, 1.0559999999992797e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:35.930" endtime="20201029 12:45:35.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.938" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:35.937" endtime="20201029 12:45:35.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.941" level="INFO">VALUE: [1.0830000000128237e-06, 1.070000000047422e-06, 1.0689999999646815e-06, 1.0699999999363996e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0280000000140177e-06, 1.0830000000128237e-06, 1.0420000000621599e-06, 1.070000000047422e-06, 1.26400000000082e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 9.999999999177334e-07, 9.999999999177334e-07, 1.0559999998882574e-06, 1.0699999999363996e-06, 1.0840000002065864e-06, 1.0419999998401153e-06, 1.0699999999363996e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.054999999805517e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0559999998882574e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.098000000032684e-06, 1.0699999999363996e-06, 1.056000000110302e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.13900000009437e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0550000000275617e-06, 1.0839999999845418e-06, 1.0829999999018014e-06, 1.0550000000275617e-06, 1.083000000123846e-06, 1.0409999999794195e-06, 1.0139999999658755e-06, 1.0420000000621599e-06, 9.999999999177334e-07, 1.056000000110302e-06, 1.0550000000275617e-06, 1.0689999998536592e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0550000000275617e-06, 1.0409999999794195e-06, 1.0690000000757038e-06, 1.0699999999363996e-06]</msg>
<status status="PASS" starttime="20201029 12:45:35.939" endtime="20201029 12:45:35.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.935" endtime="20201029 12:45:35.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.576" endtime="20201029 12:45:35.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.576" endtime="20201029 12:45:35.942"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.950" endtime="20201029 12:45:35.960"></status>
</kw>
<msg timestamp="20201029 12:45:35.960" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.948" endtime="20201029 12:45:35.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.963" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.961" endtime="20201029 12:45:35.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.964" endtime="20201029 12:45:35.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.946" endtime="20201029 12:45:35.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.944" endtime="20201029 12:45:35.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.973" endtime="20201029 12:45:36.279"></status>
</kw>
<msg timestamp="20201029 12:45:36.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177311111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177312125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.971" endtime="20201029 12:45:36.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177311111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177312125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.284" endtime="20201029 12:45:36.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.293" endtime="20201029 12:45:36.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.969" endtime="20201029 12:45:36.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.967" endtime="20201029 12:45:36.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.300" level="INFO">${RESULT} = [{'diff': 1.0139999999658755e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 9.999999999177334e-07}, {'diff': 1.056000000110302e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0689999998536592e-06...</msg>
<status status="PASS" starttime="20201029 12:45:36.297" endtime="20201029 12:45:36.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:36.306" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0139999999658755e-06, 1.0420000000621599e-06, 9.999999999177334e-07, 1.056000000110302e-06, 1.0550000000275617e-06, 1.0689999998536592e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:36.302" endtime="20201029 12:45:36.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.310" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:36.309" endtime="20201029 12:45:36.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.313" level="INFO">VALUE: [1.0139999999658755e-06, 1.0420000000621599e-06, 9.999999999177334e-07, 1.056000000110302e-06, 1.0550000000275617e-06, 1.0689999998536592e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0550000000275617e-06, 1.0409999999794195e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.2359999999045357e-06, 1.056000000110302e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0970000001719882e-06, 9.999999999177334e-07, 1.0550000000275617e-06, 9.999999999177334e-07, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.0420000000621599e-06, 1.0699999999363996e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.1120000000808261e-06, 1.0970000001719882e-06, 1.0419999998401153e-06, 1.0690000000757038e-06, 9.720000000434936e-07, 1.0420000000621599e-06, 1.1249999998241833e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0559999998882574e-06, 1.0550000000275617e-06, 1.0419999998401153e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0550000000275617e-06, 9.999999999177334e-07, 1.0699999999363996e-06, 1.0689999998536592e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0420000000621599e-06, 9.999999999177334e-07, 1.0550000000275617e-06, 1.0839999999845418e-06, 1.056000000110302e-06]</msg>
<status status="PASS" starttime="20201029 12:45:36.311" endtime="20201029 12:45:36.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.307" endtime="20201029 12:45:36.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.943" endtime="20201029 12:45:36.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.943" endtime="20201029 12:45:36.314"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.322" endtime="20201029 12:45:36.332"></status>
</kw>
<msg timestamp="20201029 12:45:36.333" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.320" endtime="20201029 12:45:36.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.335" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.334" endtime="20201029 12:45:36.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.336" endtime="20201029 12:45:36.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.318" endtime="20201029 12:45:36.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.316" endtime="20201029 12:45:36.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.345" endtime="20201029 12:45:36.662"></status>
</kw>
<msg timestamp="20201029 12:45:36.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.532055528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.532056569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.343" endtime="20201029 12:45:36.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.532055528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.532056569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.667" endtime="20201029 12:45:36.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.677" endtime="20201029 12:45:36.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.341" endtime="20201029 12:45:36.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.339" endtime="20201029 12:45:36.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.684" level="INFO">${RESULT} = [{'diff': 1.0409999999794195e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 9.999999999177334e-07}, {'diff': 1.0699999999363996e-06}, {'diff': 1.0689999998536592e-06}, {'diff': 1.1109999999980857e-0...</msg>
<status status="PASS" starttime="20201029 12:45:36.680" endtime="20201029 12:45:36.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:36.689" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0409999999794195e-06, 1.0550000000275617e-06, 9.999999999177334e-07, 1.0699999999363996e-06, 1.0689999998536592e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.0699999999363996e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:36.685" endtime="20201029 12:45:36.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.693" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:36.692" endtime="20201029 12:45:36.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.695" level="INFO">VALUE: [1.0409999999794195e-06, 1.0550000000275617e-06, 9.999999999177334e-07, 1.0699999999363996e-06, 1.0689999998536592e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0420000000621599e-06, 9.999999999177334e-07, 1.0550000000275617e-06, 1.0839999999845418e-06, 1.056000000110302e-06, 1.2359999999045357e-06, 1.098000000032684e-06, 1.0699999999363996e-06, 1.0700000001584442e-06, 1.0550000000275617e-06, 1.0409999999794195e-06, 1.0419999998401153e-06, 1.0689999998536592e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.083000000123846e-06, 1.0550000000275617e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, 1.0689999998536592e-06, 1.0139999999658755e-06, 1.0689999998536592e-06, 1.0420000000621599e-06, 1.1109999999980857e-06, 1.0689999998536592e-06, 1.0979999998106393e-06, 1.0700000001584442e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0689999998536592e-06, 1.098000000032684e-06, 1.056000000110302e-06, 9.999999999177334e-07, 1.0699999999363996e-06, 1.0420000000621599e-06, 1.0139999999658755e-06, 1.1249999998241833e-06, 1.0700000001584442e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0550000000275617e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.0689999998536592e-06, 1.0409999999794195e-06, 1.098000000032684e-06, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 12:45:36.694" endtime="20201029 12:45:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.689" endtime="20201029 12:45:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.315" endtime="20201029 12:45:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.315" endtime="20201029 12:45:36.697"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.705" endtime="20201029 12:45:36.715"></status>
</kw>
<msg timestamp="20201029 12:45:36.716" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.703" endtime="20201029 12:45:36.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.717" endtime="20201029 12:45:36.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.719" endtime="20201029 12:45:36.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.700" endtime="20201029 12:45:36.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.699" endtime="20201029 12:45:36.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.728" endtime="20201029 12:45:37.033"></status>
</kw>
<msg timestamp="20201029 12:45:37.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.895189625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.895190667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.726" endtime="20201029 12:45:37.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.895189625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.895190667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.038" endtime="20201029 12:45:37.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.048" endtime="20201029 12:45:37.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.724" endtime="20201029 12:45:37.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.722" endtime="20201029 12:45:37.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:37.055" level="INFO">${RESULT} = [{'diff': 1.0420000000621599e-06}, {'diff': 1.0139999999658755e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.0700000001584442e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.0969999999499436e-...</msg>
<status status="PASS" starttime="20201029 12:45:37.052" endtime="20201029 12:45:37.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:37.061" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0420000000621599e-06, 1.0139999999658755e-06, 1.1249999998241833e-06, 1.0700000001584442e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0550000000275617e-06, 1.1109999999980857e-06...</msg>
<status status="PASS" starttime="20201029 12:45:37.056" endtime="20201029 12:45:37.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.065" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:37.064" endtime="20201029 12:45:37.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.067" level="INFO">VALUE: [1.0420000000621599e-06, 1.0139999999658755e-06, 1.1249999998241833e-06, 1.0700000001584442e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0550000000275617e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.0689999998536592e-06, 1.0409999999794195e-06, 1.098000000032684e-06, 1.0420000000621599e-06, 1.2360000001265803e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0419999996180707e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0419999996180707e-06, 1.0550000002496063e-06, 1.0690000000757038e-06, 1.054999999805517e-06, 1.0830000003458906e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.054999999805517e-06, 9.999999996956888e-07, 1.054999999805517e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0689999996316146e-06, 1.0979999998106393e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0700000001584442e-06, 1.0690000000757038e-06]</msg>
<status status="PASS" starttime="20201029 12:45:37.066" endtime="20201029 12:45:37.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.062" endtime="20201029 12:45:37.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.697" endtime="20201029 12:45:37.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.697" endtime="20201029 12:45:37.069"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.076" endtime="20201029 12:45:37.087"></status>
</kw>
<msg timestamp="20201029 12:45:37.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.075" endtime="20201029 12:45:37.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.088" endtime="20201029 12:45:37.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.091" endtime="20201029 12:45:37.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.072" endtime="20201029 12:45:37.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.071" endtime="20201029 12:45:37.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.099" endtime="20201029 12:45:37.408"></status>
</kw>
<msg timestamp="20201029 12:45:37.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.268340153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.268341194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.098" endtime="20201029 12:45:37.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.268340153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.268341194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.412" endtime="20201029 12:45:37.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.422" endtime="20201029 12:45:37.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.095" endtime="20201029 12:45:37.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.094" endtime="20201029 12:45:37.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:37.429" level="INFO">${RESULT} = [{'diff': 1.0409999999794195e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.0689999996316146e-...</msg>
<status status="PASS" starttime="20201029 12:45:37.426" endtime="20201029 12:45:37.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:37.435" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0409999999794195e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0689999996316146e-06, 1.0979999998106393e-06, 1.096999999727899e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:37.430" endtime="20201029 12:45:37.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.439" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:37.438" endtime="20201029 12:45:37.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.442" level="INFO">VALUE: [1.0409999999794195e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0689999996316146e-06, 1.0979999998106393e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0700000001584442e-06, 1.0690000000757038e-06, 1.2639999997787754e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0829999999018014e-06, 1.0700000001584442e-06, 1.0839999999845418e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.0409999999794195e-06, 1.0690000000757038e-06, 1.0419999996180707e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.054999999805517e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.096999999727899e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0700000001584442e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.0550000002496063e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.096999999727899e-06, 1.0410000004235087e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.0700000001584442e-06]</msg>
<status status="PASS" starttime="20201029 12:45:37.440" endtime="20201029 12:45:37.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.436" endtime="20201029 12:45:37.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.070" endtime="20201029 12:45:37.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.069" endtime="20201029 12:45:37.443"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.451" endtime="20201029 12:45:37.461"></status>
</kw>
<msg timestamp="20201029 12:45:37.461" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.449" endtime="20201029 12:45:37.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.462" endtime="20201029 12:45:37.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.465" endtime="20201029 12:45:37.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.447" endtime="20201029 12:45:37.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.445" endtime="20201029 12:45:37.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.474" endtime="20201029 12:45:37.790"></status>
</kw>
<msg timestamp="20201029 12:45:37.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.629666944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.629667986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.473" endtime="20201029 12:45:37.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.629666944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.629667986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.795" endtime="20201029 12:45:37.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.805" endtime="20201029 12:45:37.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.469" endtime="20201029 12:45:37.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.468" endtime="20201029 12:45:37.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:37.822" level="INFO">${RESULT} = [{'diff': 1.0420000000621599e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0700000001584442e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.096999999727899e-06}, {'diff': 1.0410000004235087e-0...</msg>
<status status="PASS" starttime="20201029 12:45:37.819" endtime="20201029 12:45:37.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:37.827" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0420000000621599e-06, 1.0560000003323466e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.096999999727899e-06, 1.0410000004235087e-06, 1.0420000000621599e-06, 1.0690000000757038e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:37.823" endtime="20201029 12:45:37.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.831" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:37.830" endtime="20201029 12:45:37.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.833" level="INFO">VALUE: [1.0420000000621599e-06, 1.0560000003323466e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.096999999727899e-06, 1.0410000004235087e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.0700000001584442e-06, 1.2639999997787754e-06, 1.000000000139778e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.0139999999658755e-06, 1.0689999996316146e-06, 1.1109999999980857e-06, 1.0560000003323466e-06, 1.0690000000757038e-06, 1.0560000003323466e-06, 1.0830000003458906e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.1109999999980857e-06, 1.0419999996180707e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0700000001584442e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.0409999999794195e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.027999999791973e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0139999999658755e-06, 1.0689999996316146e-06, 1.1109999999980857e-06, 1.0559999998882574e-06, 1.1249999998241833e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 9.870000003964208e-07, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201029 12:45:37.832" endtime="20201029 12:45:37.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.828" endtime="20201029 12:45:37.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.444" endtime="20201029 12:45:37.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.443" endtime="20201029 12:45:37.836"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.843" endtime="20201029 12:45:37.853"></status>
</kw>
<msg timestamp="20201029 12:45:37.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.842" endtime="20201029 12:45:37.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.856" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.855" endtime="20201029 12:45:37.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.857" endtime="20201029 12:45:37.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.839" endtime="20201029 12:45:37.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.838" endtime="20201029 12:45:37.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.866" endtime="20201029 12:45:38.184"></status>
</kw>
<msg timestamp="20201029 12:45:38.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.994796069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.994797111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:37.865" endtime="20201029 12:45:38.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.994796069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.994797111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.189" endtime="20201029 12:45:38.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.199" endtime="20201029 12:45:38.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.862" endtime="20201029 12:45:38.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.861" endtime="20201029 12:45:38.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.206" level="INFO">${RESULT} = [{'diff': 1.0420000000621599e-06}, {'diff': 1.0139999999658755e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.1249999998241833e-...</msg>
<status status="PASS" starttime="20201029 12:45:38.203" endtime="20201029 12:45:38.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:38.212" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0420000000621599e-06, 1.0139999999658755e-06, 1.0689999996316146e-06, 1.1109999999980857e-06, 1.0559999998882574e-06, 1.1249999998241833e-06, 1.0559999998882574e-06, 1.0559999998882574e-06...</msg>
<status status="PASS" starttime="20201029 12:45:38.207" endtime="20201029 12:45:38.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.216" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:38.215" endtime="20201029 12:45:38.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.218" level="INFO">VALUE: [1.0420000000621599e-06, 1.0139999999658755e-06, 1.0689999996316146e-06, 1.1109999999980857e-06, 1.0559999998882574e-06, 1.1249999998241833e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 9.870000003964208e-07, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.1249999998241833e-06, 1.2499999999526779e-06, 1.0700000001584442e-06, 1.0690000000757038e-06, 1.069999999714355e-06, 1.0280000002360623e-06, 1.0839999999845418e-06, 1.0409999999794195e-06, 1.054999999805517e-06, 1.0980000002547285e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.027000000153322e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0839999999845418e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0560000003323466e-06, 1.054999999805517e-06, 1.0409999999794195e-06, 1.0139999999658755e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0970000001719882e-06, 1.054999999805517e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0409999999794195e-06, 1.0690000000757038e-06, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 12:45:38.217" endtime="20201029 12:45:38.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.212" endtime="20201029 12:45:38.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.836" endtime="20201029 12:45:38.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.836" endtime="20201029 12:45:38.220"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.228" endtime="20201029 12:45:38.238"></status>
</kw>
<msg timestamp="20201029 12:45:38.238" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.226" endtime="20201029 12:45:38.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.240" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.239" endtime="20201029 12:45:38.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.242" endtime="20201029 12:45:38.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.223" endtime="20201029 12:45:38.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.222" endtime="20201029 12:45:38.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.251" endtime="20201029 12:45:38.561"></status>
</kw>
<msg timestamp="20201029 12:45:38.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.378425361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.378426417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.249" endtime="20201029 12:45:38.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.378425361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.378426417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.566" endtime="20201029 12:45:38.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.576" endtime="20201029 12:45:38.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.246" endtime="20201029 12:45:38.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.245" endtime="20201029 12:45:38.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.583" level="INFO">${RESULT} = [{'diff': 1.0559999998882574e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.054999999805517e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0420000000621599e-0...</msg>
<status status="PASS" starttime="20201029 12:45:38.579" endtime="20201029 12:45:38.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:38.587" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999998882574e-06, 1.0970000001719882e-06, 1.054999999805517e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0970000001719882e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:38.584" endtime="20201029 12:45:38.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.592" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:38.591" endtime="20201029 12:45:38.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.594" level="INFO">VALUE: [1.0559999998882574e-06, 1.0970000001719882e-06, 1.054999999805517e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0409999999794195e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.2499999999526779e-06, 1.000000000139778e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.096999999727899e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0269999997092327e-06, 1.0420000000621599e-06, 1.1109999999980857e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0700000001584442e-06, 1.0410000004235087e-06, 1.0550000002496063e-06, 1.027999999791973e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.069999999714355e-06, 1.054999999805517e-06, 1.0409999999794195e-06, 1.1389999996502809e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0689999996316146e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0689999996316146e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.096999999727899e-06, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 12:45:38.593" endtime="20201029 12:45:38.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.588" endtime="20201029 12:45:38.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.220" endtime="20201029 12:45:38.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.220" endtime="20201029 12:45:38.596"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.604" endtime="20201029 12:45:38.614"></status>
</kw>
<msg timestamp="20201029 12:45:38.615" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.602" endtime="20201029 12:45:38.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.617" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.616" endtime="20201029 12:45:38.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.618" endtime="20201029 12:45:38.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.599" endtime="20201029 12:45:38.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.598" endtime="20201029 12:45:38.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.627" endtime="20201029 12:45:38.941"></status>
</kw>
<msg timestamp="20201029 12:45:38.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.751771667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.751772736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.626" endtime="20201029 12:45:38.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.751771667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.751772736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:38.946" endtime="20201029 12:45:38.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.957" endtime="20201029 12:45:38.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.623" endtime="20201029 12:45:38.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.621" endtime="20201029 12:45:38.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:38.968" level="INFO">${RESULT} = [{'diff': 1.0690000000757038e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0690000000757038e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.054999999805517e-06}, {'diff': 1.054999999805517e-06...</msg>
<status status="PASS" starttime="20201029 12:45:38.962" endtime="20201029 12:45:38.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:38.975" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0690000000757038e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0689999996316146e-06, 1.054999999805517e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:45:38.969" endtime="20201029 12:45:38.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:38.980" endtime="20201029 12:45:38.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:38.985" level="INFO">VALUE: [1.0690000000757038e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0689999996316146e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.096999999727899e-06, 1.0420000000621599e-06, 1.2229999999391339e-06, 1.0559999994441682e-06, 1.0970000001719882e-06, 1.0979999993665501e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 1.0140000004099647e-06, 1.0829999999018014e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.0839999999845418e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0700000006025334e-06, 1.0839999999845418e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.027999999791973e-06, 1.0409999999794195e-06, 1.0139999995217863e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.027999999791973e-06, 1.0269999997092327e-06, 1.069000000519793e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0700000006025334e-06, 1.0559999994441682e-06]</msg>
<status status="PASS" starttime="20201029 12:45:38.983" endtime="20201029 12:45:38.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.977" endtime="20201029 12:45:38.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.596" endtime="20201029 12:45:38.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.596" endtime="20201029 12:45:38.988"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:38.997" endtime="20201029 12:45:39.007"></status>
</kw>
<msg timestamp="20201029 12:45:39.008" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:38.995" endtime="20201029 12:45:39.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.010" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.009" endtime="20201029 12:45:39.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.011" endtime="20201029 12:45:39.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.993" endtime="20201029 12:45:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.991" endtime="20201029 12:45:39.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.020" endtime="20201029 12:45:39.331"></status>
</kw>
<msg timestamp="20201029 12:45:39.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.118431708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.118432736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.019" endtime="20201029 12:45:39.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.118431708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.118432736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.336" endtime="20201029 12:45:39.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.346" endtime="20201029 12:45:39.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.016" endtime="20201029 12:45:39.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.015" endtime="20201029 12:45:39.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.353" level="INFO">${RESULT} = [{'diff': 1.027999999791973e-06}, {'diff': 1.0269999997092327e-06}, {'diff': 1.069000000519793e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0559999994441682e-06...</msg>
<status status="PASS" starttime="20201029 12:45:39.349" endtime="20201029 12:45:39.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:39.358" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.027999999791973e-06, 1.0269999997092327e-06, 1.069000000519793e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:39.354" endtime="20201029 12:45:39.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.362" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:39.361" endtime="20201029 12:45:39.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.365" level="INFO">VALUE: [1.027999999791973e-06, 1.0269999997092327e-06, 1.069000000519793e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0700000006025334e-06, 1.0559999994441682e-06, 1.250000000396767e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.0969999992838098e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0139999995217863e-06, 1.0420000000621599e-06, 1.0139999995217863e-06, 1.000000000139778e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0549999993614279e-06, 1.0409999999794195e-06, 1.1109999995539965e-06, 1.069000000519793e-06, 1.0419999991739815e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0139999995217863e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0419999991739815e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 9.859999998695912e-07, 1.0839999999845418e-06, 1.0689999996316146e-06]</msg>
<status status="PASS" starttime="20201029 12:45:39.363" endtime="20201029 12:45:39.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.359" endtime="20201029 12:45:39.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.989" endtime="20201029 12:45:39.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:38.989" endtime="20201029 12:45:39.366"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.374" endtime="20201029 12:45:39.384"></status>
</kw>
<msg timestamp="20201029 12:45:39.385" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.372" endtime="20201029 12:45:39.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.386" endtime="20201029 12:45:39.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.388" endtime="20201029 12:45:39.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.370" endtime="20201029 12:45:39.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.368" endtime="20201029 12:45:39.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.397" endtime="20201029 12:45:39.714"></status>
</kw>
<msg timestamp="20201029 12:45:39.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.501108458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.501109514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.395" endtime="20201029 12:45:39.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.501108458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.501109514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.719" endtime="20201029 12:45:39.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.729" endtime="20201029 12:45:39.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.393" endtime="20201029 12:45:39.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.391" endtime="20201029 12:45:39.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:39.735" level="INFO">${RESULT} = [{'diff': 1.0560000003323466e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0139999995217863e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.069000000519793e-06}, {'diff': 1.0409999999794195e-0...</msg>
<status status="PASS" starttime="20201029 12:45:39.732" endtime="20201029 12:45:39.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:39.740" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0560000003323466e-06, 1.0689999996316146e-06, 1.0139999995217863e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0419999991739815e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:39.736" endtime="20201029 12:45:39.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.744" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:39.743" endtime="20201029 12:45:39.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.747" level="INFO">VALUE: [1.0560000003323466e-06, 1.0689999996316146e-06, 1.0139999995217863e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0419999991739815e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 9.859999998695912e-07, 1.0839999999845418e-06, 1.0689999996316146e-06, 1.2360000001265803e-06, 1.0409999999794195e-06, 1.0139999995217863e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0549999993614279e-06, 1.069000000519793e-06, 1.069000000519793e-06, 1.0559999994441682e-06, 1.1250000007123617e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.0549999993614279e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.027999999791973e-06, 1.0700000006025334e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.069000000519793e-06]</msg>
<status status="PASS" starttime="20201029 12:45:39.745" endtime="20201029 12:45:39.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.741" endtime="20201029 12:45:39.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.367" endtime="20201029 12:45:39.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.367" endtime="20201029 12:45:39.748"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.758" endtime="20201029 12:45:39.768"></status>
</kw>
<msg timestamp="20201029 12:45:39.769" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.757" endtime="20201029 12:45:39.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:39.771" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:39.770" endtime="20201029 12:45:39.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.772" endtime="20201029 12:45:39.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.752" endtime="20201029 12:45:39.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.750" endtime="20201029 12:45:39.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:39.781" endtime="20201029 12:45:40.103"></status>
</kw>
<msg timestamp="20201029 12:45:40.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.867262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.867263111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:39.780" endtime="20201029 12:45:40.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.867262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.867263111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.109" endtime="20201029 12:45:40.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.118" endtime="20201029 12:45:40.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.777" endtime="20201029 12:45:40.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.775" endtime="20201029 12:45:40.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.125" level="INFO">${RESULT} = [{'diff': 1.0549999993614279e-06}, {'diff': 1.0549999993614279e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0689999996316146e-...</msg>
<status status="PASS" starttime="20201029 12:45:40.122" endtime="20201029 12:45:40.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:40.131" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0549999993614279e-06, 1.0549999993614279e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0560000003323466e-06...</msg>
<status status="PASS" starttime="20201029 12:45:40.126" endtime="20201029 12:45:40.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.135" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:40.134" endtime="20201029 12:45:40.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.137" level="INFO">VALUE: [1.0549999993614279e-06, 1.0549999993614279e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.027999999791973e-06, 1.0700000006025334e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.2639999997787754e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0419999991739815e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.027999999791973e-06, 1.069999999714355e-06, 1.0969999992838098e-06, 1.0559999994441682e-06, 1.069000000519793e-06, 1.1249999998241833e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.1109999995539965e-06, 1.0559999994441682e-06, 1.0970000001719882e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0969999992838098e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.027999999791973e-06, 1.111000000442175e-06, 1.0549999993614279e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.0419999991739815e-06, 1.0550000002496063e-06]</msg>
<status status="PASS" starttime="20201029 12:45:40.136" endtime="20201029 12:45:40.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.131" endtime="20201029 12:45:40.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.749" endtime="20201029 12:45:40.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:39.748" endtime="20201029 12:45:40.139"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.146" endtime="20201029 12:45:40.156"></status>
</kw>
<msg timestamp="20201029 12:45:40.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.145" endtime="20201029 12:45:40.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.158" endtime="20201029 12:45:40.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.160" endtime="20201029 12:45:40.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.142" endtime="20201029 12:45:40.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.141" endtime="20201029 12:45:40.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.170" endtime="20201029 12:45:40.487"></status>
</kw>
<msg timestamp="20201029 12:45:40.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.240824792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.240825847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.168" endtime="20201029 12:45:40.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.240824792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.240825847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.492" endtime="20201029 12:45:40.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.502" endtime="20201029 12:45:40.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.165" endtime="20201029 12:45:40.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.164" endtime="20201029 12:45:40.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.509" level="INFO">${RESULT} = [{'diff': 1.0550000002496063e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0969999992838098e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0420000000621599e-...</msg>
<status status="PASS" starttime="20201029 12:45:40.505" endtime="20201029 12:45:40.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:40.515" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0550000002496063e-06, 1.0420000000621599e-06, 1.0969999992838098e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.027999999791973e-06,...</msg>
<status status="PASS" starttime="20201029 12:45:40.510" endtime="20201029 12:45:40.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.519" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:40.518" endtime="20201029 12:45:40.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.521" level="INFO">VALUE: [1.0550000002496063e-06, 1.0420000000621599e-06, 1.0969999992838098e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.027999999791973e-06, 1.111000000442175e-06, 1.0549999993614279e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.0419999991739815e-06, 1.0550000002496063e-06, 1.2639999997787754e-06, 1.0549999993614279e-06, 1.0970000001719882e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.0549999993614279e-06, 1.069000000519793e-06, 1.0839999999845418e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.069999999714355e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.0559999994441682e-06, 1.0970000001719882e-06, 1.0549999993614279e-06, 1.069000000519793e-06, 1.0970000001719882e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0839999999845418e-06, 1.111999999636737e-06, 1.0549999993614279e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0409999999794195e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.069999999714355e-06]</msg>
<status status="PASS" starttime="20201029 12:45:40.520" endtime="20201029 12:45:40.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.515" endtime="20201029 12:45:40.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.139" endtime="20201029 12:45:40.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.139" endtime="20201029 12:45:40.523"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.531" endtime="20201029 12:45:40.541"></status>
</kw>
<msg timestamp="20201029 12:45:40.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.529" endtime="20201029 12:45:40.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.544" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.542" endtime="20201029 12:45:40.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.545" endtime="20201029 12:45:40.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.526" endtime="20201029 12:45:40.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.525" endtime="20201029 12:45:40.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.554" endtime="20201029 12:45:40.887"></status>
</kw>
<msg timestamp="20201029 12:45:40.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.618919583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.618920639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.553" endtime="20201029 12:45:40.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.618919583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.618920639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.898" endtime="20201029 12:45:40.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.915" endtime="20201029 12:45:40.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.550" endtime="20201029 12:45:40.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.548" endtime="20201029 12:45:40.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:40.922" level="INFO">${RESULT} = [{'diff': 1.0559999994441682e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.069999999714355e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.069999999714355e-06}, {'diff': 1.0420000000621599e-06...</msg>
<status status="PASS" starttime="20201029 12:45:40.919" endtime="20201029 12:45:40.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:40.927" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999994441682e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0560000003323466e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:40.923" endtime="20201029 12:45:40.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.931" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:40.930" endtime="20201029 12:45:40.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.933" level="INFO">VALUE: [1.0559999994441682e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0409999999794195e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.069999999714355e-06, 1.2360000001265803e-06, 1.0689999996316146e-06, 1.000000000139778e-06, 1.0700000006025334e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.0419999991739815e-06, 1.0419999991739815e-06, 9.860000007577696e-07, 1.027999999791973e-06, 9.999999992515995e-07, 1.0409999999794195e-06, 1.0700000006025334e-06, 1.0560000003323466e-06, 1.0830000007899798e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0549999993614279e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.000000000139778e-06, 1.0839999999845418e-06, 1.0560000003323466e-06, 1.0140000004099647e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.0140000004099647e-06, 1.000000000139778e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.1109999995539965e-06, 1.0419999991739815e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0980000002547285e-06, 9.859999998695912e-07, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0139999995217863e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0979999993665501e-06]</msg>
<status status="PASS" starttime="20201029 12:45:40.932" endtime="20201029 12:45:40.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.928" endtime="20201029 12:45:40.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.524" endtime="20201029 12:45:40.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.523" endtime="20201029 12:45:40.935"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.943" endtime="20201029 12:45:40.954"></status>
</kw>
<msg timestamp="20201029 12:45:40.954" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.942" endtime="20201029 12:45:40.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.956" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:40.955" endtime="20201029 12:45:40.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.958" endtime="20201029 12:45:40.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.939" endtime="20201029 12:45:40.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.937" endtime="20201029 12:45:40.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:40.967" endtime="20201029 12:45:41.285"></status>
</kw>
<msg timestamp="20201029 12:45:41.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.993072264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.993073375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:40.965" endtime="20201029 12:45:41.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.993072264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.993073375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.290" endtime="20201029 12:45:41.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.300" endtime="20201029 12:45:41.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.963" endtime="20201029 12:45:41.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.961" endtime="20201029 12:45:41.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:41.307" level="INFO">${RESULT} = [{'diff': 1.1109999995539965e-06}, {'diff': 1.0419999991739815e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.069000000519793e-06}, {'diff': 1.0980000002547285e-0...</msg>
<status status="PASS" starttime="20201029 12:45:41.304" endtime="20201029 12:45:41.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:41.313" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1109999995539965e-06, 1.0419999991739815e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0980000002547285e-06, 9.859999998695912e-07, 1.0559999994441682e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:41.309" endtime="20201029 12:45:41.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:41.316" endtime="20201029 12:45:41.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.320" level="INFO">VALUE: [1.1109999995539965e-06, 1.0419999991739815e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0980000002547285e-06, 9.859999998695912e-07, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0139999995217863e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0979999993665501e-06, 1.2639999997787754e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.069000000519793e-06, 1.069999999714355e-06, 9.859999998695912e-07, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0979999993665501e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0549999993614279e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0839999999845418e-06, 1.0269999997092327e-06, 1.069999999714355e-06, 1.0560000003323466e-06]</msg>
<status status="PASS" starttime="20201029 12:45:41.318" endtime="20201029 12:45:41.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.314" endtime="20201029 12:45:41.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.936" endtime="20201029 12:45:41.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.935" endtime="20201029 12:45:41.321"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.329" endtime="20201029 12:45:41.339"></status>
</kw>
<msg timestamp="20201029 12:45:41.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.327" endtime="20201029 12:45:41.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.342" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.341" endtime="20201029 12:45:41.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.343" endtime="20201029 12:45:41.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.325" endtime="20201029 12:45:41.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.323" endtime="20201029 12:45:41.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.352" endtime="20201029 12:45:41.662"></status>
</kw>
<msg timestamp="20201029 12:45:41.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.396898028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.396899083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.351" endtime="20201029 12:45:41.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.396898028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.396899083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.667" endtime="20201029 12:45:41.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.677" endtime="20201029 12:45:41.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.348" endtime="20201029 12:45:41.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.347" endtime="20201029 12:45:41.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:41.684" level="INFO">${RESULT} = [{'diff': 1.0550000002496063e-06}, {'diff': 1.069000000519793e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0420000000621599e-0...</msg>
<status status="PASS" starttime="20201029 12:45:41.680" endtime="20201029 12:45:41.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:41.689" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0550000002496063e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0549999993614279e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:41.685" endtime="20201029 12:45:41.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.694" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:41.693" endtime="20201029 12:45:41.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.696" level="INFO">VALUE: [1.0550000002496063e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0839999999845418e-06, 1.0269999997092327e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.2640000006669538e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0979999993665501e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0559999994441682e-06, 9.729999996821448e-07, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0419999991739815e-06, 1.0700000006025334e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.1109999995539965e-06, 1.0550000002496063e-06, 1.0969999992838098e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0689999996316146e-06, 1.1249999998241833e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 9.860000007577696e-07, 1.0980000002547285e-06, 1.069999999714355e-06, 1.0419999991739815e-06, 1.069999999714355e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.0700000006025334e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.069000000519793e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0560000003323466e-06]</msg>
<status status="PASS" starttime="20201029 12:45:41.695" endtime="20201029 12:45:41.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.690" endtime="20201029 12:45:41.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.322" endtime="20201029 12:45:41.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.321" endtime="20201029 12:45:41.698"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.705" endtime="20201029 12:45:41.715"></status>
</kw>
<msg timestamp="20201029 12:45:41.716" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.704" endtime="20201029 12:45:41.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:41.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.717" endtime="20201029 12:45:41.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.719" endtime="20201029 12:45:41.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.701" endtime="20201029 12:45:41.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.700" endtime="20201029 12:45:41.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.730" endtime="20201029 12:45:42.047"></status>
</kw>
<msg timestamp="20201029 12:45:42.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.770591625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.770592681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:41.727" endtime="20201029 12:45:42.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.770591625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.770592681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.052" endtime="20201029 12:45:42.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.062" endtime="20201029 12:45:42.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.725" endtime="20201029 12:45:42.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.723" endtime="20201029 12:45:42.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.069" level="INFO">${RESULT} = [{'diff': 1.0560000003323466e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.069000000519793e-06}, {'diff': 1.069999999714355e-06}, {'diff': 1.0549999993614279e-06...</msg>
<status status="PASS" starttime="20201029 12:45:42.065" endtime="20201029 12:45:42.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:42.073" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0560000003323466e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.0700000006025334e-06, 1.0829999999018014e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:42.070" endtime="20201029 12:45:42.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.077" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:45:42.076" endtime="20201029 12:45:42.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.080" level="INFO">VALUE: [1.0560000003323466e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.0700000006025334e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.069000000519793e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.250000000396767e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0139999995217863e-06, 1.069999999714355e-06, 1.0140000004099647e-06, 1.0280000006801515e-06, 1.1250000007123617e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0970000001719882e-06, 1.069000000519793e-06, 1.0559999994441682e-06, 1.0409999999794195e-06, 1.0270000005974111e-06, 1.0280000006801515e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.000000000139778e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0549999993614279e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.0549999993614279e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.0700000006025334e-06, 9.859999998695912e-07, 1.0550000002496063e-06, 1.000000000139778e-06]</msg>
<status status="PASS" starttime="20201029 12:45:42.079" endtime="20201029 12:45:42.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.074" endtime="20201029 12:45:42.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.698" endtime="20201029 12:45:42.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.698" endtime="20201029 12:45:42.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.435" endtime="20201029 12:45:42.082"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:34.366" endtime="20201029 12:45:42.082" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:42.089" endtime="20201029 12:45:42.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.087" endtime="20201029 12:45:42.110"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.123" endtime="20201029 12:45:42.135"></status>
</kw>
<msg timestamp="20201029 12:45:42.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.121" endtime="20201029 12:45:42.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.138" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.137" endtime="20201029 12:45:42.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.141" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:42.139" endtime="20201029 12:45:42.141"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:42.119" endtime="20201029 12:45:42.142"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:42.117" endtime="20201029 12:45:42.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.115" endtime="20201029 12:45:42.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:42.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:42.146" endtime="20201029 12:45:42.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.144" endtime="20201029 12:45:42.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.114" endtime="20201029 12:45:42.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.113" endtime="20201029 12:45:42.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.148" endtime="20201029 12:45:42.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.112" endtime="20201029 12:45:42.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.110" endtime="20201029 12:45:42.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.086" endtime="20201029 12:45:42.151"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.159" endtime="20201029 12:45:42.171"></status>
</kw>
<msg timestamp="20201029 12:45:42.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.158" endtime="20201029 12:45:42.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.173" endtime="20201029 12:45:42.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.175" endtime="20201029 12:45:42.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.155" endtime="20201029 12:45:42.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.154" endtime="20201029 12:45:42.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.184" endtime="20201029 12:45:42.470"></status>
</kw>
<msg timestamp="20201029 12:45:42.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061590931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061600597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.183" endtime="20201029 12:45:42.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061590931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061600597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.474" endtime="20201029 12:45:42.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.482" endtime="20201029 12:45:42.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.180" endtime="20201029 12:45:42.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.178" endtime="20201029 12:45:42.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.489" level="INFO">${RESULT} = [{'diff': 9.665999999998454e-06}, {'diff': 9.179999999997523e-06}, {'diff': 9.222000000003172e-06}, {'diff': 9.208000000003602e-06}, {'diff': 9.207999999996663e-06}, {'diff': 9.194000000004032e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:42.486" endtime="20201029 12:45:42.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:42.493" level="INFO">${OVERHEAD} = {'diff': [9.665999999998454e-06, 9.179999999997523e-06, 9.222000000003172e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.2359...</msg>
<status status="PASS" starttime="20201029 12:45:42.490" endtime="20201029 12:45:42.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.497" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:42.496" endtime="20201029 12:45:42.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.500" level="INFO">VALUE: [9.665999999998454e-06, 9.179999999997523e-06, 9.222000000003172e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.235999999995803e-06, 9.263999999994943e-06, 9.194999999996567e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.208000000003602e-06, 9.152000000005323e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.223000000002646e-06, 9.208999999996137e-06, 9.194000000004032e-06, 9.221999999996233e-06, 9.235999999995803e-06, 9.235999999995803e-06, 9.222999999995707e-06, 9.208999999996137e-06, 9.221999999996233e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.208999999996137e-06, 9.236000000009681e-06, 9.222999999988768e-06, 9.235999999995803e-06, 9.263999999994943e-06, 9.208999999996137e-06, 9.180999999996997e-06, 9.223000000002646e-06, 9.194000000004032e-06, 9.221999999989294e-06, 9.222000000003172e-06, 9.236000000009681e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.209000000010015e-06, 9.235999999995803e-06, 9.2769999999881e-06, 9.207999999996663e-06, 9.195000000003506e-06]</msg>
<status status="PASS" starttime="20201029 12:45:42.498" endtime="20201029 12:45:42.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.494" endtime="20201029 12:45:42.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.152" endtime="20201029 12:45:42.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.152" endtime="20201029 12:45:42.502"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.510" endtime="20201029 12:45:42.520"></status>
</kw>
<msg timestamp="20201029 12:45:42.521" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.508" endtime="20201029 12:45:42.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.523" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.522" endtime="20201029 12:45:42.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.524" endtime="20201029 12:45:42.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.505" endtime="20201029 12:45:42.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.504" endtime="20201029 12:45:42.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.533" endtime="20201029 12:45:42.838"></status>
</kw>
<msg timestamp="20201029 12:45:42.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062690208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062699389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.532" endtime="20201029 12:45:42.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062690208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062699389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.843" endtime="20201029 12:45:42.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.853" endtime="20201029 12:45:42.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.529" endtime="20201029 12:45:42.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.528" endtime="20201029 12:45:42.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:42.865" level="INFO">${RESULT} = [{'diff': 9.180999999996997e-06}, {'diff': 9.223000000002646e-06}, {'diff': 9.194000000004032e-06}, {'diff': 9.221999999989294e-06}, {'diff': 9.222000000003172e-06}, {'diff': 9.236000000009681e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:42.861" endtime="20201029 12:45:42.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:42.870" level="INFO">${OVERHEAD} = {'diff': [9.180999999996997e-06, 9.223000000002646e-06, 9.194000000004032e-06, 9.221999999989294e-06, 9.222000000003172e-06, 9.236000000009681e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.2220...</msg>
<status status="PASS" starttime="20201029 12:45:42.866" endtime="20201029 12:45:42.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.875" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:42.874" endtime="20201029 12:45:42.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.877" level="INFO">VALUE: [9.180999999996997e-06, 9.223000000002646e-06, 9.194000000004032e-06, 9.221999999989294e-06, 9.222000000003172e-06, 9.236000000009681e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.209000000010015e-06, 9.235999999995803e-06, 9.2769999999881e-06, 9.207999999996663e-06, 9.195000000003506e-06, 9.639000000005726e-06, 9.235999999968048e-06, 9.222000000030928e-06, 9.235999999968048e-06, 9.195000000017384e-06, 9.221999999975417e-06, 9.236000000023559e-06, 9.207999999982786e-06, 9.236000000023559e-06, 9.223000000002646e-06, 9.236000000023559e-06, 9.180999999969242e-06, 9.223000000002646e-06, 9.236000000023559e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.193999999990154e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.221999999975417e-06, 9.165999999949381e-06, 9.207999999982786e-06, 9.236000000023559e-06, 9.180999999969242e-06, 9.15299999998398e-06, 9.221999999975417e-06, 9.26400000000882e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.221999999975417e-06, 9.207999999982786e-06, 9.194000000045666e-06, 9.193999999990154e-06, 9.194000000045666e-06, 9.208000000038297e-06, 9.207999999982786e-06, 9.195000000017384e-06, 9.25000000001619e-06, 9.193999999990154e-06, 9.223000000002646e-06, 9.222000000030928e-06, 9.223000000002646e-06, 9.207999999982786e-06, 9.236000000023559e-06, 9.207999999982786e-06, 9.235999999968048e-06, 9.209000000010015e-06, 9.223000000002646e-06, 9.221999999975417e-06, 9.223000000002646e-06]</msg>
<status status="PASS" starttime="20201029 12:45:42.876" endtime="20201029 12:45:42.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.871" endtime="20201029 12:45:42.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.503" endtime="20201029 12:45:42.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.502" endtime="20201029 12:45:42.879"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.886" endtime="20201029 12:45:42.897"></status>
</kw>
<msg timestamp="20201029 12:45:42.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.885" endtime="20201029 12:45:42.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:42.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:42.899" endtime="20201029 12:45:42.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.901" endtime="20201029 12:45:42.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.882" endtime="20201029 12:45:42.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.881" endtime="20201029 12:45:42.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:42.910" endtime="20201029 12:45:43.214"></status>
</kw>
<msg timestamp="20201029 12:45:43.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402782569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.402791764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:42.908" endtime="20201029 12:45:43.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402782569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.402791764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:43.219" endtime="20201029 12:45:43.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.229" endtime="20201029 12:45:43.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.906" endtime="20201029 12:45:43.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.904" endtime="20201029 12:45:43.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.236" level="INFO">${RESULT} = [{'diff': 9.195000000017384e-06}, {'diff': 9.25000000001619e-06}, {'diff': 9.193999999990154e-06}, {'diff': 9.223000000002646e-06}, {'diff': 9.222000000030928e-06}, {'diff': 9.223000000002646e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:43.232" endtime="20201029 12:45:43.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:43.241" level="INFO">${OVERHEAD} = {'diff': [9.195000000017384e-06, 9.25000000001619e-06, 9.193999999990154e-06, 9.223000000002646e-06, 9.222000000030928e-06, 9.223000000002646e-06, 9.207999999982786e-06, 9.236000000023559e-06, 9.20799...</msg>
<status status="PASS" starttime="20201029 12:45:43.237" endtime="20201029 12:45:43.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:43.244" endtime="20201029 12:45:43.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.247" level="INFO">VALUE: [9.195000000017384e-06, 9.25000000001619e-06, 9.193999999990154e-06, 9.223000000002646e-06, 9.222000000030928e-06, 9.223000000002646e-06, 9.207999999982786e-06, 9.236000000023559e-06, 9.207999999982786e-06, 9.235999999968048e-06, 9.209000000010015e-06, 9.223000000002646e-06, 9.221999999975417e-06, 9.223000000002646e-06, 9.666000000074781e-06, 9.209000000010015e-06, 9.207999999927274e-06, 9.221999999975417e-06, 9.209000000010015e-06, 9.222999999947135e-06, 9.209000000010015e-06, 9.209000000010015e-06, 9.209000000010015e-06, 9.209000000010015e-06, 9.208000000038297e-06, 9.236000000023559e-06, 9.221999999975417e-06, 9.236000000023559e-06, 9.221999999975417e-06, 9.209000000010015e-06, 9.194999999961873e-06, 9.221999999975417e-06, 9.193999999990154e-06, 9.236000000023559e-06, 9.223000000058157e-06, 9.152999999928468e-06, 9.236000000023559e-06, 9.193999999990154e-06, 9.209000000010015e-06, 9.26400000000882e-06, 9.194999999961873e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.208999999898992e-06, 9.15300000003949e-06, 9.208000000038297e-06, 9.194999999961873e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.207999999927274e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.222000000086439e-06, 9.221999999975417e-06, 9.209000000010015e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.207999999927274e-06, 9.222999999947135e-06, 9.207999999927274e-06, 9.236000000023559e-06, 9.193999999990154e-06]</msg>
<status status="PASS" starttime="20201029 12:45:43.246" endtime="20201029 12:45:43.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.241" endtime="20201029 12:45:43.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.879" endtime="20201029 12:45:43.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.879" endtime="20201029 12:45:43.249"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.258" endtime="20201029 12:45:43.270"></status>
</kw>
<msg timestamp="20201029 12:45:43.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.255" endtime="20201029 12:45:43.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.275" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.273" endtime="20201029 12:45:43.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.277" endtime="20201029 12:45:43.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.252" endtime="20201029 12:45:43.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.251" endtime="20201029 12:45:43.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.289" endtime="20201029 12:45:43.596"></status>
</kw>
<msg timestamp="20201029 12:45:43.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.769511292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.7695205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:43.288" endtime="20201029 12:45:43.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.769511292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.7695205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:43.601" endtime="20201029 12:45:43.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.613" endtime="20201029 12:45:43.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.284" endtime="20201029 12:45:43.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.281" endtime="20201029 12:45:43.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.623" level="INFO">${RESULT} = [{'diff': 9.208000000038297e-06}, {'diff': 9.207999999927274e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.221999999975417e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.221999999975417e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:43.619" endtime="20201029 12:45:43.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:43.630" level="INFO">${OVERHEAD} = {'diff': [9.208000000038297e-06, 9.207999999927274e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.222000000086439e-06, 9.221999999975417e-06, 9.209000000010015e-06, 9.195000000072895e-06, 9.1939...</msg>
<status status="PASS" starttime="20201029 12:45:43.624" endtime="20201029 12:45:43.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.635" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:43.634" endtime="20201029 12:45:43.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.637" level="INFO">VALUE: [9.208000000038297e-06, 9.207999999927274e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.222000000086439e-06, 9.221999999975417e-06, 9.209000000010015e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.207999999927274e-06, 9.222999999947135e-06, 9.207999999927274e-06, 9.236000000023559e-06, 9.193999999990154e-06, 9.6670000000465e-06, 9.207999999816252e-06, 9.19499999985085e-06, 9.208000000038297e-06, 9.166000000115915e-06, 9.221999999864394e-06, 9.16599999989387e-06, 9.208000000038297e-06, 9.209000000121037e-06, 9.236000000134581e-06, 9.208000000038297e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.221999999864394e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.195000000072895e-06, 9.236999999995277e-06, 9.304999999848462e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.152999999928468e-06, 9.208000000038297e-06, 9.291000000022365e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.221999999864394e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.179999999942012e-06, 9.179999999942012e-06, 9.221999999864394e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.208000000038297e-06, 9.249999999960679e-06, 9.236999999995277e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.221999999864394e-06, 9.291000000022365e-06, 9.208000000038297e-06, 9.208999999898992e-06]</msg>
<status status="PASS" starttime="20201029 12:45:43.636" endtime="20201029 12:45:43.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.631" endtime="20201029 12:45:43.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.249" endtime="20201029 12:45:43.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.249" endtime="20201029 12:45:43.639"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.646" endtime="20201029 12:45:43.657"></status>
</kw>
<msg timestamp="20201029 12:45:43.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.645" endtime="20201029 12:45:43.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.659" endtime="20201029 12:45:43.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.661" endtime="20201029 12:45:43.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.642" endtime="20201029 12:45:43.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.641" endtime="20201029 12:45:43.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.670" endtime="20201029 12:45:43.979"></status>
</kw>
<msg timestamp="20201029 12:45:43.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.132737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.132746222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:43.669" endtime="20201029 12:45:43.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.132737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.132746222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:43.984" endtime="20201029 12:45:43.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.994" endtime="20201029 12:45:43.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.666" endtime="20201029 12:45:43.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.664" endtime="20201029 12:45:43.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:44.005" level="INFO">${RESULT} = [{'diff': 9.221999999864394e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.236000000134581e-06}, {'diff': 9.208000000038297e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:44.000" endtime="20201029 12:45:44.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:44.012" level="INFO">${OVERHEAD} = {'diff': [9.221999999864394e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.208000000038297e-06, 9.249999999960679e-06, 9.236999999995277e-06, 9.23599...</msg>
<status status="PASS" starttime="20201029 12:45:44.007" endtime="20201029 12:45:44.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.018" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:44.017" endtime="20201029 12:45:44.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.023" level="INFO">VALUE: [9.221999999864394e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.208000000038297e-06, 9.249999999960679e-06, 9.236999999995277e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.221999999864394e-06, 9.291000000022365e-06, 9.208000000038297e-06, 9.208999999898992e-06, 9.651999999915617e-06, 9.221999999864394e-06, 9.208000000038297e-06, 9.16699999997661e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.235999999912536e-06, 9.221999999864394e-06, 9.16699999997661e-06, 9.208000000038297e-06, 9.209000000121037e-06, 9.167000000198655e-06, 9.222000000086439e-06, 9.16599999989387e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.19499999985085e-06, 9.236000000134581e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.236000000134581e-06, 9.236000000134581e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.221999999864394e-06, 9.207999999816252e-06, 9.16699999997661e-06, 9.208000000038297e-06, 9.152999999928468e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222999999947135e-06, 9.235999999912536e-06, 9.250000000182723e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.222999999947135e-06]</msg>
<status status="PASS" starttime="20201029 12:45:44.020" endtime="20201029 12:45:44.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.014" endtime="20201029 12:45:44.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.640" endtime="20201029 12:45:44.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.639" endtime="20201029 12:45:44.024"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.033" endtime="20201029 12:45:44.044"></status>
</kw>
<msg timestamp="20201029 12:45:44.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.031" endtime="20201029 12:45:44.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.045" endtime="20201029 12:45:44.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.048" endtime="20201029 12:45:44.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.029" endtime="20201029 12:45:44.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.026" endtime="20201029 12:45:44.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.057" endtime="20201029 12:45:44.356"></status>
</kw>
<msg timestamp="20201029 12:45:44.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.509781903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.509791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.055" endtime="20201029 12:45:44.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.509781903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.509791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.362" endtime="20201029 12:45:44.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.372" endtime="20201029 12:45:44.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.053" endtime="20201029 12:45:44.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.051" endtime="20201029 12:45:44.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:44.379" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.195000000072895e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.193999999990154e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:44.375" endtime="20201029 12:45:44.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:44.386" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.2229...</msg>
<status status="PASS" starttime="20201029 12:45:44.380" endtime="20201029 12:45:44.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.391" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:44.390" endtime="20201029 12:45:44.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.393" level="INFO">VALUE: [9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222999999947135e-06, 9.235999999912536e-06, 9.250000000182723e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.222999999947135e-06, 9.638999999950215e-06, 9.193999999990154e-06, 9.152999999928468e-06, 9.209000000121037e-06, 9.249999999960679e-06, 9.208000000038297e-06, 9.209000000121037e-06, 9.19499999985085e-06, 9.221999999864394e-06, 9.16599999989387e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.221999999864394e-06, 9.208000000038297e-06, 9.222999999947135e-06, 9.236000000134581e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.208999999898992e-06, 9.250000000182723e-06, 9.222000000086439e-06, 9.221999999864394e-06, 9.221999999864394e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.19499999985085e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.236000000134581e-06, 9.208000000038297e-06, 9.153000000150513e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.153000000150513e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.193999999990154e-06, 9.16699999997661e-06, 9.235999999912536e-06, 9.179999999942012e-06]</msg>
<status status="PASS" starttime="20201029 12:45:44.392" endtime="20201029 12:45:44.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.387" endtime="20201029 12:45:44.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.025" endtime="20201029 12:45:44.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.025" endtime="20201029 12:45:44.395"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.404" endtime="20201029 12:45:44.415"></status>
</kw>
<msg timestamp="20201029 12:45:44.416" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.402" endtime="20201029 12:45:44.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.418" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.417" endtime="20201029 12:45:44.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.419" endtime="20201029 12:45:44.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.398" endtime="20201029 12:45:44.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.397" endtime="20201029 12:45:44.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.428" endtime="20201029 12:45:44.736"></status>
</kw>
<msg timestamp="20201029 12:45:44.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.885268181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.885277375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.427" endtime="20201029 12:45:44.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.885268181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.885277375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.741" endtime="20201029 12:45:44.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.751" endtime="20201029 12:45:44.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.424" endtime="20201029 12:45:44.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.422" endtime="20201029 12:45:44.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:44.758" level="INFO">${RESULT} = [{'diff': 9.193999999990154e-06}, {'diff': 9.236000000134581e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.153000000150513e-06}, {'diff': 9.221999999864394e-06}, {'diff': 9.222000000086439e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:44.754" endtime="20201029 12:45:44.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:44.763" level="INFO">${OVERHEAD} = {'diff': [9.193999999990154e-06, 9.236000000134581e-06, 9.208000000038297e-06, 9.153000000150513e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.153000000150513e-06, 9.2220...</msg>
<status status="PASS" starttime="20201029 12:45:44.759" endtime="20201029 12:45:44.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.768" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:44.766" endtime="20201029 12:45:44.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.770" level="INFO">VALUE: [9.193999999990154e-06, 9.236000000134581e-06, 9.208000000038297e-06, 9.153000000150513e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.153000000150513e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.193999999990154e-06, 9.16699999997661e-06, 9.235999999912536e-06, 9.179999999942012e-06, 9.653000000220402e-06, 9.208000000260341e-06, 9.208999999898992e-06, 9.16699999997661e-06, 9.22299999972509e-06, 9.180000000164057e-06, 9.222000000086439e-06, 9.22299999972509e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.22199999964235e-06, 9.235999999912536e-06, 9.249999999738634e-06, 9.22199999964235e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.195000000072895e-06, 9.209000000343082e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.22300000016918e-06, 9.209000000343082e-06, 9.209000000343082e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.26400000000882e-06, 9.235999999912536e-06, 9.22299999972509e-06, 9.250000000182723e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.22199999964235e-06, 9.236999999995277e-06, 9.208000000260341e-06]</msg>
<status status="PASS" starttime="20201029 12:45:44.769" endtime="20201029 12:45:44.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.764" endtime="20201029 12:45:44.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.395" endtime="20201029 12:45:44.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.395" endtime="20201029 12:45:44.772"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.780" endtime="20201029 12:45:44.791"></status>
</kw>
<msg timestamp="20201029 12:45:44.791" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.778" endtime="20201029 12:45:44.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.794" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.792" endtime="20201029 12:45:44.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.795" endtime="20201029 12:45:44.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.775" endtime="20201029 12:45:44.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.774" endtime="20201029 12:45:44.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.804" endtime="20201029 12:45:45.113"></status>
</kw>
<msg timestamp="20201029 12:45:45.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.246815667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.246824889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:44.803" endtime="20201029 12:45:45.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.246815667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.246824889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.118" endtime="20201029 12:45:45.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.128" endtime="20201029 12:45:45.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.800" endtime="20201029 12:45:45.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.798" endtime="20201029 12:45:45.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.135" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.222000000086439e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:45.131" endtime="20201029 12:45:45.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:45.140" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.19399...</msg>
<status status="PASS" starttime="20201029 12:45:45.136" endtime="20201029 12:45:45.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.145" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:45.144" endtime="20201029 12:45:45.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.147" level="INFO">VALUE: [9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.22199999964235e-06, 9.236999999995277e-06, 9.208000000260341e-06, 9.638999999950215e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.208000000260341e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.26400000000882e-06, 9.193999999990154e-06, 9.193999999990154e-06, 9.250000000182723e-06, 9.208000000260341e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.26400000000882e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.195000000072895e-06, 9.235999999912536e-06, 9.22199999964235e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.304999999848462e-06, 9.207999999816252e-06, 9.26299999992608e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.249999999738634e-06, 9.22199999964235e-06, 9.180999999802708e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.179999999719968e-06, 9.22199999964235e-06]</msg>
<status status="PASS" starttime="20201029 12:45:45.146" endtime="20201029 12:45:45.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.141" endtime="20201029 12:45:45.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.772" endtime="20201029 12:45:45.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.772" endtime="20201029 12:45:45.149"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.156" endtime="20201029 12:45:45.167"></status>
</kw>
<msg timestamp="20201029 12:45:45.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.155" endtime="20201029 12:45:45.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.170" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.169" endtime="20201029 12:45:45.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.171" endtime="20201029 12:45:45.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.152" endtime="20201029 12:45:45.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.151" endtime="20201029 12:45:45.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.181" endtime="20201029 12:45:45.498"></status>
</kw>
<msg timestamp="20201029 12:45:45.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.611343917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.611353222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.179" endtime="20201029 12:45:45.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.611343917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.611353222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.503" endtime="20201029 12:45:45.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.513" endtime="20201029 12:45:45.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.176" endtime="20201029 12:45:45.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.174" endtime="20201029 12:45:45.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.520" level="INFO">${RESULT} = [{'diff': 9.304999999848462e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.26299999992608e-06}, {'diff': 9.249999999738634e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.208000000260341e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:45.516" endtime="20201029 12:45:45.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:45.525" level="INFO">${OVERHEAD} = {'diff': [9.304999999848462e-06, 9.207999999816252e-06, 9.26299999992608e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.249999999738634e-06, 9.22199999964235e-06, 9.180999...</msg>
<status status="PASS" starttime="20201029 12:45:45.521" endtime="20201029 12:45:45.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.529" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:45.528" endtime="20201029 12:45:45.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.531" level="INFO">VALUE: [9.304999999848462e-06, 9.207999999816252e-06, 9.26299999992608e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.249999999738634e-06, 9.22199999964235e-06, 9.180999999802708e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.179999999719968e-06, 9.22199999964235e-06, 9.680999999872597e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.22299999972509e-06, 9.22199999964235e-06, 9.208000000260341e-06, 9.22299999972509e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.194999999628806e-06, 9.208999999898992e-06, 9.195000000072895e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.209000000343082e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.209000000343082e-06, 9.22199999964235e-06, 9.195000000072895e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.208000000260341e-06, 9.195000000072895e-06, 9.153000000150513e-06, 9.235999999912536e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.193999999990154e-06]</msg>
<status status="PASS" starttime="20201029 12:45:45.530" endtime="20201029 12:45:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.525" endtime="20201029 12:45:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.150" endtime="20201029 12:45:45.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.149" endtime="20201029 12:45:45.533"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.541" endtime="20201029 12:45:45.552"></status>
</kw>
<msg timestamp="20201029 12:45:45.553" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.540" endtime="20201029 12:45:45.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.555" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.554" endtime="20201029 12:45:45.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.556" endtime="20201029 12:45:45.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.537" endtime="20201029 12:45:45.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.535" endtime="20201029 12:45:45.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.565" endtime="20201029 12:45:45.877"></status>
</kw>
<msg timestamp="20201029 12:45:45.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.977108625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.977117833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.564" endtime="20201029 12:45:45.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.977108625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.977117833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.882" endtime="20201029 12:45:45.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.892" endtime="20201029 12:45:45.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.561" endtime="20201029 12:45:45.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.559" endtime="20201029 12:45:45.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:45.899" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.193999999990154e-06}, {'diff': 9.209000000343082e-06}, {'diff': 9.22199999964235e-06}, {'diff': 9.195000000072895e-06}, {'diff': 9.207999999816252e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:45.895" endtime="20201029 12:45:45.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:45.904" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.193999999990154e-06, 9.209000000343082e-06, 9.22199999964235e-06, 9.195000000072895e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.208000000260341e-06, 9.195000...</msg>
<status status="PASS" starttime="20201029 12:45:45.900" endtime="20201029 12:45:45.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.908" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:45.907" endtime="20201029 12:45:45.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.911" level="INFO">VALUE: [9.207999999816252e-06, 9.193999999990154e-06, 9.209000000343082e-06, 9.22199999964235e-06, 9.195000000072895e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.208000000260341e-06, 9.195000000072895e-06, 9.153000000150513e-06, 9.235999999912536e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.638999999950215e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.22300000016918e-06, 9.16599999989387e-06, 9.22199999964235e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.292000000105105e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.180000000164057e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.250000000182723e-06, 9.249999999738634e-06, 9.235999999912536e-06, 9.22299999972509e-06, 9.208999999898992e-06, 9.208000000260341e-06, 9.22300000016918e-06, 9.22199999964235e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.305999999931203e-06, 9.209000000343082e-06, 9.207999999816252e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.22299999972509e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.22199999964235e-06]</msg>
<status status="PASS" starttime="20201029 12:45:45.909" endtime="20201029 12:45:45.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.905" endtime="20201029 12:45:45.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.533" endtime="20201029 12:45:45.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.533" endtime="20201029 12:45:45.912"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.920" endtime="20201029 12:45:45.931"></status>
</kw>
<msg timestamp="20201029 12:45:45.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.918" endtime="20201029 12:45:45.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:45.934" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:45.933" endtime="20201029 12:45:45.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.935" endtime="20201029 12:45:45.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.916" endtime="20201029 12:45:45.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.914" endtime="20201029 12:45:45.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:45.944" endtime="20201029 12:45:46.260"></status>
</kw>
<msg timestamp="20201029 12:45:46.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.352957889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.352967097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:45.943" endtime="20201029 12:45:46.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.352957889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.352967097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.265" endtime="20201029 12:45:46.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.275" endtime="20201029 12:45:46.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.940" endtime="20201029 12:45:46.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.938" endtime="20201029 12:45:46.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.283" level="INFO">${RESULT} = [{'diff': 9.208000000260341e-06}, {'diff': 9.208000000260341e-06}, {'diff': 9.305999999931203e-06}, {'diff': 9.209000000343082e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.195000000072895e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:46.279" endtime="20201029 12:45:46.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.288" level="INFO">${OVERHEAD} = {'diff': [9.208000000260341e-06, 9.208000000260341e-06, 9.305999999931203e-06, 9.209000000343082e-06, 9.207999999816252e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.2220...</msg>
<status status="PASS" starttime="20201029 12:45:46.284" endtime="20201029 12:45:46.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.292" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:46.291" endtime="20201029 12:45:46.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.294" level="INFO">VALUE: [9.208000000260341e-06, 9.208000000260341e-06, 9.305999999931203e-06, 9.209000000343082e-06, 9.207999999816252e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.22299999972509e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.22199999964235e-06, 9.652999999776313e-06, 9.193999999990154e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.250000000182723e-06, 9.235999999912536e-06, 9.152000000067773e-06, 9.194999999628806e-06, 9.125000000054229e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.250000000182723e-06, 9.249999999738634e-06, 9.193999999990154e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.236999999995277e-06, 9.139000000324415e-06, 9.235999999912536e-06, 9.22300000016918e-06, 9.292000000105105e-06, 9.277999999834918e-06, 9.209000000343082e-06, 9.26400000000882e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.22199999964235e-06, 9.22300000016918e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.180999999802708e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.179999999719968e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.22299999972509e-06]</msg>
<status status="PASS" starttime="20201029 12:45:46.293" endtime="20201029 12:45:46.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.288" endtime="20201029 12:45:46.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.913" endtime="20201029 12:45:46.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:45.912" endtime="20201029 12:45:46.296"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.303" endtime="20201029 12:45:46.314"></status>
</kw>
<msg timestamp="20201029 12:45:46.315" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.302" endtime="20201029 12:45:46.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.317" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.316" endtime="20201029 12:45:46.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.318" endtime="20201029 12:45:46.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.299" endtime="20201029 12:45:46.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.298" endtime="20201029 12:45:46.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.331" endtime="20201029 12:45:46.648"></status>
</kw>
<msg timestamp="20201029 12:45:46.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.721795694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.721804917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.329" endtime="20201029 12:45:46.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.721795694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.721804917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.653" endtime="20201029 12:45:46.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.663" endtime="20201029 12:45:46.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.324" endtime="20201029 12:45:46.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.322" endtime="20201029 12:45:46.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:46.670" level="INFO">${RESULT} = [{'diff': 9.22300000016918e-06}, {'diff': 9.208000000260341e-06}, {'diff': 9.208000000260341e-06}, {'diff': 9.193999999990154e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.180999999802708e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:46.666" endtime="20201029 12:45:46.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:46.674" level="INFO">${OVERHEAD} = {'diff': [9.22300000016918e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.180999999802708e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.22200...</msg>
<status status="PASS" starttime="20201029 12:45:46.671" endtime="20201029 12:45:46.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.679" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:46.678" endtime="20201029 12:45:46.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.682" level="INFO">VALUE: [9.22300000016918e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.180999999802708e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.179999999719968e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.22299999972509e-06, 9.653000000220402e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.235999999468447e-06, 9.195000000516984e-06, 9.180999999358619e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.237000000439366e-06, 9.222999999281e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.194000000434244e-06, 9.277000000196267e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.208999999898992e-06, 9.195000000516984e-06, 9.179999999275879e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.305999999931203e-06, 9.207999999816252e-06, 9.278000000279008e-06, 9.209000000787171e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.16699999997661e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 12:45:46.680" endtime="20201029 12:45:46.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.675" endtime="20201029 12:45:46.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.296" endtime="20201029 12:45:46.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.296" endtime="20201029 12:45:46.683"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.691" endtime="20201029 12:45:46.702"></status>
</kw>
<msg timestamp="20201029 12:45:46.702" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.689" endtime="20201029 12:45:46.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:46.705" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:46.703" endtime="20201029 12:45:46.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.706" endtime="20201029 12:45:46.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.687" endtime="20201029 12:45:46.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.685" endtime="20201029 12:45:46.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:46.715" endtime="20201029 12:45:47.024"></status>
</kw>
<msg timestamp="20201029 12:45:47.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.094995875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.095005069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:46.713" endtime="20201029 12:45:47.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.094995875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.095005069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.029" endtime="20201029 12:45:47.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.039" endtime="20201029 12:45:47.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.711" endtime="20201029 12:45:47.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.709" endtime="20201029 12:45:47.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.046" level="INFO">${RESULT} = [{'diff': 9.193999999546065e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.195000000516984e-06}, {'diff': 9.179999999275879e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.208999999898992e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:47.042" endtime="20201029 12:45:47.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.051" level="INFO">${OVERHEAD} = {'diff': [9.193999999546065e-06, 9.208999999898992e-06, 9.195000000516984e-06, 9.179999999275879e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.305999999931203e-06, 9.207999999816252e-06, 9.2780...</msg>
<status status="PASS" starttime="20201029 12:45:47.047" endtime="20201029 12:45:47.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.055" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:47.054" endtime="20201029 12:45:47.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.058" level="INFO">VALUE: [9.193999999546065e-06, 9.208999999898992e-06, 9.195000000516984e-06, 9.179999999275879e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.305999999931203e-06, 9.207999999816252e-06, 9.278000000279008e-06, 9.209000000787171e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.653000000220402e-06, 9.194000000434244e-06, 9.16699999997661e-06, 9.236999999551188e-06, 9.194000000434244e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.139000000324415e-06, 9.20800000070443e-06, 9.209000000787171e-06, 9.137999999353497e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.22199999919826e-06, 9.222000000086439e-06, 9.195000000516984e-06, 9.236000000356626e-06, 9.125000000054229e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.249999999738634e-06, 9.20800000070443e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.194999999628806e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.153000000594602e-06, 9.180999999358619e-06, 9.209000000787171e-06, 9.222000000086439e-06, 9.235999999468447e-06]</msg>
<status status="PASS" starttime="20201029 12:45:47.056" endtime="20201029 12:45:47.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.052" endtime="20201029 12:45:47.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.684" endtime="20201029 12:45:47.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:46.684" endtime="20201029 12:45:47.059"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.067" endtime="20201029 12:45:47.078"></status>
</kw>
<msg timestamp="20201029 12:45:47.078" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.065" endtime="20201029 12:45:47.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.081" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.079" endtime="20201029 12:45:47.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.082" endtime="20201029 12:45:47.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.063" endtime="20201029 12:45:47.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.061" endtime="20201029 12:45:47.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.091" endtime="20201029 12:45:47.409"></status>
</kw>
<msg timestamp="20201029 12:45:47.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.472514847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.472524069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.090" endtime="20201029 12:45:47.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.472514847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.472524069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.414" endtime="20201029 12:45:47.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.424" endtime="20201029 12:45:47.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.087" endtime="20201029 12:45:47.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.085" endtime="20201029 12:45:47.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.431" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.22300000016918e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:47.428" endtime="20201029 12:45:47.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.436" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.194999999628806e-06, 9.194999999628806e-06, 9.22200...</msg>
<status status="PASS" starttime="20201029 12:45:47.432" endtime="20201029 12:45:47.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.441" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:47.439" endtime="20201029 12:45:47.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.445" level="INFO">VALUE: [9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.194999999628806e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.153000000594602e-06, 9.180999999358619e-06, 9.209000000787171e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.694000000060043e-06, 9.22199999919826e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.195000000516984e-06, 9.194000000434244e-06, 9.194000000434244e-06, 9.16599999989387e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.250000000626812e-06, 9.181000000246797e-06, 9.222999999281e-06, 9.222000000086439e-06, 9.152000000511862e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.237000000439366e-06, 9.194999999628806e-06, 9.236000000356626e-06, 9.22300000016918e-06, 9.236000000356626e-06, 9.152999999706424e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.180999999358619e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.236000000356626e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.277999999390829e-06, 9.193999999546065e-06, 9.20800000070443e-06, 9.22300000016918e-06]</msg>
<status status="PASS" starttime="20201029 12:45:47.443" endtime="20201029 12:45:47.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.437" endtime="20201029 12:45:47.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.060" endtime="20201029 12:45:47.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.060" endtime="20201029 12:45:47.448"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.462" endtime="20201029 12:45:47.475"></status>
</kw>
<msg timestamp="20201029 12:45:47.475" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.458" endtime="20201029 12:45:47.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.478" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.476" endtime="20201029 12:45:47.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.479" endtime="20201029 12:45:47.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.455" endtime="20201029 12:45:47.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.452" endtime="20201029 12:45:47.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.488" endtime="20201029 12:45:47.806"></status>
</kw>
<msg timestamp="20201029 12:45:47.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.838676806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.838686042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.487" endtime="20201029 12:45:47.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.838676806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.838686042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.811" endtime="20201029 12:45:47.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.821" endtime="20201029 12:45:47.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.484" endtime="20201029 12:45:47.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.482" endtime="20201029 12:45:47.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.828" level="INFO">${RESULT} = [{'diff': 9.236000000356626e-06}, {'diff': 9.20800000070443e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.235999999468447e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:47.825" endtime="20201029 12:45:47.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:47.834" level="INFO">${OVERHEAD} = {'diff': [9.236000000356626e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.20799...</msg>
<status status="PASS" starttime="20201029 12:45:47.829" endtime="20201029 12:45:47.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.838" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:47.837" endtime="20201029 12:45:47.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.840" level="INFO">VALUE: [9.236000000356626e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.277999999390829e-06, 9.193999999546065e-06, 9.20800000070443e-06, 9.22300000016918e-06, 9.653000000220402e-06, 9.22300000016918e-06, 9.22300000016918e-06, 9.152999999706424e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.235999999468447e-06, 9.16599999989387e-06, 9.20800000070443e-06, 9.180000000164057e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.181000000246797e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.16699999997661e-06, 9.26400000000882e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.195000000516984e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.195000000516984e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.209000000787171e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 12:45:47.839" endtime="20201029 12:45:47.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.834" endtime="20201029 12:45:47.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.450" endtime="20201029 12:45:47.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.448" endtime="20201029 12:45:47.842"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.850" endtime="20201029 12:45:47.860"></status>
</kw>
<msg timestamp="20201029 12:45:47.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.848" endtime="20201029 12:45:47.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.863" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.862" endtime="20201029 12:45:47.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.869" endtime="20201029 12:45:47.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.845" endtime="20201029 12:45:47.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.844" endtime="20201029 12:45:47.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.879" endtime="20201029 12:45:48.181"></status>
</kw>
<msg timestamp="20201029 12:45:48.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.225290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.22529975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:47.877" endtime="20201029 12:45:48.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.225290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.22529975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:48.186" endtime="20201029 12:45:48.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.196" endtime="20201029 12:45:48.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.875" endtime="20201029 12:45:48.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.873" endtime="20201029 12:45:48.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.203" level="INFO">${RESULT} = [{'diff': 9.235999999468447e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.236000000356626e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.236000000356626e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:48.200" endtime="20201029 12:45:48.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.209" level="INFO">${OVERHEAD} = {'diff': [9.235999999468447e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.2230...</msg>
<status status="PASS" starttime="20201029 12:45:48.204" endtime="20201029 12:45:48.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.213" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:48.212" endtime="20201029 12:45:48.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.216" level="INFO">VALUE: [9.235999999468447e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.638999999950215e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.277000000196267e-06, 9.208999999898992e-06, 9.20800000070443e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.180999999358619e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.22300000016918e-06, 9.236000000356626e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.278000000279008e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.195000000516984e-06, 9.235999999468447e-06, 9.26299999992608e-06, 9.22300000016918e-06, 9.249999999738634e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.152999999706424e-06, 9.222000000086439e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 12:45:48.214" endtime="20201029 12:45:48.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.210" endtime="20201029 12:45:48.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.843" endtime="20201029 12:45:48.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.842" endtime="20201029 12:45:48.217"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.225" endtime="20201029 12:45:48.236"></status>
</kw>
<msg timestamp="20201029 12:45:48.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.223" endtime="20201029 12:45:48.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.239" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.237" endtime="20201029 12:45:48.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.240" endtime="20201029 12:45:48.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.221" endtime="20201029 12:45:48.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.219" endtime="20201029 12:45:48.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.249" endtime="20201029 12:45:48.564"></status>
</kw>
<msg timestamp="20201029 12:45:48.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.599387764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.599396972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.248" endtime="20201029 12:45:48.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.599387764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.599396972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.569" endtime="20201029 12:45:48.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.580" endtime="20201029 12:45:48.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.245" endtime="20201029 12:45:48.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.243" endtime="20201029 12:45:48.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.589" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.236000000356626e-06}, {'diff': 9.195000000516984e-06}, {'diff': 9.235999999468447e-06}, {'diff': 9.26299999992608e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:48.585" endtime="20201029 12:45:48.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.594" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.195000000516984e-06, 9.235999999468447e-06, 9.26299999992608e-06, 9.22300000016918e-06, 9.249999999738634e-06, 9.193999...</msg>
<status status="PASS" starttime="20201029 12:45:48.590" endtime="20201029 12:45:48.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.598" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:48.597" endtime="20201029 12:45:48.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.600" level="INFO">VALUE: [9.207999999816252e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.195000000516984e-06, 9.235999999468447e-06, 9.26299999992608e-06, 9.22300000016918e-06, 9.249999999738634e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.152999999706424e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.652000000137662e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.26400000000882e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222999999281e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.22199999919826e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.235999999468447e-06, 9.208999999898992e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.236000000356626e-06, 9.22199999919826e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.222000000086439e-06, 9.138999999436237e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.236000000356626e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.277999999390829e-06, 9.207999999816252e-06]</msg>
<status status="PASS" starttime="20201029 12:45:48.599" endtime="20201029 12:45:48.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.594" endtime="20201029 12:45:48.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.218" endtime="20201029 12:45:48.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.217" endtime="20201029 12:45:48.602"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.610" endtime="20201029 12:45:48.621"></status>
</kw>
<msg timestamp="20201029 12:45:48.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.609" endtime="20201029 12:45:48.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.623" endtime="20201029 12:45:48.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.626" endtime="20201029 12:45:48.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.605" endtime="20201029 12:45:48.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.604" endtime="20201029 12:45:48.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.635" endtime="20201029 12:45:48.945"></status>
</kw>
<msg timestamp="20201029 12:45:48.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.965758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.965767903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.633" endtime="20201029 12:45:48.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.965758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.965767903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.950" endtime="20201029 12:45:48.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.960" endtime="20201029 12:45:48.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.631" endtime="20201029 12:45:48.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.629" endtime="20201029 12:45:48.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.966" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.249999999738634e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:48.963" endtime="20201029 12:45:48.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:48.972" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.236000000356626e-06, 9.181000000246797e-06, 9.2220...</msg>
<status status="PASS" starttime="20201029 12:45:48.968" endtime="20201029 12:45:48.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.976" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:48.975" endtime="20201029 12:45:48.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.979" level="INFO">VALUE: [9.249999999738634e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.249999999738634e-06, 9.236000000356626e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.277999999390829e-06, 9.207999999816252e-06, 9.653000000220402e-06, 9.194000000434244e-06, 9.249999999738634e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.250000000626812e-06, 9.20800000070443e-06, 9.208999999898992e-06, 9.20800000070443e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.194000000434244e-06, 9.26400000000882e-06, 9.236000000356626e-06, 9.235999999468447e-06, 9.249999999738634e-06, 9.235999999468447e-06, 9.20800000070443e-06, 9.290999999578275e-06, 9.194999999628806e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.277999999390829e-06, 9.20800000070443e-06, 9.277999999390829e-06, 9.207999999816252e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.250000000626812e-06, 9.235999999468447e-06, 9.22300000016918e-06, 9.20800000070443e-06, 9.235999999468447e-06, 9.222999999281e-06]</msg>
<status status="PASS" starttime="20201029 12:45:48.977" endtime="20201029 12:45:48.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.973" endtime="20201029 12:45:48.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.603" endtime="20201029 12:45:48.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.602" endtime="20201029 12:45:48.980"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.988" endtime="20201029 12:45:48.999"></status>
</kw>
<msg timestamp="20201029 12:45:48.999" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.986" endtime="20201029 12:45:49.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.002" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.001" endtime="20201029 12:45:49.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.003" endtime="20201029 12:45:49.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.984" endtime="20201029 12:45:49.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.982" endtime="20201029 12:45:49.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.012" endtime="20201029 12:45:49.330"></status>
</kw>
<msg timestamp="20201029 12:45:49.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.342033125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.342042403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.011" endtime="20201029 12:45:49.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.342033125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.342042403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.335" endtime="20201029 12:45:49.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.345" endtime="20201029 12:45:49.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.008" endtime="20201029 12:45:49.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.006" endtime="20201029 12:45:49.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.352" level="INFO">${RESULT} = [{'diff': 9.277999999390829e-06}, {'diff': 9.20800000070443e-06}, {'diff': 9.277999999390829e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.222000000086439e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:49.348" endtime="20201029 12:45:49.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:49.358" level="INFO">${OVERHEAD} = {'diff': [9.277999999390829e-06, 9.20800000070443e-06, 9.277999999390829e-06, 9.207999999816252e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.250000...</msg>
<status status="PASS" starttime="20201029 12:45:49.353" endtime="20201029 12:45:49.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.362" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:49.361" endtime="20201029 12:45:49.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.364" level="INFO">VALUE: [9.277999999390829e-06, 9.20800000070443e-06, 9.277999999390829e-06, 9.207999999816252e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.250000000626812e-06, 9.235999999468447e-06, 9.22300000016918e-06, 9.20800000070443e-06, 9.235999999468447e-06, 9.222999999281e-06, 9.638999999950215e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.249999999738634e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.236000000356626e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.139000000324415e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.237000000439366e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.152999999706424e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.20800000070443e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.26400000000882e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.193999999546065e-06, 9.193999999546065e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.181000000246797e-06, 9.151999999623683e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.207999999816252e-06]</msg>
<status status="PASS" starttime="20201029 12:45:49.363" endtime="20201029 12:45:49.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.358" endtime="20201029 12:45:49.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.981" endtime="20201029 12:45:49.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.981" endtime="20201029 12:45:49.366"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.373" endtime="20201029 12:45:49.385"></status>
</kw>
<msg timestamp="20201029 12:45:49.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.372" endtime="20201029 12:45:49.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.387" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.386" endtime="20201029 12:45:49.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.389" endtime="20201029 12:45:49.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.369" endtime="20201029 12:45:49.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.368" endtime="20201029 12:45:49.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.398" endtime="20201029 12:45:49.718"></status>
</kw>
<msg timestamp="20201029 12:45:49.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.710530458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.710539667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.397" endtime="20201029 12:45:49.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.710530458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.710539667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.723" endtime="20201029 12:45:49.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.733" endtime="20201029 12:45:49.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.393" endtime="20201029 12:45:49.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.392" endtime="20201029 12:45:49.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.740" level="INFO">${RESULT} = [{'diff': 9.208999999898992e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.236000000356626e-06}, {'diff': 9.236000000356626e-06}, {'diff': 9.207999999816252e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:49.736" endtime="20201029 12:45:49.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:49.744" level="INFO">${OVERHEAD} = {'diff': [9.208999999898992e-06, 9.193999999546065e-06, 9.193999999546065e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.181000000246797e-06, 9.151999999623683e-06, 9.2079...</msg>
<status status="PASS" starttime="20201029 12:45:49.741" endtime="20201029 12:45:49.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.748" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:45:49.747" endtime="20201029 12:45:49.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.753" level="INFO">VALUE: [9.208999999898992e-06, 9.193999999546065e-06, 9.193999999546065e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.181000000246797e-06, 9.151999999623683e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.638999999950215e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.179999999275879e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.222999999281e-06, 9.22300000016918e-06, 9.235999999468447e-06, 9.20800000070443e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.250000000626812e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.152999999706424e-06, 9.22300000016918e-06, 9.139000000324415e-06, 9.16699999997661e-06, 9.208999999898992e-06, 9.194000000434244e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.193999999546065e-06, 9.152999999706424e-06, 9.208999999898992e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 12:45:49.750" endtime="20201029 12:45:49.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.745" endtime="20201029 12:45:49.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.366" endtime="20201029 12:45:49.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.366" endtime="20201029 12:45:49.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:42.151" endtime="20201029 12:45:49.755"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:42.084" endtime="20201029 12:45:49.756" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:49.763" endtime="20201029 12:45:49.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.761" endtime="20201029 12:45:49.783"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.796" endtime="20201029 12:45:49.808"></status>
</kw>
<msg timestamp="20201029 12:45:49.808" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.794" endtime="20201029 12:45:49.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.811" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.809" endtime="20201029 12:45:49.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.814" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:49.812" endtime="20201029 12:45:49.814"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:49.791" endtime="20201029 12:45:49.815"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:49.789" endtime="20201029 12:45:49.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.788" endtime="20201029 12:45:49.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:49.819" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:49.818" endtime="20201029 12:45:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.816" endtime="20201029 12:45:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.787" endtime="20201029 12:45:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.786" endtime="20201029 12:45:49.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.821" endtime="20201029 12:45:49.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.785" endtime="20201029 12:45:49.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.783" endtime="20201029 12:45:49.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.760" endtime="20201029 12:45:49.824"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.833" endtime="20201029 12:45:49.853"></status>
</kw>
<msg timestamp="20201029 12:45:49.854" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.832" endtime="20201029 12:45:49.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.856" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.855" endtime="20201029 12:45:49.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.857" endtime="20201029 12:45:49.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.828" endtime="20201029 12:45:49.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.826" endtime="20201029 12:45:49.860"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.862" endtime="20201029 12:45:49.863"></status>
</kw>
<msg timestamp="20201029 12:45:49.864" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:49.861" endtime="20201029 12:45:49.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.868" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:49.867" endtime="20201029 12:45:49.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.870" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:49.869" endtime="20201029 12:45:49.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.865" endtime="20201029 12:45:49.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.875" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:49.874" endtime="20201029 12:45:49.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.877" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:49.876" endtime="20201029 12:45:49.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.872" endtime="20201029 12:45:49.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.885" endtime="20201029 12:45:50.174"></status>
</kw>
<msg timestamp="20201029 12:45:50.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062726444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062760125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.883" endtime="20201029 12:45:50.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062726444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062760125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.179" endtime="20201029 12:45:50.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.188" endtime="20201029 12:45:50.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.881" endtime="20201029 12:45:50.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.879" endtime="20201029 12:45:50.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.196" level="INFO">${RESULT} = [{'diff': 3.3680999999993744e-05}, {'diff': 3.8666999999992235e-05}, {'diff': 3.8402999999992415e-05}, {'diff': 3.8346999999994136e-05}, {'diff': 3.836099999998677e-05}, {'diff': 3.8318999999994996e-0...</msg>
<status status="PASS" starttime="20201029 12:45:50.192" endtime="20201029 12:45:50.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:50.202" level="INFO">${OVERHEAD} = {'diff': [3.3680999999993744e-05, 3.8666999999992235e-05, 3.8402999999992415e-05, 3.8346999999994136e-05, 3.836099999998677e-05, 3.8318999999994996e-05, 3.833400000000098e-05, 3.8347000000008014e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:50.197" endtime="20201029 12:45:50.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.206" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:45:50.205" endtime="20201029 12:45:50.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.209" level="INFO">VALUE: [3.3680999999993744e-05, 3.8666999999992235e-05, 3.8402999999992415e-05, 3.8346999999994136e-05, 3.836099999998677e-05, 3.8318999999994996e-05, 3.833400000000098e-05, 3.8347000000008014e-05, 3.8347000000008014e-05, 3.8361000000000645e-05, 3.8346999999994136e-05, 3.8361000000000645e-05, 3.832000000000835e-05, 3.830600000000184e-05, 3.830600000000184e-05, 3.833400000000098e-05, 3.830499999998849e-05, 3.836200000000012e-05, 3.8346999999994136e-05, 3.833299999998763e-05, 3.8347000000008014e-05, 3.8361000000000645e-05, 3.834800000000749e-05, 3.831999999999447e-05, 3.8346999999994136e-05, 3.8333000000001505e-05, 3.8402999999992415e-05, 3.8347000000008014e-05, 3.8346999999994136e-05, 3.8319000000008874e-05, 3.834799999999361e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.826399999999619e-05, 3.829200000000921e-05, 3.8318999999994996e-05, 3.8333000000001505e-05, 3.8333000000001505e-05, 3.8346999999994136e-05, 3.82780000000027e-05, 3.8375000000007153e-05, 3.833400000000098e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8318999999994996e-05, 3.840199999999294e-05, 3.8347000000008014e-05, 3.8333000000001505e-05, 3.829199999999533e-05, 3.8318999999994996e-05]</msg>
<status status="PASS" starttime="20201029 12:45:50.207" endtime="20201029 12:45:50.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.203" endtime="20201029 12:45:50.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.824" endtime="20201029 12:45:50.210"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:49.757" endtime="20201029 12:45:50.211" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.217" endtime="20201029 12:45:50.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.216" endtime="20201029 12:45:50.238"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.257" endtime="20201029 12:45:50.270"></status>
</kw>
<msg timestamp="20201029 12:45:50.271" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.255" endtime="20201029 12:45:50.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.272" endtime="20201029 12:45:50.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.276" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:50.274" endtime="20201029 12:45:50.276"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.252" endtime="20201029 12:45:50.277"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.248" endtime="20201029 12:45:50.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.246" endtime="20201029 12:45:50.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:50.283" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:50.282" endtime="20201029 12:45:50.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.279" endtime="20201029 12:45:50.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.245" endtime="20201029 12:45:50.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.244" endtime="20201029 12:45:50.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.285" endtime="20201029 12:45:50.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.242" endtime="20201029 12:45:50.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.239" endtime="20201029 12:45:50.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.215" endtime="20201029 12:45:50.287"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.295" endtime="20201029 12:45:50.438"></status>
</kw>
<msg timestamp="20201029 12:45:50.438" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.294" endtime="20201029 12:45:50.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.441" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.440" endtime="20201029 12:45:50.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.442" endtime="20201029 12:45:50.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.291" endtime="20201029 12:45:50.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.289" endtime="20201029 12:45:50.445"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.447" endtime="20201029 12:45:50.449"></status>
</kw>
<msg timestamp="20201029 12:45:50.449" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:50.446" endtime="20201029 12:45:50.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.454" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:50.452" endtime="20201029 12:45:50.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.456" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:50.455" endtime="20201029 12:45:50.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.450" endtime="20201029 12:45:50.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.460" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:50.459" endtime="20201029 12:45:50.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.462" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:50.461" endtime="20201029 12:45:50.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.457" endtime="20201029 12:45:50.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.470" endtime="20201029 12:45:50.763"></status>
</kw>
<msg timestamp="20201029 12:45:50.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071878722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071932028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.468" endtime="20201029 12:45:50.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071878722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071932028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.767" endtime="20201029 12:45:50.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.775" endtime="20201029 12:45:50.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.465" endtime="20201029 12:45:50.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.464" endtime="20201029 12:45:50.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.783" level="INFO">${RESULT} = [{'diff': 5.3305999999989084e-05}, {'diff': 7.674999999998655e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.672199999998741e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.673599999999392e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:50.779" endtime="20201029 12:45:50.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:50.787" level="INFO">${OVERHEAD} = {'diff': [5.3305999999989084e-05, 7.674999999998655e-05, 7.675000000000043e-05, 7.672199999998741e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.675000000000043e-05, 7.669400000000215e-05, 7.673...</msg>
<status status="PASS" starttime="20201029 12:45:50.784" endtime="20201029 12:45:50.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.792" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:45:50.791" endtime="20201029 12:45:50.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.794" level="INFO">VALUE: [5.3305999999989084e-05, 7.674999999998655e-05, 7.675000000000043e-05, 7.672199999998741e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.675000000000043e-05, 7.669400000000215e-05, 7.67360000000078e-05, 7.673599999999392e-05, 7.676400000000694e-05, 7.672200000000129e-05, 7.67360000000078e-05, 7.672300000000076e-05, 7.673599999999392e-05, 7.67360000000078e-05, 7.67919999999922e-05, 7.673599999999392e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.675000000001431e-05, 7.681899999997799e-05, 7.67369999999934e-05, 7.673599999999392e-05, 7.672200000000129e-05, 7.677799999999957e-05, 7.674999999998655e-05, 7.675000000001431e-05, 7.675000000001431e-05, 7.674999999998655e-05, 7.673599999999392e-05, 7.673599999999392e-05, 7.675000000001431e-05, 7.673599999999392e-05, 7.675000000001431e-05, 7.675000000001431e-05, 7.673599999999392e-05, 7.679099999999273e-05, 7.667999999999564e-05, 7.675000000001431e-05, 7.669399999998827e-05, 7.674999999998655e-05, 7.675000000001431e-05, 7.673599999999392e-05, 7.673599999999392e-05, 7.675000000001431e-05, 7.676399999997918e-05, 7.669400000001603e-05]</msg>
<status status="PASS" starttime="20201029 12:45:50.793" endtime="20201029 12:45:50.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.788" endtime="20201029 12:45:50.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.288" endtime="20201029 12:45:50.795"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:50.212" endtime="20201029 12:45:50.796" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.803" endtime="20201029 12:45:50.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.801" endtime="20201029 12:45:50.823"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.837" endtime="20201029 12:45:50.849"></status>
</kw>
<msg timestamp="20201029 12:45:50.850" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.835" endtime="20201029 12:45:50.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.851" endtime="20201029 12:45:50.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.858" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:50.855" endtime="20201029 12:45:50.858"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.832" endtime="20201029 12:45:50.859"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.830" endtime="20201029 12:45:50.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.828" endtime="20201029 12:45:50.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:50.866" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:50.865" endtime="20201029 12:45:50.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.862" endtime="20201029 12:45:50.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.827" endtime="20201029 12:45:50.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.827" endtime="20201029 12:45:50.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.869" endtime="20201029 12:45:50.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.825" endtime="20201029 12:45:50.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.824" endtime="20201029 12:45:50.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.800" endtime="20201029 12:45:50.873"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.883" endtime="20201029 12:45:51.304"></status>
</kw>
<msg timestamp="20201029 12:45:51.304" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.882" endtime="20201029 12:45:51.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.307" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.305" endtime="20201029 12:45:51.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.308" endtime="20201029 12:45:51.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.879" endtime="20201029 12:45:51.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.877" endtime="20201029 12:45:51.310"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.312" endtime="20201029 12:45:51.314"></status>
</kw>
<msg timestamp="20201029 12:45:51.314" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:51.311" endtime="20201029 12:45:51.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.319" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:51.318" endtime="20201029 12:45:51.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.321" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:51.320" endtime="20201029 12:45:51.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.315" endtime="20201029 12:45:51.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.326" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:51.325" endtime="20201029 12:45:51.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.328" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:51.327" endtime="20201029 12:45:51.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.323" endtime="20201029 12:45:51.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.336" endtime="20201029 12:45:51.647"></status>
</kw>
<msg timestamp="20201029 12:45:51.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078353486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078444111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.335" endtime="20201029 12:45:51.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078353486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078444111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.651" endtime="20201029 12:45:51.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.659" endtime="20201029 12:45:51.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.331" endtime="20201029 12:45:51.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.329" endtime="20201029 12:45:51.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.665" level="INFO">${RESULT} = [{'diff': 9.062499999999696e-05}, {'diff': 0.00013370799999999627}, {'diff': 0.00013375000000000192}, {'diff': 0.0001337219999999889}, {'diff': 0.0001337770000000016}, {'diff': 0.00013370899999999575}...</msg>
<status status="PASS" starttime="20201029 12:45:51.662" endtime="20201029 12:45:51.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:51.669" level="INFO">${OVERHEAD} = {'diff': [9.062499999999696e-05, 0.00013370799999999627, 0.00013375000000000192, 0.0001337219999999889, 0.0001337770000000016, 0.00013370899999999575, 0.00013372200000000278, 0.00013373599999999541, 0...</msg>
<status status="PASS" starttime="20201029 12:45:51.666" endtime="20201029 12:45:51.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.673" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:45:51.672" endtime="20201029 12:45:51.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.676" level="INFO">VALUE: [9.062499999999696e-05, 0.00013370799999999627, 0.00013375000000000192, 0.0001337219999999889, 0.0001337770000000016, 0.00013370899999999575, 0.00013372200000000278, 0.00013373599999999541, 0.0001337919999999937, 0.00013373599999999541, 0.00013372300000000226, 0.00013372200000000278, 0.0001337500000000158, 0.00013372300000000226, 0.00013366699999997622, 0.00013370800000001015, 0.00013372200000000278, 0.00013372200000000278, 0.00013370899999998187, 0.00013372200000000278, 0.00013372200000000278, 0.00013372200000000278, 0.00013373599999999541, 0.00013370800000001015, 0.0001337779999999733, 0.00013373599999999541, 0.00013370800000001015, 0.00013374999999998805, 0.00013379199999996594, 0.00013368100000005212, 0.00013372200000000278, 0.0001337229999999745, 0.00013372200000000278, 0.00013372200000000278, 0.00013363900000001872, 0.00013372199999994727, 0.00013374999999998805, 0.00013370800000001015, 0.00013370800000001015, 0.00013369499999998924, 0.00013369400000001752, 0.00013372200000000278, 0.0001337229999999745, 0.0001336809999999966, 0.00013370800000001015, 0.00013370800000001015, 0.00013370800000001015, 0.00013370800000001015, 0.00013370800000001015, 0.00013375000000004356]</msg>
<status status="PASS" starttime="20201029 12:45:51.674" endtime="20201029 12:45:51.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.670" endtime="20201029 12:45:51.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.874" endtime="20201029 12:45:51.677"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:50.798" endtime="20201029 12:45:51.678" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:51.684" endtime="20201029 12:45:51.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.683" endtime="20201029 12:45:51.704"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.719" endtime="20201029 12:45:51.731"></status>
</kw>
<msg timestamp="20201029 12:45:51.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.717" endtime="20201029 12:45:51.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.733" endtime="20201029 12:45:51.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.737" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:51.735" endtime="20201029 12:45:51.737"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:51.715" endtime="20201029 12:45:51.738"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:51.712" endtime="20201029 12:45:51.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.711" endtime="20201029 12:45:51.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:51.743" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:51.742" endtime="20201029 12:45:51.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.740" endtime="20201029 12:45:51.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.710" endtime="20201029 12:45:51.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.710" endtime="20201029 12:45:51.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.744" endtime="20201029 12:45:51.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.708" endtime="20201029 12:45:51.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.705" endtime="20201029 12:45:51.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.682" endtime="20201029 12:45:51.747"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.755" endtime="20201029 12:45:51.777"></status>
</kw>
<msg timestamp="20201029 12:45:51.777" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.754" endtime="20201029 12:45:51.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.780" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.778" endtime="20201029 12:45:51.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.781" endtime="20201029 12:45:51.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.751" endtime="20201029 12:45:51.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.749" endtime="20201029 12:45:51.783"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.786" endtime="20201029 12:45:51.788"></status>
</kw>
<msg timestamp="20201029 12:45:51.789" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:51.784" endtime="20201029 12:45:51.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.793" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:51.792" endtime="20201029 12:45:51.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.795" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:51.794" endtime="20201029 12:45:51.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.789" endtime="20201029 12:45:51.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.800" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:51.799" endtime="20201029 12:45:51.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.802" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:51.801" endtime="20201029 12:45:51.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.797" endtime="20201029 12:45:51.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.809" endtime="20201029 12:45:52.095"></status>
</kw>
<msg timestamp="20201029 12:45:52.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063593347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063616556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.808" endtime="20201029 12:45:52.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063593347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063616556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.099" endtime="20201029 12:45:52.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.108" endtime="20201029 12:45:52.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.805" endtime="20201029 12:45:52.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.803" endtime="20201029 12:45:52.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.115" level="INFO">${RESULT} = [{'diff': 2.3209000000010138e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.2915999999997827e-05}, {'diff': 2.2915999999997827e-05}, {'diff': 2.2986000000002615e-05}, {'diff': 2.297299999999558e-05...</msg>
<status status="PASS" starttime="20201029 12:45:52.111" endtime="20201029 12:45:52.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:52.120" level="INFO">${OVERHEAD} = {'diff': [2.3209000000010138e-05, 2.288899999999816e-05, 2.2915999999997827e-05, 2.2915999999997827e-05, 2.2986000000002615e-05, 2.297299999999558e-05, 2.2902000000005196e-05, 2.297299999999558e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:45:52.116" endtime="20201029 12:45:52.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.125" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:45:52.124" endtime="20201029 12:45:52.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.128" level="INFO">VALUE: [2.3209000000010138e-05, 2.288899999999816e-05, 2.2915999999997827e-05, 2.2915999999997827e-05, 2.2986000000002615e-05, 2.297299999999558e-05, 2.2902000000005196e-05, 2.297299999999558e-05, 2.2915999999997827e-05, 2.286099999999902e-05, 2.2902000000005196e-05, 2.2874999999991652e-05, 2.2916000000011705e-05, 2.290300000000467e-05, 2.290300000000467e-05, 2.29169999999973e-05, 2.290300000000467e-05, 2.291700000001118e-05, 2.29169999999973e-05, 2.2915999999997827e-05, 2.2887999999998687e-05, 2.288899999999816e-05, 2.293100000000381e-05, 2.2916000000011705e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.291700000001118e-05, 2.29169999999973e-05, 2.293099999998993e-05, 2.2929999999990458e-05, 2.291700000001118e-05, 2.2943999999996967e-05, 2.2915999999997827e-05, 2.290300000000467e-05, 2.293100000000381e-05, 2.2901999999991318e-05, 2.29169999999973e-05, 2.29169999999973e-05, 2.29169999999973e-05, 2.293100000000381e-05, 2.290300000000467e-05, 2.2929999999990458e-05, 2.2915999999997827e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.287500000000553e-05, 2.288899999999816e-05, 2.29169999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:45:52.126" endtime="20201029 12:45:52.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.121" endtime="20201029 12:45:52.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.748" endtime="20201029 12:45:52.129"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:51.679" endtime="20201029 12:45:52.129" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:52.137" endtime="20201029 12:45:52.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.135" endtime="20201029 12:45:52.159"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.176" endtime="20201029 12:45:52.189"></status>
</kw>
<msg timestamp="20201029 12:45:52.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.175" endtime="20201029 12:45:52.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.190" endtime="20201029 12:45:52.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.195" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:52.193" endtime="20201029 12:45:52.195"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.172" endtime="20201029 12:45:52.196"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.170" endtime="20201029 12:45:52.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.168" endtime="20201029 12:45:52.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:52.201" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:52.200" endtime="20201029 12:45:52.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.198" endtime="20201029 12:45:52.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.166" endtime="20201029 12:45:52.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.165" endtime="20201029 12:45:52.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.202" endtime="20201029 12:45:52.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.163" endtime="20201029 12:45:52.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.160" endtime="20201029 12:45:52.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.134" endtime="20201029 12:45:52.205"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.215" endtime="20201029 12:45:52.361"></status>
</kw>
<msg timestamp="20201029 12:45:52.361" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.214" endtime="20201029 12:45:52.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.364" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.363" endtime="20201029 12:45:52.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.365" endtime="20201029 12:45:52.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.211" endtime="20201029 12:45:52.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.207" endtime="20201029 12:45:52.368"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.370" endtime="20201029 12:45:52.372"></status>
</kw>
<msg timestamp="20201029 12:45:52.372" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:52.369" endtime="20201029 12:45:52.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.377" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:52.376" endtime="20201029 12:45:52.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.379" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:52.378" endtime="20201029 12:45:52.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.373" endtime="20201029 12:45:52.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.384" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:52.383" endtime="20201029 12:45:52.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.386" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:52.386" endtime="20201029 12:45:52.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.381" endtime="20201029 12:45:52.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.394" endtime="20201029 12:45:52.688"></status>
</kw>
<msg timestamp="20201029 12:45:52.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071987903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072043944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.393" endtime="20201029 12:45:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071987903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072043944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.692" endtime="20201029 12:45:52.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.701" endtime="20201029 12:45:52.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.390" endtime="20201029 12:45:52.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.388" endtime="20201029 12:45:52.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.707" level="INFO">${RESULT} = [{'diff': 5.604099999999279e-05}, {'diff': 5.5944000000002214e-05}, {'diff': 5.590299999999604e-05}, {'diff': 5.591699999998867e-05}, {'diff': 5.590299999999604e-05}, {'diff': 5.588900000000341e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:52.704" endtime="20201029 12:45:52.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:52.712" level="INFO">${OVERHEAD} = {'diff': [5.604099999999279e-05, 5.5944000000002214e-05, 5.590299999999604e-05, 5.591699999998867e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.590299999999604e-05, 5.593000000000958e-05, 5.594...</msg>
<status status="PASS" starttime="20201029 12:45:52.708" endtime="20201029 12:45:52.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.717" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:45:52.716" endtime="20201029 12:45:52.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.719" level="INFO">VALUE: [5.604099999999279e-05, 5.5944000000002214e-05, 5.590299999999604e-05, 5.591699999998867e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.590299999999604e-05, 5.593000000000958e-05, 5.594500000000169e-05, 5.593100000000906e-05, 5.588900000000341e-05, 5.58340000000046e-05, 5.5916000000003074e-05, 5.586100000000427e-05, 5.593100000000906e-05, 5.5929999999995705e-05, 5.5929999999995705e-05, 5.590300000000992e-05, 5.5901999999996566e-05, 5.588900000000341e-05, 5.594500000000169e-05, 5.591699999998867e-05, 5.593100000000906e-05, 5.588900000000341e-05, 5.5915999999989197e-05, 5.591699999998867e-05, 5.588900000000341e-05, 5.588900000000341e-05, 5.5901999999996566e-05, 5.593000000000958e-05, 5.588900000000341e-05, 5.588900000000341e-05, 5.593000000000958e-05, 5.590299999999604e-05, 5.586099999999039e-05, 5.588900000000341e-05, 5.59580000000226e-05, 5.586099999999039e-05, 5.590299999999604e-05, 5.5917000000016426e-05, 5.588900000000341e-05, 5.584699999999776e-05, 5.594500000000169e-05, 5.5915999999989197e-05, 5.590299999999604e-05, 5.591600000001695e-05, 5.5903000000023795e-05, 5.588899999997565e-05, 5.592999999998183e-05, 5.5903000000023795e-05]</msg>
<status status="PASS" starttime="20201029 12:45:52.718" endtime="20201029 12:45:52.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.713" endtime="20201029 12:45:52.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.206" endtime="20201029 12:45:52.721"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:52.131" endtime="20201029 12:45:52.721" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:52.728" endtime="20201029 12:45:52.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.726" endtime="20201029 12:45:52.748"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.764" endtime="20201029 12:45:52.777"></status>
</kw>
<msg timestamp="20201029 12:45:52.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.762" endtime="20201029 12:45:52.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.779" endtime="20201029 12:45:52.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.791" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:52.784" endtime="20201029 12:45:52.791"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.758" endtime="20201029 12:45:52.792"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:52.755" endtime="20201029 12:45:52.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.753" endtime="20201029 12:45:52.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:52.797" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:52.796" endtime="20201029 12:45:52.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.794" endtime="20201029 12:45:52.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.752" endtime="20201029 12:45:52.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.752" endtime="20201029 12:45:52.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.799" endtime="20201029 12:45:52.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.750" endtime="20201029 12:45:52.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.749" endtime="20201029 12:45:52.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.725" endtime="20201029 12:45:52.801"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.810" endtime="20201029 12:45:53.241"></status>
</kw>
<msg timestamp="20201029 12:45:53.242" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.808" endtime="20201029 12:45:53.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.247" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.244" endtime="20201029 12:45:53.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.249" endtime="20201029 12:45:53.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.805" endtime="20201029 12:45:53.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.803" endtime="20201029 12:45:53.254"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.259" endtime="20201029 12:45:53.262"></status>
</kw>
<msg timestamp="20201029 12:45:53.263" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:53.256" endtime="20201029 12:45:53.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.271" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:53.269" endtime="20201029 12:45:53.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.276" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:53.274" endtime="20201029 12:45:53.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.264" endtime="20201029 12:45:53.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.291" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:53.289" endtime="20201029 12:45:53.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.296" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:53.294" endtime="20201029 12:45:53.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.279" endtime="20201029 12:45:53.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.311" endtime="20201029 12:45:53.614"></status>
</kw>
<msg timestamp="20201029 12:45:53.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079678625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.308" endtime="20201029 12:45:53.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079600736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079678625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.618" endtime="20201029 12:45:53.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.626" endtime="20201029 12:45:53.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.302" endtime="20201029 12:45:53.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.299" endtime="20201029 12:45:53.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:53.633" level="INFO">${RESULT} = [{'diff': 7.788899999999765e-05}, {'diff': 7.770799999999578e-05}, {'diff': 7.770799999999578e-05}, {'diff': 7.768099999999611e-05}, {'diff': 7.76669999999896e-05}, {'diff': 7.769500000000262e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:53.630" endtime="20201029 12:45:53.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:53.637" level="INFO">${OVERHEAD} = {'diff': [7.788899999999765e-05, 7.770799999999578e-05, 7.770799999999578e-05, 7.768099999999611e-05, 7.76669999999896e-05, 7.769500000000262e-05, 7.769400000001703e-05, 7.769399999998927e-05, 7.77079...</msg>
<status status="PASS" starttime="20201029 12:45:53.634" endtime="20201029 12:45:53.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.642" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:45:53.641" endtime="20201029 12:45:53.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.645" level="INFO">VALUE: [7.788899999999765e-05, 7.770799999999578e-05, 7.770799999999578e-05, 7.768099999999611e-05, 7.76669999999896e-05, 7.769500000000262e-05, 7.769400000001703e-05, 7.769399999998927e-05, 7.77079999999819e-05, 7.772200000000229e-05, 7.769399999998927e-05, 7.762499999999783e-05, 7.768099999999611e-05, 7.777800000000057e-05, 7.77770000000011e-05, 7.770900000000913e-05, 7.768100000002387e-05, 7.768099999999611e-05, 7.772200000000229e-05, 7.762499999999783e-05, 7.762499999999783e-05, 7.773599999999492e-05, 7.765299999995534e-05, 7.769500000004426e-05, 7.766700000000348e-05, 7.769499999998875e-05, 7.762500000002559e-05, 7.769499999998875e-05, 7.769499999998875e-05, 7.769399999996152e-05, 7.765300000001085e-05, 7.770799999995415e-05, 7.762500000002559e-05, 7.763799999999099e-05, 7.772200000000229e-05, 7.769499999998875e-05, 7.769400000001703e-05, 7.768099999999611e-05, 7.763900000001822e-05, 7.769399999996152e-05, 7.76800000000244e-05, 7.769399999996152e-05, 7.769400000001703e-05, 7.774999999998755e-05, 7.769399999996152e-05, 7.762500000002559e-05, 7.770899999998138e-05, 7.773699999996664e-05, 7.770899999998138e-05, 7.772200000000229e-05]</msg>
<status status="PASS" starttime="20201029 12:45:53.643" endtime="20201029 12:45:53.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.638" endtime="20201029 12:45:53.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.802" endtime="20201029 12:45:53.646"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:52.723" endtime="20201029 12:45:53.647" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:53.653" endtime="20201029 12:45:53.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.652" endtime="20201029 12:45:53.673"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.688" endtime="20201029 12:45:53.700"></status>
</kw>
<msg timestamp="20201029 12:45:53.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.686" endtime="20201029 12:45:53.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.702" endtime="20201029 12:45:53.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.706" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:53.704" endtime="20201029 12:45:53.706"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:53.683" endtime="20201029 12:45:53.707"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:53.680" endtime="20201029 12:45:53.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.679" endtime="20201029 12:45:53.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:53.712" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:53.711" endtime="20201029 12:45:53.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.709" endtime="20201029 12:45:53.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.678" endtime="20201029 12:45:53.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.677" endtime="20201029 12:45:53.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.713" endtime="20201029 12:45:53.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.676" endtime="20201029 12:45:53.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.674" endtime="20201029 12:45:53.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.651" endtime="20201029 12:45:53.716"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.720" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:53.728" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:54.971" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:53.718" endtime="20201029 12:45:54.971"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.974" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:45:54.973" endtime="20201029 12:45:54.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.717" endtime="20201029 12:45:54.975"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:54.978" endtime="20201029 12:45:54.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.976" endtime="20201029 12:45:54.998"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.007" endtime="20201029 12:45:55.016"></status>
</kw>
<msg timestamp="20201029 12:45:55.016" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.005" endtime="20201029 12:45:55.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.019" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.017" endtime="20201029 12:45:55.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.020" endtime="20201029 12:45:55.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.003" endtime="20201029 12:45:55.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.001" endtime="20201029 12:45:55.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.031" endtime="20201029 12:45:55.316"></status>
</kw>
<msg timestamp="20201029 12:45:55.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018183611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018218861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.029" endtime="20201029 12:45:55.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018183611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018218861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.320" endtime="20201029 12:45:55.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.329" endtime="20201029 12:45:55.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.025" endtime="20201029 12:45:55.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.023" endtime="20201029 12:45:55.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:55.335" level="INFO">${PHILIP_RES} = [{'diff': 3.525000000000056e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.366600000000164e-05}, {'diff': 3.365300000000154e-05}, {'diff': 3.368000000000121e-05}, {'diff': 3.365300000000154e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:55.332" endtime="20201029 12:45:55.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.339" level="INFO">${RESULT} = {'diff': [3.525000000000056e-05, 3.366700000000111e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.368000000000121e-05, 3.365300000000154e-05, 3.368100000000068e-05, 3.369400000000078e-05, 3.3667...</msg>
<status status="PASS" starttime="20201029 12:45:55.336" endtime="20201029 12:45:55.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.344" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:55.343" endtime="20201029 12:45:55.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.346" level="INFO">VALUE: [3.525000000000056e-05, 3.366700000000111e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.368000000000121e-05, 3.365300000000154e-05, 3.368100000000068e-05, 3.369400000000078e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.363799999999903e-05, 3.3596999999999794e-05, 3.367999999999774e-05, 3.368100000000068e-05, 3.366599999999817e-05, 3.366700000000111e-05, 3.369399999999731e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.366699999999764e-05, 3.366699999999764e-05, 3.36519999999986e-05, 3.368099999999721e-05, 3.369400000000078e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.369400000000078e-05, 3.366700000000111e-05, 3.368000000000121e-05, 3.370800000000035e-05, 3.366700000000111e-05, 3.373599999999949e-05, 3.366700000000111e-05, 3.368000000000121e-05, 3.373600000000296e-05, 3.367999999999774e-05, 3.365299999999807e-05, 3.366699999999764e-05, 3.366699999999764e-05, 3.366699999999764e-05, 3.366599999999817e-05, 3.366699999999764e-05, 3.366599999999817e-05, 3.368100000000068e-05, 3.367999999999774e-05, 3.373599999999949e-05, 3.373599999999949e-05, 3.368100000000068e-05, 3.366599999999817e-05]</msg>
<status status="PASS" starttime="20201029 12:45:55.345" endtime="20201029 12:45:55.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.340" endtime="20201029 12:45:55.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.999" endtime="20201029 12:45:55.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.976" endtime="20201029 12:45:55.348"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:55.350" endtime="20201029 12:45:55.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.349" endtime="20201029 12:45:55.372"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.384" endtime="20201029 12:45:55.395"></status>
</kw>
<msg timestamp="20201029 12:45:55.396" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.383" endtime="20201029 12:45:55.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.398" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.397" endtime="20201029 12:45:55.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.399" endtime="20201029 12:45:55.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.379" endtime="20201029 12:45:55.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.376" endtime="20201029 12:45:55.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.409" endtime="20201029 12:45:55.707"></status>
</kw>
<msg timestamp="20201029 12:45:55.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:55.407" endtime="20201029 12:45:55.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:55.716" endtime="20201029 12:45:55.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.735" endtime="20201029 12:45:55.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.404" endtime="20201029 12:45:55.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.403" endtime="20201029 12:45:55.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:55.749" level="INFO">${PHILIP_RES} = [{'diff': 5.2971999999998354e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.143099999999762e-05}, {'diff': 5.141700000000152e-05}, {'diff': 5.140300000000195e-05}, {'diff': 5.147200000000032e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:55.742" endtime="20201029 12:45:55.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.759" level="INFO">${RESULT} = {'diff': [5.2971999999998354e-05, 5.137499999999934e-05, 5.143099999999762e-05, 5.141700000000152e-05, 5.140300000000195e-05, 5.147200000000032e-05, 5.1415999999998574e-05, 5.1401999999999004e-05, 5.1...</msg>
<status status="PASS" starttime="20201029 12:45:55.751" endtime="20201029 12:45:55.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.768" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:55.766" endtime="20201029 12:45:55.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.773" level="INFO">VALUE: [5.2971999999998354e-05, 5.137499999999934e-05, 5.143099999999762e-05, 5.141700000000152e-05, 5.140300000000195e-05, 5.147200000000032e-05, 5.1415999999998574e-05, 5.1401999999999004e-05, 5.141700000000152e-05, 5.140300000000195e-05, 5.141699999999805e-05, 5.138899999999891e-05, 5.140300000000195e-05, 5.1402000000002473e-05, 5.1416000000002043e-05, 5.1416000000002043e-05, 5.1429999999998144e-05, 5.141700000000152e-05, 5.143100000000109e-05, 5.13470000000002e-05, 5.138899999999891e-05, 5.1416000000002043e-05, 5.138900000000238e-05, 5.141699999999805e-05, 5.138899999999891e-05, 5.138900000000238e-05, 5.1402000000002473e-05, 5.1415999999998574e-05, 5.145800000000075e-05, 5.141700000000152e-05, 5.141700000000152e-05, 5.140300000000195e-05, 5.140299999999848e-05, 5.141699999999805e-05, 5.137499999999934e-05, 5.1402000000002473e-05, 5.145800000000075e-05, 5.131999999999706e-05, 5.140299999999848e-05, 5.143100000000109e-05, 5.141700000000152e-05, 5.140299999999848e-05, 5.1415999999998574e-05, 5.1415999999998574e-05, 5.1416000000002043e-05, 5.134799999999967e-05, 5.140299999999848e-05, 5.138899999999891e-05, 5.138899999999891e-05, 5.143100000000109e-05]</msg>
<status status="PASS" starttime="20201029 12:45:55.771" endtime="20201029 12:45:55.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.761" endtime="20201029 12:45:55.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.373" endtime="20201029 12:45:55.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.348" endtime="20201029 12:45:55.777"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:55.780" endtime="20201029 12:45:55.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.779" endtime="20201029 12:45:55.800"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.808" endtime="20201029 12:45:55.822"></status>
</kw>
<msg timestamp="20201029 12:45:55.822" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.807" endtime="20201029 12:45:55.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.825" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.823" endtime="20201029 12:45:55.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.826" endtime="20201029 12:45:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.804" endtime="20201029 12:45:55.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.802" endtime="20201029 12:45:55.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.835" endtime="20201029 12:45:56.122"></status>
</kw>
<msg timestamp="20201029 12:45:56.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017399583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017470319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.834" endtime="20201029 12:45:56.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017399583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017470319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.126" endtime="20201029 12:45:56.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.134" endtime="20201029 12:45:56.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.831" endtime="20201029 12:45:56.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.829" endtime="20201029 12:45:56.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:56.141" level="INFO">${PHILIP_RES} = [{'diff': 7.07360000000018e-05}, {'diff': 6.913899999999931e-05}, {'diff': 6.913899999999931e-05}, {'diff': 6.915300000000235e-05}, {'diff': 6.912499999999974e-05}, {'diff': 6.913899999999931e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:56.137" endtime="20201029 12:45:56.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.146" level="INFO">${RESULT} = {'diff': [7.07360000000018e-05, 6.913899999999931e-05, 6.913899999999931e-05, 6.915300000000235e-05, 6.912499999999974e-05, 6.913899999999931e-05, 6.911100000000017e-05, 6.920799999999769e-05, 6.91389...</msg>
<status status="PASS" starttime="20201029 12:45:56.142" endtime="20201029 12:45:56.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.150" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:56.149" endtime="20201029 12:45:56.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.153" level="INFO">VALUE: [7.07360000000018e-05, 6.913899999999931e-05, 6.913899999999931e-05, 6.915300000000235e-05, 6.912499999999974e-05, 6.913899999999931e-05, 6.911100000000017e-05, 6.920799999999769e-05, 6.913899999999931e-05, 6.915199999999941e-05, 6.913899999999931e-05, 6.915200000000288e-05, 6.912499999999974e-05, 6.912499999999974e-05, 6.913799999999984e-05, 6.915300000000235e-05, 6.915300000000235e-05, 6.908300000000103e-05, 6.916699999999845e-05, 6.916699999999845e-05, 6.916599999999898e-05, 6.918000000000202e-05, 6.912499999999974e-05, 6.915299999999888e-05, 6.912499999999974e-05, 6.915299999999888e-05, 6.913899999999931e-05, 6.913900000000278e-05, 6.911100000000017e-05, 6.913899999999931e-05, 6.912499999999974e-05, 6.913899999999931e-05, 6.915299999999888e-05, 6.918000000000202e-05, 6.912499999999974e-05, 6.913899999999931e-05, 6.912499999999974e-05, 6.915300000000235e-05, 6.912499999999974e-05, 6.919399999999812e-05, 6.915299999999888e-05, 6.913899999999931e-05, 6.913899999999931e-05, 6.913899999999931e-05, 6.912499999999974e-05, 6.913899999999931e-05, 6.913899999999931e-05, 6.913899999999931e-05, 6.915300000000235e-05, 6.916700000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.151" endtime="20201029 12:45:56.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.147" endtime="20201029 12:45:56.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.801" endtime="20201029 12:45:56.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.778" endtime="20201029 12:45:56.154"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.156" endtime="20201029 12:45:56.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.155" endtime="20201029 12:45:56.176"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.184" endtime="20201029 12:45:56.200"></status>
</kw>
<msg timestamp="20201029 12:45:56.201" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.183" endtime="20201029 12:45:56.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.203" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.202" endtime="20201029 12:45:56.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.204" endtime="20201029 12:45:56.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.180" endtime="20201029 12:45:56.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.178" endtime="20201029 12:45:56.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.214" endtime="20201029 12:45:56.503"></status>
</kw>
<msg timestamp="20201029 12:45:56.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017312292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017401444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.212" endtime="20201029 12:45:56.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017312292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017401444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.513" endtime="20201029 12:45:56.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.531" endtime="20201029 12:45:56.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.210" endtime="20201029 12:45:56.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.208" endtime="20201029 12:45:56.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:56.545" level="INFO">${PHILIP_RES} = [{'diff': 8.91519999999986e-05}, {'diff': 8.763799999999752e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.76120000000008e-05}, {'diff': 8.762499999999743e-05}, {'diff': 8.76250000000009e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:45:56.538" endtime="20201029 12:45:56.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.557" level="INFO">${RESULT} = {'diff': [8.91519999999986e-05, 8.763799999999752e-05, 8.76250000000009e-05, 8.76120000000008e-05, 8.762499999999743e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.763900000...</msg>
<status status="PASS" starttime="20201029 12:45:56.547" endtime="20201029 12:45:56.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.571" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:56.569" endtime="20201029 12:45:56.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.578" level="INFO">VALUE: [8.91519999999986e-05, 8.763799999999752e-05, 8.76250000000009e-05, 8.76120000000008e-05, 8.762499999999743e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.763900000000047e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.759800000000123e-05, 8.769500000000222e-05, 8.761100000000133e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.766600000000013e-05, 8.765300000000004e-05, 8.762499999999743e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.762499999999743e-05, 8.761100000000133e-05, 8.761100000000133e-05, 8.761100000000133e-05, 8.7638999999997e-05, 8.763900000000047e-05, 8.759800000000123e-05, 8.761099999999786e-05, 8.761100000000133e-05, 8.761100000000133e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.761100000000133e-05, 8.763900000000047e-05, 8.759700000000176e-05, 8.763900000000047e-05, 8.761100000000133e-05, 8.762499999999743e-05, 8.76120000000008e-05, 8.76250000000009e-05, 8.765300000000004e-05, 8.761099999999786e-05, 8.759700000000176e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.761100000000133e-05, 8.756899999999915e-05, 8.759699999999829e-05, 8.7638999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.574" endtime="20201029 12:45:56.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.563" endtime="20201029 12:45:56.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.177" endtime="20201029 12:45:56.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.154" endtime="20201029 12:45:56.582"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.588" endtime="20201029 12:45:56.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.584" endtime="20201029 12:45:56.608"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.616" endtime="20201029 12:45:56.636"></status>
</kw>
<msg timestamp="20201029 12:45:56.636" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.615" endtime="20201029 12:45:56.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.639" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.637" endtime="20201029 12:45:56.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.640" endtime="20201029 12:45:56.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.612" endtime="20201029 12:45:56.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.610" endtime="20201029 12:45:56.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.649" endtime="20201029 12:45:56.935"></status>
</kw>
<msg timestamp="20201029 12:45:56.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018453472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.648" endtime="20201029 12:45:56.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018453472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.939" endtime="20201029 12:45:56.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.947" endtime="20201029 12:45:56.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.645" endtime="20201029 12:45:56.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.643" endtime="20201029 12:45:56.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:56.953" level="INFO">${PHILIP_RES} = [{'diff': 0.00010838899999999693}, {'diff': 0.00010687499999999933}, {'diff': 0.00010686099999999976}, {'diff': 0.00010683300000000062}, {'diff': 0.00010681900000000105}, {'diff': 0.000106917000000001...</msg>
<status status="PASS" starttime="20201029 12:45:56.950" endtime="20201029 12:45:56.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.957" level="INFO">${RESULT} = {'diff': [0.00010838899999999693, 0.00010687499999999933, 0.00010686099999999976, 0.00010683300000000062, 0.00010681900000000105, 0.00010691700000000151, 0.00010686099999999976, 0.00010679099999999844...</msg>
<status status="PASS" starttime="20201029 12:45:56.954" endtime="20201029 12:45:56.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.961" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:56.960" endtime="20201029 12:45:56.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.964" level="INFO">VALUE: [0.00010838899999999693, 0.00010687499999999933, 0.00010686099999999976, 0.00010683300000000062, 0.00010681900000000105, 0.00010691700000000151, 0.00010686099999999976, 0.00010679099999999844, 0.00010684700000000019, 0.00010684799999999967, 0.00010690299999999847, 0.00010687499999999933, 0.00010686099999999976, 0.00010684700000000019, 0.00010681900000000105, 0.00010684700000000019, 0.00010687499999999933, 0.00010684700000000019, 0.00010686099999999976, 0.00010681900000000105, 0.00010684700000000019, 0.00010684700000000019, 0.00010686099999999976, 0.00010684700000000019, 0.00010688900000000237, 0.00010687499999999933, 0.00010684700000000019, 0.00010684700000000019, 0.00010684700000000019, 0.00010683300000000062, 0.00010684700000000019, 0.00010686099999999976, 0.00010684700000000019, 0.00010687499999999933, 0.00010687499999999933, 0.0001068620000000027, 0.00010686099999999976, 0.00010690299999999847, 0.00010686100000000323, 0.00010688799999999943, 0.00010694400000000118, 0.0001068750000000028, 0.00010687499999999933, 0.0001068750000000028, 0.00010684799999999967, 0.00010687499999999933, 0.00010684700000000019, 0.00010686099999999976, 0.00010688900000000237, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201029 12:45:56.963" endtime="20201029 12:45:56.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.958" endtime="20201029 12:45:56.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.609" endtime="20201029 12:45:56.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.583" endtime="20201029 12:45:56.966"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.969" endtime="20201029 12:45:56.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.967" endtime="20201029 12:45:56.989"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.997" endtime="20201029 12:45:57.018"></status>
</kw>
<msg timestamp="20201029 12:45:57.019" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.995" endtime="20201029 12:45:57.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.021" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.020" endtime="20201029 12:45:57.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.022" endtime="20201029 12:45:57.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.993" endtime="20201029 12:45:57.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.991" endtime="20201029 12:45:57.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.031" endtime="20201029 12:45:57.324"></status>
</kw>
<msg timestamp="20201029 12:45:57.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017718403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.030" endtime="20201029 12:45:57.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017718403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.333" endtime="20201029 12:45:57.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.350" endtime="20201029 12:45:57.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.027" endtime="20201029 12:45:57.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.026" endtime="20201029 12:45:57.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:57.367" level="INFO">${PHILIP_RES} = [{'diff': 0.0001283889999999996}, {'diff': 0.00012694400000000036}, {'diff': 0.00012684699999999938}, {'diff': 0.00012683399999999928}, {'diff': 0.00012687500000000199}, {'diff': 0.0001268749999999985...</msg>
<status status="PASS" starttime="20201029 12:45:57.357" endtime="20201029 12:45:57.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.378" level="INFO">${RESULT} = {'diff': [0.0001283889999999996, 0.00012694400000000036, 0.00012684699999999938, 0.00012683399999999928, 0.00012687500000000199, 0.00012687499999999852, 0.0001268329999999998, 0.00012683300000000328, ...</msg>
<status status="PASS" starttime="20201029 12:45:57.370" endtime="20201029 12:45:57.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.387" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:57.385" endtime="20201029 12:45:57.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.392" level="INFO">VALUE: [0.0001283889999999996, 0.00012694400000000036, 0.00012684699999999938, 0.00012683399999999928, 0.00012687500000000199, 0.00012687499999999852, 0.0001268329999999998, 0.00012683300000000328, 0.00012686199999999842, 0.00012684699999999938, 0.00012687500000000199, 0.0001268329999999998, 0.00012690200000000165, 0.00012686100000000242, 0.00012684699999999938, 0.00012684699999999938, 0.00012686099999999895, 0.00012687500000000199, 0.00012686099999999895, 0.00012684799999999885, 0.00012684700000000285, 0.0001268889999999981, 0.00012686099999999895, 0.00012690300000000113, 0.00012681900000000024, 0.00012684699999999938, 0.00012688900000000156, 0.00012688900000000156, 0.00012684699999999938, 0.00012687499999999852, 0.00012690299999999766, 0.00012687500000000199, 0.00012686099999999895, 0.00012684699999999938, 0.00012684699999999938, 0.00012690199999999818, 0.0001268620000000019, 0.00012684699999999938, 0.00012684699999999938, 0.00012684699999999938, 0.0001268329999999998, 0.0001268889999999981, 0.00012686100000000242, 0.00012684699999999938, 0.00012686099999999895, 0.00012684799999999885, 0.0001268889999999981, 0.00012684699999999938, 0.0001269160000000047, 0.00012686100000000589]</msg>
<status status="PASS" starttime="20201029 12:45:57.389" endtime="20201029 12:45:57.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.380" endtime="20201029 12:45:57.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.989" endtime="20201029 12:45:57.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.966" endtime="20201029 12:45:57.395"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.398" endtime="20201029 12:45:57.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.396" endtime="20201029 12:45:57.418"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.429" endtime="20201029 12:45:57.454"></status>
</kw>
<msg timestamp="20201029 12:45:57.454" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.426" endtime="20201029 12:45:57.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.457" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.455" endtime="20201029 12:45:57.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.458" endtime="20201029 12:45:57.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.423" endtime="20201029 12:45:57.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.421" endtime="20201029 12:45:57.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.467" endtime="20201029 12:45:57.752"></status>
</kw>
<msg timestamp="20201029 12:45:57.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021294625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021443792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.466" endtime="20201029 12:45:57.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021294625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021443792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.756" endtime="20201029 12:45:57.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.764" endtime="20201029 12:45:57.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.463" endtime="20201029 12:45:57.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.461" endtime="20201029 12:45:57.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:57.772" level="INFO">${PHILIP_RES} = [{'diff': 0.00014916699999999866}, {'diff': 0.00014756999999999965}, {'diff': 0.00014755499999999713}, {'diff': 0.00014755600000000008}, {'diff': 0.0001475420000000005}, {'diff': 0.0001475690000000001...</msg>
<status status="PASS" starttime="20201029 12:45:57.768" endtime="20201029 12:45:57.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.775" level="INFO">${RESULT} = {'diff': [0.00014916699999999866, 0.00014756999999999965, 0.00014755499999999713, 0.00014755600000000008, 0.0001475420000000005, 0.00014756900000000017, 0.00014762500000000192, 0.00014755600000000008,...</msg>
<status status="PASS" starttime="20201029 12:45:57.772" endtime="20201029 12:45:57.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.780" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:57.779" endtime="20201029 12:45:57.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.782" level="INFO">VALUE: [0.00014916699999999866, 0.00014756999999999965, 0.00014755499999999713, 0.00014755600000000008, 0.0001475420000000005, 0.00014756900000000017, 0.00014762500000000192, 0.00014755600000000008, 0.00014759700000000278, 0.00014752800000000094, 0.00014755499999999713, 0.00014751400000000137, 0.00014758399999999922, 0.00014758299999999974, 0.00014756999999999965, 0.00014762499999999845, 0.00014762500000000192, 0.00014756900000000017, 0.00014756999999999965, 0.00014756900000000017, 0.000147526999999998, 0.00014756999999999965, 0.00014758399999999922, 0.00014758299999999974, 0.00014752800000000094, 0.00014756900000000017, 0.00014758299999999974, 0.00014756999999999965, 0.00014758399999999922, 0.00014756999999999965, 0.0001476659999999977, 0.00014758299999999974, 0.00014758299999999974, 0.00014751400000000137, 0.00014754199999999357, 0.00014755600000000008, 0.0001475130000000019, 0.00014756999999999965, 0.00014756900000000017, 0.00014756900000000017, 0.00014762499999999845, 0.00014759799999999879, 0.00014759799999999879, 0.00014752800000000094, 0.00014758399999999922, 0.00014758299999999974, 0.00014756900000000017, 0.00014756999999999965, 0.0001475420000000005, 0.00014756999999999965]</msg>
<status status="PASS" starttime="20201029 12:45:57.781" endtime="20201029 12:45:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.776" endtime="20201029 12:45:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.419" endtime="20201029 12:45:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.396" endtime="20201029 12:45:57.784"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.786" endtime="20201029 12:45:57.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.784" endtime="20201029 12:45:57.806"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.814" endtime="20201029 12:45:57.840"></status>
</kw>
<msg timestamp="20201029 12:45:57.841" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.812" endtime="20201029 12:45:57.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.844" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.842" endtime="20201029 12:45:57.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.845" endtime="20201029 12:45:57.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.810" endtime="20201029 12:45:57.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.808" endtime="20201029 12:45:57.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.857" endtime="20201029 12:45:58.143"></status>
</kw>
<msg timestamp="20201029 12:45:58.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017389889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017560486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.855" endtime="20201029 12:45:58.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017389889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017560486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.147" endtime="20201029 12:45:58.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.154" endtime="20201029 12:45:58.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.853" endtime="20201029 12:45:58.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.851" endtime="20201029 12:45:58.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:58.161" level="INFO">${PHILIP_RES} = [{'diff': 0.0001705970000000015}, {'diff': 0.00016907000000000033}, {'diff': 0.0001690550000000013}, {'diff': 0.0001691389999999987}, {'diff': 0.00016904099999999825}, {'diff': 0.00016905600000000076}...</msg>
<status status="PASS" starttime="20201029 12:45:58.158" endtime="20201029 12:45:58.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.165" level="INFO">${RESULT} = {'diff': [0.0001705970000000015, 0.00016907000000000033, 0.0001690550000000013, 0.0001691389999999987, 0.00016904099999999825, 0.00016905600000000076, 0.0001690420000000012, 0.00016904100000000172, 0....</msg>
<status status="PASS" starttime="20201029 12:45:58.162" endtime="20201029 12:45:58.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.169" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:58.168" endtime="20201029 12:45:58.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.171" level="INFO">VALUE: [0.0001705970000000015, 0.00016907000000000033, 0.0001690550000000013, 0.0001691389999999987, 0.00016904099999999825, 0.00016905600000000076, 0.0001690420000000012, 0.00016904100000000172, 0.00016898599999999944, 0.00016904199999999772, 0.00016905600000000076, 0.00016902800000000162, 0.00016906900000000086, 0.0001690550000000013, 0.00016904100000000172, 0.0001690420000000012, 0.00016904100000000172, 0.00016905600000000076, 0.00016902799999999815, 0.00016905499999999782, 0.00016904199999999772, 0.00016904099999999825, 0.00016904199999999772, 0.00016905600000000076, 0.00016906900000000086, 0.00016905600000000076, 0.00016905499999999782, 0.00016904199999999772, 0.00016904099999999825, 0.00016904199999999772, 0.00016904099999999825, 0.0001690420000000012, 0.00016905600000000076, 0.00016902700000000215, 0.0001690550000000013, 0.00016907000000000033, 0.0001690839999999999, 0.000169097, 0.0001690420000000012, 0.00016902800000000162, 0.00016908300000000043, 0.00016904100000000172, 0.00016902800000000162, 0.0001690550000000013, 0.0001690839999999999, 0.0001690269999999952, 0.0001690420000000012, 0.00016904199999999425, 0.00016902800000000162, 0.00016904099999999478]</msg>
<status status="PASS" starttime="20201029 12:45:58.170" endtime="20201029 12:45:58.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.166" endtime="20201029 12:45:58.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.806" endtime="20201029 12:45:58.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.784" endtime="20201029 12:45:58.174"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.176" endtime="20201029 12:45:58.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.175" endtime="20201029 12:45:58.196"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.204" endtime="20201029 12:45:58.234"></status>
</kw>
<msg timestamp="20201029 12:45:58.234" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.202" endtime="20201029 12:45:58.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.236" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.235" endtime="20201029 12:45:58.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.238" endtime="20201029 12:45:58.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.200" endtime="20201029 12:45:58.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.198" endtime="20201029 12:45:58.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.247" endtime="20201029 12:45:58.535"></status>
</kw>
<msg timestamp="20201029 12:45:58.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018089028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.245" endtime="20201029 12:45:58.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018089028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.539" endtime="20201029 12:45:58.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.547" endtime="20201029 12:45:58.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.242" endtime="20201029 12:45:58.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.241" endtime="20201029 12:45:58.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:58.553" level="INFO">${PHILIP_RES} = [{'diff': 0.00019280600000000023}, {'diff': 0.00019123600000000088}, {'diff': 0.00019125000000000045}, {'diff': 0.00019125000000000045}, {'diff': 0.00019125000000000045}, {'diff': 0.000191277999999999...</msg>
<status status="PASS" starttime="20201029 12:45:58.550" endtime="20201029 12:45:58.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.558" level="INFO">${RESULT} = {'diff': [0.00019280600000000023, 0.00019123600000000088, 0.00019125000000000045, 0.00019125000000000045, 0.00019125000000000045, 0.0001912779999999996, 0.00019126400000000002, 0.00019126400000000002,...</msg>
<status status="PASS" starttime="20201029 12:45:58.554" endtime="20201029 12:45:58.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.562" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:58.561" endtime="20201029 12:45:58.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.565" level="INFO">VALUE: [0.00019280600000000023, 0.00019123600000000088, 0.00019125000000000045, 0.00019125000000000045, 0.00019125000000000045, 0.0001912779999999996, 0.00019126400000000002, 0.00019126400000000002, 0.00019126400000000002, 0.00019126400000000002, 0.00019134699999999796, 0.00019129099999999968, 0.0001912779999999996, 0.00019126400000000002, 0.00019124999999999698, 0.00019126400000000002, 0.00019134699999999796, 0.00019129199999999916, 0.00019126400000000002, 0.0001912779999999996, 0.00019131899999999882, 0.00019130499999999925, 0.0001912779999999996, 0.0001912779999999996, 0.00019130499999999925, 0.00019129199999999916, 0.0001912779999999996, 0.0001912779999999996, 0.00019127800000000306, 0.0001913060000000022, 0.00019126399999999655, 0.0001912640000000035, 0.0001912640000000035, 0.00019129099999999621, 0.00019124999999999698, 0.00019127799999999612, 0.00019126399999999655, 0.00019126299999999707, 0.0001913469999999945, 0.00019127799999999612, 0.00019127799999999612, 0.0001912359999999974, 0.00019126399999999655, 0.00019130499999999578, 0.00019127799999999612, 0.00019126399999999655, 0.00019124999999999698, 0.0001912229999999973, 0.00019127799999999612, 0.00019127799999999612]</msg>
<status status="PASS" starttime="20201029 12:45:58.563" endtime="20201029 12:45:58.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.559" endtime="20201029 12:45:58.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.197" endtime="20201029 12:45:58.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.174" endtime="20201029 12:45:58.566"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.569" endtime="20201029 12:45:58.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.567" endtime="20201029 12:45:58.589"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.605" endtime="20201029 12:45:58.637"></status>
</kw>
<msg timestamp="20201029 12:45:58.637" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.603" endtime="20201029 12:45:58.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.640" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.638" endtime="20201029 12:45:58.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.641" endtime="20201029 12:45:58.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.593" endtime="20201029 12:45:58.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.591" endtime="20201029 12:45:58.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.650" endtime="20201029 12:45:58.936"></status>
</kw>
<msg timestamp="20201029 12:45:58.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025485528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.648" endtime="20201029 12:45:58.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025485528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.940" endtime="20201029 12:45:58.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.948" endtime="20201029 12:45:58.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.646" endtime="20201029 12:45:58.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.644" endtime="20201029 12:45:58.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:58.955" level="INFO">${PHILIP_RES} = [{'diff': 0.00021580599999999894}, {'diff': 0.00021422200000000002}, {'diff': 0.00021427800000000177}, {'diff': 0.00021424999999999916}, {'diff': 0.00021429100000000187}, {'diff': 0.000214222000000000...</msg>
<status status="PASS" starttime="20201029 12:45:58.952" endtime="20201029 12:45:58.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.959" level="INFO">${RESULT} = {'diff': [0.00021580599999999894, 0.00021422200000000002, 0.00021427800000000177, 0.00021424999999999916, 0.00021429100000000187, 0.00021422200000000002, 0.00021426299999999926, 0.00021425000000000263...</msg>
<status status="PASS" starttime="20201029 12:45:58.956" endtime="20201029 12:45:58.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.964" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:58.963" endtime="20201029 12:45:58.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.966" level="INFO">VALUE: [0.00021580599999999894, 0.00021422200000000002, 0.00021427800000000177, 0.00021424999999999916, 0.00021429100000000187, 0.00021422200000000002, 0.00021426299999999926, 0.00021425000000000263, 0.00021420800000000045, 0.00021429200000000134, 0.00021425000000000263, 0.00021423699999999907, 0.0002142359999999996, 0.00021426399999999873, 0.00021426399999999873, 0.00021424999999999916, 0.0002142359999999996, 0.00021426399999999873, 0.00021427700000000577, 0.0002142359999999996, 0.00021426399999999873, 0.00021424999999999916, 0.00021424999999999916, 0.00021424999999999916, 0.00021426399999999873, 0.00021424999999999916, 0.00021426400000000567, 0.00021429199999999787, 0.00021424999999999916, 0.00021429199999999787, 0.00021430600000000438, 0.00021430600000000438, 0.0002142920000000048, 0.00021424999999999916, 0.00021424999999999916, 0.0002142630000000062, 0.00021424999999999916, 0.00021420800000000045, 0.00021424999999999916, 0.00021424999999999916, 0.00021424999999999916, 0.0002142359999999996, 0.00021424999999999916, 0.0002142359999999996, 0.0002142359999999996, 0.00021422200000000002, 0.0002142359999999996, 0.0002142359999999996, 0.0002142359999999996, 0.0002142229999999995]</msg>
<status status="PASS" starttime="20201029 12:45:58.965" endtime="20201029 12:45:58.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.960" endtime="20201029 12:45:58.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.590" endtime="20201029 12:45:58.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.567" endtime="20201029 12:45:58.968"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.970" endtime="20201029 12:45:58.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.969" endtime="20201029 12:45:58.990"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.999" endtime="20201029 12:45:59.034"></status>
</kw>
<msg timestamp="20201029 12:45:59.034" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.997" endtime="20201029 12:45:59.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.037" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.035" endtime="20201029 12:45:59.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.038" endtime="20201029 12:45:59.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.995" endtime="20201029 12:45:59.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.992" endtime="20201029 12:45:59.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.048" endtime="20201029 12:45:59.334"></status>
</kw>
<msg timestamp="20201029 12:45:59.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018643139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.046" endtime="20201029 12:45:59.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018403597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018643139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.338" endtime="20201029 12:45:59.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.346" endtime="20201029 12:45:59.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.044" endtime="20201029 12:45:59.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.042" endtime="20201029 12:45:59.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:59.352" level="INFO">${PHILIP_RES} = [{'diff': 0.00023954199999999884}, {'diff': 0.00023798699999999853}, {'diff': 0.0002379719999999995}, {'diff': 0.00023794400000000035}, {'diff': 0.0002379719999999995}, {'diff': 0.0002379719999999995}...</msg>
<status status="PASS" starttime="20201029 12:45:59.349" endtime="20201029 12:45:59.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.356" level="INFO">${RESULT} = {'diff': [0.00023954199999999884, 0.00023798699999999853, 0.0002379719999999995, 0.00023794400000000035, 0.0002379719999999995, 0.0002379719999999995, 0.00023791700000000068, 0.0002379719999999995, 0....</msg>
<status status="PASS" starttime="20201029 12:45:59.353" endtime="20201029 12:45:59.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.361" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:59.360" endtime="20201029 12:45:59.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.363" level="INFO">VALUE: [0.00023954199999999884, 0.00023798699999999853, 0.0002379719999999995, 0.00023794400000000035, 0.0002379719999999995, 0.0002379719999999995, 0.00023791700000000068, 0.0002379719999999995, 0.0002379719999999995, 0.00023798599999999906, 0.00023795799999999992, 0.00023795799999999992, 0.0002379719999999995, 0.00023798599999999906, 0.00023797300000000243, 0.0002379589999999994, 0.00023791700000000068, 0.00023794399999999688, 0.00023794499999999982, 0.00023793099999999678, 0.00023795799999999992, 0.00023802799999999777, 0.00023793100000000025, 0.00023802700000000176, 0.00023794400000000382, 0.00023802800000000124, 0.00023795799999999645, 0.0002379729999999955, 0.00023797199999999602, 0.0002379450000000033, 0.00023797200000000296, 0.00023795900000000286, 0.00023795900000000286, 0.00023795900000000286, 0.00023790299999999764, 0.00023794499999999635, 0.00023797199999999602, 0.00023795899999999592, 0.00023798600000000253, 0.00023798600000000253, 0.0002379580000000034, 0.00023797200000000296, 0.00023802800000000124, 0.00023795799999999645, 0.00023797300000000243, 0.0002380000000000021, 0.00023795799999999645, 0.00023805600000000038, 0.00023788899999999807, 0.00023793099999999678]</msg>
<status status="PASS" starttime="20201029 12:45:59.362" endtime="20201029 12:45:59.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.357" endtime="20201029 12:45:59.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.991" endtime="20201029 12:45:59.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.968" endtime="20201029 12:45:59.365"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.368" endtime="20201029 12:45:59.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.366" endtime="20201029 12:45:59.388"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.396" endtime="20201029 12:45:59.434"></status>
</kw>
<msg timestamp="20201029 12:45:59.435" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.395" endtime="20201029 12:45:59.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.438" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.436" endtime="20201029 12:45:59.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.440" endtime="20201029 12:45:59.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.392" endtime="20201029 12:45:59.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.390" endtime="20201029 12:45:59.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.453" endtime="20201029 12:45:59.793"></status>
</kw>
<msg timestamp="20201029 12:45:59.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018384069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.451" endtime="20201029 12:45:59.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018384069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.797" endtime="20201029 12:45:59.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.805" endtime="20201029 12:45:59.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.448" endtime="20201029 12:45:59.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.445" endtime="20201029 12:45:59.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:59.811" level="INFO">${PHILIP_RES} = [{'diff': 0.000263929999999999}, {'diff': 0.00026238900000000176}, {'diff': 0.0002623889999999983}, {'diff': 0.0002624170000000009}, {'diff': 0.0002624170000000009}, {'diff': 0.0002623880000000023}, {...</msg>
<status status="PASS" starttime="20201029 12:45:59.808" endtime="20201029 12:45:59.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.816" level="INFO">${RESULT} = {'diff': [0.000263929999999999, 0.00026238900000000176, 0.0002623889999999983, 0.0002624170000000009, 0.0002624170000000009, 0.0002623880000000023, 0.00026238900000000176, 0.00026245800000000014, 0.00...</msg>
<status status="PASS" starttime="20201029 12:45:59.812" endtime="20201029 12:45:59.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.820" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:59.819" endtime="20201029 12:45:59.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.823" level="INFO">VALUE: [0.000263929999999999, 0.00026238900000000176, 0.0002623889999999983, 0.0002624170000000009, 0.0002624170000000009, 0.0002623880000000023, 0.00026238900000000176, 0.00026245800000000014, 0.00026240300000000133, 0.000262430000000001, 0.00026243100000000047, 0.00026240300000000133, 0.00026243100000000047, 0.00026244400000000057, 0.0002624859999999993, 0.000262430000000001, 0.00026241599999999796, 0.0002624170000000009, 0.0002623750000000022, 0.00026240300000000133, 0.0002624719999999997, 0.0002624170000000009, 0.0002624029999999944, 0.0002623750000000022, 0.00026238900000000176, 0.0002624859999999993, 0.00026244500000000004, 0.0002624719999999997, 0.00026243099999999353, 0.00026240200000000186, 0.0002623610000000026, 0.00026237499999999525, 0.0002623750000000022, 0.0002624170000000009, 0.0002623750000000022, 0.00026238900000000176, 0.0002624170000000009, 0.00026242999999999406, 0.00026241699999999396, 0.0002624719999999997, 0.00026243100000000047, 0.000262430000000001, 0.00026243100000000047, 0.00026244400000000057, 0.0002624159999999945, 0.00026243100000000047, 0.00026243100000000047, 0.0002623880000000023, 0.00026240300000000133, 0.0002624170000000009]</msg>
<status status="PASS" starttime="20201029 12:45:59.821" endtime="20201029 12:45:59.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.817" endtime="20201029 12:45:59.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.389" endtime="20201029 12:45:59.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.366" endtime="20201029 12:45:59.824"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.827" endtime="20201029 12:45:59.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.825" endtime="20201029 12:45:59.847"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.855" endtime="20201029 12:45:59.896"></status>
</kw>
<msg timestamp="20201029 12:45:59.896" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.854" endtime="20201029 12:45:59.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.899" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.897" endtime="20201029 12:45:59.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.900" endtime="20201029 12:45:59.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.851" endtime="20201029 12:45:59.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.849" endtime="20201029 12:45:59.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.909" endtime="20201029 12:46:00.195"></status>
</kw>
<msg timestamp="20201029 12:46:00.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018073264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.907" endtime="20201029 12:46:00.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018073264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.199" endtime="20201029 12:46:00.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.207" endtime="20201029 12:46:00.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.905" endtime="20201029 12:46:00.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.903" endtime="20201029 12:46:00.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:00.214" level="INFO">${PHILIP_RES} = [{'diff': 0.00028918099999999947}, {'diff': 0.00028763899999999926}, {'diff': 0.0002876529999999988}, {'diff': 0.0002876119999999996}, {'diff': 0.0002876530000000023}, {'diff': 0.0002876529999999988},...</msg>
<status status="PASS" starttime="20201029 12:46:00.211" endtime="20201029 12:46:00.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.218" level="INFO">${RESULT} = {'diff': [0.00028918099999999947, 0.00028763899999999926, 0.0002876529999999988, 0.0002876119999999996, 0.0002876530000000023, 0.0002876529999999988, 0.0002876390000000027, 0.0002876110000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:00.215" endtime="20201029 12:46:00.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.222" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:00.221" endtime="20201029 12:46:00.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.225" level="INFO">VALUE: [0.00028918099999999947, 0.00028763899999999926, 0.0002876529999999988, 0.0002876119999999996, 0.0002876530000000023, 0.0002876529999999988, 0.0002876390000000027, 0.0002876110000000001, 0.0002876520000000028, 0.00028762500000000316, 0.0002876249999999997, 0.00028763899999999926, 0.00028768000000000196, 0.0002876249999999997, 0.0002876110000000001, 0.0002876249999999997, 0.0002876249999999997, 0.0002876110000000001, 0.0002876249999999997, 0.0002876390000000027, 0.0002876669999999984, 0.00028763899999999926, 0.0002876799999999985, 0.0002876110000000001, 0.00028763899999999926, 0.0002876659999999989, 0.0002876799999999985, 0.00028765199999999935, 0.000287583000000001, 0.0002876529999999988, 0.0002876529999999988, 0.0002876529999999988, 0.0002875690000000014, 0.00028763899999999926, 0.0002876110000000001, 0.0002876249999999997, 0.00028765199999999935, 0.0002876249999999997, 0.0002876390000000062, 0.0002876249999999997, 0.0002876110000000001, 0.00028763899999999926, 0.0002876110000000001, 0.0002876110000000001, 0.0002876249999999997, 0.00028756899999999447, 0.0002876529999999988, 0.00028763899999999926, 0.00028759700000000055, 0.0002876110000000001]</msg>
<status status="PASS" starttime="20201029 12:46:00.223" endtime="20201029 12:46:00.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.219" endtime="20201029 12:46:00.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.847" endtime="20201029 12:46:00.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.825" endtime="20201029 12:46:00.227"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:00.229" endtime="20201029 12:46:00.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.228" endtime="20201029 12:46:00.249"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.257" endtime="20201029 12:46:00.301"></status>
</kw>
<msg timestamp="20201029 12:46:00.301" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.256" endtime="20201029 12:46:00.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.304" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.302" endtime="20201029 12:46:00.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.305" endtime="20201029 12:46:00.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.253" endtime="20201029 12:46:00.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.251" endtime="20201029 12:46:00.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.315" endtime="20201029 12:46:00.600"></status>
</kw>
<msg timestamp="20201029 12:46:00.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017837931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018153042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.313" endtime="20201029 12:46:00.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017837931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018153042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.604" endtime="20201029 12:46:00.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.612" endtime="20201029 12:46:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.311" endtime="20201029 12:46:00.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.309" endtime="20201029 12:46:00.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:00.618" level="INFO">${PHILIP_RES} = [{'diff': 0.00031511099999999986}, {'diff': 0.0003135839999999987}, {'diff': 0.00031356899999999965}, {'diff': 0.00031356999999999913}, {'diff': 0.0003134870000000012}, {'diff': 0.0003134860000000017}...</msg>
<status status="PASS" starttime="20201029 12:46:00.615" endtime="20201029 12:46:00.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.623" level="INFO">${RESULT} = {'diff': [0.00031511099999999986, 0.0003135839999999987, 0.00031356899999999965, 0.00031356999999999913, 0.0003134870000000012, 0.0003134860000000017, 0.00031356999999999913, 0.00031355599999999956, 0...</msg>
<status status="PASS" starttime="20201029 12:46:00.619" endtime="20201029 12:46:00.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.627" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:00.626" endtime="20201029 12:46:00.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.630" level="INFO">VALUE: [0.00031511099999999986, 0.0003135839999999987, 0.00031356899999999965, 0.00031356999999999913, 0.0003134870000000012, 0.0003134860000000017, 0.00031356999999999913, 0.00031355599999999956, 0.0003135969999999988, 0.0003136250000000014, 0.000313542, 0.0003135829999999992, 0.0003135700000000026, 0.0003135829999999992, 0.0003135550000000001, 0.00031355599999999956, 0.0003135550000000001, 0.0003135410000000005, 0.000313542, 0.0003135550000000001, 0.00031356899999999965, 0.00031355599999999956, 0.00031355599999999956, 0.00031356899999999965, 0.00031355599999999956, 0.0003135839999999987, 0.0003135969999999988, 0.00031359799999999827, 0.0003135969999999988, 0.00031356899999999965, 0.00031355599999999956, 0.00031356999999999913, 0.0003136529999999971, 0.0003135969999999988, 0.00031356999999999913, 0.0003135829999999992, 0.0003135829999999992, 0.000313542, 0.00031356899999999965, 0.00031359700000000573, 0.0003135280000000004, 0.00031356899999999965, 0.0003135550000000001, 0.00031359799999999827, 0.0003135969999999988, 0.0003136389999999975, 0.00031361199999999784, 0.00031356899999999965, 0.00031358300000000616, 0.0003135829999999992]</msg>
<status status="PASS" starttime="20201029 12:46:00.629" endtime="20201029 12:46:00.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.624" endtime="20201029 12:46:00.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.250" endtime="20201029 12:46:00.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.227" endtime="20201029 12:46:00.633"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:00.636" endtime="20201029 12:46:00.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.634" endtime="20201029 12:46:00.656"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.664" endtime="20201029 12:46:00.710"></status>
</kw>
<msg timestamp="20201029 12:46:00.711" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.662" endtime="20201029 12:46:00.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.713" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.712" endtime="20201029 12:46:00.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.714" endtime="20201029 12:46:00.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.660" endtime="20201029 12:46:00.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.658" endtime="20201029 12:46:00.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.723" endtime="20201029 12:46:01.009"></status>
</kw>
<msg timestamp="20201029 12:46:01.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017629597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017971431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.722" endtime="20201029 12:46:01.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017629597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017971431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.013" endtime="20201029 12:46:01.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.020" endtime="20201029 12:46:01.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.719" endtime="20201029 12:46:01.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.717" endtime="20201029 12:46:01.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:01.027" level="INFO">${PHILIP_RES} = [{'diff': 0.0003418339999999992}, {'diff': 0.00034036100000000083}, {'diff': 0.00034027699999999994}, {'diff': 0.0003403750000000004}, {'diff': 0.00034030599999999855}, {'diff': 0.00034030599999999855...</msg>
<status status="PASS" starttime="20201029 12:46:01.024" endtime="20201029 12:46:01.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.036" level="INFO">${RESULT} = {'diff': [0.0003418339999999992, 0.00034036100000000083, 0.00034027699999999994, 0.0003403750000000004, 0.00034030599999999855, 0.00034030599999999855, 0.0003402909999999995, 0.00034031899999999865, 0...</msg>
<status status="PASS" starttime="20201029 12:46:01.028" endtime="20201029 12:46:01.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.045" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:01.043" endtime="20201029 12:46:01.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.050" level="INFO">VALUE: [0.0003418339999999992, 0.00034036100000000083, 0.00034027699999999994, 0.0003403750000000004, 0.00034030599999999855, 0.00034030599999999855, 0.0003402909999999995, 0.00034031899999999865, 0.0003402500000000003, 0.00034026399999999984, 0.0003402230000000006, 0.00034026399999999984, 0.00034026399999999984, 0.00034026399999999984, 0.000340306000000002, 0.0003402909999999995, 0.0003402230000000006, 0.0003402779999999994, 0.0003402920000000059, 0.0003402779999999994, 0.0003402779999999994, 0.00034034700000000473, 0.00034026300000000037, 0.0003402500000000003, 0.0003402360000000007, 0.0003402500000000003, 0.000340291999999999, 0.00034030599999999855, 0.00034034799999999726, 0.0003402779999999994, 0.000340291999999999, 0.0003402779999999994, 0.0003402779999999994, 0.0003403049999999991, 0.0003402360000000007, 0.0003402779999999994, 0.0003403049999999991, 0.0003402909999999995, 0.0003402779999999994, 0.00034026300000000037, 0.0003402360000000007, 0.00034026399999999984, 0.00034026399999999984, 0.000340291999999999, 0.0003402360000000007, 0.00034030599999999855, 0.000340291999999999, 0.000340291999999999, 0.0003402779999999994, 0.000340291999999999]</msg>
<status status="PASS" starttime="20201029 12:46:01.048" endtime="20201029 12:46:01.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.038" endtime="20201029 12:46:01.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.656" endtime="20201029 12:46:01.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.633" endtime="20201029 12:46:01.055"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.060" endtime="20201029 12:46:01.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.056" endtime="20201029 12:46:01.083"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.099" endtime="20201029 12:46:01.151"></status>
</kw>
<msg timestamp="20201029 12:46:01.151" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.096" endtime="20201029 12:46:01.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.154" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.153" endtime="20201029 12:46:01.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.155" endtime="20201029 12:46:01.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.091" endtime="20201029 12:46:01.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.087" endtime="20201029 12:46:01.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.164" endtime="20201029 12:46:01.451"></status>
</kw>
<msg timestamp="20201029 12:46:01.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030247944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03061725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:01.162" endtime="20201029 12:46:01.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030247944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03061725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:01.455" endtime="20201029 12:46:01.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.462" endtime="20201029 12:46:01.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.160" endtime="20201029 12:46:01.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.158" endtime="20201029 12:46:01.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:01.469" level="INFO">${PHILIP_RES} = [{'diff': 0.0003693059999999998}, {'diff': 0.0003677219999999974}, {'diff': 0.00036770899999999385}, {'diff': 0.0003676949999999943}, {'diff': 0.0003676950000000012}, {'diff': 0.0003677080000000013}, ...</msg>
<status status="PASS" starttime="20201029 12:46:01.466" endtime="20201029 12:46:01.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.473" level="INFO">${RESULT} = {'diff': [0.0003693059999999998, 0.0003677219999999974, 0.00036770899999999385, 0.0003676949999999943, 0.0003676950000000012, 0.0003677080000000013, 0.0003677080000000013, 0.00036768000000000217, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:01.470" endtime="20201029 12:46:01.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.477" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:01.476" endtime="20201029 12:46:01.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.480" level="INFO">VALUE: [0.0003693059999999998, 0.0003677219999999974, 0.00036770899999999385, 0.0003676949999999943, 0.0003676950000000012, 0.0003677080000000013, 0.0003677080000000013, 0.00036768000000000217, 0.00036775, 0.0003677369999999999, 0.0003677080000000013, 0.0003677220000000009, 0.0003677080000000013, 0.0003678330000000049, 0.0003676939999999948, 0.00036773600000000045, 0.00036768000000000217, 0.0003677220000000009, 0.0003677080000000013, 0.00036769400000000174, 0.00036767999999999523, 0.0003677220000000009, 0.0003677090000000008, 0.00036775, 0.00036770799999999437, 0.00036775, 0.0003677229999999934, 0.00036768000000000217, 0.0003677080000000013, 0.00036773600000000045, 0.00036772300000000036, 0.00036769400000000174, 0.00036773600000000045, 0.00036775, 0.00036777799999999916, 0.0003677220000000009, 0.0003677080000000013, 0.0003676950000000012, 0.0003677360000000074, 0.0003676659999999887, 0.00036769400000000174, 0.0003677359999999935, 0.0003676670000000021, 0.00036772300000000036, 0.0003676810000000086, 0.0003676660000000026, 0.0003676950000000012, 0.00036767999999999523, 0.00036767999999999523, 0.00036770899999999385]</msg>
<status status="PASS" starttime="20201029 12:46:01.478" endtime="20201029 12:46:01.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.474" endtime="20201029 12:46:01.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.084" endtime="20201029 12:46:01.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.055" endtime="20201029 12:46:01.481"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.484" endtime="20201029 12:46:01.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.482" endtime="20201029 12:46:01.504"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.512" endtime="20201029 12:46:01.564"></status>
</kw>
<msg timestamp="20201029 12:46:01.565" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.510" endtime="20201029 12:46:01.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.567" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.566" endtime="20201029 12:46:01.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.568" endtime="20201029 12:46:01.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.508" endtime="20201029 12:46:01.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.506" endtime="20201029 12:46:01.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.580" endtime="20201029 12:46:01.871"></status>
</kw>
<msg timestamp="20201029 12:46:01.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017613125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018010542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.579" endtime="20201029 12:46:01.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017613125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018010542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.880" endtime="20201029 12:46:01.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.897" endtime="20201029 12:46:01.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.576" endtime="20201029 12:46:01.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.574" endtime="20201029 12:46:01.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:01.911" level="INFO">${PHILIP_RES} = [{'diff': 0.0003974170000000006}, {'diff': 0.0003958610000000008}, {'diff': 0.0003958330000000017}, {'diff': 0.00039588899999999996}, {'diff': 0.0003958750000000004}, {'diff': 0.0003958610000000008}, ...</msg>
<status status="PASS" starttime="20201029 12:46:01.904" endtime="20201029 12:46:01.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.920" level="INFO">${RESULT} = {'diff': [0.0003974170000000006, 0.0003958610000000008, 0.0003958330000000017, 0.00039588899999999996, 0.0003958750000000004, 0.0003958610000000008, 0.0003958610000000008, 0.00039590299999999953, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:01.913" endtime="20201029 12:46:01.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.928" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:01.926" endtime="20201029 12:46:01.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.933" level="INFO">VALUE: [0.0003974170000000006, 0.0003958610000000008, 0.0003958330000000017, 0.00039588899999999996, 0.0003958750000000004, 0.0003958610000000008, 0.0003958610000000008, 0.00039590299999999953, 0.00039586099999999735, 0.0003958610000000008, 0.00039591700000000257, 0.00039584700000000125, 0.0003959720000000014, 0.00039591700000000257, 0.00039594499999999824, 0.0003958749999999969, 0.00039591700000000257, 0.0003958749999999969, 0.00039590200000000353, 0.0003958889999999965, 0.0003958470000000047, 0.0003958889999999965, 0.0003958610000000043, 0.00039586099999999735, 0.0003958749999999969, 0.0003958049999999991, 0.00039588900000000343, 0.0003958339999999977, 0.0003958889999999965, 0.000395805000000006, 0.0003958329999999982, 0.00039581899999999864, 0.0003958749999999969, 0.0003958470000000047, 0.00039586099999999735, 0.0003958469999999978, 0.00039586099999999735, 0.00039582000000000506, 0.0003958470000000047, 0.0003958889999999965, 0.00039586099999999735, 0.00039591700000000257, 0.00039584799999999726, 0.0003958329999999982, 0.0003958469999999978, 0.0003958340000000046, 0.0003958610000000043, 0.00039584799999999726, 0.00039581899999999864, 0.00039582000000000506]</msg>
<status status="PASS" starttime="20201029 12:46:01.931" endtime="20201029 12:46:01.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.921" endtime="20201029 12:46:01.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.504" endtime="20201029 12:46:01.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.482" endtime="20201029 12:46:01.939"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.944" endtime="20201029 12:46:01.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.941" endtime="20201029 12:46:01.964"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.972" endtime="20201029 12:46:02.028"></status>
</kw>
<msg timestamp="20201029 12:46:02.029" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.971" endtime="20201029 12:46:02.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.031" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.030" endtime="20201029 12:46:02.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.032" endtime="20201029 12:46:02.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.968" endtime="20201029 12:46:02.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.966" endtime="20201029 12:46:02.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.041" endtime="20201029 12:46:02.327"></status>
</kw>
<msg timestamp="20201029 12:46:02.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017668792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018095236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.039" endtime="20201029 12:46:02.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017668792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018095236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.331" endtime="20201029 12:46:02.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.338" endtime="20201029 12:46:02.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.037" endtime="20201029 12:46:02.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.035" endtime="20201029 12:46:02.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:02.351" level="INFO">${PHILIP_RES} = [{'diff': 0.0004264440000000015}, {'diff': 0.00042483300000000293}, {'diff': 0.0004248890000000012}, {'diff': 0.00042487499999999817}, {'diff': 0.0004249030000000008}, {'diff': 0.0004248890000000012},...</msg>
<status status="PASS" starttime="20201029 12:46:02.346" endtime="20201029 12:46:02.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.359" level="INFO">${RESULT} = {'diff': [0.0004264440000000015, 0.00042483300000000293, 0.0004248890000000012, 0.00042487499999999817, 0.0004249030000000008, 0.0004248890000000012, 0.00042484699999999903, 0.00042488899999999774, 0....</msg>
<status status="PASS" starttime="20201029 12:46:02.352" endtime="20201029 12:46:02.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.366" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:02.365" endtime="20201029 12:46:02.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.369" level="INFO">VALUE: [0.0004264440000000015, 0.00042483300000000293, 0.0004248890000000012, 0.00042487499999999817, 0.0004249030000000008, 0.0004248890000000012, 0.00042484699999999903, 0.00042488899999999774, 0.0004248609999999986, 0.00042493000000000045, 0.00042487499999999817, 0.00042487499999999817, 0.00042487500000000164, 0.00042483299999999946, 0.00042490300000000425, 0.00042483299999999946, 0.0004248189999999999, 0.0004248479999999985, 0.00042483299999999946, 0.0004248890000000047, 0.0004248479999999985, 0.0004248609999999986, 0.00042486100000000554, 0.00042483399999999893, 0.0004248609999999986, 0.00042483299999999946, 0.0004248059999999998, 0.00042488899999999774, 0.0004248059999999998, 0.00042487499999999817, 0.0004248189999999999, 0.00042483299999999946, 0.0004248059999999998, 0.00042477800000000066, 0.00042484699999999903, 0.0004248750000000051, 0.00042481999999999936, 0.00042484699999999903, 0.00042483299999999946, 0.0004248189999999999, 0.00042487499999999817, 0.0004248050000000003, 0.00042483299999999946, 0.00042483299999999946, 0.0004248050000000003, 0.0004248050000000003, 0.00042477800000000066, 0.00042480499999998644, 0.00042484700000000597, 0.0004248059999999998]</msg>
<status status="PASS" starttime="20201029 12:46:02.367" endtime="20201029 12:46:02.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.360" endtime="20201029 12:46:02.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.965" endtime="20201029 12:46:02.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.940" endtime="20201029 12:46:02.371"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.373" endtime="20201029 12:46:02.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.372" endtime="20201029 12:46:02.393"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.401" endtime="20201029 12:46:02.460"></status>
</kw>
<msg timestamp="20201029 12:46:02.460" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.399" endtime="20201029 12:46:02.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.462" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.461" endtime="20201029 12:46:02.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.463" endtime="20201029 12:46:02.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.397" endtime="20201029 12:46:02.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.395" endtime="20201029 12:46:02.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.472" endtime="20201029 12:46:02.774"></status>
</kw>
<msg timestamp="20201029 12:46:02.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.471" endtime="20201029 12:46:02.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.778" endtime="20201029 12:46:02.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.785" endtime="20201029 12:46:02.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.468" endtime="20201029 12:46:02.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.467" endtime="20201029 12:46:02.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:02.791" level="INFO">${PHILIP_RES} = [{'diff': 0.00045616599999999743}, {'diff': 0.0004545690000000019}, {'diff': 0.00045454199999999875}, {'diff': 0.0004545409999999993}, {'diff': 0.00045461099999999713}, {'diff': 0.00045458399999999746...</msg>
<status status="PASS" starttime="20201029 12:46:02.788" endtime="20201029 12:46:02.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.795" level="INFO">${RESULT} = {'diff': [0.00045616599999999743, 0.0004545690000000019, 0.00045454199999999875, 0.0004545409999999993, 0.00045461099999999713, 0.00045458399999999746, 0.00045459699999999756, 0.0004545550000000023, 0...</msg>
<status status="PASS" starttime="20201029 12:46:02.792" endtime="20201029 12:46:02.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.800" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:02.799" endtime="20201029 12:46:02.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.802" level="INFO">VALUE: [0.00045616599999999743, 0.0004545690000000019, 0.00045454199999999875, 0.0004545409999999993, 0.00045461099999999713, 0.00045458399999999746, 0.00045459699999999756, 0.0004545550000000023, 0.00045463899999999974, 0.0004546110000000006, 0.00045459700000000103, 0.0004546110000000006, 0.00045462500000000017, 0.00045461099999999713, 0.00045459700000000103, 0.00045458400000000093, 0.0004545690000000019, 0.0004545000000000035, 0.0004546110000000006, 0.0004545699999999944, 0.0004545560000000018, 0.0004545560000000018, 0.0004545560000000018, 0.0004545690000000019, 0.00045455599999999485, 0.00045458300000000146, 0.00045463899999999974, 0.00045458400000000093, 0.00045458400000000093, 0.00045457000000000136, 0.00045455599999999485, 0.00045451399999999614, 0.00045457000000000136, 0.0004545550000000023, 0.00045457000000000136, 0.00045458300000000146, 0.0004545690000000019, 0.00045457000000000136, 0.0004545690000000019, 0.0004545550000000023, 0.0004545829999999945, 0.00045452800000000265, 0.00045463899999999974, 0.00045457000000000136, 0.00045457000000000136, 0.00045454099999998887, 0.0004546389999999928, 0.0004545140000000031, 0.00045455599999999485, 0.000454583999999994]</msg>
<status status="PASS" starttime="20201029 12:46:02.801" endtime="20201029 12:46:02.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.796" endtime="20201029 12:46:02.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.394" endtime="20201029 12:46:02.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.371" endtime="20201029 12:46:02.804"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.806" endtime="20201029 12:46:02.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.805" endtime="20201029 12:46:02.826"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.834" endtime="20201029 12:46:02.896"></status>
</kw>
<msg timestamp="20201029 12:46:02.896" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.833" endtime="20201029 12:46:02.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.899" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.898" endtime="20201029 12:46:02.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.900" endtime="20201029 12:46:02.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.830" endtime="20201029 12:46:02.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.828" endtime="20201029 12:46:02.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.910" endtime="20201029 12:46:03.196"></status>
</kw>
<msg timestamp="20201029 12:46:03.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017483333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017969944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.908" endtime="20201029 12:46:03.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017483333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017969944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.200" endtime="20201029 12:46:03.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.208" endtime="20201029 12:46:03.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.906" endtime="20201029 12:46:03.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.904" endtime="20201029 12:46:03.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:03.214" level="INFO">${PHILIP_RES} = [{'diff': 0.0004866110000000014}, {'diff': 0.00048504099999999856}, {'diff': 0.00048505600000000107}, {'diff': 0.0004850139999999989}, {'diff': 0.00048502700000000246}, {'diff': 0.0004850559999999976}...</msg>
<status status="PASS" starttime="20201029 12:46:03.211" endtime="20201029 12:46:03.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.218" level="INFO">${RESULT} = {'diff': [0.0004866110000000014, 0.00048504099999999856, 0.00048505600000000107, 0.0004850139999999989, 0.00048502700000000246, 0.0004850559999999976, 0.00048508300000000074, 0.000485026999999999, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:03.215" endtime="20201029 12:46:03.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.223" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:03.222" endtime="20201029 12:46:03.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.225" level="INFO">VALUE: [0.0004866110000000014, 0.00048504099999999856, 0.00048505600000000107, 0.0004850139999999989, 0.00048502700000000246, 0.0004850559999999976, 0.00048508300000000074, 0.000485026999999999, 0.0004850420000000015, 0.0004849720000000002, 0.0004850549999999981, 0.000485026999999999, 0.00048499999999999585, 0.0004849999999999993, 0.0004850139999999989, 0.00048502799999999846, 0.0004849999999999993, 0.00048493100000000094, 0.0004849720000000002, 0.00048490299999999487, 0.00048494400000000104, 0.0004850129999999994, 0.00048504199999999803, 0.0004849720000000002, 0.00048498599999999975, 0.0004849580000000006, 0.0004849869999999992, 0.0004849450000000005, 0.0004849590000000001, 0.0004849720000000002, 0.000485026999999999, 0.0004850549999999981, 0.00048504199999999803, 0.000485026999999999, 0.000485026999999999, 0.0004850840000000037, 0.0004850559999999976, 0.0004849999999999993, 0.00048502799999999846, 0.00048504099999999856, 0.00048501400000000583, 0.0004849860000000067, 0.0004849999999999993, 0.00048497299999999965, 0.00048502799999999846, 0.0004849999999999993, 0.00048502799999999846, 0.00048501400000000583, 0.00048501399999999195, 0.00048501400000000583]</msg>
<status status="PASS" starttime="20201029 12:46:03.224" endtime="20201029 12:46:03.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.219" endtime="20201029 12:46:03.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.827" endtime="20201029 12:46:03.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.804" endtime="20201029 12:46:03.228"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.230" endtime="20201029 12:46:03.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.229" endtime="20201029 12:46:03.250"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.258" endtime="20201029 12:46:03.323"></status>
</kw>
<msg timestamp="20201029 12:46:03.324" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.257" endtime="20201029 12:46:03.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.326" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.325" endtime="20201029 12:46:03.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.327" endtime="20201029 12:46:03.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.254" endtime="20201029 12:46:03.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.252" endtime="20201029 12:46:03.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.336" endtime="20201029 12:46:03.643"></status>
</kw>
<msg timestamp="20201029 12:46:03.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017812056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.335" endtime="20201029 12:46:03.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017812056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.647" endtime="20201029 12:46:03.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.655" endtime="20201029 12:46:03.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.332" endtime="20201029 12:46:03.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.331" endtime="20201029 12:46:03.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:03.662" level="INFO">${PHILIP_RES} = [{'diff': 0.0005178610000000014}, {'diff': 0.0005161659999999985}, {'diff': 0.000516291000000002}, {'diff': 0.0005163050000000016}, {'diff': 0.0005163340000000002}, {'diff': 0.0005162639999999989}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:03.658" endtime="20201029 12:46:03.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.666" level="INFO">${RESULT} = {'diff': [0.0005178610000000014, 0.0005161659999999985, 0.000516291000000002, 0.0005163050000000016, 0.0005163340000000002, 0.0005162639999999989, 0.0005163050000000016, 0.0005162499999999993, 0.00051...</msg>
<status status="PASS" starttime="20201029 12:46:03.663" endtime="20201029 12:46:03.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.680" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:03.679" endtime="20201029 12:46:03.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.683" level="INFO">VALUE: [0.0005178610000000014, 0.0005161659999999985, 0.000516291000000002, 0.0005163050000000016, 0.0005163340000000002, 0.0005162639999999989, 0.0005163050000000016, 0.0005162499999999993, 0.0005162779999999985, 0.0005162779999999985, 0.0005162779999999985, 0.0005163049999999982, 0.000516291000000002, 0.0005163050000000016, 0.0005163190000000012, 0.0005163470000000003, 0.0005163190000000012, 0.0005162640000000024, 0.000516278000000002, 0.0005162640000000024, 0.0005163190000000012, 0.0005163060000000011, 0.0005162920000000015, 0.0005163200000000007, 0.0005163050000000016, 0.0005162499999999959, 0.0005163049999999947, 0.0005163470000000003, 0.0005163190000000012, 0.0005163190000000012, 0.000516388999999999, 0.0005162920000000015, 0.0005162370000000027, 0.0005163190000000012, 0.0005162920000000015, 0.0005162220000000037, 0.000516278000000002, 0.000516278000000002, 0.0005162499999999959, 0.0005161810000000044, 0.0005163330000000077, 0.0005162919999999876, 0.000516291000000002, 0.0005163049999999947, 0.0005163200000000007, 0.0005163049999999947, 0.0005162499999999959, 0.0005162499999999959, 0.0005162780000000089, 0.0005162920000000015]</msg>
<status status="PASS" starttime="20201029 12:46:03.681" endtime="20201029 12:46:03.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.667" endtime="20201029 12:46:03.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.251" endtime="20201029 12:46:03.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.228" endtime="20201029 12:46:03.693"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.696" endtime="20201029 12:46:03.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.694" endtime="20201029 12:46:03.716"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.724" endtime="20201029 12:46:03.792"></status>
</kw>
<msg timestamp="20201029 12:46:03.792" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.722" endtime="20201029 12:46:03.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.795" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.793" endtime="20201029 12:46:03.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.796" endtime="20201029 12:46:03.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.720" endtime="20201029 12:46:03.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.718" endtime="20201029 12:46:03.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.805" endtime="20201029 12:46:04.091"></status>
</kw>
<msg timestamp="20201029 12:46:04.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018057681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.803" endtime="20201029 12:46:04.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018057681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.095" endtime="20201029 12:46:04.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.103" endtime="20201029 12:46:04.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.801" endtime="20201029 12:46:04.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.799" endtime="20201029 12:46:04.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:04.109" level="INFO">${PHILIP_RES} = [{'diff': 0.0005497499999999982}, {'diff': 0.0005481670000000022}, {'diff': 0.0005481799999999988}, {'diff': 0.0005482500000000001}, {'diff': 0.0005482360000000006}, {'diff': 0.000548222000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:04.106" endtime="20201029 12:46:04.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.113" level="INFO">${RESULT} = {'diff': [0.0005497499999999982, 0.0005481670000000022, 0.0005481799999999988, 0.0005482500000000001, 0.0005482360000000006, 0.000548222000000001, 0.0005481809999999983, 0.0005482360000000006, 0.00054...</msg>
<status status="PASS" starttime="20201029 12:46:04.110" endtime="20201029 12:46:04.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.118" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:04.117" endtime="20201029 12:46:04.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.120" level="INFO">VALUE: [0.0005497499999999982, 0.0005481670000000022, 0.0005481799999999988, 0.0005482500000000001, 0.0005482360000000006, 0.000548222000000001, 0.0005481809999999983, 0.0005482360000000006, 0.0005481110000000004, 0.0005482360000000006, 0.000548125, 0.0005481809999999983, 0.0005481940000000018, 0.000548110999999997, 0.0005480829999999978, 0.0005481669999999952, 0.0005481670000000022, 0.0005481800000000023, 0.0005482080000000014, 0.0005481530000000026, 0.0005481949999999944, 0.0005481250000000035, 0.0005481670000000022, 0.0005481809999999948, 0.0005481379999999966, 0.0005480829999999978, 0.0005481249999999965, 0.0005480840000000042, 0.0005481530000000026, 0.0005481249999999965, 0.0005481809999999948, 0.0005481670000000022, 0.0005481249999999965, 0.0005481670000000022, 0.0005481810000000018, 0.0005481799999999953, 0.0005482090000000078, 0.0005482360000000075, 0.0005482639999999928, 0.0005481940000000018, 0.0005482639999999928, 0.0005482080000000084, 0.0005482079999999945, 0.000548222000000001, 0.0005481809999999948, 0.0005482080000000084, 0.0005482360000000075, 0.0005481950000000013, 0.0005481950000000013, 0.0005481800000000092]</msg>
<status status="PASS" starttime="20201029 12:46:04.119" endtime="20201029 12:46:04.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.114" endtime="20201029 12:46:04.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.716" endtime="20201029 12:46:04.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.694" endtime="20201029 12:46:04.122"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.124" endtime="20201029 12:46:04.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.123" endtime="20201029 12:46:04.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.152" endtime="20201029 12:46:04.225"></status>
</kw>
<msg timestamp="20201029 12:46:04.226" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.151" endtime="20201029 12:46:04.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.229" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.227" endtime="20201029 12:46:04.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.230" endtime="20201029 12:46:04.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.148" endtime="20201029 12:46:04.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.146" endtime="20201029 12:46:04.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.246" endtime="20201029 12:46:04.547"></status>
</kw>
<msg timestamp="20201029 12:46:04.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017656944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018239361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.244" endtime="20201029 12:46:04.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017656944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018239361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.551" endtime="20201029 12:46:04.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.559" endtime="20201029 12:46:04.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.239" endtime="20201029 12:46:04.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.236" endtime="20201029 12:46:04.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:04.566" level="INFO">${PHILIP_RES} = [{'diff': 0.0005824169999999983}, {'diff': 0.0005808199999999993}, {'diff': 0.0005808050000000002}, {'diff': 0.0005808329999999993}, {'diff': 0.0005808329999999993}, {'diff': 0.0005808750000000015}, {...</msg>
<status status="PASS" starttime="20201029 12:46:04.563" endtime="20201029 12:46:04.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.570" level="INFO">${RESULT} = {'diff': [0.0005824169999999983, 0.0005808199999999993, 0.0005808050000000002, 0.0005808329999999993, 0.0005808329999999993, 0.0005808750000000015, 0.0005807920000000001, 0.0005807920000000001, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:46:04.567" endtime="20201029 12:46:04.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.574" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:04.573" endtime="20201029 12:46:04.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.576" level="INFO">VALUE: [0.0005824169999999983, 0.0005808199999999993, 0.0005808050000000002, 0.0005808329999999993, 0.0005808329999999993, 0.0005808750000000015, 0.0005807920000000001, 0.0005807920000000001, 0.0005808480000000019, 0.0005808329999999993, 0.0005807639999999975, 0.0005808749999999946, 0.0005808329999999959, 0.0005808189999999963, 0.0005807779999999971, 0.0005808049999999967, 0.0005807909999999972, 0.000580778000000004, 0.0005808330000000028, 0.0005808189999999963, 0.0005807909999999972, 0.0005808469999999955, 0.0005808329999999959, 0.0005808049999999967, 0.0005807920000000036, 0.0005807920000000036, 0.0005808059999999962, 0.0005807919999999966, 0.0005807920000000036, 0.000580778000000004, 0.0005807919999999966, 0.0005807909999999972, 0.0005808189999999963, 0.0005808329999999959, 0.0005808200000000027, 0.0005808330000000028, 0.0005808050000000037, 0.0005807919999999966, 0.0005808199999999958, 0.0005808049999999898, 0.000580778000000004, 0.000580778000000004, 0.0005808890000000011, 0.0005808050000000037, 0.0005808750000000085, 0.0005808750000000085, 0.0005808190000000102, 0.0005808340000000023, 0.0005808609999999881, 0.0005808059999999893]</msg>
<status status="PASS" starttime="20201029 12:46:04.575" endtime="20201029 12:46:04.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.571" endtime="20201029 12:46:04.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.145" endtime="20201029 12:46:04.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.122" endtime="20201029 12:46:04.579"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.581" endtime="20201029 12:46:04.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.580" endtime="20201029 12:46:04.601"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.609" endtime="20201029 12:46:04.684"></status>
</kw>
<msg timestamp="20201029 12:46:04.685" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.608" endtime="20201029 12:46:04.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.688" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.686" endtime="20201029 12:46:04.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.689" endtime="20201029 12:46:04.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.605" endtime="20201029 12:46:04.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.603" endtime="20201029 12:46:04.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.699" endtime="20201029 12:46:04.984"></status>
</kw>
<msg timestamp="20201029 12:46:04.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.697" endtime="20201029 12:46:04.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018209208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.988" endtime="20201029 12:46:04.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.995" endtime="20201029 12:46:04.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.694" endtime="20201029 12:46:04.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.692" endtime="20201029 12:46:04.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:05.002" level="INFO">${PHILIP_RES} = [{'diff': 0.0006158470000000027}, {'diff': 0.0006142909999999994}, {'diff': 0.0006143199999999981}, {'diff': 0.0006142500000000002}, {'diff': 0.0006143189999999986}, {'diff': 0.0006142920000000024}, {...</msg>
<status status="PASS" starttime="20201029 12:46:04.998" endtime="20201029 12:46:05.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.006" level="INFO">${RESULT} = {'diff': [0.0006158470000000027, 0.0006142909999999994, 0.0006143199999999981, 0.0006142500000000002, 0.0006143189999999986, 0.0006142920000000024, 0.0006143190000000021, 0.000614304999999999, 0.00061...</msg>
<status status="PASS" starttime="20201029 12:46:05.003" endtime="20201029 12:46:05.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.011" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:05.010" endtime="20201029 12:46:05.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.013" level="INFO">VALUE: [0.0006158470000000027, 0.0006142909999999994, 0.0006143199999999981, 0.0006142500000000002, 0.0006143189999999986, 0.0006142920000000024, 0.0006143190000000021, 0.000614304999999999, 0.0006142630000000003, 0.0006143480000000007, 0.0006143190000000021, 0.0006142920000000024, 0.0006143190000000021, 0.0006142499999999967, 0.0006142499999999967, 0.0006142769999999964, 0.0006142769999999964, 0.0006143050000000025, 0.0006142779999999959, 0.0006142780000000028, 0.0006142920000000024, 0.000614305999999995, 0.0006142640000000033, 0.0006142780000000028, 0.0006143470000000012, 0.0006143200000000015, 0.0006142920000000024, 0.0006142780000000028, 0.0006142499999999967, 0.0006142769999999964, 0.0006142919999999955, 0.0006143469999999943, 0.0006142639999999963, 0.0006142500000000106, 0.0006142500000000106, 0.0006142779999999959, 0.000614305999999995, 0.000614290999999989, 0.0006141939999999985, 0.0006142360000000041, 0.0006142079999999911, 0.0006142779999999959, 0.0006142499999999967, 0.000614334000000008, 0.0006142500000000106, 0.0006142079999999911, 0.0006142499999999967, 0.0006142359999999902, 0.0006142920000000024, 0.0006142780000000098]</msg>
<status status="PASS" starttime="20201029 12:46:05.012" endtime="20201029 12:46:05.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.007" endtime="20201029 12:46:05.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.602" endtime="20201029 12:46:05.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.579" endtime="20201029 12:46:05.015"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.017" endtime="20201029 12:46:05.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.016" endtime="20201029 12:46:05.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.045" endtime="20201029 12:46:05.124"></status>
</kw>
<msg timestamp="20201029 12:46:05.125" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.044" endtime="20201029 12:46:05.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.130" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.127" endtime="20201029 12:46:05.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.132" endtime="20201029 12:46:05.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.041" endtime="20201029 12:46:05.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.039" endtime="20201029 12:46:05.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.150" endtime="20201029 12:46:05.443"></status>
</kw>
<msg timestamp="20201029 12:46:05.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017441319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018091361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.147" endtime="20201029 12:46:05.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017441319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018091361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.447" endtime="20201029 12:46:05.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.456" endtime="20201029 12:46:05.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.142" endtime="20201029 12:46:05.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.139" endtime="20201029 12:46:05.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:05.462" level="INFO">${PHILIP_RES} = [{'diff': 0.000650042}, {'diff': 0.0006484440000000015}, {'diff': 0.0006484310000000014}, {'diff': 0.0006484170000000018}, {'diff': 0.0006483749999999996}, {'diff': 0.0006484159999999989}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:46:05.459" endtime="20201029 12:46:05.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.466" level="INFO">${RESULT} = {'diff': [0.000650042, 0.0006484440000000015, 0.0006484310000000014, 0.0006484170000000018, 0.0006483749999999996, 0.0006484159999999989, 0.0006483749999999996, 0.0006484300000000019, 0.00064841699999...</msg>
<status status="PASS" starttime="20201029 12:46:05.463" endtime="20201029 12:46:05.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.470" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:05.469" endtime="20201029 12:46:05.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.473" level="INFO">VALUE: [0.000650042, 0.0006484440000000015, 0.0006484310000000014, 0.0006484170000000018, 0.0006483749999999996, 0.0006484159999999989, 0.0006483749999999996, 0.0006484300000000019, 0.0006484169999999984, 0.0006484590000000005, 0.0006484580000000045, 0.0006484169999999984, 0.0006484309999999979, 0.0006484029999999988, 0.0006484449999999975, 0.0006484450000000044, 0.0006484169999999984, 0.000648444000000005, 0.0006485000000000032, 0.0006484859999999967, 0.000648443999999998, 0.0006484579999999976, 0.0006483889999999992, 0.0006483749999999996, 0.0006484580000000045, 0.0006483889999999992, 0.0006483889999999992, 0.0006483749999999996, 0.0006484309999999979, 0.000648459000000004, 0.0006484159999999989, 0.0006484169999999984, 0.0006483889999999992, 0.0006483610000000001, 0.0006484170000000122, 0.0006484019999999924, 0.0006484310000000049, 0.0006483470000000074, 0.0006484310000000049, 0.0006484169999999984, 0.0006483469999999936, 0.0006485129999999895, 0.0006484159999999989, 0.0006484730000000105, 0.0006484580000000045, 0.0006484449999999975, 0.0006484449999999975, 0.0006484580000000045, 0.0006483610000000001, 0.000648443999999998]</msg>
<status status="PASS" starttime="20201029 12:46:05.471" endtime="20201029 12:46:05.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.467" endtime="20201029 12:46:05.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.038" endtime="20201029 12:46:05.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.015" endtime="20201029 12:46:05.475"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.477" endtime="20201029 12:46:05.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.476" endtime="20201029 12:46:05.497"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.505" endtime="20201029 12:46:05.586"></status>
</kw>
<msg timestamp="20201029 12:46:05.587" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.503" endtime="20201029 12:46:05.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.590" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.588" endtime="20201029 12:46:05.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.591" endtime="20201029 12:46:05.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.501" endtime="20201029 12:46:05.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.499" endtime="20201029 12:46:05.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.603" endtime="20201029 12:46:05.889"></status>
</kw>
<msg timestamp="20201029 12:46:05.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017391278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018076125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.602" endtime="20201029 12:46:05.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017391278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018076125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.893" endtime="20201029 12:46:05.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.905" endtime="20201029 12:46:05.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.599" endtime="20201029 12:46:05.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.598" endtime="20201029 12:46:05.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:05.919" level="INFO">${PHILIP_RES} = [{'diff': 0.0006848469999999988}, {'diff': 0.0006834720000000009}, {'diff': 0.0006834719999999975}, {'diff': 0.0006834169999999987}, {'diff': 0.0006833469999999973}, {'diff': 0.000683375}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:46:05.912" endtime="20201029 12:46:05.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.927" level="INFO">${RESULT} = {'diff': [0.0006848469999999988, 0.0006834720000000009, 0.0006834719999999975, 0.0006834169999999987, 0.0006833469999999973, 0.000683375, 0.000683375, 0.0006834019999999996, 0.0006833189999999982, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:05.921" endtime="20201029 12:46:05.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.936" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:05.934" endtime="20201029 12:46:05.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.941" level="INFO">VALUE: [0.0006848469999999988, 0.0006834720000000009, 0.0006834719999999975, 0.0006834169999999987, 0.0006833469999999973, 0.000683375, 0.000683375, 0.0006834019999999996, 0.0006833189999999982, 0.0006833059999999981, 0.0006833610000000004, 0.0006833050000000021, 0.0006833470000000008, 0.0006833340000000007, 0.000683276999999996, 0.0006833050000000021, 0.0006833190000000017, 0.0006834169999999987, 0.0006833610000000004, 0.0006833889999999995, 0.0006833060000000016, 0.0006833619999999999, 0.0006833060000000016, 0.0006833469999999939, 0.000683375, 0.0006834169999999987, 0.0006834029999999991, 0.0006833619999999999, 0.0006833610000000004, 0.0006833610000000004, 0.0006833890000000065, 0.0006833330000000082, 0.0006833470000000008, 0.0006833890000000065, 0.0006833330000000082, 0.000683375, 0.0006834170000000056, 0.0006834029999999991, 0.0006833890000000065, 0.0006834169999999917, 0.000683375, 0.0006834309999999982, 0.0006834440000000053, 0.0006834309999999982, 0.0006834440000000053, 0.000683292000000002, 0.000683375, 0.0006834309999999982, 0.0006834589999999974, 0.0006833890000000065]</msg>
<status status="PASS" starttime="20201029 12:46:05.938" endtime="20201029 12:46:05.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.929" endtime="20201029 12:46:05.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.498" endtime="20201029 12:46:05.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.475" endtime="20201029 12:46:05.946"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.951" endtime="20201029 12:46:05.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.948" endtime="20201029 12:46:05.974"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.991" endtime="20201029 12:46:06.077"></status>
</kw>
<msg timestamp="20201029 12:46:06.078" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.988" endtime="20201029 12:46:06.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.080" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.079" endtime="20201029 12:46:06.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.081" endtime="20201029 12:46:06.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.982" endtime="20201029 12:46:06.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.978" endtime="20201029 12:46:06.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.090" endtime="20201029 12:46:06.378"></status>
</kw>
<msg timestamp="20201029 12:46:06.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029980514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030700986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.089" endtime="20201029 12:46:06.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029980514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030700986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.381" endtime="20201029 12:46:06.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.389" endtime="20201029 12:46:06.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.086" endtime="20201029 12:46:06.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.084" endtime="20201029 12:46:06.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:06.395" level="INFO">${PHILIP_RES} = [{'diff': 0.0007204719999999998}, {'diff': 0.0007189029999999999}, {'diff': 0.0007189029999999999}, {'diff': 0.0007188610000000012}, {'diff': 0.000718804999999996}, {'diff': 0.0007188880000000009}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:06.392" endtime="20201029 12:46:06.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.400" level="INFO">${RESULT} = {'diff': [0.0007204719999999998, 0.0007189029999999999, 0.0007189029999999999, 0.0007188610000000012, 0.000718804999999996, 0.0007188880000000009, 0.0007189999999999974, 0.000718930999999999, 0.000718...</msg>
<status status="PASS" starttime="20201029 12:46:06.396" endtime="20201029 12:46:06.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.404" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:06.403" endtime="20201029 12:46:06.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.407" level="INFO">VALUE: [0.0007204719999999998, 0.0007189029999999999, 0.0007189029999999999, 0.0007188610000000012, 0.000718804999999996, 0.0007188880000000009, 0.0007189999999999974, 0.000718930999999999, 0.0007188750000000008, 0.0007189729999999978, 0.0007189439999999991, 0.0007189169999999995, 0.0007188750000000008, 0.0007189450000000056, 0.0007189579999999987, 0.0007189449999999986, 0.0007189579999999987, 0.0007189449999999986, 0.0007189300000000065, 0.0007189029999999999, 0.0007189019999999935, 0.0007189299999999926, 0.0007189580000000056, 0.0007189860000000048, 0.0007188890000000003, 0.0007189860000000048, 0.0007189449999999986, 0.000718916, 0.0007189730000000116, 0.0007189730000000116, 0.0007188890000000003, 0.0007190130000000045, 0.0007189579999999918, 0.0007189589999999912, 0.0007189439999999991, 0.0007189580000000056, 0.0007188890000000003, 0.0007189859999999909, 0.0007189579999999918, 0.0007189999999999974, 0.0007189860000000048, 0.0007190279999999966, 0.0007190140000000039, 0.0007189300000000065, 0.0007189309999999921, 0.0007189719999999983, 0.0007189439999999991, 0.0007189449999999986, 0.0007189870000000043, 0.0007189859999999909]</msg>
<status status="PASS" starttime="20201029 12:46:06.405" endtime="20201029 12:46:06.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.401" endtime="20201029 12:46:06.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.975" endtime="20201029 12:46:06.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.947" endtime="20201029 12:46:06.409"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.411" endtime="20201029 12:46:06.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.410" endtime="20201029 12:46:06.431"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.439" endtime="20201029 12:46:06.527"></status>
</kw>
<msg timestamp="20201029 12:46:06.528" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.438" endtime="20201029 12:46:06.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.530" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.529" endtime="20201029 12:46:06.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.531" endtime="20201029 12:46:06.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.435" endtime="20201029 12:46:06.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.433" endtime="20201029 12:46:06.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.540" endtime="20201029 12:46:06.841"></status>
</kw>
<msg timestamp="20201029 12:46:06.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01769325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018450194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:06.539" endtime="20201029 12:46:06.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01769325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018450194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:06.845" endtime="20201029 12:46:06.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.854" endtime="20201029 12:46:06.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.536" endtime="20201029 12:46:06.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.535" endtime="20201029 12:46:06.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:06.860" level="INFO">${PHILIP_RES} = [{'diff': 0.000756943999999999}, {'diff': 0.0007554030000000017}, {'diff': 0.0007553880000000027}, {'diff': 0.0007553609999999995}, {'diff': 0.000755347}, {'diff': 0.0007554309999999974}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:06.857" endtime="20201029 12:46:06.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.864" level="INFO">${RESULT} = {'diff': [0.000756943999999999, 0.0007554030000000017, 0.0007553880000000027, 0.0007553609999999995, 0.000755347, 0.0007554309999999974, 0.0007553750000000026, 0.0007553749999999991, 0.000755333000000...</msg>
<status status="PASS" starttime="20201029 12:46:06.861" endtime="20201029 12:46:06.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.868" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:06.867" endtime="20201029 12:46:06.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.871" level="INFO">VALUE: [0.000756943999999999, 0.0007554030000000017, 0.0007553880000000027, 0.0007553609999999995, 0.000755347, 0.0007554309999999974, 0.0007553750000000026, 0.0007553749999999991, 0.0007553330000000004, 0.0007554310000000009, 0.0007554030000000017, 0.0007553750000000026, 0.0007553619999999955, 0.0007554030000000017, 0.0007553480000000029, 0.0007554160000000018, 0.0007553189999999974, 0.0007554030000000017, 0.0007553329999999969, 0.0007553749999999956, 0.0007553189999999974, 0.0007554029999999948, 0.0007553890000000021, 0.0007554160000000018, 0.0007553890000000021, 0.0007553470000000034, 0.0007553750000000026, 0.000755361000000003, 0.0007553750000000026, 0.0007553889999999952, 0.0007553750000000026, 0.0007553889999999952, 0.000755347999999989, 0.0007553190000000043, 0.0007553480000000029, 0.0007552920000000046, 0.0007554170000000082, 0.0007553750000000026, 0.0007553190000000043, 0.0007553890000000091, 0.0007553470000000034, 0.0007553339999999964, 0.0007553470000000034, 0.0007554020000000022, 0.0007553890000000091, 0.0007554030000000017, 0.0007554030000000017, 0.0007553330000000108, 0.0007553749999999887, 0.0007553609999999961]</msg>
<status status="PASS" starttime="20201029 12:46:06.869" endtime="20201029 12:46:06.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.865" endtime="20201029 12:46:06.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.432" endtime="20201029 12:46:06.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.409" endtime="20201029 12:46:06.873"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.875" endtime="20201029 12:46:06.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.873" endtime="20201029 12:46:06.895"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.903" endtime="20201029 12:46:06.994"></status>
</kw>
<msg timestamp="20201029 12:46:06.995" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.901" endtime="20201029 12:46:06.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.997" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.996" endtime="20201029 12:46:06.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.998" endtime="20201029 12:46:07.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.899" endtime="20201029 12:46:07.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.897" endtime="20201029 12:46:07.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.008" endtime="20201029 12:46:07.295"></status>
</kw>
<msg timestamp="20201029 12:46:07.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017515722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.007" endtime="20201029 12:46:07.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017515722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.299" endtime="20201029 12:46:07.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.307" endtime="20201029 12:46:07.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.004" endtime="20201029 12:46:07.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.002" endtime="20201029 12:46:07.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.313" level="INFO">${PHILIP_RES} = [{'diff': 0.0007940699999999974}, {'diff': 0.0007925140000000011}, {'diff': 0.0007925550000000003}, {'diff': 0.0007925270000000012}, {'diff': 0.0007924300000000002}, {'diff': 0.0007924719999999989}, {...</msg>
<status status="PASS" starttime="20201029 12:46:07.310" endtime="20201029 12:46:07.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.317" level="INFO">${RESULT} = {'diff': [0.0007940699999999974, 0.0007925140000000011, 0.0007925550000000003, 0.0007925270000000012, 0.0007924300000000002, 0.0007924719999999989, 0.0007924300000000002, 0.000792486000000002, 0.00079...</msg>
<status status="PASS" starttime="20201029 12:46:07.314" endtime="20201029 12:46:07.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.321" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.320" endtime="20201029 12:46:07.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.323" level="INFO">VALUE: [0.0007940699999999974, 0.0007925140000000011, 0.0007925550000000003, 0.0007925270000000012, 0.0007924300000000002, 0.0007924719999999989, 0.0007924300000000002, 0.000792486000000002, 0.0007925140000000011, 0.0007925410000000008, 0.000792486000000002, 0.000792596999999999, 0.0007925829999999995, 0.0007925689999999999, 0.0007925550000000003, 0.0007925550000000003, 0.0007924719999999955, 0.0007924579999999959, 0.0007924720000000024, 0.0007925280000000007, 0.0007925420000000002, 0.0007925139999999942, 0.000792596999999999, 0.0007925140000000011, 0.0007925559999999998, 0.0007925280000000007, 0.0007925130000000016, 0.0007925690000000069, 0.0007925000000000015, 0.0007924309999999962, 0.0007924860000000089, 0.0007925699999999924, 0.0007924579999999959, 0.0007925690000000069, 0.0007925690000000069, 0.000792485999999995, 0.0007925000000000015, 0.0007925139999999942, 0.0007924860000000089, 0.0007925829999999995, 0.0007924309999999962, 0.0007925139999999942, 0.0007925280000000007, 0.0007925000000000015, 0.0007924860000000089, 0.0007925139999999942, 0.0007925280000000007, 0.000792568999999993, 0.0007926389999999978, 0.0007925280000000007]</msg>
<status status="PASS" starttime="20201029 12:46:07.322" endtime="20201029 12:46:07.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.318" endtime="20201029 12:46:07.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.895" endtime="20201029 12:46:07.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.873" endtime="20201029 12:46:07.326"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.328" endtime="20201029 12:46:07.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.327" endtime="20201029 12:46:07.348"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.356" endtime="20201029 12:46:07.451"></status>
</kw>
<msg timestamp="20201029 12:46:07.452" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.355" endtime="20201029 12:46:07.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.454" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.453" endtime="20201029 12:46:07.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.455" endtime="20201029 12:46:07.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.352" endtime="20201029 12:46:07.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.350" endtime="20201029 12:46:07.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.464" endtime="20201029 12:46:07.769"></status>
</kw>
<msg timestamp="20201029 12:46:07.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017516667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:07.463" endtime="20201029 12:46:07.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017516667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:07.773" endtime="20201029 12:46:07.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.781" endtime="20201029 12:46:07.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.460" endtime="20201029 12:46:07.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.459" endtime="20201029 12:46:07.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:07.787" level="INFO">${PHILIP_RES} = [{'diff': 0.0008318330000000006}, {'diff': 0.0008303049999999999}, {'diff': 0.0008302640000000007}, {'diff': 0.0008302230000000015}, {'diff': 0.0008301530000000001}, {'diff': 0.0008301939999999994}, {...</msg>
<status status="PASS" starttime="20201029 12:46:07.784" endtime="20201029 12:46:07.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.792" level="INFO">${RESULT} = {'diff': [0.0008318330000000006, 0.0008303049999999999, 0.0008302640000000007, 0.0008302230000000015, 0.0008301530000000001, 0.0008301939999999994, 0.000830207999999999, 0.0008301950000000023, 0.00083...</msg>
<status status="PASS" starttime="20201029 12:46:07.788" endtime="20201029 12:46:07.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.796" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:07.795" endtime="20201029 12:46:07.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.798" level="INFO">VALUE: [0.0008318330000000006, 0.0008303049999999999, 0.0008302640000000007, 0.0008302230000000015, 0.0008301530000000001, 0.0008301939999999994, 0.000830207999999999, 0.0008301950000000023, 0.000830125000000001, 0.0008301809999999993, 0.0008301669999999997, 0.0008301809999999993, 0.0008301809999999993, 0.0008301949999999989, 0.0008302499999999977, 0.0008302769999999973, 0.000830207999999999, 0.0008303470000000021, 0.0008302779999999968, 0.0008302359999999981, 0.0008302919999999964, 0.0008303329999999956, 0.0008302919999999964, 0.0008302779999999968, 0.0008302219999999985, 0.0008304160000000005, 0.0008302909999999969, 0.0008302230000000049, 0.0008302920000000102, 0.0008303060000000029, 0.0008302770000000043, 0.0008302500000000046, 0.0008302500000000046, 0.0008302499999999907, 0.0008302359999999981, 0.0008302910000000108, 0.0008302639999999972, 0.0008302780000000037, 0.0008302499999999907, 0.0008302779999999899, 0.0008301950000000058, 0.0008303469999999952, 0.0008302500000000046, 0.0008302909999999969, 0.0008302780000000037, 0.0008303190000000099, 0.0008302639999999972, 0.000830334000000002, 0.0008303469999999952, 0.0008302639999999972]</msg>
<status status="PASS" starttime="20201029 12:46:07.797" endtime="20201029 12:46:07.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.793" endtime="20201029 12:46:07.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.349" endtime="20201029 12:46:07.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.326" endtime="20201029 12:46:07.800"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.803" endtime="20201029 12:46:07.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.801" endtime="20201029 12:46:07.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.831" endtime="20201029 12:46:07.929"></status>
</kw>
<msg timestamp="20201029 12:46:07.930" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.829" endtime="20201029 12:46:07.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.932" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.931" endtime="20201029 12:46:07.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.933" endtime="20201029 12:46:07.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.826" endtime="20201029 12:46:07.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.825" endtime="20201029 12:46:07.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.942" endtime="20201029 12:46:08.230"></status>
</kw>
<msg timestamp="20201029 12:46:08.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017482972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018353458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.940" endtime="20201029 12:46:08.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017482972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018353458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.234" endtime="20201029 12:46:08.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.241" endtime="20201029 12:46:08.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.938" endtime="20201029 12:46:08.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.936" endtime="20201029 12:46:08.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:08.248" level="INFO">${PHILIP_RES} = [{'diff': 0.0008704860000000002}, {'diff': 0.0008688750000000016}, {'diff': 0.0008689449999999994}, {'diff': 0.000868861000000002}, {'diff': 0.0008688750000000016}, {'diff': 0.0008689300000000004}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:08.245" endtime="20201029 12:46:08.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.252" level="INFO">${RESULT} = {'diff': [0.0008704860000000002, 0.0008688750000000016, 0.0008689449999999994, 0.000868861000000002, 0.0008688750000000016, 0.0008689300000000004, 0.0008689579999999995, 0.0008689159999999974, 0.00086...</msg>
<status status="PASS" starttime="20201029 12:46:08.249" endtime="20201029 12:46:08.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.256" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:08.255" endtime="20201029 12:46:08.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.258" level="INFO">VALUE: [0.0008704860000000002, 0.0008688750000000016, 0.0008689449999999994, 0.000868861000000002, 0.0008688750000000016, 0.0008689300000000004, 0.0008689579999999995, 0.0008689159999999974, 0.0008689029999999973, 0.0008689029999999973, 0.0008689859999999952, 0.0008690139999999943, 0.000868861999999998, 0.0008689309999999964, 0.0008689030000000042, 0.000868846999999999, 0.0008688889999999977, 0.0008689299999999969, 0.0008688879999999982, 0.0008689309999999964, 0.0008689029999999973, 0.0008689030000000042, 0.0008689170000000038, 0.0008689170000000038, 0.0008690560000000069, 0.0008690000000000087, 0.0008689310000000033, 0.0008689030000000042, 0.000868958000000003, 0.0008690559999999931, 0.0008689860000000021, 0.0008690280000000078, 0.0008689860000000021, 0.0008690140000000013, 0.0008690140000000013, 0.000868958000000003, 0.0008689860000000021, 0.0008690279999999939, 0.0008689439999999965, 0.0008690840000000061, 0.0008690549999999936, 0.0008690140000000013, 0.0008689159999999974, 0.0008689439999999965, 0.0008690130000000018, 0.0008689859999999883, 0.0008689579999999891, 0.0008688889999999977, 0.0008689720000000095, 0.0008689870000000016]</msg>
<status status="PASS" starttime="20201029 12:46:08.257" endtime="20201029 12:46:08.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.253" endtime="20201029 12:46:08.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.823" endtime="20201029 12:46:08.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.801" endtime="20201029 12:46:08.260"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:08.263" endtime="20201029 12:46:08.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.261" endtime="20201029 12:46:08.283"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.290" endtime="20201029 12:46:08.394"></status>
</kw>
<msg timestamp="20201029 12:46:08.395" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.289" endtime="20201029 12:46:08.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.400" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.397" endtime="20201029 12:46:08.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.402" endtime="20201029 12:46:08.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.286" endtime="20201029 12:46:08.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.285" endtime="20201029 12:46:08.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.423" endtime="20201029 12:46:08.718"></status>
</kw>
<msg timestamp="20201029 12:46:08.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017539069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.420" endtime="20201029 12:46:08.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017539069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.722" endtime="20201029 12:46:08.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.730" endtime="20201029 12:46:08.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.414" endtime="20201029 12:46:08.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.411" endtime="20201029 12:46:08.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:08.736" level="INFO">${PHILIP_RES} = [{'diff': 0.000909972999999998}, {'diff': 0.0009084590000000003}, {'diff': 0.0009083609999999999}, {'diff': 0.0009084449999999973}, {'diff': 0.0009084590000000003}, {'diff': 0.0009084729999999999}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:08.733" endtime="20201029 12:46:08.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.740" level="INFO">${RESULT} = {'diff': [0.000909972999999998, 0.0009084590000000003, 0.0009083609999999999, 0.0009084449999999973, 0.0009084590000000003, 0.0009084729999999999, 0.0009084159999999987, 0.0009083750000000029, 0.00090...</msg>
<status status="PASS" starttime="20201029 12:46:08.737" endtime="20201029 12:46:08.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.744" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:08.743" endtime="20201029 12:46:08.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.746" level="INFO">VALUE: [0.000909972999999998, 0.0009084590000000003, 0.0009083609999999999, 0.0009084449999999973, 0.0009084590000000003, 0.0009084729999999999, 0.0009084159999999987, 0.0009083750000000029, 0.0009084580000000009, 0.0009084019999999957, 0.0009084030000000021, 0.0009084020000000026, 0.0009084159999999952, 0.0009084720000000004, 0.0009084720000000004, 0.0009084310000000012, 0.000908486, 0.0009084310000000012, 0.0009084020000000026, 0.0009084590000000003, 0.0009084170000000016, 0.000908374999999996, 0.0009085269999999993, 0.0009084450000000008, 0.0009084449999999938, 0.0009084590000000003, 0.0009084030000000021, 0.0009083889999999956, 0.0009083059999999976, 0.0009084440000000082, 0.0009083889999999956, 0.0009083890000000094, 0.0009084450000000077, 0.0009084020000000026, 0.0009084030000000021, 0.0009084720000000074, 0.0009083890000000094, 0.0009084440000000082, 0.0009084169999999947, 0.0009084439999999944, 0.0009083330000000112, 0.0009084580000000009, 0.0009084169999999947, 0.0009084580000000009, 0.0009085559999999909, 0.0009083470000000038, 0.0009084869999999995, 0.0009085139999999992, 0.000908472999999993, 0.000908457999999987]</msg>
<status status="PASS" starttime="20201029 12:46:08.745" endtime="20201029 12:46:08.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.741" endtime="20201029 12:46:08.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.283" endtime="20201029 12:46:08.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.261" endtime="20201029 12:46:08.755"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:08.758" endtime="20201029 12:46:08.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.756" endtime="20201029 12:46:08.778"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.786" endtime="20201029 12:46:08.892"></status>
</kw>
<msg timestamp="20201029 12:46:08.892" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.784" endtime="20201029 12:46:08.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.895" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.893" endtime="20201029 12:46:08.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.896" endtime="20201029 12:46:08.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.782" endtime="20201029 12:46:08.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.780" endtime="20201029 12:46:08.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.905" endtime="20201029 12:46:09.198"></status>
</kw>
<msg timestamp="20201029 12:46:09.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017563833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018514042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.903" endtime="20201029 12:46:09.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017563833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018514042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.207" endtime="20201029 12:46:09.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.224" endtime="20201029 12:46:09.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.901" endtime="20201029 12:46:09.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.899" endtime="20201029 12:46:09.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:09.237" level="INFO">${PHILIP_RES} = [{'diff': 0.0009502090000000005}, {'diff': 0.0009486250000000016}, {'diff': 0.0009485969999999989}, {'diff': 0.0009485980000000019}, {'diff': 0.0009485410000000007}, {'diff': 0.0009486249999999981}, {...</msg>
<status status="PASS" starttime="20201029 12:46:09.231" endtime="20201029 12:46:09.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.248" level="INFO">${RESULT} = {'diff': [0.0009502090000000005, 0.0009486250000000016, 0.0009485969999999989, 0.0009485980000000019, 0.0009485410000000007, 0.0009486249999999981, 0.0009485699999999993, 0.0009485559999999962, 0.0009...</msg>
<status status="PASS" starttime="20201029 12:46:09.239" endtime="20201029 12:46:09.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.256" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:09.254" endtime="20201029 12:46:09.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.261" level="INFO">VALUE: [0.0009502090000000005, 0.0009486250000000016, 0.0009485969999999989, 0.0009485980000000019, 0.0009485410000000007, 0.0009486249999999981, 0.0009485699999999993, 0.0009485559999999962, 0.0009485689999999963, 0.0009485550000000037, 0.000948512999999998, 0.0009485279999999971, 0.0009484729999999983, 0.000948417, 0.0009484449999999991, 0.0009484579999999992, 0.0009484449999999991, 0.0009484859999999984, 0.0009483620000000012, 0.0009484860000000053, 0.0009484309999999996, 0.0009484859999999984, 0.0009484449999999991, 0.0009485139999999975, 0.0009484859999999984, 0.0009484159999999936, 0.0009485690000000102, 0.0009484439999999927, 0.0009484859999999984, 0.0009484300000000001, 0.0009485000000000049, 0.0009484719999999919, 0.0009485699999999958, 0.0009484579999999992, 0.000948512999999998, 0.0009484309999999996, 0.000948499999999991, 0.0009485419999999967, 0.0009485000000000049, 0.000948417000000007, 0.0009484720000000058, 0.0009484030000000004, 0.000948499999999991, 0.0009485139999999975, 0.0009484719999999919, 0.000948499999999991, 0.0009484859999999984, 0.0009484859999999984, 0.0009484589999999987, 0.0009485419999999967]</msg>
<status status="PASS" starttime="20201029 12:46:09.259" endtime="20201029 12:46:09.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.250" endtime="20201029 12:46:09.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.779" endtime="20201029 12:46:09.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.756" endtime="20201029 12:46:09.265"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.270" endtime="20201029 12:46:09.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.267" endtime="20201029 12:46:09.291"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.299" endtime="20201029 12:46:09.408"></status>
</kw>
<msg timestamp="20201029 12:46:09.409" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.297" endtime="20201029 12:46:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.411" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.410" endtime="20201029 12:46:09.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.412" endtime="20201029 12:46:09.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.295" endtime="20201029 12:46:09.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.293" endtime="20201029 12:46:09.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.421" endtime="20201029 12:46:09.711"></status>
</kw>
<msg timestamp="20201029 12:46:09.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017424931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018415917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.420" endtime="20201029 12:46:09.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017424931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018415917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.715" endtime="20201029 12:46:09.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.722" endtime="20201029 12:46:09.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.417" endtime="20201029 12:46:09.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.415" endtime="20201029 12:46:09.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:09.729" level="INFO">${PHILIP_RES} = [{'diff': 0.0009909859999999993}, {'diff': 0.000989458000000002}, {'diff': 0.000989528}, {'diff': 0.0009894299999999995}, {'diff': 0.000989445000000002}, {'diff': 0.000989458000000002}, {'diff': 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:09.726" endtime="20201029 12:46:09.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.733" level="INFO">${RESULT} = {'diff': [0.0009909859999999993, 0.000989458000000002, 0.000989528, 0.0009894299999999995, 0.000989445000000002, 0.000989458000000002, 0.0009894579999999986, 0.0009894579999999986, 0.00098950000000000...</msg>
<status status="PASS" starttime="20201029 12:46:09.730" endtime="20201029 12:46:09.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.737" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:09.736" endtime="20201029 12:46:09.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.739" level="INFO">VALUE: [0.0009909859999999993, 0.000989458000000002, 0.000989528, 0.0009894299999999995, 0.000989445000000002, 0.000989458000000002, 0.0009894579999999986, 0.0009894579999999986, 0.0009895000000000043, 0.0009894579999999986, 0.0009894029999999998, 0.0009894579999999986, 0.0009894730000000046, 0.0009894859999999978, 0.0009895000000000043, 0.0009894719999999982, 0.0009894170000000063, 0.000989443999999999, 0.0009895140000000038, 0.0009895140000000038, 0.000989443999999999, 0.0009894299999999995, 0.0009894029999999998, 0.0009894029999999998, 0.0009893619999999936, 0.0009894720000000051, 0.0009893750000000007, 0.0009893189999999885, 0.0009894299999999995, 0.0009894869999999972, 0.0009894029999999998, 0.0009894029999999998, 0.0009894730000000046, 0.0009895280000000034, 0.000989458999999998, 0.0009894720000000051, 0.0009895140000000108, 0.000989570000000009, 0.0009896110000000014, 0.0009894579999999986, 0.0009895000000000043, 0.0009895559999999887, 0.0009894719999999912, 0.0009894299999999995, 0.000989458999999998, 0.0009894169999999924, 0.0009893889999999933, 0.000989332999999995, 0.0009893889999999933, 0.000989430999999999]</msg>
<status status="PASS" starttime="20201029 12:46:09.738" endtime="20201029 12:46:09.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.734" endtime="20201029 12:46:09.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.291" endtime="20201029 12:46:09.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.266" endtime="20201029 12:46:09.741"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.744" endtime="20201029 12:46:09.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.742" endtime="20201029 12:46:09.764"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.772" endtime="20201029 12:46:09.885"></status>
</kw>
<msg timestamp="20201029 12:46:09.886" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.770" endtime="20201029 12:46:09.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.888" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.887" endtime="20201029 12:46:09.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.889" endtime="20201029 12:46:09.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.767" endtime="20201029 12:46:09.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.765" endtime="20201029 12:46:09.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.901" endtime="20201029 12:46:10.203"></status>
</kw>
<msg timestamp="20201029 12:46:10.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019028125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.900" endtime="20201029 12:46:10.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019028125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.207" endtime="20201029 12:46:10.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.215" endtime="20201029 12:46:10.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.897" endtime="20201029 12:46:10.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.896" endtime="20201029 12:46:10.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:10.221" level="INFO">${PHILIP_RES} = [{'diff': 0.0010325969999999997}, {'diff': 0.001030958000000002}, {'diff': 0.001030986000000001}, {'diff': 0.001031068999999999}, {'diff': 0.001030958000000002}, {'diff': 0.0010310130000000008}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:46:10.218" endtime="20201029 12:46:10.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.225" level="INFO">${RESULT} = {'diff': [0.0010325969999999997, 0.001030958000000002, 0.001030986000000001, 0.001031068999999999, 0.001030958000000002, 0.0010310130000000008, 0.0010309170000000027, 0.0010309860000000046, 0.00103101...</msg>
<status status="PASS" starttime="20201029 12:46:10.222" endtime="20201029 12:46:10.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.230" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:10.229" endtime="20201029 12:46:10.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.232" level="INFO">VALUE: [0.0010325969999999997, 0.001030958000000002, 0.001030986000000001, 0.001031068999999999, 0.001030958000000002, 0.0010310130000000008, 0.0010309170000000027, 0.0010309860000000046, 0.0010310140000000037, 0.0010310559999999955, 0.0010310280000000033, 0.0010310420000000028, 0.0010310000000000041, 0.0010310420000000028, 0.0010310409999999964, 0.0010310270000000038, 0.0010310280000000033, 0.001031083000000002, 0.0010310409999999964, 0.0010310689999999956, 0.0010309450000000053, 0.0010308889999999932, 0.0010308470000000014, 0.0010309029999999997, 0.0010309719999999911, 0.001030972000000005, 0.0010309440000000059, 0.0010310560000000024, 0.001031083000000002, 0.0010310000000000041, 0.0010308889999999932, 0.0010309159999999928, 0.0010309309999999988, 0.0010308750000000005, 0.0010309020000000002, 0.0010309309999999988, 0.0010308480000000009, 0.0010309299999999993, 0.0010309169999999923, 0.001030972000000005, 0.0010309169999999923, 0.0010309579999999985, 0.0010309440000000059, 0.0010309999999999903, 0.0010310690000000095, 0.0010310280000000033, 0.0010310000000000041, 0.00103102699999999, 0.0010310560000000024, 0.0010309440000000059]</msg>
<status status="PASS" starttime="20201029 12:46:10.231" endtime="20201029 12:46:10.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.226" endtime="20201029 12:46:10.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.764" endtime="20201029 12:46:10.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.742" endtime="20201029 12:46:10.234"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.237" endtime="20201029 12:46:10.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.235" endtime="20201029 12:46:10.257"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.265" endtime="20201029 12:46:10.381"></status>
</kw>
<msg timestamp="20201029 12:46:10.382" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.263" endtime="20201029 12:46:10.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.384" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.383" endtime="20201029 12:46:10.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.385" endtime="20201029 12:46:10.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.261" endtime="20201029 12:46:10.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.259" endtime="20201029 12:46:10.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.394" endtime="20201029 12:46:10.683"></status>
</kw>
<msg timestamp="20201029 12:46:10.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017362958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018437958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.393" endtime="20201029 12:46:10.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017362958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018437958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.686" endtime="20201029 12:46:10.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.694" endtime="20201029 12:46:10.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.390" endtime="20201029 12:46:10.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.389" endtime="20201029 12:46:10.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:10.700" level="INFO">${PHILIP_RES} = [{'diff': 0.0010749999999999996}, {'diff': 0.0010734300000000002}, {'diff': 0.0010734030000000006}, {'diff': 0.0010734159999999972}, {'diff': 0.0010734309999999997}, {'diff': 0.001073389000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:10.697" endtime="20201029 12:46:10.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.705" level="INFO">${RESULT} = {'diff': [0.0010749999999999996, 0.0010734300000000002, 0.0010734030000000006, 0.0010734159999999972, 0.0010734309999999997, 0.001073389000000001, 0.0010732919999999965, 0.0010733750000000014, 0.00107...</msg>
<status status="PASS" starttime="20201029 12:46:10.701" endtime="20201029 12:46:10.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.710" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:10.709" endtime="20201029 12:46:10.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.712" level="INFO">VALUE: [0.0010749999999999996, 0.0010734300000000002, 0.0010734030000000006, 0.0010734159999999972, 0.0010734309999999997, 0.001073389000000001, 0.0010732919999999965, 0.0010733750000000014, 0.0010734030000000006, 0.0010734030000000006, 0.001073389000000001, 0.0010735139999999976, 0.0010734309999999997, 0.0010734449999999993, 0.0010735420000000037, 0.0010734300000000002, 0.0010734579999999994, 0.001073389000000001, 0.0010733750000000014, 0.0010734309999999997, 0.0010734300000000072, 0.0010734300000000002, 0.0010734999999999911, 0.0010734030000000006, 0.001073417000000007, 0.0010733750000000014, 0.0010734309999999997, 0.0010734030000000006, 0.0010733190000000031, 0.0010734859999999985, 0.001073388999999994, 0.001073360999999995, 0.001073388999999994, 0.0010733610000000088, 0.0010734579999999994, 0.0010733470000000023, 0.0010734030000000006, 0.0010734309999999997, 0.0010733470000000023, 0.0010734309999999997, 0.001073471999999992, 0.0010733750000000014, 0.001073389000000008, 0.001073500000000005, 0.0010733610000000088, 0.0010734030000000006, 0.0010734720000000059, 0.0010734439999999928, 0.0010733329999999958, 0.0010733339999999814]</msg>
<status status="PASS" starttime="20201029 12:46:10.711" endtime="20201029 12:46:10.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.706" endtime="20201029 12:46:10.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.257" endtime="20201029 12:46:10.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.235" endtime="20201029 12:46:10.714"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.716" endtime="20201029 12:46:10.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.715" endtime="20201029 12:46:10.736"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.744" endtime="20201029 12:46:10.866"></status>
</kw>
<msg timestamp="20201029 12:46:10.867" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.742" endtime="20201029 12:46:10.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.872" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.870" endtime="20201029 12:46:10.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.875" endtime="20201029 12:46:10.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.740" endtime="20201029 12:46:10.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.738" endtime="20201029 12:46:10.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.894" endtime="20201029 12:46:11.200"></status>
</kw>
<msg timestamp="20201029 12:46:11.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017547097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018665083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.890" endtime="20201029 12:46:11.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017547097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018665083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.203" endtime="20201029 12:46:11.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.211" endtime="20201029 12:46:11.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.885" endtime="20201029 12:46:11.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.881" endtime="20201029 12:46:11.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:11.217" level="INFO">${PHILIP_RES} = [{'diff': 0.001117985999999998}, {'diff': 0.0011164869999999993}, {'diff': 0.0011165279999999986}, {'diff': 0.0011164999999999994}, {'diff': 0.001116431000000001}, {'diff': 0.001116416000000002}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:11.214" endtime="20201029 12:46:11.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.221" level="INFO">${RESULT} = {'diff': [0.001117985999999998, 0.0011164869999999993, 0.0011165279999999986, 0.0011164999999999994, 0.001116431000000001, 0.001116416000000002, 0.0011163750000000028, 0.0011163890000000024, 0.0011163...</msg>
<status status="PASS" starttime="20201029 12:46:11.218" endtime="20201029 12:46:11.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.226" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:11.225" endtime="20201029 12:46:11.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.228" level="INFO">VALUE: [0.001117985999999998, 0.0011164869999999993, 0.0011165279999999986, 0.0011164999999999994, 0.001116431000000001, 0.001116416000000002, 0.0011163750000000028, 0.0011163890000000024, 0.0011163469999999967, 0.001116431000000001, 0.001116416000000002, 0.0011163889999999954, 0.0011164580000000007, 0.0011164309999999941, 0.001116431000000001, 0.0011163470000000036, 0.0011164170000000015, 0.0011164020000000024, 0.001116513999999999, 0.0011164999999999994, 0.0011164580000000007, 0.0011164590000000002, 0.0011164450000000076, 0.0011164720000000072, 0.0011165269999999922, 0.0011164999999999925, 0.0011164720000000072, 0.0011165689999999978, 0.0011165560000000047, 0.0011165280000000055, 0.0011163620000000096, 0.0011164730000000067, 0.0011165000000000064, 0.0011165840000000038, 0.0011164869999999993, 0.0011164719999999934, 0.001116624999999996, 0.0011164170000000084, 0.0011165419999999981, 0.0011165830000000043, 0.001116513999999999, 0.0011164449999999937, 0.0011165830000000043, 0.0011165550000000052, 0.0011164580000000007, 0.0011165280000000055, 0.0011165409999999987, 0.001116596999999997, 0.0011165419999999981, 0.0011164859999999999]</msg>
<status status="PASS" starttime="20201029 12:46:11.227" endtime="20201029 12:46:11.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.222" endtime="20201029 12:46:11.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.737" endtime="20201029 12:46:11.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.714" endtime="20201029 12:46:11.230"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.232" endtime="20201029 12:46:11.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.231" endtime="20201029 12:46:11.252"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.260" endtime="20201029 12:46:11.385"></status>
</kw>
<msg timestamp="20201029 12:46:11.385" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.259" endtime="20201029 12:46:11.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.388" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.386" endtime="20201029 12:46:11.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.389" endtime="20201029 12:46:11.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.256" endtime="20201029 12:46:11.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.254" endtime="20201029 12:46:11.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.398" endtime="20201029 12:46:11.686"></status>
</kw>
<msg timestamp="20201029 12:46:11.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018707125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.397" endtime="20201029 12:46:11.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018707125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.690" endtime="20201029 12:46:11.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.698" endtime="20201029 12:46:11.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.394" endtime="20201029 12:46:11.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.393" endtime="20201029 12:46:11.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:11.704" level="INFO">${PHILIP_RES} = [{'diff': 0.001161917000000002}, {'diff': 0.001160333999999999}, {'diff': 0.0011602910000000008}, {'diff': 0.0011603749999999982}, {'diff': 0.0011602769999999978}, {'diff': 0.0011602920000000003}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:11.701" endtime="20201029 12:46:11.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.709" level="INFO">${RESULT} = {'diff': [0.001161917000000002, 0.001160333999999999, 0.0011602910000000008, 0.0011603749999999982, 0.0011602769999999978, 0.0011602920000000003, 0.001160236000000002, 0.0011603749999999982, 0.0011603...</msg>
<status status="PASS" starttime="20201029 12:46:11.705" endtime="20201029 12:46:11.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.718" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:11.716" endtime="20201029 12:46:11.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.723" level="INFO">VALUE: [0.001161917000000002, 0.001160333999999999, 0.0011602910000000008, 0.0011603749999999982, 0.0011602769999999978, 0.0011602920000000003, 0.001160236000000002, 0.0011603749999999982, 0.0011603050000000004, 0.0011603749999999982, 0.0011602780000000007, 0.0011602640000000011, 0.0011604029999999974, 0.001160319, 0.0011603890000000047, 0.0011603889999999978, 0.0011603609999999986, 0.0011602640000000011, 0.0011603059999999998, 0.0011603059999999998, 0.0011603480000000055, 0.001160347000000006, 0.0011603050000000004, 0.001160347000000006, 0.0011602919999999933, 0.0011602780000000007, 0.001160347000000006, 0.0011603480000000055, 0.0011602919999999933, 0.0011603889999999978, 0.0011604030000000043, 0.0011603889999999978, 0.001160347000000006, 0.0011603609999999986, 0.001160416999999997, 0.0011603480000000055, 0.001160333999999999, 0.0011604439999999966, 0.0011603329999999995, 0.0011604860000000022, 0.0011603050000000004, 0.0011605139999999875, 0.0011603889999999978, 0.0011604719999999957, 0.0011602909999999939, 0.0011603890000000117, 0.0011604719999999957, 0.001160458000000003, 0.00116044500000001, 0.0011604440000000105]</msg>
<status status="PASS" starttime="20201029 12:46:11.720" endtime="20201029 12:46:11.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.711" endtime="20201029 12:46:11.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.253" endtime="20201029 12:46:11.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.230" endtime="20201029 12:46:11.728"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.733" endtime="20201029 12:46:11.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.730" endtime="20201029 12:46:11.756"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.772" endtime="20201029 12:46:11.902"></status>
</kw>
<msg timestamp="20201029 12:46:11.903" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.769" endtime="20201029 12:46:11.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.905" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.904" endtime="20201029 12:46:11.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.906" endtime="20201029 12:46:11.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.764" endtime="20201029 12:46:11.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.760" endtime="20201029 12:46:11.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.915" endtime="20201029 12:46:12.205"></status>
</kw>
<msg timestamp="20201029 12:46:12.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029653153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030859722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.913" endtime="20201029 12:46:12.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029653153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030859722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.209" endtime="20201029 12:46:12.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.217" endtime="20201029 12:46:12.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.911" endtime="20201029 12:46:12.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.909" endtime="20201029 12:46:12.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:12.223" level="INFO">${PHILIP_RES} = [{'diff': 0.0012065689999999976}, {'diff': 0.001204972999999998}, {'diff': 0.0012049589999999985}, {'diff': 0.0012049859999999982}, {'diff': 0.0012049859999999982}, {'diff': 0.0012049719999999986}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:12.220" endtime="20201029 12:46:12.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.228" level="INFO">${RESULT} = {'diff': [0.0012065689999999976, 0.001204972999999998, 0.0012049589999999985, 0.0012049859999999982, 0.0012049859999999982, 0.0012049719999999986, 0.001205056000000003, 0.001205084000000002, 0.0012050...</msg>
<status status="PASS" starttime="20201029 12:46:12.224" endtime="20201029 12:46:12.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.232" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:12.231" endtime="20201029 12:46:12.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.235" level="INFO">VALUE: [0.0012065689999999976, 0.001204972999999998, 0.0012049589999999985, 0.0012049859999999982, 0.0012049859999999982, 0.0012049719999999986, 0.001205056000000003, 0.001205084000000002, 0.0012050130000000048, 0.0012050269999999974, 0.0012050700000000025, 0.0012051250000000013, 0.0012049859999999982, 0.001205084000000009, 0.0012049169999999998, 0.0012050130000000048, 0.0012049169999999998, 0.0012050140000000042, 0.0012049310000000063, 0.0012049020000000077, 0.0012049169999999998, 0.0012048610000000015, 0.0012050140000000042, 0.0012050420000000034, 0.0012050420000000034, 0.0012050550000000104, 0.001205069000000003, 0.001205041000000004, 0.0012049999999999977, 0.0012049030000000072, 0.001204972999999998, 0.001204958000000006, 0.0012049719999999986, 0.0012050140000000042, 0.0012050140000000042, 0.0012049860000000051, 0.0012049590000000054, 0.0012049719999999986, 0.001204944999999999, 0.001204958000000006, 0.0012050140000000042, 0.0012050829999999957, 0.0012049719999999986, 0.0012050000000000116, 0.0012050140000000042, 0.0012049590000000054, 0.0012049169999999998, 0.0012050269999999974, 0.0012050140000000042, 0.0012049589999999777]</msg>
<status status="PASS" starttime="20201029 12:46:12.233" endtime="20201029 12:46:12.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.229" endtime="20201029 12:46:12.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.757" endtime="20201029 12:46:12.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.729" endtime="20201029 12:46:12.237"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.239" endtime="20201029 12:46:12.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.238" endtime="20201029 12:46:12.259"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.267" endtime="20201029 12:46:12.399"></status>
</kw>
<msg timestamp="20201029 12:46:12.399" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.265" endtime="20201029 12:46:12.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.402" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.400" endtime="20201029 12:46:12.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.403" endtime="20201029 12:46:12.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.263" endtime="20201029 12:46:12.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.261" endtime="20201029 12:46:12.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.412" endtime="20201029 12:46:12.714"></status>
</kw>
<msg timestamp="20201029 12:46:12.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017460764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018712722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.410" endtime="20201029 12:46:12.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017460764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018712722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.718" endtime="20201029 12:46:12.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.726" endtime="20201029 12:46:12.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.408" endtime="20201029 12:46:12.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.406" endtime="20201029 12:46:12.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:12.732" level="INFO">${PHILIP_RES} = [{'diff': 0.001251958000000001}, {'diff': 0.0012504590000000024}, {'diff': 0.0012504449999999993}, {'diff': 0.001250389000000001}, {'diff': 0.0012504170000000002}, {'diff': 0.0012503199999999957}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:12.729" endtime="20201029 12:46:12.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.739" level="INFO">${RESULT} = {'diff': [0.001251958000000001, 0.0012504590000000024, 0.0012504449999999993, 0.001250389000000001, 0.0012504170000000002, 0.0012503199999999957, 0.0012504439999999964, 0.0012504160000000042, 0.001250...</msg>
<status status="PASS" starttime="20201029 12:46:12.733" endtime="20201029 12:46:12.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.744" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:12.742" endtime="20201029 12:46:12.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.747" level="INFO">VALUE: [0.001251958000000001, 0.0012504590000000024, 0.0012504449999999993, 0.001250389000000001, 0.0012504170000000002, 0.0012503199999999957, 0.0012504439999999964, 0.0012504160000000042, 0.0012504029999999972, 0.0012503889999999976, 0.0012503609999999984, 0.001250292, 0.0012502500000000014, 0.0012502910000000006, 0.001250263999999994, 0.0012503879999999981, 0.0012504159999999973, 0.001250374999999998, 0.0012502779999999936, 0.0012503469999999989, 0.0012503199999999992, 0.0012503469999999989, 0.0012505270000000013, 0.0012505979999999917, 0.0012504019999999977, 0.001250403000000011, 0.0012504589999999954, 0.0012505139999999942, 0.001250485999999995, 0.001250569000000007, 0.0012505139999999942, 0.001250457999999996, 0.0012505139999999942, 0.0012505129999999948, 0.0012505270000000013, 0.001250540999999994, 0.0012503620000000049, 0.0012505000000000016, 0.001250457999999996, 0.0012504720000000025, 0.0012503890000000045, 0.0012503610000000054, 0.0012503610000000054, 0.0012504720000000025, 0.001250403000000011, 0.001250374999999998, 0.0012504439999999895, 0.0012504309999999963, 0.0012504299999999968, 0.0012504440000000172]</msg>
<status status="PASS" starttime="20201029 12:46:12.745" endtime="20201029 12:46:12.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.740" endtime="20201029 12:46:12.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.260" endtime="20201029 12:46:12.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.237" endtime="20201029 12:46:12.750"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.753" endtime="20201029 12:46:12.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.751" endtime="20201029 12:46:12.774"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.782" endtime="20201029 12:46:12.918"></status>
</kw>
<msg timestamp="20201029 12:46:12.919" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.781" endtime="20201029 12:46:12.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.921" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.920" endtime="20201029 12:46:12.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.922" endtime="20201029 12:46:12.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.778" endtime="20201029 12:46:12.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.776" endtime="20201029 12:46:12.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.932" endtime="20201029 12:46:13.222"></status>
</kw>
<msg timestamp="20201029 12:46:13.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019138139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.931" endtime="20201029 12:46:13.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019138139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.226" endtime="20201029 12:46:13.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.234" endtime="20201029 12:46:13.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.928" endtime="20201029 12:46:13.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.926" endtime="20201029 12:46:13.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:13.240" level="INFO">${PHILIP_RES} = [{'diff': 0.001298305999999999}, {'diff': 0.0012967499999999993}, {'diff': 0.0012967499999999993}, {'diff': 0.001296791999999998}, {'diff': 0.0012966670000000013}, {'diff': 0.0012967629999999994}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:13.237" endtime="20201029 12:46:13.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.244" level="INFO">${RESULT} = {'diff': [0.001298305999999999, 0.0012967499999999993, 0.0012967499999999993, 0.001296791999999998, 0.0012966670000000013, 0.0012967629999999994, 0.0012966670000000013, 0.001296693999999994, 0.0012967...</msg>
<status status="PASS" starttime="20201029 12:46:13.241" endtime="20201029 12:46:13.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.248" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:13.247" endtime="20201029 12:46:13.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.251" level="INFO">VALUE: [0.001298305999999999, 0.0012967499999999993, 0.0012967499999999993, 0.001296791999999998, 0.0012966670000000013, 0.0012967629999999994, 0.0012966670000000013, 0.001296693999999994, 0.0012967359999999997, 0.0012968479999999963, 0.0012967220000000002, 0.001296874999999996, 0.0012968479999999963, 0.0012968750000000029, 0.0012969869999999994, 0.0012968469999999968, 0.001296820000000004, 0.0012968330000000042, 0.0012967910000000055, 0.0012967640000000058, 0.0012967779999999984, 0.0012967910000000055, 0.0012968750000000029, 0.0012967779999999984, 0.0012968339999999967, 0.0012967779999999984, 0.0012967080000000075, 0.0012967499999999993, 0.0012967359999999928, 0.0012967779999999984, 0.0012968329999999972, 0.0012967910000000055, 0.001296776999999999, 0.0012967500000000132, 0.0012967079999999936, 0.001296763999999992, 0.001296792000000005, 0.0012968750000000029, 0.0012967220000000002, 0.0012968750000000029, 0.0012968059999999976, 0.0012969020000000164, 0.0012968189999999769, 0.0012968470000000176, 0.0012967359999999928, 0.0012968060000000114, 0.0012967920000000188, 0.0012967640000000058, 0.001296611000000003, 0.0012967080000000075]</msg>
<status status="PASS" starttime="20201029 12:46:13.249" endtime="20201029 12:46:13.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.245" endtime="20201029 12:46:13.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.774" endtime="20201029 12:46:13.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.750" endtime="20201029 12:46:13.253"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.256" endtime="20201029 12:46:13.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.254" endtime="20201029 12:46:13.276"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.284" endtime="20201029 12:46:13.425"></status>
</kw>
<msg timestamp="20201029 12:46:13.425" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.282" endtime="20201029 12:46:13.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.431" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.428" endtime="20201029 12:46:13.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.433" endtime="20201029 12:46:13.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.280" endtime="20201029 12:46:13.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.278" endtime="20201029 12:46:13.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.452" endtime="20201029 12:46:13.748"></status>
</kw>
<msg timestamp="20201029 12:46:13.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018895125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.449" endtime="20201029 12:46:13.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018895125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.752" endtime="20201029 12:46:13.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.759" endtime="20201029 12:46:13.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.443" endtime="20201029 12:46:13.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.440" endtime="20201029 12:46:13.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:13.766" level="INFO">${PHILIP_RES} = [{'diff': 0.0013451109999999995}, {'diff': 0.0013435549999999997}, {'diff': 0.0013435140000000005}, {'diff': 0.0013436390000000006}, {'diff': 0.0013435140000000005}, {'diff': 0.0013435840000000018}, {...</msg>
<status status="PASS" starttime="20201029 12:46:13.763" endtime="20201029 12:46:13.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.771" level="INFO">${RESULT} = {'diff': [0.0013451109999999995, 0.0013435549999999997, 0.0013435140000000005, 0.0013436390000000006, 0.0013435140000000005, 0.0013435840000000018, 0.0013435840000000018, 0.001343694999999999, 0.00134...</msg>
<status status="PASS" starttime="20201029 12:46:13.767" endtime="20201029 12:46:13.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.775" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:13.774" endtime="20201029 12:46:13.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.778" level="INFO">VALUE: [0.0013451109999999995, 0.0013435549999999997, 0.0013435140000000005, 0.0013436390000000006, 0.0013435140000000005, 0.0013435840000000018, 0.0013435840000000018, 0.001343694999999999, 0.0013437500000000047, 0.001343596999999995, 0.0013436249999999941, 0.001343625000000001, 0.0013436110000000015, 0.001343597000000002, 0.0013435279999999966, 0.0013435690000000028, 0.0013435560000000027, 0.001343638000000008, 0.0013435830000000093, 0.0013436659999999934, 0.0013436390000000076, 0.0013436390000000076, 0.0013436389999999937, 0.0013436659999999934, 0.001343597000000002, 0.0013436379999999942, 0.0013435559999999958, 0.0013436109999999946, 0.001343707999999999, 0.0013436110000000084, 0.001343597000000002, 0.001343625000000001, 0.0013436109999999946, 0.0013435419999999892, 0.0013435269999999971, 0.001343583999999995, 0.0013435269999999971, 0.001343625000000001, 0.001343625000000001, 0.001343597000000002, 0.0013435840000000088, 0.0013436109999999946, 0.0013437500000000047, 0.001343597000000002, 0.0013435980000000014, 0.0013436390000000076, 0.0013435549999999963, 0.0013435980000000014, 0.0013436109999999946, 0.0013435130000000184]</msg>
<status status="PASS" starttime="20201029 12:46:13.776" endtime="20201029 12:46:13.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.771" endtime="20201029 12:46:13.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.276" endtime="20201029 12:46:13.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.254" endtime="20201029 12:46:13.784"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.786" endtime="20201029 12:46:13.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.785" endtime="20201029 12:46:13.806"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.814" endtime="20201029 12:46:13.958"></status>
</kw>
<msg timestamp="20201029 12:46:13.959" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.813" endtime="20201029 12:46:13.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.961" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.960" endtime="20201029 12:46:13.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.962" endtime="20201029 12:46:13.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.810" endtime="20201029 12:46:13.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.808" endtime="20201029 12:46:13.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.971" endtime="20201029 12:46:14.270"></status>
</kw>
<msg timestamp="20201029 12:46:14.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.970" endtime="20201029 12:46:14.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.280" endtime="20201029 12:46:14.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.297" endtime="20201029 12:46:14.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.967" endtime="20201029 12:46:14.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.965" endtime="20201029 12:46:14.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:14.311" level="INFO">${PHILIP_RES} = [{'diff': 0.001392624999999998}, {'diff': 0.0013910139999999994}, {'diff': 0.0013910700000000012}, {'diff': 0.0013911110000000004}, {'diff': 0.001391138}, {'diff': 0.0013909859999999968}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:14.304" endtime="20201029 12:46:14.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.319" level="INFO">${RESULT} = {'diff': [0.001392624999999998, 0.0013910139999999994, 0.0013910700000000012, 0.0013911110000000004, 0.001391138, 0.0013909859999999968, 0.0013910700000000012, 0.001391027000000003, 0.0013909590000000...</msg>
<status status="PASS" starttime="20201029 12:46:14.313" endtime="20201029 12:46:14.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.328" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:14.326" endtime="20201029 12:46:14.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.333" level="INFO">VALUE: [0.001392624999999998, 0.0013910139999999994, 0.0013910700000000012, 0.0013911110000000004, 0.001391138, 0.0013909859999999968, 0.0013910700000000012, 0.001391027000000003, 0.0013909590000000041, 0.0013910560000000016, 0.0013909729999999967, 0.0013910550000000022, 0.0013910970000000009, 0.0013911389999999996, 0.0013911389999999996, 0.0013910689999999948, 0.0013910830000000082, 0.0013911949999999979, 0.0013911800000000057, 0.001391124999999993, 0.0013910830000000013, 0.0013910689999999948, 0.0013910690000000087, 0.0013910970000000078, 0.0013911389999999996, 0.0013910689999999948, 0.0013911110000000004, 0.001391042000000009, 0.0013910560000000016, 0.0013909999999999895, 0.0013910830000000013, 0.0013911949999999979, 0.0013911389999999996, 0.001391125000000007, 0.0013911659999999992, 0.0013910840000000008, 0.0013910560000000016, 0.0013911810000000052, 0.0013911529999999922, 0.0013911389999999857, 0.0013911110000000004, 0.0013910419999999812, 0.0013910419999999812, 0.0013911110000000004, 0.0013911520000000066, 0.0013912219999999975, 0.0013911800000000196, 0.001391124999999993, 0.001390972000000018, 0.001391153000000006]</msg>
<status status="PASS" starttime="20201029 12:46:14.331" endtime="20201029 12:46:14.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.321" endtime="20201029 12:46:14.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.807" endtime="20201029 12:46:14.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.784" endtime="20201029 12:46:14.337"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.341" endtime="20201029 12:46:14.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.339" endtime="20201029 12:46:14.361"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.369" endtime="20201029 12:46:14.517"></status>
</kw>
<msg timestamp="20201029 12:46:14.517" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.367" endtime="20201029 12:46:14.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.520" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.518" endtime="20201029 12:46:14.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.521" endtime="20201029 12:46:14.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.364" endtime="20201029 12:46:14.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.363" endtime="20201029 12:46:14.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.533" endtime="20201029 12:46:14.823"></status>
</kw>
<msg timestamp="20201029 12:46:14.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.531" endtime="20201029 12:46:14.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.827" endtime="20201029 12:46:14.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.834" endtime="20201029 12:46:14.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.529" endtime="20201029 12:46:14.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.527" endtime="20201029 12:46:14.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:14.841" level="INFO">${PHILIP_RES} = [{'diff': 0.001440917}, {'diff': 0.0014394720000000007}, {'diff': 0.0014394299999999985}, {'diff': 0.0014393619999999996}, {'diff': 0.0014394999999999998}, {'diff': 0.0014393470000000005}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:46:14.838" endtime="20201029 12:46:14.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.845" level="INFO">${RESULT} = {'diff': [0.001440917, 0.0014394720000000007, 0.0014394299999999985, 0.0014393619999999996, 0.0014394999999999998, 0.0014393470000000005, 0.0014395410000000025, 0.0014395000000000033, 0.00143943099999...</msg>
<status status="PASS" starttime="20201029 12:46:14.842" endtime="20201029 12:46:14.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.849" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:14.848" endtime="20201029 12:46:14.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.851" level="INFO">VALUE: [0.001440917, 0.0014394720000000007, 0.0014394299999999985, 0.0014393619999999996, 0.0014394999999999998, 0.0014393470000000005, 0.0014395410000000025, 0.0014395000000000033, 0.001439430999999998, 0.0014393610000000001, 0.001439430999999998, 0.001439430999999998, 0.0014393060000000013, 0.0014393749999999997, 0.0014392640000000026, 0.0014393340000000004, 0.0014394729999999967, 0.0014392910000000092, 0.0014393749999999927, 0.0014394300000000054, 0.0014394450000000114, 0.0014393189999999945, 0.0014393340000000004, 0.0014394869999999893, 0.001439459000000004, 0.0014394719999999972, 0.0014393610000000001, 0.0014394589999999902, 0.001439459000000004, 0.0014394580000000046, 0.001439444000000012, 0.0014394719999999972, 0.0014393889999999993, 0.001439431000000005, 0.001439472000000011, 0.0014395000000000102, 0.0014394299999999915, 0.001439472000000011, 0.0014393470000000075, 0.0014393610000000001, 0.0014393889999999854, 0.0014394859999999898, 0.0014394719999999972, 0.0014395420000000159, 0.0014394019999999785, 0.0014394859999999898, 0.0014394719999999972, 0.001439444000000012, 0.0014395140000000028, 0.0014394030000000058]</msg>
<status status="PASS" starttime="20201029 12:46:14.850" endtime="20201029 12:46:14.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.846" endtime="20201029 12:46:14.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.361" endtime="20201029 12:46:14.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.338" endtime="20201029 12:46:14.854"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.856" endtime="20201029 12:46:14.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.855" endtime="20201029 12:46:14.877"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.885" endtime="20201029 12:46:15.037"></status>
</kw>
<msg timestamp="20201029 12:46:15.037" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.883" endtime="20201029 12:46:15.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.040" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.038" endtime="20201029 12:46:15.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.041" endtime="20201029 12:46:15.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.881" endtime="20201029 12:46:15.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.879" endtime="20201029 12:46:15.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.053" endtime="20201029 12:46:15.362"></status>
</kw>
<msg timestamp="20201029 12:46:15.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017827722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.049" endtime="20201029 12:46:15.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017827722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.366" endtime="20201029 12:46:15.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.373" endtime="20201029 12:46:15.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.046" endtime="20201029 12:46:15.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.044" endtime="20201029 12:46:15.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:15.380" level="INFO">${PHILIP_RES} = [{'diff': 0.0014898889999999977}, {'diff': 0.0014883889999999997}, {'diff': 0.0014885000000000002}, {'diff': 0.0014885840000000011}, {'diff': 0.0014885409999999995}, {'diff': 0.0014884999999999968}, {...</msg>
<status status="PASS" starttime="20201029 12:46:15.377" endtime="20201029 12:46:15.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.385" level="INFO">${RESULT} = {'diff': [0.0014898889999999977, 0.0014883889999999997, 0.0014885000000000002, 0.0014885840000000011, 0.0014885409999999995, 0.0014884999999999968, 0.001488541000000003, 0.0014883750000000001, 0.00148...</msg>
<status status="PASS" starttime="20201029 12:46:15.381" endtime="20201029 12:46:15.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.389" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:15.388" endtime="20201029 12:46:15.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.391" level="INFO">VALUE: [0.0014898889999999977, 0.0014883889999999997, 0.0014885000000000002, 0.0014885840000000011, 0.0014885409999999995, 0.0014884999999999968, 0.001488541000000003, 0.0014883750000000001, 0.0014884999999999968, 0.0014883750000000001, 0.0014883610000000005, 0.0014885550000000025, 0.0014884720000000046, 0.0014885419999999955, 0.0014885980000000007, 0.001488666999999999, 0.0014886250000000073, 0.0014886250000000073, 0.001488666999999999, 0.001488556000000002, 0.001488651999999993, 0.001488639, 0.0014885420000000094, 0.001488556000000002, 0.0014887219999999979, 0.0014886530000000064, 0.0014886110000000008, 0.001488556000000002, 0.0014886949999999982, 0.0014886810000000056, 0.001488639, 0.001488639, 0.0014885830000000017, 0.001488666999999999, 0.0014885830000000017, 0.0014886529999999926, 0.001488695000000012, 0.001488666999999999, 0.0014886110000000008, 0.0014886249999999934, 0.001488556000000002, 0.0014884589999999975, 0.0014885550000000025, 0.0014884029999999993, 0.0014885139999999963, 0.0014885000000000037, 0.0014884859999999833, 0.0014885419999999816, 0.001488556000000002, 0.0014885129999999969]</msg>
<status status="PASS" starttime="20201029 12:46:15.390" endtime="20201029 12:46:15.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.385" endtime="20201029 12:46:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.877" endtime="20201029 12:46:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.854" endtime="20201029 12:46:15.393"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.395" endtime="20201029 12:46:15.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.394" endtime="20201029 12:46:15.415"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.423" endtime="20201029 12:46:15.580"></status>
</kw>
<msg timestamp="20201029 12:46:15.580" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.422" endtime="20201029 12:46:15.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.583" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.581" endtime="20201029 12:46:15.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.584" endtime="20201029 12:46:15.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.419" endtime="20201029 12:46:15.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.418" endtime="20201029 12:46:15.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.593" endtime="20201029 12:46:15.891"></status>
</kw>
<msg timestamp="20201029 12:46:15.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017517556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019057514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.591" endtime="20201029 12:46:15.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017517556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019057514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.900" endtime="20201029 12:46:15.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.917" endtime="20201029 12:46:15.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.588" endtime="20201029 12:46:15.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.587" endtime="20201029 12:46:15.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:15.931" level="INFO">${PHILIP_RES} = [{'diff': 0.001539958000000001}, {'diff': 0.0015383620000000015}, {'diff': 0.0015383479999999984}, {'diff': 0.0015383050000000002}, {'diff': 0.0015384170000000003}, {'diff': 0.001538361000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:15.924" endtime="20201029 12:46:15.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.940" level="INFO">${RESULT} = {'diff': [0.001539958000000001, 0.0015383620000000015, 0.0015383479999999984, 0.0015383050000000002, 0.0015384170000000003, 0.001538361000000002, 0.0015383470000000024, 0.0015383340000000023, 0.001538...</msg>
<status status="PASS" starttime="20201029 12:46:15.933" endtime="20201029 12:46:15.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.949" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:15.947" endtime="20201029 12:46:15.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.954" level="INFO">VALUE: [0.001539958000000001, 0.0015383620000000015, 0.0015383479999999984, 0.0015383050000000002, 0.0015384170000000003, 0.001538361000000002, 0.0015383470000000024, 0.0015383340000000023, 0.0015383880000000016, 0.0015382639999999975, 0.0015383890000000011, 0.0015383330000000028, 0.0015384030000000007, 0.0015383190000000033, 0.0015383750000000015, 0.0015383890000000011, 0.001538361000000002, 0.0015383190000000102, 0.0015384170000000003, 0.0015384310000000068, 0.0015383050000000037, 0.0015383469999999955, 0.0015383190000000102, 0.0015382920000000105, 0.0015383469999999955, 0.001538249999999991, 0.001538278000000004, 0.001538195000000006, 0.0015382219999999919, 0.0015383190000000102, 0.0015384169999999864, 0.0015384310000000068, 0.0015383199999999958, 0.0015384859999999917, 0.0015383060000000032, 0.0015385140000000047, 0.0015383059999999893, 0.001538458999999992, 0.0015384169999999864, 0.0015383469999999955, 0.0015382770000000046, 0.0015383610000000159, 0.0015384580000000203, 0.0015384999999999982, 0.0015383470000000232, 0.0015383469999999955, 0.0015383470000000232, 0.0015383610000000159, 0.0015383620000000153, 0.0015382919999999967]</msg>
<status status="PASS" starttime="20201029 12:46:15.951" endtime="20201029 12:46:15.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.942" endtime="20201029 12:46:15.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.416" endtime="20201029 12:46:15.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.393" endtime="20201029 12:46:15.958"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.963" endtime="20201029 12:46:15.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.960" endtime="20201029 12:46:15.984"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.992" endtime="20201029 12:46:16.152"></status>
</kw>
<msg timestamp="20201029 12:46:16.153" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.990" endtime="20201029 12:46:16.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.155" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.154" endtime="20201029 12:46:16.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.156" endtime="20201029 12:46:16.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.987" endtime="20201029 12:46:16.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.986" endtime="20201029 12:46:16.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.166" endtime="20201029 12:46:16.456"></status>
</kw>
<msg timestamp="20201029 12:46:16.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017692931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.164" endtime="20201029 12:46:16.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017692931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.460" endtime="20201029 12:46:16.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.468" endtime="20201029 12:46:16.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.162" endtime="20201029 12:46:16.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.160" endtime="20201029 12:46:16.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:16.475" level="INFO">${PHILIP_RES} = [{'diff': 0.0015907770000000016}, {'diff': 0.001589179999999999}, {'diff': 0.0015890280000000027}, {'diff': 0.0015891529999999994}, {'diff': 0.0015890550000000024}, {'diff': 0.0015890409999999994}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:16.472" endtime="20201029 12:46:16.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.479" level="INFO">${RESULT} = {'diff': [0.0015907770000000016, 0.001589179999999999, 0.0015890280000000027, 0.0015891529999999994, 0.0015890550000000024, 0.0015890409999999994, 0.0015890689999999985, 0.0015891249999999968, 0.00158...</msg>
<status status="PASS" starttime="20201029 12:46:16.476" endtime="20201029 12:46:16.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.483" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:16.482" endtime="20201029 12:46:16.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.485" level="INFO">VALUE: [0.0015907770000000016, 0.001589179999999999, 0.0015890280000000027, 0.0015891529999999994, 0.0015890550000000024, 0.0015890409999999994, 0.0015890689999999985, 0.0015891249999999968, 0.0015891670000000024, 0.0015891250000000037, 0.0015892360000000008, 0.0015891250000000037, 0.0015891249999999968, 0.0015891109999999972, 0.0015891939999999952, 0.0015892079999999947, 0.0015890560000000054, 0.0015891390000000033, 0.0015891530000000098, 0.0015891530000000098, 0.0015892089999999942, 0.0015892079999999947, 0.0015892359999999939, 0.0015892220000000012, 0.0015892360000000078, 0.0015893889999999966, 0.0015893329999999983, 0.0015891670000000024, 0.0015891950000000016, 0.0015892230000000007, 0.001589292000000006, 0.0015892220000000012, 0.0015892089999999942, 0.0015893329999999983, 0.0015892220000000012, 0.0015891799999999956, 0.0015892230000000007, 0.0015891389999999894, 0.0015892499999999865, 0.0015891390000000172, 0.0015891120000000036, 0.0015891799999999956, 0.001589083000000019, 0.0015891390000000172, 0.0015891670000000024, 0.0015890560000000054, 0.0015891110000000042, 0.0015891110000000042, 0.0015892359999999939, 0.0015892359999999939]</msg>
<status status="PASS" starttime="20201029 12:46:16.484" endtime="20201029 12:46:16.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.480" endtime="20201029 12:46:16.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.984" endtime="20201029 12:46:16.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.959" endtime="20201029 12:46:16.488"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.491" endtime="20201029 12:46:16.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.489" endtime="20201029 12:46:16.511"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.519" endtime="20201029 12:46:16.684"></status>
</kw>
<msg timestamp="20201029 12:46:16.685" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.517" endtime="20201029 12:46:16.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.690" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.687" endtime="20201029 12:46:16.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.692" endtime="20201029 12:46:16.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.514" endtime="20201029 12:46:16.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.513" endtime="20201029 12:46:16.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.712" endtime="20201029 12:46:17.009"></status>
</kw>
<msg timestamp="20201029 12:46:17.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019211875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.708" endtime="20201029 12:46:17.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019211875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.012" endtime="20201029 12:46:17.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.020" endtime="20201029 12:46:17.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.703" endtime="20201029 12:46:17.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.699" endtime="20201029 12:46:17.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:17.026" level="INFO">${PHILIP_RES} = [{'diff': 0.0016420280000000002}, {'diff': 0.001640598}, {'diff': 0.0016404869999999995}, {'diff': 0.001640486}, {'diff': 0.0016404029999999986}, {'diff': 0.0016405560000000013}, {'diff': 0.0016404719...</msg>
<status status="PASS" starttime="20201029 12:46:17.023" endtime="20201029 12:46:17.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.031" level="INFO">${RESULT} = {'diff': [0.0016420280000000002, 0.001640598, 0.0016404869999999995, 0.001640486, 0.0016404029999999986, 0.0016405560000000013, 0.001640471999999997, 0.0016405550000000019, 0.0016403470000000003, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:17.028" endtime="20201029 12:46:17.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.036" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:17.035" endtime="20201029 12:46:17.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.038" level="INFO">VALUE: [0.0016420280000000002, 0.001640598, 0.0016404869999999995, 0.001640486, 0.0016404029999999986, 0.0016405560000000013, 0.001640471999999997, 0.0016405550000000019, 0.0016403470000000003, 0.0016406250000000067, 0.0016404169999999982, 0.001640389000000006, 0.0016404029999999986, 0.0016403750000000064, 0.0016405420000000018, 0.0016404440000000048, 0.0016404309999999978, 0.0016404579999999974, 0.001640472000000004, 0.001640500000000003, 0.001640389000000006, 0.0016403479999999998, 0.0016403049999999947, 0.001640389000000006, 0.0016404310000000116, 0.0016404440000000048, 0.0016404309999999978, 0.0016403749999999995, 0.0016403190000000012, 0.0016404299999999983, 0.001640443999999991, 0.0016405270000000027, 0.0016404450000000043, 0.0016404159999999918, 0.0016404029999999847, 0.001640472000000004, 0.0016402640000000024, 0.001640472000000004, 0.0016405419999999948, 0.0016403610000000068, 0.001640388999999992, 0.001640472000000004, 0.0016405280000000022, 0.001640472000000004, 0.0016404719999999762, 0.0016404719999999762, 0.0016405140000000096, 0.0016404579999999835, 0.0016405279999999745, 0.0016404730000000034]</msg>
<status status="PASS" starttime="20201029 12:46:17.037" endtime="20201029 12:46:17.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.032" endtime="20201029 12:46:17.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.511" endtime="20201029 12:46:17.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.489" endtime="20201029 12:46:17.040"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.042" endtime="20201029 12:46:17.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.041" endtime="20201029 12:46:17.062"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.070" endtime="20201029 12:46:17.239"></status>
</kw>
<msg timestamp="20201029 12:46:17.240" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.069" endtime="20201029 12:46:17.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.242" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.241" endtime="20201029 12:46:17.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.243" endtime="20201029 12:46:17.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.066" endtime="20201029 12:46:17.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.064" endtime="20201029 12:46:17.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.254" endtime="20201029 12:46:17.558"></status>
</kw>
<msg timestamp="20201029 12:46:17.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.251" endtime="20201029 12:46:17.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.567" endtime="20201029 12:46:17.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.585" endtime="20201029 12:46:17.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.249" endtime="20201029 12:46:17.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.247" endtime="20201029 12:46:17.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:17.593" level="INFO">${PHILIP_RES} = [{'diff': 0.0016940140000000006}, {'diff': 0.0016926390000000027}, {'diff': 0.001692665999999999}, {'diff': 0.0016926249999999997}, {'diff': 0.0016926250000000032}, {'diff': 0.0016925139999999991}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:17.590" endtime="20201029 12:46:17.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.597" level="INFO">${RESULT} = {'diff': [0.0016940140000000006, 0.0016926390000000027, 0.001692665999999999, 0.0016926249999999997, 0.0016926250000000032, 0.0016925139999999991, 0.0016925559999999978, 0.0016924580000000009, 0.00169...</msg>
<status status="PASS" starttime="20201029 12:46:17.594" endtime="20201029 12:46:17.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.602" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:17.601" endtime="20201029 12:46:17.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.604" level="INFO">VALUE: [0.0016940140000000006, 0.0016926390000000027, 0.001692665999999999, 0.0016926249999999997, 0.0016926250000000032, 0.0016925139999999991, 0.0016925559999999978, 0.0016924580000000009, 0.001692473, 0.0016925139999999991, 0.0016925549999999984, 0.0016924999999999996, 0.001692583999999997, 0.0016925270000000062, 0.001692486000000007, 0.0016926670000000088, 0.0016926389999999958, 0.0016925279999999987, 0.0016924999999999996, 0.0016924720000000004, 0.001692597000000004, 0.0016925410000000057, 0.0016925420000000052, 0.001692597000000004, 0.0016926530000000023, 0.0016925699999999905, 0.0016924999999999996, 0.0016926250000000032, 0.0016925410000000057, 0.0016925279999999987, 0.0016924310000000081, 0.0016925139999999922, 0.0016925410000000057, 0.0016926109999999828, 0.0016928340000000042, 0.0016927500000000206, 0.0016926110000000105, 0.0016926250000000032, 0.0016924299999999948, 0.0016924580000000078, 0.0016924300000000225, 0.0016924299999999948, 0.001692514000000006, 0.0016926670000000088, 0.0016924299999999948, 0.0016924720000000004, 0.001692485999999993, 0.0016925409999999919, 0.0016924170000000016, 0.0016924580000000078]</msg>
<status status="PASS" starttime="20201029 12:46:17.603" endtime="20201029 12:46:17.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.598" endtime="20201029 12:46:17.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.063" endtime="20201029 12:46:17.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.040" endtime="20201029 12:46:17.607"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.610" endtime="20201029 12:46:17.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.608" endtime="20201029 12:46:17.630"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.639" endtime="20201029 12:46:17.812"></status>
</kw>
<msg timestamp="20201029 12:46:17.812" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.637" endtime="20201029 12:46:17.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.815" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.813" endtime="20201029 12:46:17.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.816" endtime="20201029 12:46:17.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.634" endtime="20201029 12:46:17.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.632" endtime="20201029 12:46:17.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.826" endtime="20201029 12:46:18.116"></status>
</kw>
<msg timestamp="20201029 12:46:18.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017978028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.824" endtime="20201029 12:46:18.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017978028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.120" endtime="20201029 12:46:18.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.128" endtime="20201029 12:46:18.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.821" endtime="20201029 12:46:18.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.820" endtime="20201029 12:46:18.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:18.135" level="INFO">${PHILIP_RES} = [{'diff': 0.0017471389999999982}, {'diff': 0.0017455549999999993}, {'diff': 0.001745514}, {'diff': 0.001745514}, {'diff': 0.0017456669999999994}, {'diff': 0.0017455139999999966}, {'diff': 0.0017455970...</msg>
<status status="PASS" starttime="20201029 12:46:18.131" endtime="20201029 12:46:18.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.139" level="INFO">${RESULT} = {'diff': [0.0017471389999999982, 0.0017455549999999993, 0.001745514, 0.001745514, 0.0017456669999999994, 0.0017455139999999966, 0.0017455970000000015, 0.0017454859999999975, 0.0017454309999999987, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:18.135" endtime="20201029 12:46:18.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.143" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:18.142" endtime="20201029 12:46:18.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.145" level="INFO">VALUE: [0.0017471389999999982, 0.0017455549999999993, 0.001745514, 0.001745514, 0.0017456669999999994, 0.0017455139999999966, 0.0017455970000000015, 0.0017454859999999975, 0.0017454309999999987, 0.0017454720000000049, 0.0017456390000000002, 0.0017456949999999985, 0.0017455139999999966, 0.001745500000000004, 0.0017455140000000036, 0.0017455700000000018, 0.001745694000000006, 0.0017455559999999953, 0.0017455970000000015, 0.001745582999999995, 0.0017454860000000044, 0.0017454159999999996, 0.0017453750000000073, 0.0017454579999999914, 0.0017455830000000089, 0.0017455410000000032, 0.0017454030000000065, 0.0017454720000000118, 0.0017454449999999982, 0.0017454589999999909, 0.0017454449999999982, 0.0017454300000000061, 0.0017454580000000192, 0.0017455419999999888, 0.0017453480000000077, 0.001745319000000023, 0.0017453470000000082, 0.0017453749999999935, 0.0017454299999999923, 0.001745582999999995, 0.0017454310000000195, 0.0017455140000000036, 0.0017454159999999996, 0.001745471999999998, 0.0017453749999999935, 0.001745458999999977, 0.001745416999999999, 0.001745388999999986, 0.0017454310000000195, 0.0017453749999999935]</msg>
<status status="PASS" starttime="20201029 12:46:18.144" endtime="20201029 12:46:18.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.139" endtime="20201029 12:46:18.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.631" endtime="20201029 12:46:18.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.607" endtime="20201029 12:46:18.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.975" endtime="20201029 12:46:18.148"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:53.648" endtime="20201029 12:46:18.148" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:32.810" endtime="20201029 12:46:18.157"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.226" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:18.234" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:19.468" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:18.225" endtime="20201029 12:46:19.469"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.471" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:19.470" endtime="20201029 12:46:19.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.224" endtime="20201029 12:46:19.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.474" endtime="20201029 12:46:19.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.473" endtime="20201029 12:46:19.660"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.673" endtime="20201029 12:46:19.685"></status>
</kw>
<msg timestamp="20201029 12:46:19.686" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.671" endtime="20201029 12:46:19.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.688" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.687" endtime="20201029 12:46:19.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.691" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:19.689" endtime="20201029 12:46:19.691"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:19.669" endtime="20201029 12:46:19.692"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:19.667" endtime="20201029 12:46:19.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.665" endtime="20201029 12:46:19.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:19.698" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:19.697" endtime="20201029 12:46:19.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.694" endtime="20201029 12:46:19.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.664" endtime="20201029 12:46:19.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.664" endtime="20201029 12:46:19.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.700" endtime="20201029 12:46:19.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.663" endtime="20201029 12:46:19.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.702" endtime="20201029 12:46:19.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.661" endtime="20201029 12:46:19.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.222" endtime="20201029 12:46:19.705"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.710" endtime="20201029 12:46:19.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.709" endtime="20201029 12:46:19.730"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.744" endtime="20201029 12:46:19.756"></status>
</kw>
<msg timestamp="20201029 12:46:19.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.742" endtime="20201029 12:46:19.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.759" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.757" endtime="20201029 12:46:19.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.762" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:19.760" endtime="20201029 12:46:19.762"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:19.740" endtime="20201029 12:46:19.763"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:19.737" endtime="20201029 12:46:19.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.736" endtime="20201029 12:46:19.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:19.767" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:19.766" endtime="20201029 12:46:19.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.764" endtime="20201029 12:46:19.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.735" endtime="20201029 12:46:19.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.735" endtime="20201029 12:46:19.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.769" endtime="20201029 12:46:19.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.733" endtime="20201029 12:46:19.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.731" endtime="20201029 12:46:19.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.708" endtime="20201029 12:46:19.772"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.782" endtime="20201029 12:46:19.798"></status>
</kw>
<msg timestamp="20201029 12:46:19.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.780" endtime="20201029 12:46:19.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.799" endtime="20201029 12:46:19.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.802" endtime="20201029 12:46:19.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.777" endtime="20201029 12:46:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.775" endtime="20201029 12:46:19.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.811" endtime="20201029 12:46:20.111"></status>
</kw>
<msg timestamp="20201029 12:46:20.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063508639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063550958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.809" endtime="20201029 12:46:20.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063508639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063550958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.116" endtime="20201029 12:46:20.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.124" endtime="20201029 12:46:20.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.807" endtime="20201029 12:46:20.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.805" endtime="20201029 12:46:20.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.131" level="INFO">${RESULT} = [{'diff': 4.2318999999998996e-05}, {'diff': 4.170800000000141e-05}, {'diff': 4.1569000000005185e-05}, {'diff': 4.157000000000466e-05}, {'diff': 4.155599999999815e-05}, {'diff': 4.1610999999996956e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:20.128" endtime="20201029 12:46:20.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:20.135" level="INFO">${ACCURACY} = {'diff': [4.2318999999998996e-05, 4.170800000000141e-05, 4.1569000000005185e-05, 4.157000000000466e-05, 4.155599999999815e-05, 4.1610999999996956e-05, 4.149999999999987e-05, 4.1597000000004325e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:20.132" endtime="20201029 12:46:20.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.140" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:46:20.139" endtime="20201029 12:46:20.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.143" level="INFO">VALUE: [4.2318999999998996e-05, 4.170800000000141e-05, 4.1569000000005185e-05, 4.157000000000466e-05, 4.155599999999815e-05, 4.1610999999996956e-05, 4.149999999999987e-05, 4.1597000000004325e-05, 4.1582999999997816e-05, 4.1541000000006045e-05, 4.1526999999999537e-05, 4.156999999999078e-05, 4.156999999999078e-05, 4.157000000000466e-05, 4.158399999999729e-05, 4.1583000000011694e-05, 4.157000000000466e-05, 4.1569000000005185e-05, 4.158399999999729e-05, 4.151400000000638e-05, 4.1597000000004325e-05, 4.152799999999901e-05, 4.157000000000466e-05, 4.1639000000009974e-05, 4.1554999999998676e-05, 4.1569000000005185e-05, 4.1653000000002605e-05, 4.158399999999729e-05, 4.158399999999729e-05, 4.156999999999078e-05, 4.158399999999729e-05, 4.1569000000005185e-05, 4.156999999999078e-05, 4.159699999999045e-05, 4.156899999999131e-05, 4.1582999999997816e-05, 4.157000000000466e-05, 4.156899999999131e-05, 4.16380000000105e-05, 4.1597000000004325e-05, 4.1582999999997816e-05, 4.1597000000004325e-05, 4.1569000000005185e-05, 4.1610999999996956e-05, 4.1583000000011694e-05, 4.1582999999997816e-05, 4.1526999999999537e-05, 4.159699999999045e-05, 4.1597000000004325e-05, 4.161200000001031e-05]</msg>
<status status="PASS" starttime="20201029 12:46:20.141" endtime="20201029 12:46:20.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.136" endtime="20201029 12:46:20.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.147" endtime="20201029 12:46:20.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.146" endtime="20201029 12:46:20.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.144" endtime="20201029 12:46:20.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.773" endtime="20201029 12:46:20.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.773" endtime="20201029 12:46:20.168"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.176" endtime="20201029 12:46:20.192"></status>
</kw>
<msg timestamp="20201029 12:46:20.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.175" endtime="20201029 12:46:20.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.194" endtime="20201029 12:46:20.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.196" endtime="20201029 12:46:20.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.172" endtime="20201029 12:46:20.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.170" endtime="20201029 12:46:20.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.205" endtime="20201029 12:46:20.491"></status>
</kw>
<msg timestamp="20201029 12:46:20.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021129181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.203" endtime="20201029 12:46:20.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021129181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.495" endtime="20201029 12:46:20.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.503" endtime="20201029 12:46:20.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.201" endtime="20201029 12:46:20.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.199" endtime="20201029 12:46:20.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.510" level="INFO">${RESULT} = [{'diff': 4.2332999999998566e-05}, {'diff': 4.1569000000001716e-05}, {'diff': 4.157000000000119e-05}, {'diff': 4.1569000000001716e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.157000000000119e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:20.507" endtime="20201029 12:46:20.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:20.515" level="INFO">${ACCURACY} = {'diff': [4.2332999999998566e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.156999999999772e-05, 4.157000000000119e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:20.511" endtime="20201029 12:46:20.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.520" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:46:20.519" endtime="20201029 12:46:20.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.522" level="INFO">VALUE: [4.2332999999998566e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.156999999999772e-05, 4.157000000000119e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4.1555000000002146e-05, 4.155600000000162e-05, 4.1583000000001286e-05, 4.154199999999858e-05, 4.156999999999772e-05, 4.155599999999815e-05, 4.158399999999729e-05, 4.1569000000001716e-05, 4.158400000000076e-05, 4.1569000000001716e-05, 4.155600000000162e-05, 4.154199999999858e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.155600000000162e-05, 4.1555000000002146e-05, 4.1611000000000425e-05, 4.157000000000119e-05, 4.1526999999999537e-05, 4.151399999999944e-05, 4.1582999999997816e-05, 4.155599999999815e-05, 4.1569000000001716e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1555000000002146e-05, 4.156999999999772e-05, 4.1568999999998246e-05, 4.1596999999997386e-05, 4.154199999999858e-05, 4.1569000000001716e-05, 4.154199999999858e-05, 4.1569000000001716e-05, 4.158400000000076e-05, 4.1555000000002146e-05, 4.1582999999997816e-05, 4.155600000000162e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.1610999999996956e-05, 4.158400000000076e-05]</msg>
<status status="PASS" starttime="20201029 12:46:20.521" endtime="20201029 12:46:20.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.516" endtime="20201029 12:46:20.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.526" endtime="20201029 12:46:20.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.525" endtime="20201029 12:46:20.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.524" endtime="20201029 12:46:20.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.169" endtime="20201029 12:46:20.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.168" endtime="20201029 12:46:20.547"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.556" endtime="20201029 12:46:20.571"></status>
</kw>
<msg timestamp="20201029 12:46:20.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.554" endtime="20201029 12:46:20.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.573" endtime="20201029 12:46:20.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.575" endtime="20201029 12:46:20.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.551" endtime="20201029 12:46:20.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.549" endtime="20201029 12:46:20.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.585" endtime="20201029 12:46:20.871"></status>
</kw>
<msg timestamp="20201029 12:46:20.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021387764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.583" endtime="20201029 12:46:20.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021387764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.875" endtime="20201029 12:46:20.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.883" endtime="20201029 12:46:20.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.581" endtime="20201029 12:46:20.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.579" endtime="20201029 12:46:20.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.890" level="INFO">${RESULT} = [{'diff': 4.231999999999847e-05}, {'diff': 4.1597000000000856e-05}, {'diff': 4.1638999999999565e-05}, {'diff': 4.1569000000001716e-05}, {'diff': 4.1638999999999565e-05}, {'diff': 4.1611000000000425e-0...</msg>
<status status="PASS" starttime="20201029 12:46:20.887" endtime="20201029 12:46:20.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:20.894" level="INFO">${ACCURACY} = {'diff': [4.231999999999847e-05, 4.1597000000000856e-05, 4.1638999999999565e-05, 4.1569000000001716e-05, 4.1638999999999565e-05, 4.1611000000000425e-05, 4.1569000000001716e-05, 4.159800000000033e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:20.891" endtime="20201029 12:46:20.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.898" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:46:20.897" endtime="20201029 12:46:20.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.901" level="INFO">VALUE: [4.231999999999847e-05, 4.1597000000000856e-05, 4.1638999999999565e-05, 4.1569000000001716e-05, 4.1638999999999565e-05, 4.1611000000000425e-05, 4.1569000000001716e-05, 4.159800000000033e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.1624999999999995e-05, 4.1512999999999967e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.1611000000000425e-05, 4.155599999999815e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.1582999999997816e-05, 4.157000000000119e-05, 4.151399999999944e-05, 4.156999999999772e-05, 4.149999999999987e-05, 4.1583000000001286e-05, 4.155599999999815e-05, 4.1569000000001716e-05, 4.1611000000000425e-05, 4.1582999999997816e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.1583000000001286e-05, 4.1638999999999565e-05, 4.1540999999999106e-05, 4.1583000000001286e-05, 4.156999999999772e-05, 4.1568999999998246e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.158400000000076e-05, 4.151399999999944e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1596999999997386e-05, 4.1569000000001716e-05, 4.1569000000001716e-05, 4.155600000000162e-05]</msg>
<status status="PASS" starttime="20201029 12:46:20.900" endtime="20201029 12:46:20.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.895" endtime="20201029 12:46:20.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.905" endtime="20201029 12:46:20.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.904" endtime="20201029 12:46:20.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.903" endtime="20201029 12:46:20.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.548" endtime="20201029 12:46:20.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.547" endtime="20201029 12:46:20.926"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.935" endtime="20201029 12:46:20.951"></status>
</kw>
<msg timestamp="20201029 12:46:20.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.933" endtime="20201029 12:46:20.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.953" endtime="20201029 12:46:20.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.956" endtime="20201029 12:46:20.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.931" endtime="20201029 12:46:20.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.929" endtime="20201029 12:46:20.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.965" endtime="20201029 12:46:21.250"></status>
</kw>
<msg timestamp="20201029 12:46:21.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.963" endtime="20201029 12:46:21.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.254" endtime="20201029 12:46:21.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.263" endtime="20201029 12:46:21.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.961" endtime="20201029 12:46:21.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.959" endtime="20201029 12:46:21.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.269" level="INFO">${RESULT} = [{'diff': 4.231999999999847e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.1554999999998676e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.1611000000000425e-05}, {'diff': 4.1569000000001716e-05...</msg>
<status status="PASS" starttime="20201029 12:46:21.266" endtime="20201029 12:46:21.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.273" level="INFO">${ACCURACY} = {'diff': [4.231999999999847e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.1569000000001716e-05, 4.152800000000248e-05, 4.156999999999772e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:21.270" endtime="20201029 12:46:21.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.278" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.277" endtime="20201029 12:46:21.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.280" level="INFO">VALUE: [4.231999999999847e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.1569000000001716e-05, 4.152800000000248e-05, 4.156999999999772e-05, 4.1597000000000856e-05, 4.159800000000033e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.155600000000162e-05, 4.1568999999998246e-05, 4.156999999999772e-05, 4.155599999999815e-05, 4.158399999999729e-05, 4.1611000000000425e-05, 4.1582999999997816e-05, 4.1596999999997386e-05, 4.1568999999998246e-05, 4.1582999999997816e-05, 4.159800000000033e-05, 4.158400000000076e-05, 4.1569000000001716e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.154200000000205e-05, 4.157000000000119e-05, 4.155599999999815e-05, 4.1582999999997816e-05, 4.1596999999997386e-05, 4.16119999999999e-05, 4.1583000000001286e-05, 4.1554999999998676e-05, 4.155600000000162e-05, 4.1652999999999135e-05, 4.156999999999772e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.152799999999901e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.158400000000076e-05, 4.1568999999998246e-05, 4.157000000000119e-05, 4.159800000000033e-05, 4.1624999999999995e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.279" endtime="20201029 12:46:21.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.274" endtime="20201029 12:46:21.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.285" endtime="20201029 12:46:21.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.284" endtime="20201029 12:46:21.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.283" endtime="20201029 12:46:21.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.927" endtime="20201029 12:46:21.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.926" endtime="20201029 12:46:21.306"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.315" endtime="20201029 12:46:21.331"></status>
</kw>
<msg timestamp="20201029 12:46:21.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.313" endtime="20201029 12:46:21.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.332" endtime="20201029 12:46:21.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.335" endtime="20201029 12:46:21.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.311" endtime="20201029 12:46:21.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.309" endtime="20201029 12:46:21.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.348" endtime="20201029 12:46:21.635"></status>
</kw>
<msg timestamp="20201029 12:46:21.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.345" endtime="20201029 12:46:21.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.641" endtime="20201029 12:46:21.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.652" endtime="20201029 12:46:21.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.340" endtime="20201029 12:46:21.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.338" endtime="20201029 12:46:21.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.661" level="INFO">${RESULT} = [{'diff': 4.2375000000000745e-05}, {'diff': 4.1652999999999135e-05}, {'diff': 4.159800000000033e-05}, {'diff': 4.158399999999729e-05}, {'diff': 4.1597000000000856e-05}, {'diff': 4.1568999999998246e-05...</msg>
<status status="PASS" starttime="20201029 12:46:21.658" endtime="20201029 12:46:21.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.666" level="INFO">${ACCURACY} = {'diff': [4.2375000000000745e-05, 4.1652999999999135e-05, 4.159800000000033e-05, 4.158399999999729e-05, 4.1597000000000856e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.151399999999944e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:46:21.662" endtime="20201029 12:46:21.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.671" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.670" endtime="20201029 12:46:21.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.673" level="INFO">VALUE: [4.2375000000000745e-05, 4.1652999999999135e-05, 4.159800000000033e-05, 4.158399999999729e-05, 4.1597000000000856e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.151399999999944e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.158400000000076e-05, 4.1638999999999565e-05, 4.157000000000119e-05, 4.157000000000119e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.158399999999729e-05, 4.156999999999772e-05, 4.1597000000000856e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.1568999999998246e-05, 4.1597000000000856e-05, 4.1526999999999537e-05, 4.158399999999729e-05, 4.1569000000001716e-05, 4.154199999999858e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.1582999999997816e-05, 4.1569000000001716e-05, 4.152799999999901e-05, 4.1569000000001716e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.16119999999999e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.152799999999901e-05, 4.1597000000000856e-05, 4.155600000000162e-05, 4.1597000000000856e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.672" endtime="20201029 12:46:21.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.667" endtime="20201029 12:46:21.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.678" endtime="20201029 12:46:21.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.676" endtime="20201029 12:46:21.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.675" endtime="20201029 12:46:21.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.307" endtime="20201029 12:46:21.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.306" endtime="20201029 12:46:21.699"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.708" endtime="20201029 12:46:21.724"></status>
</kw>
<msg timestamp="20201029 12:46:21.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.706" endtime="20201029 12:46:21.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.725" endtime="20201029 12:46:21.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.728" endtime="20201029 12:46:21.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.704" endtime="20201029 12:46:21.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.702" endtime="20201029 12:46:21.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.737" endtime="20201029 12:46:22.024"></status>
</kw>
<msg timestamp="20201029 12:46:22.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.735" endtime="20201029 12:46:22.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.028" endtime="20201029 12:46:22.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.036" endtime="20201029 12:46:22.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.733" endtime="20201029 12:46:22.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.731" endtime="20201029 12:46:22.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.043" level="INFO">${RESULT} = [{'diff': 4.2318999999998996e-05}, {'diff': 4.1597000000000856e-05}, {'diff': 4.157000000000119e-05}, {'diff': 4.152799999999901e-05}, {'diff': 4.1526999999999537e-05}, {'diff': 4.156999999999772e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:22.040" endtime="20201029 12:46:22.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.047" level="INFO">${ACCURACY} = {'diff': [4.2318999999998996e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.152799999999901e-05, 4.1526999999999537e-05, 4.156999999999772e-05, 4.1611000000000425e-05, 4.1611000000000425e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:46:22.044" endtime="20201029 12:46:22.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.051" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.050" endtime="20201029 12:46:22.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.054" level="INFO">VALUE: [4.2318999999998996e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.152799999999901e-05, 4.1526999999999537e-05, 4.156999999999772e-05, 4.1611000000000425e-05, 4.1611000000000425e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.155600000000162e-05, 4.155600000000162e-05, 4.151399999999944e-05, 4.1540999999999106e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.149999999999987e-05, 4.158400000000076e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.1610999999996956e-05, 4.1555000000002146e-05, 4.1568999999998246e-05, 4.1569000000001716e-05, 4.159800000000033e-05, 4.158399999999729e-05, 4.1597000000000856e-05, 4.159800000000033e-05, 4.158400000000076e-05, 4.152800000000248e-05, 4.1583000000001286e-05, 4.159799999999686e-05, 4.1596999999997386e-05, 4.157000000000119e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.152799999999901e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.158399999999729e-05, 4.159800000000033e-05, 4.1540999999999106e-05, 4.1541000000002576e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.052" endtime="20201029 12:46:22.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.048" endtime="20201029 12:46:22.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.059" endtime="20201029 12:46:22.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.057" endtime="20201029 12:46:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.056" endtime="20201029 12:46:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.700" endtime="20201029 12:46:22.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.699" endtime="20201029 12:46:22.080"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.088" endtime="20201029 12:46:22.105"></status>
</kw>
<msg timestamp="20201029 12:46:22.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.087" endtime="20201029 12:46:22.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.107" endtime="20201029 12:46:22.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.109" endtime="20201029 12:46:22.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.084" endtime="20201029 12:46:22.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.082" endtime="20201029 12:46:22.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.118" endtime="20201029 12:46:22.422"></status>
</kw>
<msg timestamp="20201029 12:46:22.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.116" endtime="20201029 12:46:22.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.427" endtime="20201029 12:46:22.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.435" endtime="20201029 12:46:22.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.114" endtime="20201029 12:46:22.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.112" endtime="20201029 12:46:22.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.441" level="INFO">${RESULT} = [{'diff': 4.233399999999804e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.1568999999998246e-05}, {'diff': 4.157000000000119e-05}, {'diff': 4.1555000000002146e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:22.438" endtime="20201029 12:46:22.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.445" level="INFO">${ACCURACY} = {'diff': [4.233399999999804e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.1568999999998246e-05, 4.157000000000119e-05, 4.1555000000002146e-05, 4.1583000000001286e-05, 4.158399999999729e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:22.442" endtime="20201029 12:46:22.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.450" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.449" endtime="20201029 12:46:22.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.453" level="INFO">VALUE: [4.233399999999804e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.1568999999998246e-05, 4.157000000000119e-05, 4.1555000000002146e-05, 4.1583000000001286e-05, 4.158399999999729e-05, 4.1582999999997816e-05, 4.158400000000076e-05, 4.165199999999966e-05, 4.158400000000076e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.1624999999999995e-05, 4.157000000000119e-05, 4.158400000000076e-05, 4.158399999999729e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.155600000000162e-05, 4.158399999999729e-05, 4.1611000000000425e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.1568999999998246e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.155599999999815e-05, 4.151399999999944e-05, 4.156999999999772e-05, 4.155599999999815e-05, 4.1555000000002146e-05, 4.1582999999997816e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.1554999999998676e-05, 4.1555000000002146e-05, 4.155600000000162e-05, 4.1582999999997816e-05, 4.1526999999999537e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.1582999999997816e-05, 4.154200000000205e-05, 4.1597000000000856e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.451" endtime="20201029 12:46:22.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.446" endtime="20201029 12:46:22.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.459" endtime="20201029 12:46:22.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.458" endtime="20201029 12:46:22.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.456" endtime="20201029 12:46:22.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.081" endtime="20201029 12:46:22.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.080" endtime="20201029 12:46:22.480"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.489" endtime="20201029 12:46:22.505"></status>
</kw>
<msg timestamp="20201029 12:46:22.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.487" endtime="20201029 12:46:22.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.506" endtime="20201029 12:46:22.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.509" endtime="20201029 12:46:22.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.485" endtime="20201029 12:46:22.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.482" endtime="20201029 12:46:22.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.518" endtime="20201029 12:46:22.804"></status>
</kw>
<msg timestamp="20201029 12:46:22.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.516" endtime="20201029 12:46:22.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.808" endtime="20201029 12:46:22.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.818" endtime="20201029 12:46:22.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.513" endtime="20201029 12:46:22.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.512" endtime="20201029 12:46:22.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.828" level="INFO">${RESULT} = [{'diff': 4.2318999999998996e-05}, {'diff': 4.1569000000001716e-05}, {'diff': 4.157000000000119e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.152799999999901e-05}, {'diff': 4.155599999999815e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:22.824" endtime="20201029 12:46:22.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.834" level="INFO">${ACCURACY} = {'diff': [4.2318999999998996e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.156999999999772e-05, 4.152799999999901e-05, 4.155599999999815e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 12:46:22.830" endtime="20201029 12:46:22.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.840" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.839" endtime="20201029 12:46:22.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.844" level="INFO">VALUE: [4.2318999999998996e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.156999999999772e-05, 4.152799999999901e-05, 4.155599999999815e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.1583000000001286e-05, 4.1582999999997816e-05, 4.159800000000033e-05, 4.157000000000119e-05, 4.152799999999901e-05, 4.157000000000119e-05, 4.149999999999987e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4.16119999999999e-05, 4.1582999999997816e-05, 4.1568999999998246e-05, 4.158400000000076e-05, 4.157000000000119e-05, 4.1611000000000425e-05, 4.1624999999999995e-05, 4.16119999999999e-05, 4.158399999999729e-05, 4.158400000000076e-05, 4.155600000000162e-05, 4.1583000000001286e-05, 4.1610999999996956e-05, 4.1597000000000856e-05, 4.1610999999996956e-05, 4.158400000000076e-05, 4.1611000000000425e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.1569000000001716e-05, 4.1583000000001286e-05, 4.1568999999998246e-05, 4.1583000000001286e-05, 4.1610999999996956e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.1624999999999995e-05, 4.1624999999999995e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.842" endtime="20201029 12:46:22.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.836" endtime="20201029 12:46:22.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.864" endtime="20201029 12:46:22.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.851" endtime="20201029 12:46:22.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.847" endtime="20201029 12:46:22.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.481" endtime="20201029 12:46:22.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.480" endtime="20201029 12:46:22.886"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.899" endtime="20201029 12:46:22.916"></status>
</kw>
<msg timestamp="20201029 12:46:22.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.897" endtime="20201029 12:46:22.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.919" endtime="20201029 12:46:22.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.923" endtime="20201029 12:46:22.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.893" endtime="20201029 12:46:22.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.890" endtime="20201029 12:46:22.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.940" endtime="20201029 12:46:23.241"></status>
</kw>
<msg timestamp="20201029 12:46:23.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027437111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027479444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.936" endtime="20201029 12:46:23.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027437111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027479444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.245" endtime="20201029 12:46:23.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.253" endtime="20201029 12:46:23.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.931" endtime="20201029 12:46:23.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.928" endtime="20201029 12:46:23.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.260" level="INFO">${RESULT} = [{'diff': 4.2332999999998566e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.1582999999997816e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.158399999999729e-05}, {'diff': 4.1596999999997386e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:23.256" endtime="20201029 12:46:23.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:23.264" level="INFO">${ACCURACY} = {'diff': [4.2332999999998566e-05, 4.156999999999772e-05, 4.1582999999997816e-05, 4.156999999999772e-05, 4.158399999999729e-05, 4.1596999999997386e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:23.261" endtime="20201029 12:46:23.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.268" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:46:23.267" endtime="20201029 12:46:23.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.271" level="INFO">VALUE: [4.2332999999998566e-05, 4.156999999999772e-05, 4.1582999999997816e-05, 4.156999999999772e-05, 4.158399999999729e-05, 4.1596999999997386e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.1583000000001286e-05, 4.155600000000162e-05, 4.1583000000001286e-05, 4.154200000000205e-05, 4.1652999999999135e-05, 4.1597000000000856e-05, 4.1597000000000856e-05, 4.1583000000001286e-05, 4.1555000000002146e-05, 4.1569000000001716e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.159800000000033e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.159800000000033e-05, 4.1569000000001716e-05, 4.1624999999999995e-05, 4.1639000000003035e-05, 4.159800000000033e-05, 4.152799999999901e-05, 4.159800000000033e-05, 4.1597000000000856e-05, 4.157000000000119e-05, 4.158400000000076e-05, 4.16799999999988e-05, 4.1583000000001286e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1611000000000425e-05, 4.156999999999772e-05, 4.1582999999997816e-05, 4.1596999999997386e-05, 4.1610999999996956e-05, 4.158399999999729e-05]</msg>
<status status="PASS" starttime="20201029 12:46:23.269" endtime="20201029 12:46:23.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.265" endtime="20201029 12:46:23.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.275" endtime="20201029 12:46:23.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.274" endtime="20201029 12:46:23.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.273" endtime="20201029 12:46:23.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.887" endtime="20201029 12:46:23.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.886" endtime="20201029 12:46:23.296"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.305" endtime="20201029 12:46:23.321"></status>
</kw>
<msg timestamp="20201029 12:46:23.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.303" endtime="20201029 12:46:23.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.323" endtime="20201029 12:46:23.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.325" endtime="20201029 12:46:23.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.301" endtime="20201029 12:46:23.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.299" endtime="20201029 12:46:23.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.334" endtime="20201029 12:46:23.623"></status>
</kw>
<msg timestamp="20201029 12:46:23.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.333" endtime="20201029 12:46:23.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.627" endtime="20201029 12:46:23.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.636" endtime="20201029 12:46:23.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.330" endtime="20201029 12:46:23.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.329" endtime="20201029 12:46:23.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.642" level="INFO">${RESULT} = [{'diff': 4.2304999999999426e-05}, {'diff': 4.1611000000000425e-05}, {'diff': 4.149999999999987e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.155600000000162e-05}, {'diff': 4.1582999999997816e-05...</msg>
<status status="PASS" starttime="20201029 12:46:23.639" endtime="20201029 12:46:23.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:23.646" level="INFO">${ACCURACY} = {'diff': [4.2304999999999426e-05, 4.1611000000000425e-05, 4.149999999999987e-05, 4.1583000000001286e-05, 4.155600000000162e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:46:23.643" endtime="20201029 12:46:23.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.651" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:46:23.650" endtime="20201029 12:46:23.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.653" level="INFO">VALUE: [4.2304999999999426e-05, 4.1611000000000425e-05, 4.149999999999987e-05, 4.1583000000001286e-05, 4.155600000000162e-05, 4.1582999999997816e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1583000000001286e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1611000000000425e-05, 4.158400000000076e-05, 4.158400000000076e-05, 4.1638999999999565e-05, 4.1639000000003035e-05, 4.1569000000001716e-05, 4.154199999999858e-05, 4.1568999999998246e-05, 4.1526999999999537e-05, 4.152800000000248e-05, 4.158400000000076e-05, 4.151399999999944e-05, 4.151399999999944e-05, 4.1583000000001286e-05, 4.1583000000001286e-05, 4.1596999999997386e-05, 4.1568999999998246e-05, 4.158399999999729e-05, 4.1596999999997386e-05, 4.151399999999944e-05, 4.151400000000291e-05, 4.1624999999999995e-05, 4.1582999999997816e-05, 4.1611000000000425e-05, 4.1583000000001286e-05, 4.1638999999999565e-05, 4.158400000000076e-05, 4.158399999999729e-05, 4.158400000000076e-05, 4.1583000000001286e-05, 4.1611000000000425e-05, 4.1638999999999565e-05, 4.158400000000076e-05, 4.1568999999998246e-05, 4.1568999999998246e-05, 4.1583000000001286e-05, 4.1597000000000856e-05]</msg>
<status status="PASS" starttime="20201029 12:46:23.652" endtime="20201029 12:46:23.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.647" endtime="20201029 12:46:23.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.659" endtime="20201029 12:46:23.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.658" endtime="20201029 12:46:23.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.656" endtime="20201029 12:46:23.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.297" endtime="20201029 12:46:23.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.296" endtime="20201029 12:46:23.680"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.688" endtime="20201029 12:46:23.704"></status>
</kw>
<msg timestamp="20201029 12:46:23.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.687" endtime="20201029 12:46:23.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.706" endtime="20201029 12:46:23.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.709" endtime="20201029 12:46:23.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.684" endtime="20201029 12:46:23.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.682" endtime="20201029 12:46:23.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.718" endtime="20201029 12:46:24.004"></status>
</kw>
<msg timestamp="20201029 12:46:24.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021486417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.716" endtime="20201029 12:46:24.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021486417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.008" endtime="20201029 12:46:24.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.016" endtime="20201029 12:46:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.713" endtime="20201029 12:46:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.712" endtime="20201029 12:46:24.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.023" level="INFO">${RESULT} = [{'diff': 4.2375000000000745e-05}, {'diff': 4.1568999999998246e-05}, {'diff': 4.1611000000000425e-05}, {'diff': 4.1596999999997386e-05}, {'diff': 4.2097000000001356e-05}, {'diff': 4.1624999999999995e-...</msg>
<status status="PASS" starttime="20201029 12:46:24.020" endtime="20201029 12:46:24.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.028" level="INFO">${ACCURACY} = {'diff': [4.2375000000000745e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.1596999999997386e-05, 4.2097000000001356e-05, 4.1624999999999995e-05, 4.1597000000000856e-05, 4.1888999999999815e-05...</msg>
<status status="PASS" starttime="20201029 12:46:24.024" endtime="20201029 12:46:24.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.032" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.031" endtime="20201029 12:46:24.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.035" level="INFO">VALUE: [4.2375000000000745e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.1596999999997386e-05, 4.2097000000001356e-05, 4.1624999999999995e-05, 4.1597000000000856e-05, 4.1888999999999815e-05, 4.177799999999926e-05, 4.1875000000000245e-05, 4.2068999999998746e-05, 4.1597000000000856e-05, 4.1582999999997816e-05, 4.1875000000000245e-05, 4.1568999999998246e-05, 4.163800000000009e-05, 4.158400000000076e-05, 4.1582999999997816e-05, 4.159800000000033e-05, 4.2096999999997886e-05, 4.1638999999999565e-05, 4.155599999999815e-05, 4.1638999999999565e-05, 4.208400000000126e-05, 4.1568999999998246e-05, 4.1568999999998246e-05, 4.1931000000001994e-05, 4.158400000000076e-05, 4.155600000000162e-05, 4.176399999999969e-05, 4.1583000000001286e-05, 4.157000000000119e-05, 4.1596999999997386e-05, 4.1888999999999815e-05, 4.202799999999951e-05, 4.180600000000187e-05, 4.157000000000119e-05, 4.156999999999772e-05, 4.151399999999944e-05, 4.176400000000316e-05, 4.1597000000000856e-05, 4.1861000000000675e-05, 4.1833000000001536e-05, 4.1583000000001286e-05, 4.1681000000001744e-05, 4.1611000000000425e-05, 4.157000000000119e-05, 4.155599999999815e-05, 4.174999999999665e-05, 4.151400000000291e-05]</msg>
<status status="PASS" starttime="20201029 12:46:24.033" endtime="20201029 12:46:24.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.029" endtime="20201029 12:46:24.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.040" endtime="20201029 12:46:24.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.038" endtime="20201029 12:46:24.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.037" endtime="20201029 12:46:24.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.681" endtime="20201029 12:46:24.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.680" endtime="20201029 12:46:24.061"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.069" endtime="20201029 12:46:24.085"></status>
</kw>
<msg timestamp="20201029 12:46:24.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.068" endtime="20201029 12:46:24.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.087" endtime="20201029 12:46:24.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.089" endtime="20201029 12:46:24.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.065" endtime="20201029 12:46:24.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.063" endtime="20201029 12:46:24.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.098" endtime="20201029 12:46:24.386"></status>
</kw>
<msg timestamp="20201029 12:46:24.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.097" endtime="20201029 12:46:24.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.390" endtime="20201029 12:46:24.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.398" endtime="20201029 12:46:24.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.094" endtime="20201029 12:46:24.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.092" endtime="20201029 12:46:24.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.405" level="INFO">${RESULT} = [{'diff': 4.3139000000001065e-05}, {'diff': 4.2360999999997706e-05}, {'diff': 4.256999999999872e-05}, {'diff': 4.2277000000000287e-05}, {'diff': 4.294399999999962e-05}, {'diff': 4.2903000000000385e-05...</msg>
<status status="PASS" starttime="20201029 12:46:24.402" endtime="20201029 12:46:24.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.409" level="INFO">${ACCURACY} = {'diff': [4.3139000000001065e-05, 4.2360999999997706e-05, 4.256999999999872e-05, 4.2277000000000287e-05, 4.294399999999962e-05, 4.2903000000000385e-05, 4.247199999999826e-05, 4.2582999999998816e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:46:24.406" endtime="20201029 12:46:24.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.415" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.414" endtime="20201029 12:46:24.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.418" level="INFO">VALUE: [4.3139000000001065e-05, 4.2360999999997706e-05, 4.256999999999872e-05, 4.2277000000000287e-05, 4.294399999999962e-05, 4.2903000000000385e-05, 4.247199999999826e-05, 4.2582999999998816e-05, 4.2444999999998595e-05, 4.293000000000005e-05, 4.2111000000000925e-05, 4.2402999999999885e-05, 4.251400000000044e-05, 4.293000000000005e-05, 4.251400000000044e-05, 4.269400000000284e-05, 4.305599999999965e-05, 4.2083000000001786e-05, 4.2445000000002064e-05, 4.28059999999994e-05, 4.3055000000000176e-05, 4.258400000000176e-05, 4.2889000000000815e-05, 4.2125000000000495e-05, 4.245800000000216e-05, 4.251400000000044e-05, 4.244400000000259e-05, 4.213800000000059e-05, 4.293000000000005e-05, 4.2889000000000815e-05, 4.252800000000001e-05, 4.252800000000001e-05, 4.251300000000097e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.2361000000001175e-05, 4.2582999999998816e-05, 4.2459000000001634e-05, 4.306999999999922e-05, 4.2194999999998345e-05, 4.2818999999999496e-05, 4.250000000000087e-05, 4.208399999999779e-05, 4.301399999999747e-05, 4.273599999999808e-05, 4.2889000000000815e-05, 4.251400000000044e-05, 4.244399999999912e-05, 4.2846999999998636e-05, 4.306999999999922e-05]</msg>
<status status="PASS" starttime="20201029 12:46:24.416" endtime="20201029 12:46:24.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.410" endtime="20201029 12:46:24.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.430" endtime="20201029 12:46:24.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.428" endtime="20201029 12:46:24.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.426" endtime="20201029 12:46:24.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.061" endtime="20201029 12:46:24.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.061" endtime="20201029 12:46:24.451"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.460" endtime="20201029 12:46:24.477"></status>
</kw>
<msg timestamp="20201029 12:46:24.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.458" endtime="20201029 12:46:24.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.479" endtime="20201029 12:46:24.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.481" endtime="20201029 12:46:24.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.455" endtime="20201029 12:46:24.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.453" endtime="20201029 12:46:24.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.492" endtime="20201029 12:46:24.779"></status>
</kw>
<msg timestamp="20201029 12:46:24.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.490" endtime="20201029 12:46:24.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.783" endtime="20201029 12:46:24.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.792" endtime="20201029 12:46:24.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.487" endtime="20201029 12:46:24.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.485" endtime="20201029 12:46:24.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.798" level="INFO">${RESULT} = [{'diff': 4.4569000000001247e-05}, {'diff': 4.39999999999989e-05}, {'diff': 4.369400000000037e-05}, {'diff': 4.3208999999998915e-05}, {'diff': 4.376400000000169e-05}, {'diff': 4.356999999999972e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:24.795" endtime="20201029 12:46:24.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.802" level="INFO">${ACCURACY} = {'diff': [4.4569000000001247e-05, 4.39999999999989e-05, 4.369400000000037e-05, 4.3208999999998915e-05, 4.376400000000169e-05, 4.356999999999972e-05, 4.3945000000000095e-05, 4.401400000000194e-05, 4.32...</msg>
<status status="PASS" starttime="20201029 12:46:24.799" endtime="20201029 12:46:24.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.807" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.806" endtime="20201029 12:46:24.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.809" level="INFO">VALUE: [4.4569000000001247e-05, 4.39999999999989e-05, 4.369400000000037e-05, 4.3208999999998915e-05, 4.376400000000169e-05, 4.356999999999972e-05, 4.3945000000000095e-05, 4.401400000000194e-05, 4.3208999999998915e-05, 4.324999999999815e-05, 4.376399999999822e-05, 4.3638999999998096e-05, 4.325000000000162e-05, 4.398599999999933e-05, 4.375000000000212e-05, 4.401399999999847e-05, 4.3652999999997666e-05, 4.383399999999954e-05, 4.322199999999901e-05, 4.397199999999976e-05, 4.326400000000119e-05, 4.3139000000001065e-05, 4.3431000000000025e-05, 4.3737000000002024e-05, 4.394400000000062e-05, 4.329200000000033e-05, 4.3569000000000246e-05, 4.3694999999999845e-05, 4.3569000000000246e-05, 4.408299999999685e-05, 4.3582999999999816e-05, 4.327800000000076e-05, 4.3068999999999746e-05, 4.398599999999933e-05, 4.34999999999984e-05, 4.319399999999987e-05, 4.394400000000062e-05, 4.4110999999999456e-05, 4.4083000000000316e-05, 4.3346999999999136e-05, 4.376399999999822e-05, 4.3819000000000496e-05, 4.3194999999999345e-05, 4.320799999999944e-05, 4.326400000000119e-05, 4.3472999999998735e-05, 4.34999999999984e-05, 4.394400000000062e-05, 4.401399999999847e-05, 4.350000000000187e-05]</msg>
<status status="PASS" starttime="20201029 12:46:24.808" endtime="20201029 12:46:24.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.803" endtime="20201029 12:46:24.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.815" endtime="20201029 12:46:24.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.813" endtime="20201029 12:46:24.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.812" endtime="20201029 12:46:24.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.452" endtime="20201029 12:46:24.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.451" endtime="20201029 12:46:24.836"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.844" endtime="20201029 12:46:24.860"></status>
</kw>
<msg timestamp="20201029 12:46:24.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.843" endtime="20201029 12:46:24.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.862" endtime="20201029 12:46:24.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.864" endtime="20201029 12:46:24.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.840" endtime="20201029 12:46:24.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.838" endtime="20201029 12:46:24.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.873" endtime="20201029 12:46:25.164"></status>
</kw>
<msg timestamp="20201029 12:46:25.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021276333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.872" endtime="20201029 12:46:25.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021276333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.174" endtime="20201029 12:46:25.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.192" endtime="20201029 12:46:25.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.869" endtime="20201029 12:46:25.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.868" endtime="20201029 12:46:25.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.206" level="INFO">${RESULT} = [{'diff': 4.562499999999706e-05}, {'diff': 4.4389000000002315e-05}, {'diff': 4.420800000000044e-05}, {'diff': 4.424999999999915e-05}, {'diff': 4.4931000000001525e-05}, {'diff': 4.4819000000001497e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:25.199" endtime="20201029 12:46:25.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:25.217" level="INFO">${ACCURACY} = {'diff': [4.562499999999706e-05, 4.4389000000002315e-05, 4.420800000000044e-05, 4.424999999999915e-05, 4.4931000000001525e-05, 4.4819000000001497e-05, 4.46939999999979e-05, 4.4638999999999096e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:46:25.208" endtime="20201029 12:46:25.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.226" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:46:25.224" endtime="20201029 12:46:25.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.231" level="INFO">VALUE: [4.562499999999706e-05, 4.4389000000002315e-05, 4.420800000000044e-05, 4.424999999999915e-05, 4.4931000000001525e-05, 4.4819000000001497e-05, 4.46939999999979e-05, 4.4638999999999096e-05, 4.4889000000002816e-05, 4.4597000000000386e-05, 4.4569000000001247e-05, 4.4569000000001247e-05, 4.427800000000176e-05, 4.4431000000001025e-05, 4.4624999999999526e-05, 4.43060000000009e-05, 4.4388999999998846e-05, 4.425000000000262e-05, 4.4125000000002496e-05, 4.4639000000002566e-05, 4.474999999999965e-05, 4.4709000000000415e-05, 4.4861000000000206e-05, 4.4638999999999096e-05, 4.494399999999815e-05, 4.455599999999768e-05, 4.451400000000244e-05, 4.4319000000000996e-05, 4.447200000000026e-05, 4.4888999999999346e-05, 4.501399999999947e-05, 4.49999999999999e-05, 4.505599999999818e-05, 4.4139000000002065e-05, 4.45129999999995e-05, 4.497200000000076e-05, 4.4638999999999096e-05, 4.419400000000087e-05, 4.4431000000001025e-05, 4.4874999999999776e-05, 4.4360999999999706e-05, 4.4722999999999985e-05, 4.4638999999999096e-05, 4.420800000000044e-05, 4.4333000000000566e-05, 4.4624999999999526e-05, 4.5069000000001747e-05, 4.502799999999904e-05, 4.4945000000001095e-05, 4.482000000000097e-05]</msg>
<status status="PASS" starttime="20201029 12:46:25.228" endtime="20201029 12:46:25.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.219" endtime="20201029 12:46:25.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.242" endtime="20201029 12:46:25.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.238" endtime="20201029 12:46:25.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.236" endtime="20201029 12:46:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.836" endtime="20201029 12:46:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.836" endtime="20201029 12:46:25.263"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.272" endtime="20201029 12:46:25.288"></status>
</kw>
<msg timestamp="20201029 12:46:25.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.270" endtime="20201029 12:46:25.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.289" endtime="20201029 12:46:25.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.292" endtime="20201029 12:46:25.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.268" endtime="20201029 12:46:25.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.265" endtime="20201029 12:46:25.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.301" endtime="20201029 12:46:25.587"></status>
</kw>
<msg timestamp="20201029 12:46:25.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02148825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021534181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:25.299" endtime="20201029 12:46:25.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02148825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021534181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:25.592" endtime="20201029 12:46:25.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.600" endtime="20201029 12:46:25.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.297" endtime="20201029 12:46:25.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.295" endtime="20201029 12:46:25.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.606" level="INFO">${RESULT} = [{'diff': 4.5930999999999056e-05}, {'diff': 4.606899999999928e-05}, {'diff': 4.555499999999921e-05}, {'diff': 4.519400000000187e-05}, {'diff': 4.5667000000002705e-05}, {'diff': 4.5917000000002955e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:25.603" endtime="20201029 12:46:25.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:25.611" level="INFO">${ACCURACY} = {'diff': [4.5930999999999056e-05, 4.606899999999928e-05, 4.555499999999921e-05, 4.519400000000187e-05, 4.5667000000002705e-05, 4.5917000000002955e-05, 4.5139000000003066e-05, 4.548600000000083e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:25.607" endtime="20201029 12:46:25.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.615" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:46:25.614" endtime="20201029 12:46:25.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.617" level="INFO">VALUE: [4.5930999999999056e-05, 4.606899999999928e-05, 4.555499999999921e-05, 4.519400000000187e-05, 4.5667000000002705e-05, 4.5917000000002955e-05, 4.5139000000003066e-05, 4.548600000000083e-05, 4.555600000000215e-05, 4.5125000000000026e-05, 4.576400000000022e-05, 4.592999999999958e-05, 4.545799999999822e-05, 4.5167000000002205e-05, 4.604199999999961e-05, 4.556999999999825e-05, 4.570800000000194e-05, 4.5875000000000776e-05, 4.58329999999986e-05, 4.598600000000133e-05, 4.5902999999999916e-05, 4.5902999999999916e-05, 4.513800000000012e-05, 4.5138999999999596e-05, 4.592999999999958e-05, 4.577799999999979e-05, 4.523600000000058e-05, 4.60000000000009e-05, 4.58190000000025e-05, 4.5625000000000526e-05, 4.544400000000212e-05, 4.5402999999999416e-05, 4.552799999999954e-05, 4.5125000000000026e-05, 4.5333000000001566e-05, 4.5708999999997946e-05, 4.548600000000083e-05, 4.5625000000000526e-05, 4.58329999999986e-05, 4.5597000000001386e-05, 4.608299999999885e-05, 4.60000000000009e-05, 4.525000000000015e-05, 4.53060000000019e-05, 4.561200000000043e-05, 4.515199999999969e-05, 4.5319000000001997e-05, 4.5431000000002025e-05, 4.5931000000002525e-05, 4.601400000000047e-05]</msg>
<status status="PASS" starttime="20201029 12:46:25.616" endtime="20201029 12:46:25.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.611" endtime="20201029 12:46:25.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.622" endtime="20201029 12:46:25.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.621" endtime="20201029 12:46:25.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.620" endtime="20201029 12:46:25.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.264" endtime="20201029 12:46:25.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.263" endtime="20201029 12:46:25.643"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.652" endtime="20201029 12:46:25.669"></status>
</kw>
<msg timestamp="20201029 12:46:25.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.650" endtime="20201029 12:46:25.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.670" endtime="20201029 12:46:25.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.673" endtime="20201029 12:46:25.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.648" endtime="20201029 12:46:25.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.645" endtime="20201029 12:46:25.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.682" endtime="20201029 12:46:25.968"></status>
</kw>
<msg timestamp="20201029 12:46:25.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.680" endtime="20201029 12:46:25.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.972" endtime="20201029 12:46:25.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.981" endtime="20201029 12:46:25.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.678" endtime="20201029 12:46:25.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.676" endtime="20201029 12:46:25.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.987" level="INFO">${RESULT} = [{'diff': 4.705600000000018e-05}, {'diff': 4.701400000000147e-05}, {'diff': 4.648600000000183e-05}, {'diff': 4.673600000000208e-05}, {'diff': 4.656899999999978e-05}, {'diff': 4.655500000000021e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:25.984" endtime="20201029 12:46:25.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:25.991" level="INFO">${ACCURACY} = {'diff': [4.705600000000018e-05, 4.701400000000147e-05, 4.648600000000183e-05, 4.673600000000208e-05, 4.656899999999978e-05, 4.655500000000021e-05, 4.6875000000001776e-05, 4.6708999999998946e-05, 4.63...</msg>
<status status="PASS" starttime="20201029 12:46:25.988" endtime="20201029 12:46:25.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.996" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:46:25.995" endtime="20201029 12:46:25.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.998" level="INFO">VALUE: [4.705600000000018e-05, 4.701400000000147e-05, 4.648600000000183e-05, 4.673600000000208e-05, 4.656899999999978e-05, 4.655500000000021e-05, 4.6875000000001776e-05, 4.6708999999998946e-05, 4.633399999999857e-05, 4.622200000000201e-05, 4.698599999999886e-05, 4.624999999999768e-05, 4.644399999999965e-05, 4.699999999999843e-05, 4.649999999999793e-05, 4.706900000000028e-05, 4.652800000000054e-05, 4.70000000000019e-05, 4.6639000000001096e-05, 4.612499999999756e-05, 4.637499999999781e-05, 4.706900000000028e-05, 4.656899999999978e-05, 4.659699999999892e-05, 4.706999999999975e-05, 4.6959000000002665e-05, 4.6903000000000916e-05, 4.651400000000097e-05, 4.6695000000002845e-05, 4.636099999999824e-05, 4.6889000000001346e-05, 4.6139000000000596e-05, 4.674999999999818e-05, 4.626400000000072e-05, 4.65130000000015e-05, 4.705500000000071e-05, 4.620799999999897e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.657000000000272e-05, 4.68199999999995e-05, 4.6153000000000166e-05, 4.647200000000226e-05, 4.6139000000000596e-05, 4.6444999999999126e-05, 4.680500000000046e-05, 4.6694999999999376e-05, 4.677800000000079e-05, 4.626400000000072e-05, 4.624999999999768e-05]</msg>
<status status="PASS" starttime="20201029 12:46:25.997" endtime="20201029 12:46:26.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.992" endtime="20201029 12:46:26.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.004" endtime="20201029 12:46:26.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.002" endtime="20201029 12:46:26.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.001" endtime="20201029 12:46:26.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.644" endtime="20201029 12:46:26.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.643" endtime="20201029 12:46:26.025"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.033" endtime="20201029 12:46:26.049"></status>
</kw>
<msg timestamp="20201029 12:46:26.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.032" endtime="20201029 12:46:26.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.051" endtime="20201029 12:46:26.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.053" endtime="20201029 12:46:26.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.029" endtime="20201029 12:46:26.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.027" endtime="20201029 12:46:26.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.062" endtime="20201029 12:46:26.348"></status>
</kw>
<msg timestamp="20201029 12:46:26.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02142875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:26.061" endtime="20201029 12:46:26.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02142875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:26.352" endtime="20201029 12:46:26.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.360" endtime="20201029 12:46:26.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.058" endtime="20201029 12:46:26.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.056" endtime="20201029 12:46:26.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.367" level="INFO">${RESULT} = [{'diff': 4.827799999999882e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.7917000000001486e-05}, {'diff': 4.7125000000002026e-05}, {'diff': 4.788899999999888e-05}, {'diff': 4.78200000000005e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:26.363" endtime="20201029 12:46:26.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:26.372" level="INFO">${ACCURACY} = {'diff': [4.827799999999882e-05, 4.7458999999999696e-05, 4.7917000000001486e-05, 4.7125000000002026e-05, 4.788899999999888e-05, 4.78200000000005e-05, 4.758300000000035e-05, 4.755600000000068e-05, 4.71...</msg>
<status status="PASS" starttime="20201029 12:46:26.368" endtime="20201029 12:46:26.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.376" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:46:26.375" endtime="20201029 12:46:26.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.378" level="INFO">VALUE: [4.827799999999882e-05, 4.7458999999999696e-05, 4.7917000000001486e-05, 4.7125000000002026e-05, 4.788899999999888e-05, 4.78200000000005e-05, 4.758300000000035e-05, 4.755600000000068e-05, 4.7139000000001596e-05, 4.712499999999856e-05, 4.7861000000003207e-05, 4.7445000000000126e-05, 4.749999999999893e-05, 4.792999999999811e-05, 4.749999999999893e-05, 4.718000000000083e-05, 4.784700000000017e-05, 4.726400000000172e-05, 4.792999999999811e-05, 4.788899999999888e-05, 4.781899999999756e-05, 4.780500000000146e-05, 4.723600000000258e-05, 4.7458999999999696e-05, 4.722199999999954e-05, 4.761099999999949e-05, 4.723600000000258e-05, 4.718000000000083e-05, 4.718000000000083e-05, 4.730500000000096e-05, 4.7931000000001056e-05, 4.758399999999982e-05, 4.763899999999863e-05, 4.780599999999746e-05, 4.805500000000171e-05, 4.786099999999974e-05, 4.7653000000001666e-05, 4.766599999999829e-05, 4.762499999999906e-05, 4.798599999999986e-05, 4.7445000000000126e-05, 4.804099999999867e-05, 4.76940000000009e-05, 4.730500000000096e-05, 4.780499999999799e-05, 4.781900000000103e-05, 4.723599999999911e-05, 4.7181000000000306e-05, 4.7931000000001056e-05, 4.7681000000000806e-05]</msg>
<status status="PASS" starttime="20201029 12:46:26.377" endtime="20201029 12:46:26.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.372" endtime="20201029 12:46:26.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.383" endtime="20201029 12:46:26.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.382" endtime="20201029 12:46:26.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.381" endtime="20201029 12:46:26.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.025" endtime="20201029 12:46:26.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.025" endtime="20201029 12:46:26.404"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.413" endtime="20201029 12:46:26.429"></status>
</kw>
<msg timestamp="20201029 12:46:26.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.411" endtime="20201029 12:46:26.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.430" endtime="20201029 12:46:26.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.433" endtime="20201029 12:46:26.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.409" endtime="20201029 12:46:26.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.406" endtime="20201029 12:46:26.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.442" endtime="20201029 12:46:26.730"></status>
</kw>
<msg timestamp="20201029 12:46:26.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021428681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.440" endtime="20201029 12:46:26.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021428681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.734" endtime="20201029 12:46:26.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.742" endtime="20201029 12:46:26.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.438" endtime="20201029 12:46:26.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.436" endtime="20201029 12:46:26.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.749" level="INFO">${RESULT} = [{'diff': 4.9487000000000836e-05}, {'diff': 4.812499999999956e-05}, {'diff': 4.836100000000024e-05}, {'diff': 4.848599999999689e-05}, {'diff': 4.824999999999968e-05}, {'diff': 4.866599999999929e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:26.746" endtime="20201029 12:46:26.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:26.753" level="INFO">${ACCURACY} = {'diff': [4.9487000000000836e-05, 4.812499999999956e-05, 4.836100000000024e-05, 4.848599999999689e-05, 4.824999999999968e-05, 4.866599999999929e-05, 4.830499999999849e-05, 4.888899999999988e-05, 4.837...</msg>
<status status="PASS" starttime="20201029 12:46:26.750" endtime="20201029 12:46:26.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.757" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:46:26.756" endtime="20201029 12:46:26.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.760" level="INFO">VALUE: [4.9487000000000836e-05, 4.812499999999956e-05, 4.836100000000024e-05, 4.848599999999689e-05, 4.824999999999968e-05, 4.866599999999929e-05, 4.830499999999849e-05, 4.888899999999988e-05, 4.837499999999981e-05, 4.829200000000186e-05, 4.830600000000143e-05, 4.849999999999993e-05, 4.826399999999925e-05, 4.855599999999821e-05, 4.811099999999999e-05, 4.811099999999999e-05, 4.873600000000061e-05, 4.858400000000082e-05, 4.859700000000092e-05, 4.856900000000178e-05, 4.90270000000001e-05, 4.829099999999892e-05, 4.8987000000000336e-05, 4.862500000000006e-05, 4.887500000000031e-05, 4.890299999999945e-05, 4.848600000000036e-05, 4.8931000000002056e-05, 4.840199999999947e-05, 4.859700000000092e-05, 4.849999999999993e-05, 4.855599999999821e-05, 4.887500000000031e-05, 4.854099999999917e-05, 4.841599999999904e-05, 4.827699999999935e-05, 4.8931000000002056e-05, 4.873600000000061e-05, 4.829099999999892e-05, 4.887500000000031e-05, 4.887500000000031e-05, 4.887500000000031e-05, 4.86940000000019e-05, 4.893000000000258e-05, 4.893000000000258e-05, 4.856899999999831e-05, 4.887500000000031e-05, 4.857000000000125e-05, 4.901300000000053e-05, 4.869499999999791e-05]</msg>
<status status="PASS" starttime="20201029 12:46:26.758" endtime="20201029 12:46:26.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.754" endtime="20201029 12:46:26.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.765" endtime="20201029 12:46:26.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.763" endtime="20201029 12:46:26.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.762" endtime="20201029 12:46:26.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.405" endtime="20201029 12:46:26.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.404" endtime="20201029 12:46:26.785"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.794" endtime="20201029 12:46:26.811"></status>
</kw>
<msg timestamp="20201029 12:46:26.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.792" endtime="20201029 12:46:26.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.813" endtime="20201029 12:46:26.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.815" endtime="20201029 12:46:26.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.790" endtime="20201029 12:46:26.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.788" endtime="20201029 12:46:26.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.824" endtime="20201029 12:46:27.111"></status>
</kw>
<msg timestamp="20201029 12:46:27.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.822" endtime="20201029 12:46:27.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.115" endtime="20201029 12:46:27.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.123" endtime="20201029 12:46:27.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.820" endtime="20201029 12:46:27.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.818" endtime="20201029 12:46:27.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.130" level="INFO">${RESULT} = [{'diff': 4.979199999999989e-05}, {'diff': 4.930599999999896e-05}, {'diff': 4.92079999999985e-05}, {'diff': 4.925000000000068e-05}, {'diff': 4.91529999999997e-05}, {'diff': 4.940299999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:27.126" endtime="20201029 12:46:27.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:27.134" level="INFO">${ACCURACY} = {'diff': [4.979199999999989e-05, 4.930599999999896e-05, 4.92079999999985e-05, 4.925000000000068e-05, 4.91529999999997e-05, 4.940299999999995e-05, 4.962500000000106e-05, 5.004100000000067e-05, 4.927799...</msg>
<status status="PASS" starttime="20201029 12:46:27.131" endtime="20201029 12:46:27.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.138" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:46:27.137" endtime="20201029 12:46:27.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.141" level="INFO">VALUE: [4.979199999999989e-05, 4.930599999999896e-05, 4.92079999999985e-05, 4.925000000000068e-05, 4.91529999999997e-05, 4.940299999999995e-05, 4.962500000000106e-05, 5.004100000000067e-05, 4.927799999999982e-05, 4.937499999999734e-05, 4.961100000000149e-05, 4.998600000000186e-05, 4.952800000000007e-05, 5.008299999999938e-05, 4.973600000000161e-05, 4.912500000000056e-05, 4.916699999999927e-05, 4.997200000000229e-05, 4.95140000000005e-05, 4.950000000000093e-05, 4.930599999999896e-05, 4.961100000000149e-05, 4.9707999999999e-05, 4.923599999999764e-05, 4.912500000000056e-05, 4.912500000000056e-05, 4.966699999999977e-05, 4.923600000000111e-05, 4.998599999999839e-05, 4.969499999999891e-05, 4.912500000000056e-05, 5.004200000000014e-05, 4.954199999999964e-05, 4.916699999999927e-05, 4.947200000000179e-05, 4.983299999999913e-05, 4.923600000000111e-05, 4.961100000000149e-05, 4.955499999999974e-05, 4.980499999999999e-05, 4.911100000000099e-05, 4.966600000000029e-05, 4.909800000000089e-05, 4.973599999999814e-05, 4.9681000000002806e-05, 5.002699999999763e-05, 4.918099999999884e-05, 4.922199999999807e-05, 4.9181000000002306e-05, 4.924999999999721e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.139" endtime="20201029 12:46:27.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.135" endtime="20201029 12:46:27.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.146" endtime="20201029 12:46:27.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.145" endtime="20201029 12:46:27.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.144" endtime="20201029 12:46:27.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.786" endtime="20201029 12:46:27.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.786" endtime="20201029 12:46:27.167"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.176" endtime="20201029 12:46:27.192"></status>
</kw>
<msg timestamp="20201029 12:46:27.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.174" endtime="20201029 12:46:27.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.194" endtime="20201029 12:46:27.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.196" endtime="20201029 12:46:27.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.172" endtime="20201029 12:46:27.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.170" endtime="20201029 12:46:27.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.205" endtime="20201029 12:46:27.490"></status>
</kw>
<msg timestamp="20201029 12:46:27.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021501875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.203" endtime="20201029 12:46:27.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021501875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.494" endtime="20201029 12:46:27.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.502" endtime="20201029 12:46:27.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.201" endtime="20201029 12:46:27.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.199" endtime="20201029 12:46:27.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.509" level="INFO">${RESULT} = [{'diff': 5.148599999999989e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.031900000000006e-05}, {'diff': 5.024999999999821e-05}, {'diff': 5.030500000000049e-05}, {'diff': 5.100000000000243e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:27.506" endtime="20201029 12:46:27.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:27.514" level="INFO">${ACCURACY} = {'diff': [5.148599999999989e-05, 5.072199999999957e-05, 5.031900000000006e-05, 5.024999999999821e-05, 5.030500000000049e-05, 5.100000000000243e-05, 5.088900000000188e-05, 5.093100000000059e-05, 5.0917...</msg>
<status status="PASS" starttime="20201029 12:46:27.510" endtime="20201029 12:46:27.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.519" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:46:27.517" endtime="20201029 12:46:27.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.521" level="INFO">VALUE: [5.148599999999989e-05, 5.072199999999957e-05, 5.031900000000006e-05, 5.024999999999821e-05, 5.030500000000049e-05, 5.100000000000243e-05, 5.088900000000188e-05, 5.093100000000059e-05, 5.091700000000102e-05, 5.03469999999992e-05, 5.055600000000021e-05, 5.086099999999927e-05, 5.03469999999992e-05, 5.104200000000114e-05, 5.036199999999824e-05, 5.027700000000135e-05, 5.054200000000064e-05, 5.070899999999948e-05, 5.0195000000002876e-05, 5.048600000000236e-05, 5.062500000000206e-05, 5.062500000000206e-05, 5.105499999999777e-05, 5.03469999999992e-05, 5.068100000000034e-05, 5.051399999999803e-05, 5.030599999999996e-05, 5.061099999999902e-05, 5.062499999999859e-05, 5.1014000000002e-05, 5.066700000000077e-05, 5.0415999999997574e-05, 5.0429999999997144e-05, 5.097199999999982e-05, 5.041700000000052e-05, 5.023599999999864e-05, 5.0708e-05, 5.056999999999978e-05, 5.012499999999809e-05, 5.100000000000243e-05, 5.068100000000034e-05, 5.03469999999992e-05, 5.093100000000059e-05, 5.043100000000009e-05, 5.0929999999997644e-05, 5.0915999999998074e-05, 5.048599999999889e-05, 5.055499999999727e-05, 5.050000000000193e-05, 5.054200000000064e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.520" endtime="20201029 12:46:27.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.515" endtime="20201029 12:46:27.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.526" endtime="20201029 12:46:27.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.524" endtime="20201029 12:46:27.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.523" endtime="20201029 12:46:27.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.168" endtime="20201029 12:46:27.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.167" endtime="20201029 12:46:27.547"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.555" endtime="20201029 12:46:27.572"></status>
</kw>
<msg timestamp="20201029 12:46:27.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.554" endtime="20201029 12:46:27.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.573" endtime="20201029 12:46:27.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.576" endtime="20201029 12:46:27.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.551" endtime="20201029 12:46:27.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.549" endtime="20201029 12:46:27.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.584" endtime="20201029 12:46:27.871"></status>
</kw>
<msg timestamp="20201029 12:46:27.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021317139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.583" endtime="20201029 12:46:27.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021317139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.875" endtime="20201029 12:46:27.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.883" endtime="20201029 12:46:27.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.580" endtime="20201029 12:46:27.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.579" endtime="20201029 12:46:27.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.890" level="INFO">${RESULT} = [{'diff': 5.199999999999996e-05}, {'diff': 5.193099999999812e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.11669999999978e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.136199999999924e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:27.886" endtime="20201029 12:46:27.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:27.894" level="INFO">${ACCURACY} = {'diff': [5.199999999999996e-05, 5.193099999999812e-05, 5.12080000000005e-05, 5.11669999999978e-05, 5.149999999999946e-05, 5.136199999999924e-05, 5.154100000000217e-05, 5.116700000000127e-05, 5.120800...</msg>
<status status="PASS" starttime="20201029 12:46:27.891" endtime="20201029 12:46:27.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.898" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:46:27.897" endtime="20201029 12:46:27.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.901" level="INFO">VALUE: [5.199999999999996e-05, 5.193099999999812e-05, 5.12080000000005e-05, 5.11669999999978e-05, 5.149999999999946e-05, 5.136199999999924e-05, 5.154100000000217e-05, 5.116700000000127e-05, 5.12080000000005e-05, 5.193000000000211e-05, 5.111199999999899e-05, 5.16669999999983e-05, 5.155600000000121e-05, 5.13340000000001e-05, 5.11669999999978e-05, 5.169400000000143e-05, 5.122299999999955e-05, 5.205599999999824e-05, 5.176399999999928e-05, 5.186100000000027e-05, 5.130500000000149e-05, 5.137499999999934e-05, 5.112499999999909e-05, 5.154199999999817e-05, 5.1665999999998824e-05, 5.18470000000007e-05, 5.161100000000002e-05, 5.159700000000045e-05, 5.19730000000003e-05, 5.13470000000002e-05, 5.140299999999848e-05, 5.123599999999964e-05, 5.173600000000014e-05, 5.138899999999891e-05, 5.122200000000007e-05, 5.166700000000177e-05, 5.144500000000066e-05, 5.204200000000214e-05, 5.173600000000014e-05, 5.163899999999916e-05, 5.154200000000164e-05, 5.130600000000096e-05, 5.20409999999992e-05, 5.14729999999998e-05, 5.169499999999744e-05, 5.13470000000002e-05, 5.1971999999997354e-05, 5.1665999999998824e-05, 5.133300000000063e-05, 5.1151999999998754e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.899" endtime="20201029 12:46:27.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.895" endtime="20201029 12:46:27.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.906" endtime="20201029 12:46:27.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.904" endtime="20201029 12:46:27.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.903" endtime="20201029 12:46:27.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.548" endtime="20201029 12:46:27.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.547" endtime="20201029 12:46:27.926"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.935" endtime="20201029 12:46:27.952"></status>
</kw>
<msg timestamp="20201029 12:46:27.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.933" endtime="20201029 12:46:27.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.954" endtime="20201029 12:46:27.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.956" endtime="20201029 12:46:27.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.931" endtime="20201029 12:46:27.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.929" endtime="20201029 12:46:27.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.965" endtime="20201029 12:46:28.251"></status>
</kw>
<msg timestamp="20201029 12:46:28.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.964" endtime="20201029 12:46:28.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.255" endtime="20201029 12:46:28.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.265" endtime="20201029 12:46:28.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.961" endtime="20201029 12:46:28.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.960" endtime="20201029 12:46:28.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.271" level="INFO">${RESULT} = [{'diff': 5.355599999999974e-05}, {'diff': 5.23609999999973e-05}, {'diff': 5.2971999999998354e-05}, {'diff': 5.25279999999996e-05}, {'diff': 5.229199999999892e-05}, {'diff': 5.23470000000012e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:28.268" endtime="20201029 12:46:28.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:28.275" level="INFO">${ACCURACY} = {'diff': [5.355599999999974e-05, 5.23609999999973e-05, 5.2971999999998354e-05, 5.25279999999996e-05, 5.229199999999892e-05, 5.23470000000012e-05, 5.28470000000017e-05, 5.259699999999798e-05, 5.2167000...</msg>
<status status="PASS" starttime="20201029 12:46:28.272" endtime="20201029 12:46:28.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.280" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:46:28.279" endtime="20201029 12:46:28.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.282" level="INFO">VALUE: [5.355599999999974e-05, 5.23609999999973e-05, 5.2971999999998354e-05, 5.25279999999996e-05, 5.229199999999892e-05, 5.23470000000012e-05, 5.28470000000017e-05, 5.259699999999798e-05, 5.216700000000227e-05, 5.265299999999973e-05, 5.248600000000089e-05, 5.21669999999988e-05, 5.277799999999985e-05, 5.272200000000157e-05, 5.208299999999791e-05, 5.2235999999997174e-05, 5.279199999999942e-05, 5.212500000000009e-05, 5.2985999999997924e-05, 5.250000000000046e-05, 5.297200000000182e-05, 5.304199999999967e-05, 5.252700000000013e-05, 5.254199999999917e-05, 5.21669999999988e-05, 5.229200000000239e-05, 5.2415999999999574e-05, 5.2165999999999324e-05, 5.30280000000001e-05, 5.248600000000089e-05, 5.2165999999999324e-05, 5.236100000000077e-05, 5.237500000000034e-05, 5.236100000000077e-05, 5.28609999999978e-05, 5.263900000000016e-05, 5.261200000000049e-05, 5.259700000000145e-05, 5.226400000000325e-05, 5.305499999999977e-05, 5.2415999999999574e-05, 5.256900000000231e-05, 5.284699999999823e-05, 5.218100000000184e-05, 5.22080000000015e-05, 5.26669999999993e-05, 5.255600000000221e-05, 5.286100000000127e-05, 5.204200000000214e-05, 5.258299999999841e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.281" endtime="20201029 12:46:28.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.276" endtime="20201029 12:46:28.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:28.288" endtime="20201029 12:46:28.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.287" endtime="20201029 12:46:28.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.285" endtime="20201029 12:46:28.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.927" endtime="20201029 12:46:28.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.927" endtime="20201029 12:46:28.309"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.317" endtime="20201029 12:46:28.334"></status>
</kw>
<msg timestamp="20201029 12:46:28.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.316" endtime="20201029 12:46:28.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.336" endtime="20201029 12:46:28.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.338" endtime="20201029 12:46:28.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.313" endtime="20201029 12:46:28.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.311" endtime="20201029 12:46:28.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.347" endtime="20201029 12:46:28.633"></status>
</kw>
<msg timestamp="20201029 12:46:28.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021430819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.346" endtime="20201029 12:46:28.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021430819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.637" endtime="20201029 12:46:28.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.645" endtime="20201029 12:46:28.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.343" endtime="20201029 12:46:28.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.341" endtime="20201029 12:46:28.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.652" level="INFO">${RESULT} = [{'diff': 5.458300000000041e-05}, {'diff': 5.31669999999998e-05}, {'diff': 5.3235999999998174e-05}, {'diff': 5.33609999999983e-05}, {'diff': 5.3416000000000574e-05}, {'diff': 5.391700000000055e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:28.648" endtime="20201029 12:46:28.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:28.656" level="INFO">${ACCURACY} = {'diff': [5.458300000000041e-05, 5.31669999999998e-05, 5.3235999999998174e-05, 5.33609999999983e-05, 5.3416000000000574e-05, 5.391700000000055e-05, 5.3415999999997105e-05, 5.379200000000042e-05, 5.358...</msg>
<status status="PASS" starttime="20201029 12:46:28.653" endtime="20201029 12:46:28.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.661" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:46:28.660" endtime="20201029 12:46:28.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.663" level="INFO">VALUE: [5.458300000000041e-05, 5.31669999999998e-05, 5.3235999999998174e-05, 5.33609999999983e-05, 5.3416000000000574e-05, 5.391700000000055e-05, 5.3415999999997105e-05, 5.379200000000042e-05, 5.358299999999941e-05, 5.390300000000098e-05, 5.35280000000006e-05, 5.340300000000048e-05, 5.3179999999999894e-05, 5.31669999999998e-05, 5.358299999999941e-05, 5.40280000000011e-05, 5.404200000000067e-05, 5.379200000000042e-05, 5.361100000000202e-05, 5.309699999999848e-05, 5.404200000000067e-05, 5.384699999999923e-05, 5.3651999999997785e-05, 5.40280000000011e-05, 5.391700000000055e-05, 5.309800000000142e-05, 5.3999999999998494e-05, 5.409699999999948e-05, 5.36670000000003e-05, 5.340300000000048e-05, 5.393100000000012e-05, 5.3457999999999284e-05, 5.401400000000153e-05, 5.3193999999999464e-05, 5.308300000000238e-05, 5.31669999999998e-05, 5.368099999999987e-05, 5.363899999999769e-05, 5.38470000000027e-05, 5.336100000000177e-05, 5.3402000000001004e-05, 5.383299999999966e-05, 5.391700000000055e-05, 5.312500000000109e-05, 5.330500000000002e-05, 5.3915999999997605e-05, 5.322200000000207e-05, 5.3485999999998424e-05, 5.311099999999805e-05, 5.386100000000227e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.662" endtime="20201029 12:46:28.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.657" endtime="20201029 12:46:28.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:28.668" endtime="20201029 12:46:28.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.667" endtime="20201029 12:46:28.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.666" endtime="20201029 12:46:28.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.310" endtime="20201029 12:46:28.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.309" endtime="20201029 12:46:28.689"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.698" endtime="20201029 12:46:28.714"></status>
</kw>
<msg timestamp="20201029 12:46:28.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.696" endtime="20201029 12:46:28.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.716" endtime="20201029 12:46:28.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.718" endtime="20201029 12:46:28.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.694" endtime="20201029 12:46:28.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.692" endtime="20201029 12:46:28.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.727" endtime="20201029 12:46:29.014"></status>
</kw>
<msg timestamp="20201029 12:46:29.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.726" endtime="20201029 12:46:29.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.018" endtime="20201029 12:46:29.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.027" endtime="20201029 12:46:29.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.723" endtime="20201029 12:46:29.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.722" endtime="20201029 12:46:29.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.033" level="INFO">${RESULT} = [{'diff': 5.48609999999998e-05}, {'diff': 5.486199999999927e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.413900000000166e-05}, {'diff': 5.504200000000167e-05}, {'diff': 5.484700000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:29.030" endtime="20201029 12:46:29.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.037" level="INFO">${ACCURACY} = {'diff': [5.48609999999998e-05, 5.486199999999927e-05, 5.462499999999912e-05, 5.413900000000166e-05, 5.504200000000167e-05, 5.484700000000023e-05, 5.436199999999877e-05, 5.438900000000191e-05, 5.45969...</msg>
<status status="PASS" starttime="20201029 12:46:29.034" endtime="20201029 12:46:29.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.042" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.041" endtime="20201029 12:46:29.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.044" level="INFO">VALUE: [5.48609999999998e-05, 5.486199999999927e-05, 5.462499999999912e-05, 5.413900000000166e-05, 5.504200000000167e-05, 5.484700000000023e-05, 5.436199999999877e-05, 5.438900000000191e-05, 5.459699999999998e-05, 5.4679999999997925e-05, 5.5027999999998634e-05, 5.426400000000178e-05, 5.4735999999999674e-05, 5.4916000000002074e-05, 5.4235999999999174e-05, 5.4471999999999854e-05, 5.465300000000173e-05, 5.484700000000023e-05, 5.483300000000066e-05, 5.4166000000001324e-05, 5.4458000000000284e-05, 5.4401999999998535e-05, 5.483300000000066e-05, 5.443100000000062e-05, 5.4652000000002254e-05, 5.4777999999998384e-05, 5.465300000000173e-05, 5.415300000000123e-05, 5.488899999999894e-05, 5.419499999999994e-05, 5.4708000000000534e-05, 5.502700000000263e-05, 5.4972000000000354e-05, 5.45280000000016e-05, 5.431899999999712e-05, 5.462499999999912e-05, 5.459699999999998e-05, 5.451400000000203e-05, 5.45549999999978e-05, 5.497299999999983e-05, 5.408399999999938e-05, 5.4166000000001324e-05, 5.458300000000041e-05, 5.479200000000142e-05, 5.4722000000000104e-05, 5.463899999999869e-05, 5.483300000000066e-05, 5.419499999999994e-05, 5.479099999999848e-05, 5.46670000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.043" endtime="20201029 12:46:29.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.038" endtime="20201029 12:46:29.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.049" endtime="20201029 12:46:29.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.048" endtime="20201029 12:46:29.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.046" endtime="20201029 12:46:29.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.690" endtime="20201029 12:46:29.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.689" endtime="20201029 12:46:29.070"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.078" endtime="20201029 12:46:29.096"></status>
</kw>
<msg timestamp="20201029 12:46:29.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.077" endtime="20201029 12:46:29.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.098" endtime="20201029 12:46:29.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.100" endtime="20201029 12:46:29.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.074" endtime="20201029 12:46:29.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.072" endtime="20201029 12:46:29.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.109" endtime="20201029 12:46:29.396"></status>
</kw>
<msg timestamp="20201029 12:46:29.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.108" endtime="20201029 12:46:29.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.400" endtime="20201029 12:46:29.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.408" endtime="20201029 12:46:29.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.105" endtime="20201029 12:46:29.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.103" endtime="20201029 12:46:29.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.415" level="INFO">${RESULT} = [{'diff': 5.6236000000001174e-05}, {'diff': 5.5429999999998675e-05}, {'diff': 5.511199999999952e-05}, {'diff': 5.584700000000123e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.538899999999944e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:29.412" endtime="20201029 12:46:29.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.419" level="INFO">${ACCURACY} = {'diff': [5.6236000000001174e-05, 5.5429999999998675e-05, 5.511199999999952e-05, 5.584700000000123e-05, 5.5458000000001284e-05, 5.538899999999944e-05, 5.51670000000018e-05, 5.5721999999997635e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 12:46:29.416" endtime="20201029 12:46:29.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.423" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.422" endtime="20201029 12:46:29.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.426" level="INFO">VALUE: [5.6236000000001174e-05, 5.5429999999998675e-05, 5.511199999999952e-05, 5.584700000000123e-05, 5.5458000000001284e-05, 5.538899999999944e-05, 5.51670000000018e-05, 5.5721999999997635e-05, 5.540299999999901e-05, 5.5222000000000604e-05, 5.583399999999766e-05, 5.5222000000000604e-05, 5.583300000000166e-05, 5.5915999999999605e-05, 5.5888000000000465e-05, 5.53480000000002e-05, 5.6027999999999634e-05, 5.5472000000000854e-05, 5.6014000000000064e-05, 5.513900000000266e-05, 5.509700000000048e-05, 5.559700000000098e-05, 5.565299999999926e-05, 5.583400000000113e-05, 5.5541999999998704e-05, 5.555500000000227e-05, 5.552700000000313e-05, 5.5277999999998884e-05, 5.569500000000144e-05, 5.5263999999999314e-05, 5.590299999999951e-05, 5.509700000000048e-05, 5.515300000000223e-05, 5.547300000000033e-05, 5.53480000000002e-05, 5.559699999999751e-05, 5.538900000000291e-05, 5.6014000000000064e-05, 5.526400000000278e-05, 5.58749999999969e-05, 5.5429999999998675e-05, 5.53480000000002e-05, 5.565299999999926e-05, 5.534700000000073e-05, 5.5972000000001354e-05, 5.6027999999999634e-05, 5.527699999999941e-05, 5.579099999999948e-05, 5.561200000000002e-05, 5.512499999999962e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.425" endtime="20201029 12:46:29.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.420" endtime="20201029 12:46:29.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.436" endtime="20201029 12:46:29.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.434" endtime="20201029 12:46:29.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.433" endtime="20201029 12:46:29.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.071" endtime="20201029 12:46:29.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.070" endtime="20201029 12:46:29.457"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.465" endtime="20201029 12:46:29.482"></status>
</kw>
<msg timestamp="20201029 12:46:29.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.464" endtime="20201029 12:46:29.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.483" endtime="20201029 12:46:29.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.486" endtime="20201029 12:46:29.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.461" endtime="20201029 12:46:29.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.459" endtime="20201029 12:46:29.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.495" endtime="20201029 12:46:29.782"></status>
</kw>
<msg timestamp="20201029 12:46:29.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.494" endtime="20201029 12:46:29.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.786" endtime="20201029 12:46:29.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.794" endtime="20201029 12:46:29.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.491" endtime="20201029 12:46:29.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.489" endtime="20201029 12:46:29.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.801" level="INFO">${RESULT} = [{'diff': 5.7527999999997664e-05}, {'diff': 5.641700000000305e-05}, {'diff': 5.659699999999851e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.663900000000069e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:29.797" endtime="20201029 12:46:29.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.807" level="INFO">${ACCURACY} = {'diff': [5.7527999999997664e-05, 5.641700000000305e-05, 5.659699999999851e-05, 5.6472000000001854e-05, 5.6264000000000314e-05, 5.663900000000069e-05, 5.634700000000173e-05, 5.6708000000002534e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:29.802" endtime="20201029 12:46:29.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.813" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.812" endtime="20201029 12:46:29.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.816" level="INFO">VALUE: [5.7527999999997664e-05, 5.641700000000305e-05, 5.659699999999851e-05, 5.6472000000001854e-05, 5.6264000000000314e-05, 5.663900000000069e-05, 5.634700000000173e-05, 5.6708000000002534e-05, 5.6221999999998135e-05, 5.6652000000000785e-05, 5.647299999999786e-05, 5.6235999999997704e-05, 5.6791999999999954e-05, 5.654100000000023e-05, 5.663900000000069e-05, 5.6277999999999884e-05, 5.6443999999999245e-05, 5.647300000000133e-05, 5.63610000000013e-05, 5.609700000000148e-05, 5.630499999999955e-05, 5.6708000000002534e-05, 5.6208000000002034e-05, 5.6971999999998885e-05, 5.704099999999726e-05, 5.6637999999997746e-05, 5.681899999999962e-05, 5.7014000000001064e-05, 5.626300000000084e-05, 5.6208000000002034e-05, 5.609700000000148e-05, 5.6277999999999884e-05, 5.609699999999801e-05, 5.6528000000000134e-05, 5.6207999999998565e-05, 5.613900000000019e-05, 5.6957999999999315e-05, 5.6457999999998815e-05, 5.6264000000000314e-05, 5.63610000000013e-05, 5.6222000000001604e-05, 5.6277999999999884e-05, 5.690300000000051e-05, 5.616699999999933e-05, 5.623699999999718e-05, 5.6277999999999884e-05, 5.6402000000000535e-05, 5.6207999999998565e-05, 5.6972000000002354e-05, 5.641699999999958e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.814" endtime="20201029 12:46:29.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.808" endtime="20201029 12:46:29.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.824" endtime="20201029 12:46:29.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.821" endtime="20201029 12:46:29.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.820" endtime="20201029 12:46:29.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.458" endtime="20201029 12:46:29.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.457" endtime="20201029 12:46:29.845"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.854" endtime="20201029 12:46:29.871"></status>
</kw>
<msg timestamp="20201029 12:46:29.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.852" endtime="20201029 12:46:29.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.872" endtime="20201029 12:46:29.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.875" endtime="20201029 12:46:29.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.850" endtime="20201029 12:46:29.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.848" endtime="20201029 12:46:29.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.884" endtime="20201029 12:46:30.173"></status>
</kw>
<msg timestamp="20201029 12:46:30.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.882" endtime="20201029 12:46:30.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.177" endtime="20201029 12:46:30.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.185" endtime="20201029 12:46:30.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.880" endtime="20201029 12:46:30.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.878" endtime="20201029 12:46:30.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.192" level="INFO">${RESULT} = [{'diff': 5.861100000000008e-05}, {'diff': 5.752699999999819e-05}, {'diff': 5.7569999999999844e-05}, {'diff': 5.761099999999908e-05}, {'diff': 5.788900000000194e-05}, {'diff': 5.7222000000002604e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:30.189" endtime="20201029 12:46:30.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.196" level="INFO">${ACCURACY} = {'diff': [5.861100000000008e-05, 5.752699999999819e-05, 5.7569999999999844e-05, 5.761099999999908e-05, 5.788900000000194e-05, 5.7222000000002604e-05, 5.7083999999998913e-05, 5.78610000000028e-05, 5.75...</msg>
<status status="PASS" starttime="20201029 12:46:30.193" endtime="20201029 12:46:30.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.200" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.199" endtime="20201029 12:46:30.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.203" level="INFO">VALUE: [5.861100000000008e-05, 5.752699999999819e-05, 5.7569999999999844e-05, 5.761099999999908e-05, 5.788900000000194e-05, 5.7222000000002604e-05, 5.7083999999998913e-05, 5.78610000000028e-05, 5.759699999999951e-05, 5.763900000000169e-05, 5.7792000000000954e-05, 5.7708000000000065e-05, 5.772299999999911e-05, 5.7721999999999635e-05, 5.763899999999822e-05, 5.7528000000001134e-05, 5.7958000000000315e-05, 5.7777999999997914e-05, 5.7722000000003104e-05, 5.7792000000000954e-05, 5.709699999999901e-05, 5.7235999999998705e-05, 5.7416000000001105e-05, 5.730499999999708e-05, 5.7292000000000454e-05, 5.711099999999858e-05, 5.7806000000000524e-05, 5.7387999999998496e-05, 5.734799999999873e-05, 5.7792000000000954e-05, 5.766700000000083e-05, 5.7527999999997664e-05, 5.7513999999998094e-05, 5.7958000000000315e-05, 5.7901999999998566e-05, 5.74870000000019e-05, 5.747299999999886e-05, 5.708299999999944e-05, 5.7457999999999815e-05, 5.793100000000065e-05, 5.762499999999865e-05, 5.791700000000108e-05, 5.715299999999729e-05, 5.734700000000273e-05, 5.8013999999998594e-05, 5.737500000000187e-05, 5.706899999999987e-05, 5.8028000000001634e-05, 5.711099999999858e-05, 5.7221999999999135e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.201" endtime="20201029 12:46:30.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.197" endtime="20201029 12:46:30.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.208" endtime="20201029 12:46:30.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.206" endtime="20201029 12:46:30.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.205" endtime="20201029 12:46:30.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.846" endtime="20201029 12:46:30.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.845" endtime="20201029 12:46:30.229"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.237" endtime="20201029 12:46:30.255"></status>
</kw>
<msg timestamp="20201029 12:46:30.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.235" endtime="20201029 12:46:30.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.256" endtime="20201029 12:46:30.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.259" endtime="20201029 12:46:30.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.233" endtime="20201029 12:46:30.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.231" endtime="20201029 12:46:30.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.268" endtime="20201029 12:46:30.554"></status>
</kw>
<msg timestamp="20201029 12:46:30.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.266" endtime="20201029 12:46:30.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.558" endtime="20201029 12:46:30.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.566" endtime="20201029 12:46:30.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.264" endtime="20201029 12:46:30.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.262" endtime="20201029 12:46:30.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.573" level="INFO">${RESULT} = [{'diff': 5.940299999999954e-05}, {'diff': 5.877699999999944e-05}, {'diff': 5.862499999999965e-05}, {'diff': 5.856900000000137e-05}, {'diff': 5.845899999999682e-05}, {'diff': 5.838899999999897e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:30.570" endtime="20201029 12:46:30.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.577" level="INFO">${ACCURACY} = {'diff': [5.940299999999954e-05, 5.877699999999944e-05, 5.862499999999965e-05, 5.856900000000137e-05, 5.845899999999682e-05, 5.838899999999897e-05, 5.830499999999808e-05, 5.893099999999818e-05, 5.8444...</msg>
<status status="PASS" starttime="20201029 12:46:30.574" endtime="20201029 12:46:30.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.581" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.580" endtime="20201029 12:46:30.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.584" level="INFO">VALUE: [5.940299999999954e-05, 5.877699999999944e-05, 5.862499999999965e-05, 5.856900000000137e-05, 5.845899999999682e-05, 5.838899999999897e-05, 5.830499999999808e-05, 5.893099999999818e-05, 5.8444000000001245e-05, 5.8222000000000135e-05, 5.8458000000000815e-05, 5.833300000000069e-05, 5.8472000000000385e-05, 5.833299999999722e-05, 5.9042000000002204e-05, 5.883300000000119e-05, 5.837500000000287e-05, 5.8235999999999705e-05, 5.863899999999922e-05, 5.834700000000026e-05, 5.8721999999997165e-05, 5.844499999999725e-05, 5.8569999999997374e-05, 5.8763999999999345e-05, 5.8292000000001454e-05, 5.9041999999998734e-05, 5.8485999999999955e-05, 5.890300000000251e-05, 5.8194999999997e-05, 5.85689999999979e-05, 5.859700000000051e-05, 5.886100000000033e-05, 5.820900000000004e-05, 5.813899999999872e-05, 5.816700000000133e-05, 5.840299999999854e-05, 5.8763999999999345e-05, 5.8708000000001065e-05, 5.8291999999997984e-05, 5.886100000000033e-05, 5.816700000000133e-05, 5.8401999999999066e-05, 5.8958000000001315e-05, 5.8791999999998484e-05, 5.8264000000002314e-05, 5.868099999999793e-05, 5.884699999999729e-05, 5.845900000000029e-05, 5.884700000000076e-05, 5.840299999999854e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.583" endtime="20201029 12:46:30.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.578" endtime="20201029 12:46:30.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.590" endtime="20201029 12:46:30.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.588" endtime="20201029 12:46:30.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.587" endtime="20201029 12:46:30.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.229" endtime="20201029 12:46:30.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.229" endtime="20201029 12:46:30.610"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.619" endtime="20201029 12:46:30.636"></status>
</kw>
<msg timestamp="20201029 12:46:30.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.617" endtime="20201029 12:46:30.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.637" endtime="20201029 12:46:30.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.640" endtime="20201029 12:46:30.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.615" endtime="20201029 12:46:30.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.613" endtime="20201029 12:46:30.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.649" endtime="20201029 12:46:30.934"></status>
</kw>
<msg timestamp="20201029 12:46:30.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021374194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.647" endtime="20201029 12:46:30.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021374194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.938" endtime="20201029 12:46:30.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.946" endtime="20201029 12:46:30.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.645" endtime="20201029 12:46:30.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.643" endtime="20201029 12:46:30.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.953" level="INFO">${RESULT} = [{'diff': 6.0569999999999374e-05}, {'diff': 5.9694000000002495e-05}, {'diff': 5.9415999999999636e-05}, {'diff': 5.926300000000037e-05}, {'diff': 5.9069999999997874e-05}, {'diff': 5.9179999999998956e-0...</msg>
<status status="PASS" starttime="20201029 12:46:30.950" endtime="20201029 12:46:30.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.958" level="INFO">${ACCURACY} = {'diff': [6.0569999999999374e-05, 5.9694000000002495e-05, 5.9415999999999636e-05, 5.926300000000037e-05, 5.9069999999997874e-05, 5.9179999999998956e-05, 5.945900000000129e-05, 5.9750000000000775e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:30.954" endtime="20201029 12:46:30.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.962" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.961" endtime="20201029 12:46:30.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.965" level="INFO">VALUE: [6.0569999999999374e-05, 5.9694000000002495e-05, 5.9415999999999636e-05, 5.926300000000037e-05, 5.9069999999997874e-05, 5.9179999999998956e-05, 5.945900000000129e-05, 5.9750000000000775e-05, 5.9763999999996875e-05, 6.002700000000069e-05, 5.9736000000001205e-05, 5.963900000000022e-05, 5.933300000000169e-05, 5.984699999999829e-05, 5.962500000000065e-05, 5.9486000000000955e-05, 5.9819999999998624e-05, 5.9750000000000775e-05, 5.915299999999929e-05, 5.933300000000169e-05, 5.952700000000019e-05, 5.9084000000000914e-05, 5.987499999999743e-05, 5.955499999999933e-05, 5.9138000000000246e-05, 5.962500000000065e-05, 5.938899999999997e-05, 5.9888999999997e-05, 5.940300000000301e-05, 5.9764000000000345e-05, 5.944499999999825e-05, 5.933299999999822e-05, 5.980499999999958e-05, 6.0014000000000595e-05, 5.9457999999998346e-05, 5.9236000000000705e-05, 5.9707999999998596e-05, 5.9598000000000984e-05, 5.98750000000009e-05, 5.9708000000002065e-05, 5.9472000000001385e-05, 5.9736000000001205e-05, 5.9208000000001565e-05, 5.9902000000000566e-05, 5.9777999999999915e-05, 5.9693999999999026e-05, 6.0013999999997125e-05, 5.9388000000000496e-05, 5.963900000000022e-05, 5.958299999999847e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.964" endtime="20201029 12:46:30.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.959" endtime="20201029 12:46:30.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.970" endtime="20201029 12:46:30.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.968" endtime="20201029 12:46:30.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.967" endtime="20201029 12:46:30.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.611" endtime="20201029 12:46:30.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.611" endtime="20201029 12:46:30.991"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.999" endtime="20201029 12:46:31.016"></status>
</kw>
<msg timestamp="20201029 12:46:31.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.998" endtime="20201029 12:46:31.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.018" endtime="20201029 12:46:31.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.020" endtime="20201029 12:46:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.995" endtime="20201029 12:46:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.993" endtime="20201029 12:46:31.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.029" endtime="20201029 12:46:31.316"></status>
</kw>
<msg timestamp="20201029 12:46:31.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.028" endtime="20201029 12:46:31.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.320" endtime="20201029 12:46:31.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.328" endtime="20201029 12:46:31.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.025" endtime="20201029 12:46:31.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.023" endtime="20201029 12:46:31.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.335" level="INFO">${RESULT} = [{'diff': 6.111100000000258e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.052700000000119e-05}, {'diff': 6.058299999999947e-05}, {'diff': 6.0806000000000054e-05}, {'diff': 6.00689999999994e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:31.332" endtime="20201029 12:46:31.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.339" level="INFO">${ACCURACY} = {'diff': [6.111100000000258e-05, 6.068099999999993e-05, 6.052700000000119e-05, 6.058299999999947e-05, 6.0806000000000054e-05, 6.00689999999994e-05, 6.0763999999997875e-05, 6.0749999999998305e-05, 6.09...</msg>
<status status="PASS" starttime="20201029 12:46:31.336" endtime="20201029 12:46:31.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.343" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.342" endtime="20201029 12:46:31.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.346" level="INFO">VALUE: [6.111100000000258e-05, 6.068099999999993e-05, 6.052700000000119e-05, 6.058299999999947e-05, 6.0806000000000054e-05, 6.00689999999994e-05, 6.0763999999997875e-05, 6.0749999999998305e-05, 6.0943999999996806e-05, 6.03750000000014e-05, 6.058299999999947e-05, 6.043100000000315e-05, 6.013900000000072e-05, 6.043099999999968e-05, 6.0263999999997375e-05, 6.037499999999793e-05, 6.062499999999818e-05, 6.0250000000001275e-05, 6.0806000000000054e-05, 6.087499999999843e-05, 6.087499999999843e-05, 6.0806000000000054e-05, 6.0750000000001775e-05, 6.087499999999843e-05, 6.087499999999843e-05, 6.036100000000183e-05, 6.0999999999998555e-05, 6.044500000000272e-05, 6.030500000000008e-05, 6.0485999999998485e-05, 6.05689999999999e-05, 6.0819999999999624e-05, 6.0333999999998694e-05, 6.1028000000001165e-05, 6.095899999999932e-05, 6.0137999999997777e-05, 6.0847999999998764e-05, 6.063899999999775e-05, 6.034699999999879e-05, 6.03750000000014e-05, 6.0514000000001095e-05, 6.0749999999998305e-05, 6.043099999999968e-05, 6.0194999999999e-05, 6.063900000000122e-05, 6.0611999999998084e-05, 6.033300000000269e-05, 6.0694000000000026e-05, 6.043099999999968e-05, 6.1028000000001165e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.344" endtime="20201029 12:46:31.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.340" endtime="20201029 12:46:31.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.351" endtime="20201029 12:46:31.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.349" endtime="20201029 12:46:31.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.348" endtime="20201029 12:46:31.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.991" endtime="20201029 12:46:31.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.991" endtime="20201029 12:46:31.371"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.380" endtime="20201029 12:46:31.398"></status>
</kw>
<msg timestamp="20201029 12:46:31.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.379" endtime="20201029 12:46:31.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.400" endtime="20201029 12:46:31.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.402" endtime="20201029 12:46:31.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.376" endtime="20201029 12:46:31.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.374" endtime="20201029 12:46:31.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.411" endtime="20201029 12:46:31.698"></status>
</kw>
<msg timestamp="20201029 12:46:31.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.410" endtime="20201029 12:46:31.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.704" endtime="20201029 12:46:31.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.714" endtime="20201029 12:46:31.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.407" endtime="20201029 12:46:31.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.405" endtime="20201029 12:46:31.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.721" level="INFO">${RESULT} = [{'diff': 6.192999999999824e-05}, {'diff': 6.140200000000207e-05}, {'diff': 6.116700000000086e-05}, {'diff': 6.108299999999997e-05}, {'diff': 6.152800000000166e-05}, {'diff': 6.162499999999918e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:31.718" endtime="20201029 12:46:31.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.725" level="INFO">${ACCURACY} = {'diff': [6.192999999999824e-05, 6.140200000000207e-05, 6.116700000000086e-05, 6.108299999999997e-05, 6.152800000000166e-05, 6.162499999999918e-05, 6.197199999999695e-05, 6.168000000000146e-05, 6.1069...</msg>
<status status="PASS" starttime="20201029 12:46:31.722" endtime="20201029 12:46:31.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.730" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.729" endtime="20201029 12:46:31.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.732" level="INFO">VALUE: [6.192999999999824e-05, 6.140200000000207e-05, 6.116700000000086e-05, 6.108299999999997e-05, 6.152800000000166e-05, 6.162499999999918e-05, 6.197199999999695e-05, 6.168000000000146e-05, 6.106999999999987e-05, 6.186099999999986e-05, 6.17499999999993e-05, 6.123599999999924e-05, 6.155500000000133e-05, 6.119400000000053e-05, 6.126399999999838e-05, 6.183300000000072e-05, 6.109699999999954e-05, 6.113900000000172e-05, 6.198699999999946e-05, 6.112500000000215e-05, 6.175000000000277e-05, 6.187499999999943e-05, 6.166699999999789e-05, 6.19439999999978e-05, 6.168099999999746e-05, 6.199999999999956e-05, 6.14439999999973e-05, 6.126399999999838e-05, 6.119400000000053e-05, 6.1014000000001595e-05, 6.10690000000004e-05, 6.10560000000003e-05, 6.14300000000012e-05, 6.204200000000173e-05, 6.136099999999936e-05, 6.193100000000118e-05, 6.131900000000065e-05, 6.126399999999838e-05, 6.113899999999825e-05, 6.12499999999988e-05, 6.163899999999875e-05, 6.184800000000323e-05, 6.172299999999964e-05, 6.137499999999893e-05, 6.15690000000009e-05, 6.138900000000197e-05, 6.130499999999761e-05, 6.17499999999993e-05, 6.150000000000252e-05, 6.195900000000032e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.731" endtime="20201029 12:46:31.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.726" endtime="20201029 12:46:31.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.738" endtime="20201029 12:46:31.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.737" endtime="20201029 12:46:31.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.736" endtime="20201029 12:46:31.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.372" endtime="20201029 12:46:31.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.372" endtime="20201029 12:46:31.759"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.768" endtime="20201029 12:46:31.785"></status>
</kw>
<msg timestamp="20201029 12:46:31.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.766" endtime="20201029 12:46:31.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.786" endtime="20201029 12:46:31.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.789" endtime="20201029 12:46:31.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.764" endtime="20201029 12:46:31.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.761" endtime="20201029 12:46:31.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.798" endtime="20201029 12:46:32.082"></status>
</kw>
<msg timestamp="20201029 12:46:32.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.796" endtime="20201029 12:46:32.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.086" endtime="20201029 12:46:32.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.095" endtime="20201029 12:46:32.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.794" endtime="20201029 12:46:32.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.792" endtime="20201029 12:46:32.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.101" level="INFO">${RESULT} = [{'diff': 6.301300000000065e-05}, {'diff': 6.281899999999868e-05}, {'diff': 6.281900000000215e-05}, {'diff': 6.280600000000205e-05}, {'diff': 6.237499999999993e-05}, {'diff': 6.301400000000013e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:32.098" endtime="20201029 12:46:32.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.106" level="INFO">${ACCURACY} = {'diff': [6.301300000000065e-05, 6.281899999999868e-05, 6.281900000000215e-05, 6.280600000000205e-05, 6.237499999999993e-05, 6.301400000000013e-05, 6.27500000000003e-05, 6.219399999999806e-05, 6.26389...</msg>
<status status="PASS" starttime="20201029 12:46:32.102" endtime="20201029 12:46:32.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.111" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.110" endtime="20201029 12:46:32.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.113" level="INFO">VALUE: [6.301300000000065e-05, 6.281899999999868e-05, 6.281900000000215e-05, 6.280600000000205e-05, 6.237499999999993e-05, 6.301400000000013e-05, 6.27500000000003e-05, 6.219399999999806e-05, 6.263899999999975e-05, 6.274999999999684e-05, 6.27500000000003e-05, 6.219499999999753e-05, 6.261099999999714e-05, 6.262500000000018e-05, 6.230499999999861e-05, 6.281899999999868e-05, 6.23340000000007e-05, 6.281899999999868e-05, 6.216699999999839e-05, 6.20690000000014e-05, 6.255599999999834e-05, 6.234700000000079e-05, 6.213899999999925e-05, 6.262500000000018e-05, 6.205599999999784e-05, 6.262500000000018e-05, 6.263899999999975e-05, 6.241699999999864e-05, 6.226399999999938e-05, 6.249999999999659e-05, 6.250000000000006e-05, 6.294400000000228e-05, 6.263899999999975e-05, 6.226399999999938e-05, 6.251399999999963e-05, 6.287500000000043e-05, 6.237499999999993e-05, 6.263899999999975e-05, 6.263900000000322e-05, 6.268000000000246e-05, 6.243099999999821e-05, 6.244499999999778e-05, 6.269399999999856e-05, 6.298599999999752e-05, 6.211100000000011e-05, 6.277799999999945e-05, 6.216599999999892e-05, 6.237499999999993e-05, 6.294400000000228e-05, 6.287500000000043e-05]</msg>
<status status="PASS" starttime="20201029 12:46:32.112" endtime="20201029 12:46:32.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.107" endtime="20201029 12:46:32.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.118" endtime="20201029 12:46:32.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.116" endtime="20201029 12:46:32.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.115" endtime="20201029 12:46:32.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.760" endtime="20201029 12:46:32.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.759" endtime="20201029 12:46:32.139"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.147" endtime="20201029 12:46:32.165"></status>
</kw>
<msg timestamp="20201029 12:46:32.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.146" endtime="20201029 12:46:32.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.166" endtime="20201029 12:46:32.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.169" endtime="20201029 12:46:32.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.143" endtime="20201029 12:46:32.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.141" endtime="20201029 12:46:32.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.179" endtime="20201029 12:46:32.466"></status>
</kw>
<msg timestamp="20201029 12:46:32.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.177" endtime="20201029 12:46:32.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.470" endtime="20201029 12:46:32.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.478" endtime="20201029 12:46:32.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.174" endtime="20201029 12:46:32.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.173" endtime="20201029 12:46:32.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.485" level="INFO">${RESULT} = [{'diff': 6.37500000000013e-05}, {'diff': 6.322200000000167e-05}, {'diff': 6.361200000000108e-05}, {'diff': 6.363900000000075e-05}, {'diff': 6.30690000000024e-05}, {'diff': 6.330499999999961e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:32.482" endtime="20201029 12:46:32.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.489" level="INFO">${ACCURACY} = {'diff': [6.37500000000013e-05, 6.322200000000167e-05, 6.361200000000108e-05, 6.363900000000075e-05, 6.30690000000024e-05, 6.330499999999961e-05, 6.36950000000025e-05, 6.400000000000156e-05, 6.3819999...</msg>
<status status="PASS" starttime="20201029 12:46:32.486" endtime="20201029 12:46:32.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.493" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.492" endtime="20201029 12:46:32.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.496" level="INFO">VALUE: [6.37500000000013e-05, 6.322200000000167e-05, 6.361200000000108e-05, 6.363900000000075e-05, 6.30690000000024e-05, 6.330499999999961e-05, 6.36950000000025e-05, 6.400000000000156e-05, 6.381999999999916e-05, 6.326400000000038e-05, 6.369399999999956e-05, 6.342999999999974e-05, 6.373600000000174e-05, 6.357000000000237e-05, 6.381899999999968e-05, 6.381899999999968e-05, 6.3195000000002e-05, 6.387500000000143e-05, 6.39439999999998e-05, 6.362500000000118e-05, 6.348600000000149e-05, 6.312500000000068e-05, 6.383299999999925e-05, 6.380599999999959e-05, 6.326299999999743e-05, 6.370799999999913e-05, 6.316700000000286e-05, 6.313900000000025e-05, 6.387499999999796e-05, 6.373600000000174e-05, 6.337499999999746e-05, 6.356899999999943e-05, 6.373700000000121e-05, 6.349999999999759e-05, 6.395799999999938e-05, 6.312500000000068e-05, 6.306899999999893e-05, 6.376400000000088e-05, 6.30560000000023e-05, 6.320799999999863e-05, 6.350000000000106e-05, 6.307000000000187e-05, 6.373600000000174e-05, 6.344400000000278e-05, 6.362500000000118e-05, 6.336099999999789e-05, 6.322300000000114e-05, 6.384700000000229e-05, 6.307000000000187e-05, 6.347200000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:46:32.494" endtime="20201029 12:46:32.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.490" endtime="20201029 12:46:32.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.501" endtime="20201029 12:46:32.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.499" endtime="20201029 12:46:32.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.498" endtime="20201029 12:46:32.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.140" endtime="20201029 12:46:32.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.139" endtime="20201029 12:46:32.522"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.530" endtime="20201029 12:46:32.548"></status>
</kw>
<msg timestamp="20201029 12:46:32.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.529" endtime="20201029 12:46:32.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.550" endtime="20201029 12:46:32.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.552" endtime="20201029 12:46:32.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.526" endtime="20201029 12:46:32.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.524" endtime="20201029 12:46:32.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.561" endtime="20201029 12:46:32.846"></status>
</kw>
<msg timestamp="20201029 12:46:32.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.560" endtime="20201029 12:46:32.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.851" endtime="20201029 12:46:32.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.859" endtime="20201029 12:46:32.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.557" endtime="20201029 12:46:32.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.555" endtime="20201029 12:46:32.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.865" level="INFO">${RESULT} = [{'diff': 6.498599999999952e-05}, {'diff': 6.499999999999909e-05}, {'diff': 6.426400000000138e-05}, {'diff': 6.405599999999984e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.43890000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:32.862" endtime="20201029 12:46:32.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.870" level="INFO">${ACCURACY} = {'diff': [6.498599999999952e-05, 6.499999999999909e-05, 6.426400000000138e-05, 6.405599999999984e-05, 6.44440000000003e-05, 6.43890000000015e-05, 6.487499999999896e-05, 6.499999999999909e-05, 6.408400...</msg>
<status status="PASS" starttime="20201029 12:46:32.866" endtime="20201029 12:46:32.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.874" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.873" endtime="20201029 12:46:32.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.876" level="INFO">VALUE: [6.498599999999952e-05, 6.499999999999909e-05, 6.426400000000138e-05, 6.405599999999984e-05, 6.44440000000003e-05, 6.43890000000015e-05, 6.487499999999896e-05, 6.499999999999909e-05, 6.408400000000244e-05, 6.436100000000236e-05, 6.480600000000059e-05, 6.438899999999803e-05, 6.433399999999923e-05, 6.430600000000009e-05, 6.500000000000256e-05, 6.443099999999674e-05, 6.405599999999984e-05, 6.436100000000236e-05, 6.405500000000036e-05, 6.455600000000034e-05, 6.498599999999952e-05, 6.486099999999939e-05, 6.48479999999993e-05, 6.454100000000129e-05, 6.480499999999764e-05, 6.47500000000023e-05, 6.462499999999871e-05, 6.47500000000023e-05, 6.492999999999777e-05, 6.419499999999953e-05, 6.437500000000193e-05, 6.416700000000039e-05, 6.436100000000236e-05, 6.463799999999881e-05, 6.499999999999909e-05, 6.412500000000168e-05, 6.40699999999994e-05, 6.477800000000145e-05, 6.463900000000175e-05, 6.461100000000261e-05, 6.455600000000034e-05, 6.412500000000168e-05, 6.469500000000003e-05, 6.498600000000299e-05, 6.469400000000056e-05, 6.409800000000201e-05, 6.480600000000059e-05, 6.445799999999988e-05, 6.450000000000206e-05, 6.456900000000043e-05]</msg>
<status status="PASS" starttime="20201029 12:46:32.875" endtime="20201029 12:46:32.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.870" endtime="20201029 12:46:32.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.882" endtime="20201029 12:46:32.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.881" endtime="20201029 12:46:32.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.880" endtime="20201029 12:46:32.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.522" endtime="20201029 12:46:32.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.522" endtime="20201029 12:46:32.903"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.912" endtime="20201029 12:46:32.929"></status>
</kw>
<msg timestamp="20201029 12:46:32.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.910" endtime="20201029 12:46:32.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.930" endtime="20201029 12:46:32.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.933" endtime="20201029 12:46:32.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.907" endtime="20201029 12:46:32.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.905" endtime="20201029 12:46:32.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.942" endtime="20201029 12:46:33.227"></status>
</kw>
<msg timestamp="20201029 12:46:33.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021538222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.940" endtime="20201029 12:46:33.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021472597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021538222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.231" endtime="20201029 12:46:33.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.240" endtime="20201029 12:46:33.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.938" endtime="20201029 12:46:33.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.936" endtime="20201029 12:46:33.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.246" level="INFO">${RESULT} = [{'diff': 6.562499999999971e-05}, {'diff': 6.561100000000014e-05}, {'diff': 6.524999999999934e-05}, {'diff': 6.555500000000186e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.516700000000139e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:33.243" endtime="20201029 12:46:33.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.251" level="INFO">${ACCURACY} = {'diff': [6.562499999999971e-05, 6.561100000000014e-05, 6.524999999999934e-05, 6.555500000000186e-05, 6.537499999999946e-05, 6.516700000000139e-05, 6.541699999999817e-05, 6.54029999999986e-05, 6.56809...</msg>
<status status="PASS" starttime="20201029 12:46:33.247" endtime="20201029 12:46:33.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.256" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.255" endtime="20201029 12:46:33.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.258" level="INFO">VALUE: [6.562499999999971e-05, 6.561100000000014e-05, 6.524999999999934e-05, 6.555500000000186e-05, 6.537499999999946e-05, 6.516700000000139e-05, 6.541699999999817e-05, 6.54029999999986e-05, 6.568099999999799e-05, 6.52090000000001e-05, 6.556899999999796e-05, 6.561100000000014e-05, 6.587499999999996e-05, 6.566600000000242e-05, 6.530499999999814e-05, 6.536099999999989e-05, 6.555600000000134e-05, 6.519400000000106e-05, 6.600000000000009e-05, 6.537500000000293e-05, 6.544500000000078e-05, 6.512499999999921e-05, 6.59029999999991e-05, 6.580600000000159e-05, 6.509700000000007e-05, 6.53479999999998e-05, 6.57220000000007e-05, 6.561199999999962e-05, 6.520800000000063e-05, 6.527799999999848e-05, 6.57639999999994e-05, 6.524999999999934e-05, 6.520800000000063e-05, 6.569400000000156e-05, 6.547200000000045e-05, 6.540300000000207e-05, 6.587499999999996e-05, 6.534699999999685e-05, 6.580600000000159e-05, 6.543000000000174e-05, 6.548699999999949e-05, 6.562499999999971e-05, 6.531899999999771e-05, 6.506900000000093e-05, 6.587499999999996e-05, 6.511099999999964e-05, 6.587499999999996e-05, 6.548699999999949e-05, 6.567999999999852e-05, 6.511200000000258e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.257" endtime="20201029 12:46:33.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.252" endtime="20201029 12:46:33.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.263" endtime="20201029 12:46:33.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.262" endtime="20201029 12:46:33.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.260" endtime="20201029 12:46:33.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.904" endtime="20201029 12:46:33.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.903" endtime="20201029 12:46:33.284"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.292" endtime="20201029 12:46:33.310"></status>
</kw>
<msg timestamp="20201029 12:46:33.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.291" endtime="20201029 12:46:33.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.311" endtime="20201029 12:46:33.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.314" endtime="20201029 12:46:33.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.288" endtime="20201029 12:46:33.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.286" endtime="20201029 12:46:33.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.322" endtime="20201029 12:46:33.612"></status>
</kw>
<msg timestamp="20201029 12:46:33.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021414708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021482208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.321" endtime="20201029 12:46:33.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021414708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021482208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.616" endtime="20201029 12:46:33.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.624" endtime="20201029 12:46:33.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.318" endtime="20201029 12:46:33.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.317" endtime="20201029 12:46:33.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.631" level="INFO">${RESULT} = [{'diff': 6.749999999999812e-05}, {'diff': 6.618100000000196e-05}, {'diff': 6.672300000000117e-05}, {'diff': 6.605600000000184e-05}, {'diff': 6.619500000000153e-05}, {'diff': 6.681899999999921e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:33.628" endtime="20201029 12:46:33.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.635" level="INFO">${ACCURACY} = {'diff': [6.749999999999812e-05, 6.618100000000196e-05, 6.672300000000117e-05, 6.605600000000184e-05, 6.619500000000153e-05, 6.681899999999921e-05, 6.616700000000239e-05, 6.636100000000089e-05, 6.6472...</msg>
<status status="PASS" starttime="20201029 12:46:33.632" endtime="20201029 12:46:33.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.639" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.638" endtime="20201029 12:46:33.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.642" level="INFO">VALUE: [6.749999999999812e-05, 6.618100000000196e-05, 6.672300000000117e-05, 6.605600000000184e-05, 6.619500000000153e-05, 6.681899999999921e-05, 6.616700000000239e-05, 6.636100000000089e-05, 6.647200000000145e-05, 6.630499999999914e-05, 6.608299999999803e-05, 6.640300000000307e-05, 6.692999999999977e-05, 6.634699999999785e-05, 6.693099999999924e-05, 6.68480000000013e-05, 6.65419999999993e-05, 6.618099999999849e-05, 6.669399999999909e-05, 6.68619999999974e-05, 6.698600000000152e-05, 6.655599999999887e-05, 6.623600000000077e-05, 6.693099999999924e-05, 6.679100000000007e-05, 6.687499999999749e-05, 6.644500000000178e-05, 6.612500000000021e-05, 6.692999999999977e-05, 6.661200000000062e-05, 6.65419999999993e-05, 6.627799999999948e-05, 6.695800000000238e-05, 6.655599999999887e-05, 6.619399999999859e-05, 6.644499999999831e-05, 6.636099999999742e-05, 6.615199999999988e-05, 6.652700000000025e-05, 6.647199999999798e-05, 6.666699999999942e-05, 6.701400000000066e-05, 6.62639999999999e-05, 6.684700000000182e-05, 6.616599999999945e-05, 6.679199999999955e-05, 6.642999999999927e-05, 6.651400000000016e-05, 6.686099999999792e-05, 6.670799999999866e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.640" endtime="20201029 12:46:33.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.636" endtime="20201029 12:46:33.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.647" endtime="20201029 12:46:33.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.645" endtime="20201029 12:46:33.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.644" endtime="20201029 12:46:33.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.285" endtime="20201029 12:46:33.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.284" endtime="20201029 12:46:33.668"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.676" endtime="20201029 12:46:33.694"></status>
</kw>
<msg timestamp="20201029 12:46:33.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.674" endtime="20201029 12:46:33.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.696" endtime="20201029 12:46:33.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.698" endtime="20201029 12:46:33.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.672" endtime="20201029 12:46:33.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.670" endtime="20201029 12:46:33.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.707" endtime="20201029 12:46:33.992"></status>
</kw>
<msg timestamp="20201029 12:46:33.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.706" endtime="20201029 12:46:33.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.996" endtime="20201029 12:46:34.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.005" endtime="20201029 12:46:34.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.703" endtime="20201029 12:46:34.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.701" endtime="20201029 12:46:34.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.011" level="INFO">${RESULT} = [{'diff': 6.779200000000055e-05}, {'diff': 6.718099999999949e-05}, {'diff': 6.720799999999916e-05}, {'diff': 6.705599999999937e-05}, {'diff': 6.798599999999905e-05}, {'diff': 6.718099999999949e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:34.008" endtime="20201029 12:46:34.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.015" level="INFO">${ACCURACY} = {'diff': [6.779200000000055e-05, 6.718099999999949e-05, 6.720799999999916e-05, 6.705599999999937e-05, 6.798599999999905e-05, 6.718099999999949e-05, 6.74160000000007e-05, 6.798599999999905e-05, 6.74439...</msg>
<status status="PASS" starttime="20201029 12:46:34.012" endtime="20201029 12:46:34.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.020" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.019" endtime="20201029 12:46:34.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.022" level="INFO">VALUE: [6.779200000000055e-05, 6.718099999999949e-05, 6.720799999999916e-05, 6.705599999999937e-05, 6.798599999999905e-05, 6.718099999999949e-05, 6.74160000000007e-05, 6.798599999999905e-05, 6.744399999999984e-05, 6.747199999999898e-05, 6.761100000000214e-05, 6.748599999999855e-05, 6.770800000000313e-05, 6.718099999999949e-05, 6.722199999999873e-05, 6.709700000000207e-05, 6.711100000000164e-05, 6.722199999999873e-05, 6.708299999999903e-05, 6.705599999999937e-05, 6.737499999999799e-05, 6.75969999999991e-05, 6.736099999999842e-05, 6.736100000000189e-05, 6.77359999999988e-05, 6.730500000000014e-05, 6.743100000000321e-05, 6.72359999999983e-05, 6.766599999999748e-05, 6.765300000000085e-05, 6.774999999999837e-05, 6.798700000000199e-05, 6.755500000000039e-05, 6.783399999999926e-05, 6.723600000000177e-05, 6.747199999999898e-05, 6.748600000000202e-05, 6.790200000000163e-05, 6.736099999999842e-05, 6.747299999999845e-05, 6.787500000000196e-05, 6.734700000000232e-05, 6.716699999999992e-05, 6.748600000000202e-05, 6.70969999999986e-05, 6.705499999999989e-05, 6.713900000000078e-05, 6.793100000000024e-05, 6.763899999999781e-05, 6.725000000000134e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.021" endtime="20201029 12:46:34.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.016" endtime="20201029 12:46:34.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.028" endtime="20201029 12:46:34.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.026" endtime="20201029 12:46:34.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.025" endtime="20201029 12:46:34.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.668" endtime="20201029 12:46:34.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.668" endtime="20201029 12:46:34.050"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.063" endtime="20201029 12:46:34.081"></status>
</kw>
<msg timestamp="20201029 12:46:34.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.061" endtime="20201029 12:46:34.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.082" endtime="20201029 12:46:34.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.085" endtime="20201029 12:46:34.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.057" endtime="20201029 12:46:34.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.054" endtime="20201029 12:46:34.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.093" endtime="20201029 12:46:34.379"></status>
</kw>
<msg timestamp="20201029 12:46:34.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027174056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027243028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.092" endtime="20201029 12:46:34.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027174056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027243028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.383" endtime="20201029 12:46:34.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.391" endtime="20201029 12:46:34.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.089" endtime="20201029 12:46:34.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.088" endtime="20201029 12:46:34.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.398" level="INFO">${RESULT} = [{'diff': 6.897200000000048e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.85559999999974e-05}, {'diff': 6.895900000000038e-05}, {'diff': 6.897299999999995e-05}, {'diff': 6.845899999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:34.395" endtime="20201029 12:46:34.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.403" level="INFO">${ACCURACY} = {'diff': [6.897200000000048e-05, 6.847199999999998e-05, 6.85559999999974e-05, 6.895900000000038e-05, 6.897299999999995e-05, 6.845899999999988e-05, 6.819399999999712e-05, 6.852699999999878e-05, 6.89719...</msg>
<status status="PASS" starttime="20201029 12:46:34.399" endtime="20201029 12:46:34.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.407" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.406" endtime="20201029 12:46:34.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.410" level="INFO">VALUE: [6.897200000000048e-05, 6.847199999999998e-05, 6.85559999999974e-05, 6.895900000000038e-05, 6.897299999999995e-05, 6.845899999999988e-05, 6.819399999999712e-05, 6.852699999999878e-05, 6.897199999999701e-05, 6.822199999999973e-05, 6.897200000000048e-05, 6.891700000000167e-05, 6.87359999999998e-05, 6.848599999999955e-05, 6.883300000000078e-05, 6.881900000000121e-05, 6.804100000000132e-05, 6.879200000000155e-05, 6.82359999999993e-05, 6.813899999999831e-05, 6.848699999999902e-05, 6.879199999999808e-05, 6.815199999999841e-05, 6.80969999999996e-05, 6.877799999999851e-05, 6.869400000000109e-05, 6.88619999999994e-05, 6.883300000000078e-05, 6.809700000000307e-05, 6.829200000000105e-05, 6.80969999999996e-05, 6.87359999999998e-05, 6.845800000000041e-05, 6.869500000000056e-05, 6.887499999999949e-05, 6.866700000000142e-05, 6.893000000000177e-05, 6.898600000000005e-05, 6.819499999999312e-05, 6.895800000000091e-05, 6.86109999999962e-05, 6.836100000000289e-05, 6.829200000000452e-05, 6.880499999999817e-05, 6.812499999999527e-05, 6.866700000000142e-05, 6.827800000000495e-05, 6.888899999999559e-05, 6.862499999999577e-05, 6.822199999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.408" endtime="20201029 12:46:34.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.404" endtime="20201029 12:46:34.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.415" endtime="20201029 12:46:34.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.413" endtime="20201029 12:46:34.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.412" endtime="20201029 12:46:34.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.051" endtime="20201029 12:46:34.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.051" endtime="20201029 12:46:34.435"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.444" endtime="20201029 12:46:34.461"></status>
</kw>
<msg timestamp="20201029 12:46:34.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.442" endtime="20201029 12:46:34.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.463" endtime="20201029 12:46:34.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.465" endtime="20201029 12:46:34.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.440" endtime="20201029 12:46:34.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.438" endtime="20201029 12:46:34.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.474" endtime="20201029 12:46:34.761"></status>
</kw>
<msg timestamp="20201029 12:46:34.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.473" endtime="20201029 12:46:34.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.765" endtime="20201029 12:46:34.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.773" endtime="20201029 12:46:34.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.470" endtime="20201029 12:46:34.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.468" endtime="20201029 12:46:34.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.780" level="INFO">${RESULT} = [{'diff': 6.97230000000007e-05}, {'diff': 6.922199999999726e-05}, {'diff': 6.979200000000255e-05}, {'diff': 6.902700000000275e-05}, {'diff': 6.90970000000006e-05}, {'diff': 6.92230000000002e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:34.777" endtime="20201029 12:46:34.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.784" level="INFO">${ACCURACY} = {'diff': [6.97230000000007e-05, 6.922199999999726e-05, 6.979200000000255e-05, 6.902700000000275e-05, 6.90970000000006e-05, 6.92230000000002e-05, 6.92230000000002e-05, 6.976399999999994e-05, 6.92219999...</msg>
<status status="PASS" starttime="20201029 12:46:34.781" endtime="20201029 12:46:34.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.789" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.788" endtime="20201029 12:46:34.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.791" level="INFO">VALUE: [6.97230000000007e-05, 6.922199999999726e-05, 6.979200000000255e-05, 6.902700000000275e-05, 6.90970000000006e-05, 6.92230000000002e-05, 6.92230000000002e-05, 6.976399999999994e-05, 6.922199999999726e-05, 6.936100000000042e-05, 6.986099999999745e-05, 6.915299999999888e-05, 6.94030000000026e-05, 6.930499999999867e-05, 6.983300000000178e-05, 6.998600000000105e-05, 6.927799999999901e-05, 6.934800000000033e-05, 6.922199999999726e-05, 6.940299999999913e-05, 6.951399999999969e-05, 6.929200000000205e-05, 6.945900000000088e-05, 6.927699999999953e-05, 6.986099999999745e-05, 6.929199999999858e-05, 6.916700000000192e-05, 6.91109999999967e-05, 6.90970000000006e-05, 6.984700000000135e-05, 6.975000000000037e-05, 6.92360000000003e-05, 6.930500000000214e-05, 6.997199999999801e-05, 7.002799999999976e-05, 6.998600000000105e-05, 6.962500000000024e-05, 6.977799999999951e-05, 6.986100000000092e-05, 6.979199999999908e-05, 6.958399999999754e-05, 6.966700000000242e-05, 6.945800000000141e-05, 6.991599999999973e-05, 6.99160000000032e-05, 6.937499999999999e-05, 6.99169999999992e-05, 6.927799999999901e-05, 6.997200000000148e-05, 6.99169999999992e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.790" endtime="20201029 12:46:34.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.785" endtime="20201029 12:46:34.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.800" endtime="20201029 12:46:34.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.798" endtime="20201029 12:46:34.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.797" endtime="20201029 12:46:34.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.436" endtime="20201029 12:46:34.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.436" endtime="20201029 12:46:34.821"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.829" endtime="20201029 12:46:34.848"></status>
</kw>
<msg timestamp="20201029 12:46:34.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.828" endtime="20201029 12:46:34.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.849" endtime="20201029 12:46:34.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.852" endtime="20201029 12:46:34.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.825" endtime="20201029 12:46:34.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.823" endtime="20201029 12:46:34.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.860" endtime="20201029 12:46:35.147"></status>
</kw>
<msg timestamp="20201029 12:46:35.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.859" endtime="20201029 12:46:35.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.151" endtime="20201029 12:46:35.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.159" endtime="20201029 12:46:35.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.856" endtime="20201029 12:46:35.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.855" endtime="20201029 12:46:35.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.166" level="INFO">${RESULT} = [{'diff': 7.140300000000113e-05}, {'diff': 7.058299999999906e-05}, {'diff': 7.059699999999863e-05}, {'diff': 7.022199999999826e-05}, {'diff': 7.05689999999995e-05}, {'diff': 7.020799999999869e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:35.163" endtime="20201029 12:46:35.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.170" level="INFO">${ACCURACY} = {'diff': [7.140300000000113e-05, 7.058299999999906e-05, 7.059699999999863e-05, 7.022199999999826e-05, 7.05689999999995e-05, 7.020799999999869e-05, 7.005499999999942e-05, 7.066699999999995e-05, 7.05829...</msg>
<status status="PASS" starttime="20201029 12:46:35.167" endtime="20201029 12:46:35.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.174" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.173" endtime="20201029 12:46:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.177" level="INFO">VALUE: [7.140300000000113e-05, 7.058299999999906e-05, 7.059699999999863e-05, 7.022199999999826e-05, 7.05689999999995e-05, 7.020799999999869e-05, 7.005499999999942e-05, 7.066699999999995e-05, 7.058299999999906e-05, 6.998600000000105e-05, 7.041600000000023e-05, 7.090300000000063e-05, 7.05559999999994e-05, 7.075000000000137e-05, 7.011100000000117e-05, 7.026400000000044e-05, 7.058299999999906e-05, 7.077800000000051e-05, 7.095799999999944e-05, 7.044399999999937e-05, 7.084699999999888e-05, 7.019400000000259e-05, 7.04169999999997e-05, 6.997199999999801e-05, 7.045899999999841e-05, 7.034800000000133e-05, 7.095799999999944e-05, 7.022200000000173e-05, 7.00970000000016e-05, 7.048600000000155e-05, 7.070799999999919e-05, 7.06109999999982e-05, 7.015299999999988e-05, 7.02360000000013e-05, 7.015299999999988e-05, 7.015299999999988e-05, 7.084700000000235e-05, 7.033400000000176e-05, 7.022199999999826e-05, 7.05970000000021e-05, 7.002700000000028e-05, 7.036099999999795e-05, 7.02910000000001e-05, 7.022200000000173e-05, 7.022199999999826e-05, 7.037499999999752e-05, 7.015299999999988e-05, 7.097200000000248e-05, 7.048600000000155e-05, 7.016599999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.175" endtime="20201029 12:46:35.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.171" endtime="20201029 12:46:35.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.183" endtime="20201029 12:46:35.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.181" endtime="20201029 12:46:35.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.180" endtime="20201029 12:46:35.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.821" endtime="20201029 12:46:35.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.821" endtime="20201029 12:46:35.203"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.213" endtime="20201029 12:46:35.231"></status>
</kw>
<msg timestamp="20201029 12:46:35.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.211" endtime="20201029 12:46:35.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.232" endtime="20201029 12:46:35.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.235" endtime="20201029 12:46:35.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.208" endtime="20201029 12:46:35.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.206" endtime="20201029 12:46:35.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.243" endtime="20201029 12:46:35.530"></status>
</kw>
<msg timestamp="20201029 12:46:35.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.242" endtime="20201029 12:46:35.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.534" endtime="20201029 12:46:35.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.543" endtime="20201029 12:46:35.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.239" endtime="20201029 12:46:35.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.238" endtime="20201029 12:46:35.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.549" level="INFO">${RESULT} = [{'diff': 7.170899999999966e-05}, {'diff': 7.130500000000067e-05}, {'diff': 7.136099999999895e-05}, {'diff': 7.122199999999926e-05}, {'diff': 7.123599999999883e-05}, {'diff': 7.176399999999847e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:35.546" endtime="20201029 12:46:35.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.554" level="INFO">${ACCURACY} = {'diff': [7.170899999999966e-05, 7.130500000000067e-05, 7.136099999999895e-05, 7.122199999999926e-05, 7.123599999999883e-05, 7.176399999999847e-05, 7.127699999999806e-05, 7.152800000000126e-05, 7.1194...</msg>
<status status="PASS" starttime="20201029 12:46:35.550" endtime="20201029 12:46:35.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.559" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.558" endtime="20201029 12:46:35.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.561" level="INFO">VALUE: [7.170899999999966e-05, 7.130500000000067e-05, 7.136099999999895e-05, 7.122199999999926e-05, 7.123599999999883e-05, 7.176399999999847e-05, 7.127699999999806e-05, 7.152800000000126e-05, 7.119400000000012e-05, 7.152800000000126e-05, 7.129199999999711e-05, 7.129200000000058e-05, 7.176399999999847e-05, 7.118000000000055e-05, 7.140300000000113e-05, 7.134700000000285e-05, 7.134699999999938e-05, 7.166700000000095e-05, 7.144499999999984e-05, 7.163900000000181e-05, 7.144400000000037e-05, 7.108300000000303e-05, 7.188899999999859e-05, 7.163799999999887e-05, 7.125000000000187e-05, 7.154100000000135e-05, 7.104200000000033e-05, 7.158399999999954e-05, 7.165300000000138e-05, 7.119500000000306e-05, 7.190299999999816e-05, 7.17910000000016e-05, 7.163899999999834e-05, 7.133299999999981e-05, 7.102800000000076e-05, 7.184799999999936e-05, 7.102800000000076e-05, 7.197200000000001e-05, 7.106999999999947e-05, 7.116599999999751e-05, 7.147199999999951e-05, 7.119400000000012e-05, 7.195899999999991e-05, 7.154200000000083e-05, 7.165299999999791e-05, 7.188899999999859e-05, 7.116700000000045e-05, 7.104100000000085e-05, 7.172199999999976e-05, 7.131900000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.560" endtime="20201029 12:46:35.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.555" endtime="20201029 12:46:35.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.566" endtime="20201029 12:46:35.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.565" endtime="20201029 12:46:35.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.564" endtime="20201029 12:46:35.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.204" endtime="20201029 12:46:35.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.204" endtime="20201029 12:46:35.587"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.596" endtime="20201029 12:46:35.613"></status>
</kw>
<msg timestamp="20201029 12:46:35.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.594" endtime="20201029 12:46:35.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.615" endtime="20201029 12:46:35.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.617" endtime="20201029 12:46:35.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.592" endtime="20201029 12:46:35.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.590" endtime="20201029 12:46:35.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.626" endtime="20201029 12:46:35.914"></status>
</kw>
<msg timestamp="20201029 12:46:35.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021413667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.625" endtime="20201029 12:46:35.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021413667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.918" endtime="20201029 12:46:35.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.926" endtime="20201029 12:46:35.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.622" endtime="20201029 12:46:35.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.620" endtime="20201029 12:46:35.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.933" level="INFO">${RESULT} = [{'diff': 7.265199999999944e-05}, {'diff': 7.258300000000106e-05}, {'diff': 7.2069000000001e-05}, {'diff': 7.234700000000038e-05}, {'diff': 7.279099999999913e-05}, {'diff': 7.234700000000038e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:35.929" endtime="20201029 12:46:35.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.937" level="INFO">${ACCURACY} = {'diff': [7.265199999999944e-05, 7.258300000000106e-05, 7.2069000000001e-05, 7.234700000000038e-05, 7.279099999999913e-05, 7.234700000000038e-05, 7.215300000000188e-05, 7.229199999999811e-05, 7.238899...</msg>
<status status="PASS" starttime="20201029 12:46:35.934" endtime="20201029 12:46:35.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.941" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.940" endtime="20201029 12:46:35.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.944" level="INFO">VALUE: [7.265199999999944e-05, 7.258300000000106e-05, 7.2069000000001e-05, 7.234700000000038e-05, 7.279099999999913e-05, 7.234700000000038e-05, 7.215300000000188e-05, 7.229199999999811e-05, 7.238899999999909e-05, 7.222200000000026e-05, 7.288899999999959e-05, 7.297300000000048e-05, 7.241599999999876e-05, 7.218099999999755e-05, 7.216599999999851e-05, 7.215199999999894e-05, 7.21109999999997e-05, 7.272199999999729e-05, 7.227699999999906e-05, 7.208300000000056e-05, 7.259700000000063e-05, 7.283400000000079e-05, 7.237499999999952e-05, 7.294500000000134e-05, 7.295899999999744e-05, 7.290299999999916e-05, 7.287500000000002e-05, 7.270900000000066e-05, 7.236099999999995e-05, 7.295900000000091e-05, 7.245800000000094e-05, 7.213899999999884e-05, 7.284700000000088e-05, 7.226399999999897e-05, 7.294400000000187e-05, 7.265300000000238e-05, 7.258300000000106e-05, 7.227799999999854e-05, 7.202699999999881e-05, 7.258400000000054e-05, 7.227799999999854e-05, 7.227799999999854e-05, 7.218100000000102e-05, 7.270900000000066e-05, 7.252799999999879e-05, 7.244499999999737e-05, 7.26110000000002e-05, 7.238899999999909e-05, 7.283300000000131e-05, 7.258300000000106e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.942" endtime="20201029 12:46:35.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.938" endtime="20201029 12:46:35.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.949" endtime="20201029 12:46:35.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.947" endtime="20201029 12:46:35.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.946" endtime="20201029 12:46:35.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.588" endtime="20201029 12:46:35.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.587" endtime="20201029 12:46:35.969"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.978" endtime="20201029 12:46:35.996"></status>
</kw>
<msg timestamp="20201029 12:46:35.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.976" endtime="20201029 12:46:35.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.998" endtime="20201029 12:46:36.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.001" endtime="20201029 12:46:36.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.974" endtime="20201029 12:46:36.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.972" endtime="20201029 12:46:36.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.009" endtime="20201029 12:46:36.295"></status>
</kw>
<msg timestamp="20201029 12:46:36.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.008" endtime="20201029 12:46:36.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.300" endtime="20201029 12:46:36.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.308" endtime="20201029 12:46:36.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.005" endtime="20201029 12:46:36.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.004" endtime="20201029 12:46:36.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.314" level="INFO">${RESULT} = [{'diff': 7.404199999999986e-05}, {'diff': 7.337500000000052e-05}, {'diff': 7.388900000000059e-05}, {'diff': 7.351400000000022e-05}, {'diff': 7.320799999999822e-05}, {'diff': 7.331899999999877e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:36.311" endtime="20201029 12:46:36.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.319" level="INFO">${ACCURACY} = {'diff': [7.404199999999986e-05, 7.337500000000052e-05, 7.388900000000059e-05, 7.351400000000022e-05, 7.320799999999822e-05, 7.331899999999877e-05, 7.338800000000062e-05, 7.380599999999918e-05, 7.3582...</msg>
<status status="PASS" starttime="20201029 12:46:36.315" endtime="20201029 12:46:36.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.323" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.322" endtime="20201029 12:46:36.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.325" level="INFO">VALUE: [7.404199999999986e-05, 7.337500000000052e-05, 7.388900000000059e-05, 7.351400000000022e-05, 7.320799999999822e-05, 7.331899999999877e-05, 7.338800000000062e-05, 7.380599999999918e-05, 7.35829999999986e-05, 7.302800000000276e-05, 7.386099999999798e-05, 7.390300000000016e-05, 7.395799999999897e-05, 7.37500000000009e-05, 7.348600000000108e-05, 7.381999999999875e-05, 7.377800000000004e-05, 7.365299999999991e-05, 7.340299999999966e-05, 7.334699999999791e-05, 7.309800000000061e-05, 7.297200000000101e-05, 7.390300000000016e-05, 7.377700000000056e-05, 7.399999999999768e-05, 7.304199999999886e-05, 7.341599999999976e-05, 7.379100000000013e-05, 7.329199999999911e-05, 7.382000000000222e-05, 7.302799999999929e-05, 7.351400000000022e-05, 7.323600000000083e-05, 7.369500000000209e-05, 7.338900000000009e-05, 7.301399999999972e-05, 7.395799999999897e-05, 7.380599999999918e-05, 7.34439999999989e-05, 7.370799999999872e-05, 7.350000000000065e-05, 7.390300000000016e-05, 7.365299999999991e-05, 7.301399999999972e-05, 7.322299999999726e-05, 7.376400000000047e-05, 7.370799999999872e-05, 7.384699999999841e-05, 7.377800000000004e-05, 7.365299999999991e-05]</msg>
<status status="PASS" starttime="20201029 12:46:36.324" endtime="20201029 12:46:36.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.319" endtime="20201029 12:46:36.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.331" endtime="20201029 12:46:36.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.330" endtime="20201029 12:46:36.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.329" endtime="20201029 12:46:36.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.970" endtime="20201029 12:46:36.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.970" endtime="20201029 12:46:36.352"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.361" endtime="20201029 12:46:36.378"></status>
</kw>
<msg timestamp="20201029 12:46:36.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.359" endtime="20201029 12:46:36.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.380" endtime="20201029 12:46:36.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.382" endtime="20201029 12:46:36.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.356" endtime="20201029 12:46:36.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.354" endtime="20201029 12:46:36.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.391" endtime="20201029 12:46:36.677"></status>
</kw>
<msg timestamp="20201029 12:46:36.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.390" endtime="20201029 12:46:36.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.681" endtime="20201029 12:46:36.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.689" endtime="20201029 12:46:36.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.387" endtime="20201029 12:46:36.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.385" endtime="20201029 12:46:36.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.696" level="INFO">${RESULT} = [{'diff': 7.476400000000147e-05}, {'diff': 7.408400000000204e-05}, {'diff': 7.433299999999934e-05}, {'diff': 7.433400000000229e-05}, {'diff': 7.415200000000094e-05}, {'diff': 7.470799999999972e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:36.693" endtime="20201029 12:46:36.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.701" level="INFO">${ACCURACY} = {'diff': [7.476400000000147e-05, 7.408400000000204e-05, 7.433299999999934e-05, 7.433400000000229e-05, 7.415200000000094e-05, 7.470799999999972e-05, 7.469400000000015e-05, 7.469400000000015e-05, 7.4846...</msg>
<status status="PASS" starttime="20201029 12:46:36.697" endtime="20201029 12:46:36.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.705" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.704" endtime="20201029 12:46:36.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.708" level="INFO">VALUE: [7.476400000000147e-05, 7.408400000000204e-05, 7.433299999999934e-05, 7.433400000000229e-05, 7.415200000000094e-05, 7.470799999999972e-05, 7.469400000000015e-05, 7.469400000000015e-05, 7.484699999999941e-05, 7.477799999999757e-05, 7.4763999999998e-05, 7.434699999999891e-05, 7.450000000000165e-05, 7.4069999999999e-05, 7.463800000000187e-05, 7.45829999999996e-05, 7.479200000000061e-05, 7.497200000000301e-05, 7.455599999999993e-05, 7.44309999999998e-05, 7.430599999999968e-05, 7.437500000000152e-05, 7.45829999999996e-05, 7.419400000000312e-05, 7.479100000000113e-05, 7.46249999999983e-05, 7.433299999999934e-05, 7.484699999999941e-05, 7.415200000000094e-05, 7.401400000000072e-05, 7.420899999999869e-05, 7.483399999999932e-05, 7.47500000000019e-05, 7.480600000000018e-05, 7.452700000000131e-05, 7.409699999999866e-05, 7.455499999999698e-05, 7.480600000000018e-05, 7.49440000000004e-05, 7.426400000000097e-05, 7.419399999999965e-05, 7.40829999999991e-05, 7.476400000000147e-05, 7.480499999999723e-05, 7.406899999999952e-05, 7.426400000000097e-05, 7.452800000000079e-05, 7.495799999999997e-05, 7.469400000000015e-05, 7.45829999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:46:36.706" endtime="20201029 12:46:36.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.702" endtime="20201029 12:46:36.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.713" endtime="20201029 12:46:36.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.711" endtime="20201029 12:46:36.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.710" endtime="20201029 12:46:36.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.353" endtime="20201029 12:46:36.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.352" endtime="20201029 12:46:36.733"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.742" endtime="20201029 12:46:36.760"></status>
</kw>
<msg timestamp="20201029 12:46:36.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.740" endtime="20201029 12:46:36.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.761" endtime="20201029 12:46:36.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.764" endtime="20201029 12:46:36.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.738" endtime="20201029 12:46:36.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.736" endtime="20201029 12:46:36.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.773" endtime="20201029 12:46:37.062"></status>
</kw>
<msg timestamp="20201029 12:46:37.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021440861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.771" endtime="20201029 12:46:37.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021440861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.066" endtime="20201029 12:46:37.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.075" endtime="20201029 12:46:37.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.769" endtime="20201029 12:46:37.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.767" endtime="20201029 12:46:37.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.081" level="INFO">${RESULT} = [{'diff': 7.570800000000072e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.527799999999807e-05}, {'diff': 7.554200000000136e-05}, {'diff': 7.576400000000247e-05}, {'diff': 7.59310000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:37.078" endtime="20201029 12:46:37.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.085" level="INFO">${ACCURACY} = {'diff': [7.570800000000072e-05, 7.499999999999868e-05, 7.527799999999807e-05, 7.554200000000136e-05, 7.576400000000247e-05, 7.59310000000013e-05, 7.595800000000097e-05, 7.552799999999832e-05, 7.53889...</msg>
<status status="PASS" starttime="20201029 12:46:37.082" endtime="20201029 12:46:37.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.090" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.089" endtime="20201029 12:46:37.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.092" level="INFO">VALUE: [7.570800000000072e-05, 7.499999999999868e-05, 7.527799999999807e-05, 7.554200000000136e-05, 7.576400000000247e-05, 7.59310000000013e-05, 7.595800000000097e-05, 7.552799999999832e-05, 7.538899999999862e-05, 7.545800000000047e-05, 7.56249999999993e-05, 7.505500000000095e-05, 7.565199999999897e-05, 7.570799999999725e-05, 7.50830000000001e-05, 7.594399999999793e-05, 7.516599999999804e-05, 7.551300000000274e-05, 7.558299999999712e-05, 7.59440000000014e-05, 7.495799999999997e-05, 7.544500000000037e-05, 7.506900000000052e-05, 7.540300000000166e-05, 7.522199999999979e-05, 7.522199999999979e-05, 7.582000000000075e-05, 7.547299999999951e-05, 7.534799999999939e-05, 7.577700000000256e-05, 7.555500000000145e-05, 7.59440000000014e-05, 7.581900000000127e-05, 7.563899999999887e-05, 7.568099999999758e-05, 7.59449999999974e-05, 7.53890000000021e-05, 7.519400000000065e-05, 7.519500000000012e-05, 7.54310000000008e-05, 7.524999999999893e-05, 7.506900000000052e-05, 7.512500000000227e-05, 7.569399999999768e-05, 7.5457999999997e-05, 7.52500000000024e-05, 7.588799999999965e-05, 7.540300000000166e-05, 7.51249999999988e-05, 7.58050000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.091" endtime="20201029 12:46:37.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.086" endtime="20201029 12:46:37.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.097" endtime="20201029 12:46:37.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.095" endtime="20201029 12:46:37.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.094" endtime="20201029 12:46:37.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.734" endtime="20201029 12:46:37.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.734" endtime="20201029 12:46:37.118"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.126" endtime="20201029 12:46:37.145"></status>
</kw>
<msg timestamp="20201029 12:46:37.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.125" endtime="20201029 12:46:37.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.146" endtime="20201029 12:46:37.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.149" endtime="20201029 12:46:37.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.122" endtime="20201029 12:46:37.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.120" endtime="20201029 12:46:37.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.158" endtime="20201029 12:46:37.443"></status>
</kw>
<msg timestamp="20201029 12:46:37.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.156" endtime="20201029 12:46:37.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.447" endtime="20201029 12:46:37.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.455" endtime="20201029 12:46:37.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.154" endtime="20201029 12:46:37.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.152" endtime="20201029 12:46:37.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.462" level="INFO">${RESULT} = [{'diff': 7.720799999999875e-05}, {'diff': 7.630499999999873e-05}, {'diff': 7.60830000000011e-05}, {'diff': 7.611100000000023e-05}, {'diff': 7.683400000000132e-05}, {'diff': 7.637500000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:37.459" endtime="20201029 12:46:37.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.466" level="INFO">${ACCURACY} = {'diff': [7.720799999999875e-05, 7.630499999999873e-05, 7.60830000000011e-05, 7.611100000000023e-05, 7.683400000000132e-05, 7.637500000000005e-05, 7.631900000000177e-05, 7.665299999999944e-05, 7.63889...</msg>
<status status="PASS" starttime="20201029 12:46:37.463" endtime="20201029 12:46:37.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.471" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.470" endtime="20201029 12:46:37.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.473" level="INFO">VALUE: [7.720799999999875e-05, 7.630499999999873e-05, 7.60830000000011e-05, 7.611100000000023e-05, 7.683400000000132e-05, 7.637500000000005e-05, 7.631900000000177e-05, 7.665299999999944e-05, 7.638899999999962e-05, 7.6070000000001e-05, 7.656999999999803e-05, 7.662499999999683e-05, 7.687499999999708e-05, 7.651400000000322e-05, 7.615199999999947e-05, 7.69449999999984e-05, 7.651300000000028e-05, 7.659800000000064e-05, 7.623600000000036e-05, 7.64029999999992e-05, 7.64029999999992e-05, 7.681999999999828e-05, 7.66250000000003e-05, 7.61249999999998e-05, 7.669400000000215e-05, 7.675000000000043e-05, 7.650000000000018e-05, 7.605600000000143e-05, 7.655500000000245e-05, 7.605599999999796e-05, 7.682000000000175e-05, 7.673600000000086e-05, 7.599999999999968e-05, 7.691599999999979e-05, 7.62769999999996e-05, 7.620800000000122e-05, 7.631900000000177e-05, 7.663899999999987e-05, 7.66250000000003e-05, 7.652699999999985e-05, 7.641600000000276e-05, 7.676299999999706e-05, 7.666599999999954e-05, 7.672199999999782e-05, 7.618099999999808e-05, 7.683400000000132e-05, 7.658299999999812e-05, 7.663799999999693e-05, 7.61249999999998e-05, 7.668099999999858e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.472" endtime="20201029 12:46:37.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.467" endtime="20201029 12:46:37.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.479" endtime="20201029 12:46:37.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.477" endtime="20201029 12:46:37.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.476" endtime="20201029 12:46:37.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.119" endtime="20201029 12:46:37.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.118" endtime="20201029 12:46:37.499"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.508" endtime="20201029 12:46:37.526"></status>
</kw>
<msg timestamp="20201029 12:46:37.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.506" endtime="20201029 12:46:37.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.527" endtime="20201029 12:46:37.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.530" endtime="20201029 12:46:37.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.504" endtime="20201029 12:46:37.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.502" endtime="20201029 12:46:37.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.539" endtime="20201029 12:46:37.825"></status>
</kw>
<msg timestamp="20201029 12:46:37.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021399014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.537" endtime="20201029 12:46:37.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021399014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.829" endtime="20201029 12:46:37.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.837" endtime="20201029 12:46:37.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.535" endtime="20201029 12:46:37.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.533" endtime="20201029 12:46:37.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.844" level="INFO">${RESULT} = [{'diff': 7.83190000000003e-05}, {'diff': 7.725000000000093e-05}, {'diff': 7.779200000000014e-05}, {'diff': 7.737500000000105e-05}, {'diff': 7.715200000000047e-05}, {'diff': 7.74449999999989e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:37.840" endtime="20201029 12:46:37.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.849" level="INFO">${ACCURACY} = {'diff': [7.83190000000003e-05, 7.725000000000093e-05, 7.779200000000014e-05, 7.737500000000105e-05, 7.715200000000047e-05, 7.74449999999989e-05, 7.733300000000234e-05, 7.780500000000024e-05, 7.756899...</msg>
<status status="PASS" starttime="20201029 12:46:37.844" endtime="20201029 12:46:37.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.853" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.852" endtime="20201029 12:46:37.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.855" level="INFO">VALUE: [7.83190000000003e-05, 7.725000000000093e-05, 7.779200000000014e-05, 7.737500000000105e-05, 7.715200000000047e-05, 7.74449999999989e-05, 7.733300000000234e-05, 7.780500000000024e-05, 7.756899999999955e-05, 7.725000000000093e-05, 7.720800000000222e-05, 7.795899999999897e-05, 7.763900000000087e-05, 7.719399999999918e-05, 7.774999999999796e-05, 7.72640000000005e-05, 7.787499999999808e-05, 7.781999999999928e-05, 7.774999999999796e-05, 7.73189999999993e-05, 7.79579999999995e-05, 7.744500000000237e-05, 7.75969999999987e-05, 7.74440000000029e-05, 7.758299999999912e-05, 7.783299999999937e-05, 7.737499999999758e-05, 7.790299999999722e-05, 7.715299999999994e-05, 7.758400000000207e-05, 7.751400000000075e-05, 7.79449999999994e-05, 7.709800000000114e-05, 7.702799999999982e-05, 7.705600000000243e-05, 7.786099999999851e-05, 7.700000000000068e-05, 7.692999999999936e-05, 7.793099999999983e-05, 7.71250000000008e-05, 7.706900000000252e-05, 7.748600000000161e-05, 7.766700000000001e-05, 7.768000000000011e-05, 7.713900000000037e-05, 7.756999999999903e-05, 7.737500000000105e-05, 7.79579999999995e-05, 7.780599999999971e-05, 7.697200000000154e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.854" endtime="20201029 12:46:37.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.849" endtime="20201029 12:46:37.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.860" endtime="20201029 12:46:37.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.859" endtime="20201029 12:46:37.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.858" endtime="20201029 12:46:37.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.500" endtime="20201029 12:46:37.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.500" endtime="20201029 12:46:37.881"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.890" endtime="20201029 12:46:37.908"></status>
</kw>
<msg timestamp="20201029 12:46:37.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.888" endtime="20201029 12:46:37.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.909" endtime="20201029 12:46:37.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.912" endtime="20201029 12:46:37.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.885" endtime="20201029 12:46:37.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.883" endtime="20201029 12:46:37.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.920" endtime="20201029 12:46:38.207"></status>
</kw>
<msg timestamp="20201029 12:46:38.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.919" endtime="20201029 12:46:38.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.211" endtime="20201029 12:46:38.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.219" endtime="20201029 12:46:38.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.916" endtime="20201029 12:46:38.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.915" endtime="20201029 12:46:38.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.226" level="INFO">${RESULT} = [{'diff': 7.869500000000015e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.893000000000136e-05}, {'diff': 7.854099999999795e-05}, {'diff': 7.825000000000193e-05}, {'diff': 7.886099999999951e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:38.223" endtime="20201029 12:46:38.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.230" level="INFO">${ACCURACY} = {'diff': [7.869500000000015e-05, 7.829200000000064e-05, 7.893000000000136e-05, 7.854099999999795e-05, 7.825000000000193e-05, 7.886099999999951e-05, 7.848599999999914e-05, 7.893000000000136e-05, 7.8125...</msg>
<status status="PASS" starttime="20201029 12:46:38.227" endtime="20201029 12:46:38.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.234" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.233" endtime="20201029 12:46:38.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.237" level="INFO">VALUE: [7.869500000000015e-05, 7.829200000000064e-05, 7.893000000000136e-05, 7.854099999999795e-05, 7.825000000000193e-05, 7.886099999999951e-05, 7.848599999999914e-05, 7.893000000000136e-05, 7.81250000000018e-05, 7.867999999999764e-05, 7.8458e-05, 7.81250000000018e-05, 7.81250000000018e-05, 7.852800000000132e-05, 7.852799999999785e-05, 7.836099999999901e-05, 7.882000000000028e-05, 7.798600000000211e-05, 7.815300000000094e-05, 7.873599999999939e-05, 7.874999999999896e-05, 7.858300000000012e-05, 7.798600000000211e-05, 7.862499999999883e-05, 7.83190000000003e-05, 7.837500000000205e-05, 7.873699999999886e-05, 7.819500000000312e-05, 7.830499999999727e-05, 7.862499999999883e-05, 7.818000000000061e-05, 7.836099999999901e-05, 7.85969999999997e-05, 7.815300000000094e-05, 7.84449999999999e-05, 7.873600000000286e-05, 7.824999999999846e-05, 7.847199999999957e-05, 7.80969999999992e-05, 7.872199999999982e-05, 7.854099999999795e-05, 7.819499999999965e-05, 7.886100000000298e-05, 7.836099999999901e-05, 7.865300000000144e-05, 7.873699999999886e-05, 7.834699999999944e-05, 7.804099999999745e-05, 7.815200000000147e-05, 7.87770000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:46:38.235" endtime="20201029 12:46:38.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.231" endtime="20201029 12:46:38.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.242" endtime="20201029 12:46:38.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.240" endtime="20201029 12:46:38.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.239" endtime="20201029 12:46:38.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.882" endtime="20201029 12:46:38.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.881" endtime="20201029 12:46:38.263"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.272" endtime="20201029 12:46:38.291"></status>
</kw>
<msg timestamp="20201029 12:46:38.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.270" endtime="20201029 12:46:38.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.292" endtime="20201029 12:46:38.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.294" endtime="20201029 12:46:38.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.268" endtime="20201029 12:46:38.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.265" endtime="20201029 12:46:38.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.303" endtime="20201029 12:46:38.589"></status>
</kw>
<msg timestamp="20201029 12:46:38.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023089292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.302" endtime="20201029 12:46:38.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023089292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.593" endtime="20201029 12:46:38.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.602" endtime="20201029 12:46:38.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.299" endtime="20201029 12:46:38.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.298" endtime="20201029 12:46:38.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.608" level="INFO">${RESULT} = [{'diff': 7.990299999999922e-05}, {'diff': 7.969499999999768e-05}, {'diff': 7.980499999999877e-05}, {'diff': 7.947300000000004e-05}, {'diff': 7.972199999999735e-05}, {'diff': 7.97779999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:38.605" endtime="20201029 12:46:38.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.612" level="INFO">${ACCURACY} = {'diff': [7.990299999999922e-05, 7.969499999999768e-05, 7.980499999999877e-05, 7.947300000000004e-05, 7.972199999999735e-05, 7.97779999999991e-05, 7.918000000000161e-05, 7.949999999999971e-05, 7.97919...</msg>
<status status="PASS" starttime="20201029 12:46:38.609" endtime="20201029 12:46:38.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.617" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.616" endtime="20201029 12:46:38.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.619" level="INFO">VALUE: [7.990299999999922e-05, 7.969499999999768e-05, 7.980499999999877e-05, 7.947300000000004e-05, 7.972199999999735e-05, 7.97779999999991e-05, 7.918000000000161e-05, 7.949999999999971e-05, 7.979199999999867e-05, 7.962499999999983e-05, 7.929200000000164e-05, 7.916700000000151e-05, 7.97779999999991e-05, 7.915299999999847e-05, 7.970900000000072e-05, 7.89580000000005e-05, 7.96389999999994e-05, 7.927800000000207e-05, 7.954200000000189e-05, 7.927800000000207e-05, 7.916700000000151e-05, 7.9458000000001e-05, 7.937499999999958e-05, 7.915300000000194e-05, 7.972200000000082e-05, 7.966700000000201e-05, 7.955600000000146e-05, 7.930499999999827e-05, 7.990199999999975e-05, 7.898599999999964e-05, 7.943000000000186e-05, 7.908300000000063e-05, 7.966599999999907e-05, 7.904200000000139e-05, 7.916700000000151e-05, 7.984800000000042e-05, 7.916699999999804e-05, 7.902800000000182e-05, 7.966599999999907e-05, 7.984700000000094e-05, 7.98190000000018e-05, 7.983300000000138e-05, 7.988899999999965e-05, 7.970799999999778e-05, 7.952799999999885e-05, 7.974999999999996e-05, 7.920800000000075e-05, 7.962499999999983e-05, 7.923599999999989e-05, 7.904100000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:46:38.618" endtime="20201029 12:46:38.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.613" endtime="20201029 12:46:38.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.625" endtime="20201029 12:46:38.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.623" endtime="20201029 12:46:38.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.622" endtime="20201029 12:46:38.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.264" endtime="20201029 12:46:38.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.263" endtime="20201029 12:46:38.646"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.655" endtime="20201029 12:46:38.673"></status>
</kw>
<msg timestamp="20201029 12:46:38.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.654" endtime="20201029 12:46:38.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.675" endtime="20201029 12:46:38.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.677" endtime="20201029 12:46:38.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.651" endtime="20201029 12:46:38.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.649" endtime="20201029 12:46:38.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.686" endtime="20201029 12:46:38.971"></status>
</kw>
<msg timestamp="20201029 12:46:38.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.685" endtime="20201029 12:46:38.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.976" endtime="20201029 12:46:38.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.984" endtime="20201029 12:46:38.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.682" endtime="20201029 12:46:38.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.681" endtime="20201029 12:46:38.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.991" level="INFO">${RESULT} = [{'diff': 8.084700000000195e-05}, {'diff': 8.044499999999843e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.016700000000251e-05}, {'diff': 8.080599999999924e-05}, {'diff': 8.047200000000157e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:38.987" endtime="20201029 12:46:38.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.995" level="INFO">${ACCURACY} = {'diff': [8.084700000000195e-05, 8.044499999999843e-05, 8.093099999999936e-05, 8.016700000000251e-05, 8.080599999999924e-05, 8.047200000000157e-05, 8.000000000000021e-05, 8.086099999999805e-05, 8.0834...</msg>
<status status="PASS" starttime="20201029 12:46:38.992" endtime="20201029 12:46:38.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.000" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.999" endtime="20201029 12:46:39.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.003" level="INFO">VALUE: [8.084700000000195e-05, 8.044499999999843e-05, 8.093099999999936e-05, 8.016700000000251e-05, 8.080599999999924e-05, 8.047200000000157e-05, 8.000000000000021e-05, 8.086099999999805e-05, 8.083400000000185e-05, 7.998600000000064e-05, 8.062500000000083e-05, 8.022200000000132e-05, 8.070799999999878e-05, 7.997300000000054e-05, 8.036200000000049e-05, 8.005599999999849e-05, 8.09589999999985e-05, 8.006900000000206e-05, 8.05970000000017e-05, 8.079199999999967e-05, 8.092999999999989e-05, 8.036100000000101e-05, 8.058300000000213e-05, 8.016699999999904e-05, 8.079199999999967e-05, 8.018099999999861e-05, 8.018000000000261e-05, 8.016699999999904e-05, 8.029199999999917e-05, 8.073599999999792e-05, 8.02230000000008e-05, 8.0152e-05, 8.08329999999989e-05, 8.066600000000007e-05, 8.04719999999981e-05, 8.019399999999871e-05, 8.054100000000342e-05, 8.02909999999997e-05, 8.047299999999757e-05, 8.027700000000013e-05, 8.087500000000108e-05, 8.059699999999823e-05, 8.0458999999998e-05, 8.025000000000046e-05, 8.052799999999985e-05, 8.072199999999835e-05, 8.04169999999993e-05, 8.01389999999999e-05, 8.066600000000007e-05, 8.047200000000157e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.001" endtime="20201029 12:46:39.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.996" endtime="20201029 12:46:39.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.007" endtime="20201029 12:46:39.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.006" endtime="20201029 12:46:39.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.005" endtime="20201029 12:46:39.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.648" endtime="20201029 12:46:39.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.647" endtime="20201029 12:46:39.028"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.037" endtime="20201029 12:46:39.055"></status>
</kw>
<msg timestamp="20201029 12:46:39.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.035" endtime="20201029 12:46:39.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.056" endtime="20201029 12:46:39.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.059" endtime="20201029 12:46:39.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.033" endtime="20201029 12:46:39.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.031" endtime="20201029 12:46:39.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.068" endtime="20201029 12:46:39.355"></status>
</kw>
<msg timestamp="20201029 12:46:39.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021443278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.066" endtime="20201029 12:46:39.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021443278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.360" endtime="20201029 12:46:39.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.368" endtime="20201029 12:46:39.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.064" endtime="20201029 12:46:39.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.062" endtime="20201029 12:46:39.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.374" level="INFO">${RESULT} = [{'diff': 8.22780000000016e-05}, {'diff': 8.166699999999708e-05}, {'diff': 8.12910000000007e-05}, {'diff': 8.126400000000103e-05}, {'diff': 8.176399999999806e-05}, {'diff': 8.100000000000121e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:39.371" endtime="20201029 12:46:39.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.378" level="INFO">${ACCURACY} = {'diff': [8.22780000000016e-05, 8.166699999999708e-05, 8.12910000000007e-05, 8.126400000000103e-05, 8.176399999999806e-05, 8.100000000000121e-05, 8.162500000000183e-05, 8.17919999999972e-05, 8.1915999...</msg>
<status status="PASS" starttime="20201029 12:46:39.375" endtime="20201029 12:46:39.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.383" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.382" endtime="20201029 12:46:39.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.385" level="INFO">VALUE: [8.22780000000016e-05, 8.166699999999708e-05, 8.12910000000007e-05, 8.126400000000103e-05, 8.176399999999806e-05, 8.100000000000121e-05, 8.162500000000183e-05, 8.17919999999972e-05, 8.191599999999785e-05, 8.109699999999873e-05, 8.118099999999961e-05, 8.111100000000177e-05, 8.16520000000015e-05, 8.112500000000133e-05, 8.112499999999787e-05, 8.163899999999794e-05, 8.136099999999855e-05, 8.180600000000024e-05, 8.108399999999863e-05, 8.124999999999799e-05, 8.11659999999971e-05, 8.152799999999738e-05, 8.118099999999961e-05, 8.172199999999935e-05, 8.154200000000042e-05, 8.100000000000121e-05, 8.09719999999986e-05, 8.131999999999931e-05, 8.162500000000183e-05, 8.152700000000138e-05, 8.170799999999978e-05, 8.148599999999867e-05, 8.108299999999916e-05, 8.115300000000047e-05, 8.115300000000047e-05, 8.190300000000122e-05, 8.134700000000245e-05, 8.11109999999983e-05, 8.187499999999862e-05, 8.184700000000295e-05, 8.124999999999799e-05, 8.170799999999978e-05, 8.145799999999953e-05, 8.19170000000008e-05, 8.168100000000011e-05, 8.184699999999948e-05, 8.099999999999774e-05, 8.173599999999892e-05, 8.118000000000014e-05, 8.161100000000227e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.384" endtime="20201029 12:46:39.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.379" endtime="20201029 12:46:39.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.390" endtime="20201029 12:46:39.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.389" endtime="20201029 12:46:39.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.388" endtime="20201029 12:46:39.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.029" endtime="20201029 12:46:39.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.029" endtime="20201029 12:46:39.411"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.420" endtime="20201029 12:46:39.439"></status>
</kw>
<msg timestamp="20201029 12:46:39.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.418" endtime="20201029 12:46:39.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.440" endtime="20201029 12:46:39.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.443" endtime="20201029 12:46:39.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.416" endtime="20201029 12:46:39.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.414" endtime="20201029 12:46:39.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.452" endtime="20201029 12:46:39.737"></status>
</kw>
<msg timestamp="20201029 12:46:39.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022402653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.450" endtime="20201029 12:46:39.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022402653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.742" endtime="20201029 12:46:39.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.750" endtime="20201029 12:46:39.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.448" endtime="20201029 12:46:39.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.446" endtime="20201029 12:46:39.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.756" level="INFO">${RESULT} = [{'diff': 8.252799999999838e-05}, {'diff': 8.199999999999874e-05}, {'diff': 8.277799999999863e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.270800000000078e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:39.753" endtime="20201029 12:46:39.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.761" level="INFO">${ACCURACY} = {'diff': [8.252799999999838e-05, 8.199999999999874e-05, 8.277799999999863e-05, 8.286100000000005e-05, 8.286100000000005e-05, 8.270800000000078e-05, 8.241600000000182e-05, 8.223599999999942e-05, 8.2542...</msg>
<status status="PASS" starttime="20201029 12:46:39.758" endtime="20201029 12:46:39.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.765" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.764" endtime="20201029 12:46:39.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.767" level="INFO">VALUE: [8.252799999999838e-05, 8.199999999999874e-05, 8.277799999999863e-05, 8.286100000000005e-05, 8.286100000000005e-05, 8.270800000000078e-05, 8.241600000000182e-05, 8.223599999999942e-05, 8.254200000000142e-05, 8.204099999999798e-05, 8.284700000000048e-05, 8.259700000000023e-05, 8.248600000000314e-05, 8.198599999999917e-05, 8.222199999999985e-05, 8.258300000000066e-05, 8.290199999999928e-05, 8.276400000000253e-05, 8.248599999999967e-05, 8.258400000000013e-05, 8.24720000000001e-05, 8.198599999999917e-05, 8.29720000000006e-05, 8.234799999999945e-05, 8.21390000000019e-05, 8.205600000000049e-05, 8.204100000000145e-05, 8.23330000000004e-05, 8.252799999999838e-05, 8.28049999999983e-05, 8.263899999999894e-05, 8.272200000000035e-05, 8.22780000000016e-05, 8.240299999999826e-05, 8.268000000000164e-05, 8.22780000000016e-05, 8.238900000000215e-05, 8.238900000000215e-05, 8.223599999999942e-05, 8.241699999999783e-05, 8.266699999999808e-05, 8.293100000000136e-05, 8.198599999999917e-05, 8.255499999999805e-05, 8.198700000000211e-05, 8.248599999999967e-05, 8.204200000000092e-05, 8.248699999999914e-05, 8.204200000000092e-05, 8.236100000000302e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.766" endtime="20201029 12:46:39.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.761" endtime="20201029 12:46:39.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.773" endtime="20201029 12:46:39.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.772" endtime="20201029 12:46:39.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.771" endtime="20201029 12:46:39.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.412" endtime="20201029 12:46:39.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.412" endtime="20201029 12:46:39.794"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.802" endtime="20201029 12:46:39.821"></status>
</kw>
<msg timestamp="20201029 12:46:39.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.801" endtime="20201029 12:46:39.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.822" endtime="20201029 12:46:39.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.824" endtime="20201029 12:46:39.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.798" endtime="20201029 12:46:39.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.796" endtime="20201029 12:46:39.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.833" endtime="20201029 12:46:40.119"></status>
</kw>
<msg timestamp="20201029 12:46:40.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.832" endtime="20201029 12:46:40.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021461556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.123" endtime="20201029 12:46:40.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.132" endtime="20201029 12:46:40.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.829" endtime="20201029 12:46:40.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.828" endtime="20201029 12:46:40.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.139" level="INFO">${RESULT} = [{'diff': 8.409700000000173e-05}, {'diff': 8.355599999999852e-05}, {'diff': 8.341699999999883e-05}, {'diff': 8.315199999999953e-05}, {'diff': 8.316700000000204e-05}, {'diff': 8.363899999999994e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:40.135" endtime="20201029 12:46:40.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.146" level="INFO">${ACCURACY} = {'diff': [8.409700000000173e-05, 8.355599999999852e-05, 8.341699999999883e-05, 8.315199999999953e-05, 8.316700000000204e-05, 8.363899999999994e-05, 8.358300000000166e-05, 8.302799999999888e-05, 8.3888...</msg>
<status status="PASS" starttime="20201029 12:46:40.141" endtime="20201029 12:46:40.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.151" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.150" endtime="20201029 12:46:40.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.155" level="INFO">VALUE: [8.409700000000173e-05, 8.355599999999852e-05, 8.341699999999883e-05, 8.315199999999953e-05, 8.316700000000204e-05, 8.363899999999994e-05, 8.358300000000166e-05, 8.302799999999888e-05, 8.388800000000071e-05, 8.391600000000332e-05, 8.36529999999995e-05, 8.386100000000105e-05, 8.331900000000184e-05, 8.297300000000007e-05, 8.330600000000174e-05, 8.390200000000028e-05, 8.298600000000017e-05, 8.341699999999883e-05, 8.372200000000135e-05, 8.379099999999973e-05, 8.366699999999908e-05, 8.35980000000007e-05, 8.347199999999763e-05, 8.390300000000323e-05, 8.372300000000082e-05, 8.334800000000045e-05, 8.29720000000006e-05, 8.362500000000037e-05, 8.366699999999908e-05, 8.36529999999995e-05, 8.354099999999948e-05, 8.358400000000113e-05, 8.370900000000125e-05, 8.374999999999702e-05, 8.369399999999874e-05, 8.37919999999992e-05, 8.298600000000017e-05, 8.306899999999812e-05, 8.322299999999686e-05, 8.376400000000006e-05, 8.323600000000042e-05, 8.369499999999822e-05, 8.338900000000316e-05, 8.304200000000192e-05, 8.32780000000026e-05, 8.388900000000019e-05, 8.330600000000174e-05, 8.363899999999994e-05, 8.359700000000123e-05, 8.309700000000073e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.153" endtime="20201029 12:46:40.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.147" endtime="20201029 12:46:40.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.165" endtime="20201029 12:46:40.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.163" endtime="20201029 12:46:40.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.162" endtime="20201029 12:46:40.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.795" endtime="20201029 12:46:40.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.794" endtime="20201029 12:46:40.185"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.194" endtime="20201029 12:46:40.212"></status>
</kw>
<msg timestamp="20201029 12:46:40.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.193" endtime="20201029 12:46:40.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.214" endtime="20201029 12:46:40.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.216" endtime="20201029 12:46:40.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.190" endtime="20201029 12:46:40.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.188" endtime="20201029 12:46:40.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.225" endtime="20201029 12:46:40.514"></status>
</kw>
<msg timestamp="20201029 12:46:40.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:40.224" endtime="20201029 12:46:40.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:40.519" endtime="20201029 12:46:40.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.527" endtime="20201029 12:46:40.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.221" endtime="20201029 12:46:40.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.220" endtime="20201029 12:46:40.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.533" level="INFO">${RESULT} = [{'diff': 8.541700000000083e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.441699999999983e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.472199999999888e-05}, {'diff': 8.441699999999983e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:40.530" endtime="20201029 12:46:40.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.538" level="INFO">${ACCURACY} = {'diff': [8.541700000000083e-05, 8.461099999999833e-05, 8.441699999999983e-05, 8.402799999999988e-05, 8.472199999999888e-05, 8.441699999999983e-05, 8.427800000000013e-05, 8.470900000000225e-05, 8.4584...</msg>
<status status="PASS" starttime="20201029 12:46:40.534" endtime="20201029 12:46:40.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.542" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.541" endtime="20201029 12:46:40.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.545" level="INFO">VALUE: [8.541700000000083e-05, 8.461099999999833e-05, 8.441699999999983e-05, 8.402799999999988e-05, 8.472199999999888e-05, 8.441699999999983e-05, 8.427800000000013e-05, 8.470900000000225e-05, 8.458400000000213e-05, 8.398600000000117e-05, 8.479099999999726e-05, 8.397199999999813e-05, 8.470799999999931e-05, 8.409700000000173e-05, 8.488900000000119e-05, 8.42919999999997e-05, 8.470799999999931e-05, 8.444399999999949e-05, 8.445799999999906e-05, 8.491600000000085e-05, 8.42919999999997e-05, 8.461099999999833e-05, 8.413899999999697e-05, 8.46530000000005e-05, 8.46110000000018e-05, 8.490299999999729e-05, 8.459699999999876e-05, 8.445800000000253e-05, 8.41110000000013e-05, 8.459699999999876e-05, 8.466700000000008e-05, 8.402799999999988e-05, 8.43049999999998e-05, 8.404199999999945e-05, 8.472199999999888e-05, 8.434700000000198e-05, 8.422200000000185e-05, 8.404099999999998e-05, 8.423600000000142e-05, 8.445799999999906e-05, 8.433299999999894e-05, 8.476400000000106e-05, 8.402799999999988e-05, 8.452700000000091e-05, 8.422200000000185e-05, 8.473600000000192e-05, 8.4153e-05, 8.39720000000016e-05, 8.392999999999942e-05, 8.416699999999958e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.543" endtime="20201029 12:46:40.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.538" endtime="20201029 12:46:40.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.550" endtime="20201029 12:46:40.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.548" endtime="20201029 12:46:40.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.547" endtime="20201029 12:46:40.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.186" endtime="20201029 12:46:40.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.186" endtime="20201029 12:46:40.570"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.579" endtime="20201029 12:46:40.598"></status>
</kw>
<msg timestamp="20201029 12:46:40.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.577" endtime="20201029 12:46:40.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.600" endtime="20201029 12:46:40.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.602" endtime="20201029 12:46:40.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.575" endtime="20201029 12:46:40.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.573" endtime="20201029 12:46:40.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.611" endtime="20201029 12:46:40.897"></status>
</kw>
<msg timestamp="20201029 12:46:40.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.610" endtime="20201029 12:46:40.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.901" endtime="20201029 12:46:40.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.909" endtime="20201029 12:46:40.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.607" endtime="20201029 12:46:40.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.605" endtime="20201029 12:46:40.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.916" level="INFO">${RESULT} = [{'diff': 8.56249999999989e-05}, {'diff': 8.49720000000026e-05}, {'diff': 8.5153000000001e-05}, {'diff': 8.511099999999883e-05}, {'diff': 8.502799999999741e-05}, {'diff': 8.495899999999904e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:46:40.913" endtime="20201029 12:46:40.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.920" level="INFO">${ACCURACY} = {'diff': [8.56249999999989e-05, 8.49720000000026e-05, 8.5153000000001e-05, 8.511099999999883e-05, 8.502799999999741e-05, 8.495899999999904e-05, 8.547199999999963e-05, 8.520799999999981e-05, 8.58620000...</msg>
<status status="PASS" starttime="20201029 12:46:40.917" endtime="20201029 12:46:40.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.924" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.923" endtime="20201029 12:46:40.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.927" level="INFO">VALUE: [8.56249999999989e-05, 8.49720000000026e-05, 8.5153000000001e-05, 8.511099999999883e-05, 8.502799999999741e-05, 8.495899999999904e-05, 8.547199999999963e-05, 8.520799999999981e-05, 8.586200000000252e-05, 8.570799999999684e-05, 8.505600000000002e-05, 8.522199999999938e-05, 8.509699999999926e-05, 8.590299999999829e-05, 8.5847e-05, 8.591599999999838e-05, 8.554200000000095e-05, 8.502799999999741e-05, 8.551399999999834e-05, 8.565199999999856e-05, 8.497199999999913e-05, 8.504200000000045e-05, 8.573599999999945e-05, 8.527699999999819e-05, 8.531999999999984e-05, 8.566700000000108e-05, 8.524999999999852e-05, 8.588899999999872e-05, 8.551399999999834e-05, 8.540200000000178e-05, 8.572299999999936e-05, 8.540300000000126e-05, 8.57920000000012e-05, 8.552799999999791e-05, 8.572299999999936e-05, 8.49859999999987e-05, 8.512500000000187e-05, 8.501400000000131e-05, 8.523599999999895e-05, 8.509700000000273e-05, 8.531999999999984e-05, 8.495799999999956e-05, 8.572299999999936e-05, 8.536099999999908e-05, 8.558300000000019e-05, 8.566599999999813e-05, 8.56530000000015e-05, 8.581900000000087e-05, 8.555600000000052e-05, 8.54859999999992e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.925" endtime="20201029 12:46:40.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.921" endtime="20201029 12:46:40.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.932" endtime="20201029 12:46:40.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.931" endtime="20201029 12:46:40.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.930" endtime="20201029 12:46:40.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.571" endtime="20201029 12:46:40.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.571" endtime="20201029 12:46:40.953"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.962" endtime="20201029 12:46:40.980"></status>
</kw>
<msg timestamp="20201029 12:46:40.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.960" endtime="20201029 12:46:40.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.982" endtime="20201029 12:46:40.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.984" endtime="20201029 12:46:40.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.958" endtime="20201029 12:46:40.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.956" endtime="20201029 12:46:40.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.993" endtime="20201029 12:46:41.279"></status>
</kw>
<msg timestamp="20201029 12:46:41.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.991" endtime="20201029 12:46:41.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.283" endtime="20201029 12:46:41.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.291" endtime="20201029 12:46:41.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.989" endtime="20201029 12:46:41.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.987" endtime="20201029 12:46:41.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.298" level="INFO">${RESULT} = [{'diff': 8.733300000000194e-05}, {'diff': 8.595799999999709e-05}, {'diff': 8.59729999999996e-05}, {'diff': 8.633299999999747e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.619399999999777e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:41.295" endtime="20201029 12:46:41.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.304" level="INFO">${ACCURACY} = {'diff': [8.733300000000194e-05, 8.595799999999709e-05, 8.59729999999996e-05, 8.633299999999747e-05, 8.661100000000033e-05, 8.619399999999777e-05, 8.633400000000041e-05, 8.641699999999836e-05, 8.68469...</msg>
<status status="PASS" starttime="20201029 12:46:41.299" endtime="20201029 12:46:41.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.308" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.307" endtime="20201029 12:46:41.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.311" level="INFO">VALUE: [8.733300000000194e-05, 8.595799999999709e-05, 8.59729999999996e-05, 8.633299999999747e-05, 8.661100000000033e-05, 8.619399999999777e-05, 8.633400000000041e-05, 8.641699999999836e-05, 8.684699999999754e-05, 8.633399999999694e-05, 8.666599999999913e-05, 8.675000000000002e-05, 8.623699999999943e-05, 8.644400000000149e-05, 8.651299999999987e-05, 8.599999999999927e-05, 8.665199999999956e-05, 8.632000000000084e-05, 8.680600000000177e-05, 8.654200000000195e-05, 8.6153000000002e-05, 8.627799999999866e-05, 8.663900000000294e-05, 8.597200000000013e-05, 8.670800000000131e-05, 8.688800000000024e-05, 8.672300000000036e-05, 8.638900000000269e-05, 8.652800000000238e-05, 8.623599999999995e-05, 8.690299999999929e-05, 8.608300000000069e-05, 8.613899999999897e-05, 8.626299999999962e-05, 8.641599999999888e-05, 8.675000000000002e-05, 8.647200000000063e-05, 8.688899999999972e-05, 8.616700000000158e-05, 8.620800000000081e-05, 8.627799999999866e-05, 8.645800000000106e-05, 8.687500000000015e-05, 8.676399999999959e-05, 8.652799999999891e-05, 8.670800000000131e-05, 8.652800000000238e-05, 8.656900000000162e-05, 8.593000000000142e-05, 8.687500000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.310" endtime="20201029 12:46:41.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.304" endtime="20201029 12:46:41.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.316" endtime="20201029 12:46:41.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.314" endtime="20201029 12:46:41.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.313" endtime="20201029 12:46:41.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.954" endtime="20201029 12:46:41.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.954" endtime="20201029 12:46:41.337"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.345" endtime="20201029 12:46:41.364"></status>
</kw>
<msg timestamp="20201029 12:46:41.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.344" endtime="20201029 12:46:41.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.365" endtime="20201029 12:46:41.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.368" endtime="20201029 12:46:41.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.341" endtime="20201029 12:46:41.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.339" endtime="20201029 12:46:41.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.377" endtime="20201029 12:46:41.663"></status>
</kw>
<msg timestamp="20201029 12:46:41.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.375" endtime="20201029 12:46:41.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.667" endtime="20201029 12:46:41.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.675" endtime="20201029 12:46:41.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.373" endtime="20201029 12:46:41.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.371" endtime="20201029 12:46:41.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.682" level="INFO">${RESULT} = [{'diff': 8.759799999999776e-05}, {'diff': 8.769400000000274e-05}, {'diff': 8.720899999999782e-05}, {'diff': 8.701399999999984e-05}, {'diff': 8.722199999999791e-05}, {'diff': 8.765300000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:41.679" endtime="20201029 12:46:41.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.686" level="INFO">${ACCURACY} = {'diff': [8.759799999999776e-05, 8.769400000000274e-05, 8.720899999999782e-05, 8.701399999999984e-05, 8.722199999999791e-05, 8.765300000000004e-05, 8.745899999999807e-05, 8.69999999999968e-05, 8.74579...</msg>
<status status="PASS" starttime="20201029 12:46:41.683" endtime="20201029 12:46:41.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.691" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.690" endtime="20201029 12:46:41.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.693" level="INFO">VALUE: [8.759799999999776e-05, 8.769400000000274e-05, 8.720899999999782e-05, 8.701399999999984e-05, 8.722199999999791e-05, 8.765300000000004e-05, 8.745899999999807e-05, 8.69999999999968e-05, 8.745799999999859e-05, 8.705600000000202e-05, 8.747199999999816e-05, 8.780600000000277e-05, 8.762499999999743e-05, 8.751400000000034e-05, 8.712499999999693e-05, 8.751300000000087e-05, 8.716700000000258e-05, 8.745900000000154e-05, 8.731900000000237e-05, 8.727799999999966e-05, 8.747200000000163e-05, 8.752799999999991e-05, 8.719499999999825e-05, 8.751400000000034e-05, 8.71250000000004e-05, 8.708300000000169e-05, 8.702699999999994e-05, 8.791600000000038e-05, 8.756899999999915e-05, 8.738900000000022e-05, 8.745900000000154e-05, 8.774999999999755e-05, 8.783299999999897e-05, 8.774999999999755e-05, 8.776400000000059e-05, 8.694500000000147e-05, 8.73189999999989e-05, 8.791699999999986e-05, 8.748599999999773e-05, 8.790200000000081e-05, 8.738900000000022e-05, 8.697299999999714e-05, 8.780600000000277e-05, 8.763900000000047e-05, 8.715299999999954e-05, 8.788899999999725e-05, 8.790300000000029e-05, 8.788900000000072e-05, 8.711099999999736e-05, 8.769399999999927e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.692" endtime="20201029 12:46:41.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.687" endtime="20201029 12:46:41.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.698" endtime="20201029 12:46:41.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.696" endtime="20201029 12:46:41.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.695" endtime="20201029 12:46:41.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.338" endtime="20201029 12:46:41.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.337" endtime="20201029 12:46:41.719"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.727" endtime="20201029 12:46:41.747"></status>
</kw>
<msg timestamp="20201029 12:46:41.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.726" endtime="20201029 12:46:41.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.748" endtime="20201029 12:46:41.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.751" endtime="20201029 12:46:41.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.723" endtime="20201029 12:46:41.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.721" endtime="20201029 12:46:41.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.760" endtime="20201029 12:46:42.045"></status>
</kw>
<msg timestamp="20201029 12:46:42.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.758" endtime="20201029 12:46:42.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.049" endtime="20201029 12:46:42.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.058" endtime="20201029 12:46:42.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.756" endtime="20201029 12:46:42.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.754" endtime="20201029 12:46:42.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.064" level="INFO">${RESULT} = [{'diff': 8.887500000000215e-05}, {'diff': 8.823600000000195e-05}, {'diff': 8.829200000000023e-05}, {'diff': 8.856900000000015e-05}, {'diff': 8.876300000000212e-05}, {'diff': 8.879200000000073e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:42.061" endtime="20201029 12:46:42.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.068" level="INFO">${ACCURACY} = {'diff': [8.887500000000215e-05, 8.823600000000195e-05, 8.829200000000023e-05, 8.856900000000015e-05, 8.876300000000212e-05, 8.879200000000073e-05, 8.845799999999959e-05, 8.83059999999998e-05, 8.79859...</msg>
<status status="PASS" starttime="20201029 12:46:42.065" endtime="20201029 12:46:42.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.073" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.072" endtime="20201029 12:46:42.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.075" level="INFO">VALUE: [8.887500000000215e-05, 8.823600000000195e-05, 8.829200000000023e-05, 8.856900000000015e-05, 8.876300000000212e-05, 8.879200000000073e-05, 8.845799999999959e-05, 8.83059999999998e-05, 8.798599999999823e-05, 8.805600000000302e-05, 8.830600000000327e-05, 8.868100000000018e-05, 8.865200000000156e-05, 8.808299999999922e-05, 8.836100000000208e-05, 8.86250000000019e-05, 8.851300000000187e-05, 8.887499999999868e-05, 8.883299999999997e-05, 8.795799999999909e-05, 8.805599999999955e-05, 8.861099999999886e-05, 8.831999999999937e-05, 8.869400000000027e-05, 8.840300000000079e-05, 8.870899999999932e-05, 8.813900000000097e-05, 8.845799999999959e-05, 8.847299999999864e-05, 8.861099999999886e-05, 8.823599999999848e-05, 8.838899999999775e-05, 8.854200000000048e-05, 8.843000000000045e-05, 8.881999999999987e-05, 8.863900000000147e-05, 8.890299999999782e-05, 8.887500000000215e-05, 8.845799999999959e-05, 8.883299999999997e-05, 8.84449999999995e-05, 8.801400000000084e-05, 8.837499999999818e-05, 8.874999999999855e-05, 8.869400000000027e-05, 8.859699999999929e-05, 8.833399999999894e-05, 8.852800000000091e-05, 8.843000000000045e-05, 8.838900000000122e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.074" endtime="20201029 12:46:42.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.069" endtime="20201029 12:46:42.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.081" endtime="20201029 12:46:42.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.079" endtime="20201029 12:46:42.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.078" endtime="20201029 12:46:42.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.720" endtime="20201029 12:46:42.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.719" endtime="20201029 12:46:42.102"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.110" endtime="20201029 12:46:42.128"></status>
</kw>
<msg timestamp="20201029 12:46:42.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.109" endtime="20201029 12:46:42.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.130" endtime="20201029 12:46:42.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.132" endtime="20201029 12:46:42.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.106" endtime="20201029 12:46:42.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.104" endtime="20201029 12:46:42.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.141" endtime="20201029 12:46:42.427"></status>
</kw>
<msg timestamp="20201029 12:46:42.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021435667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.140" endtime="20201029 12:46:42.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021435667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.431" endtime="20201029 12:46:42.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.439" endtime="20201029 12:46:42.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.137" endtime="20201029 12:46:42.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.136" endtime="20201029 12:46:42.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.446" level="INFO">${RESULT} = [{'diff': 9.013900000000297e-05}, {'diff': 8.890299999999782e-05}, {'diff': 8.987499999999968e-05}, {'diff': 8.93060000000008e-05}, {'diff': 8.976400000000259e-05}, {'diff': 8.951399999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:42.443" endtime="20201029 12:46:42.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.451" level="INFO">${ACCURACY} = {'diff': [9.013900000000297e-05, 8.890299999999782e-05, 8.987499999999968e-05, 8.93060000000008e-05, 8.976400000000259e-05, 8.951399999999887e-05, 8.987499999999968e-05, 8.956899999999768e-05, 8.98329...</msg>
<status status="PASS" starttime="20201029 12:46:42.447" endtime="20201029 12:46:42.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.455" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.454" endtime="20201029 12:46:42.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.458" level="INFO">VALUE: [9.013900000000297e-05, 8.890299999999782e-05, 8.987499999999968e-05, 8.93060000000008e-05, 8.976400000000259e-05, 8.951399999999887e-05, 8.987499999999968e-05, 8.956899999999768e-05, 8.98329999999975e-05, 8.895800000000009e-05, 8.901399999999837e-05, 8.902800000000141e-05, 8.917999999999773e-05, 8.944400000000102e-05, 8.950000000000277e-05, 8.96519999999991e-05, 8.932000000000037e-05, 8.936099999999961e-05, 8.937500000000265e-05, 8.904199999999751e-05, 8.938900000000222e-05, 8.972200000000041e-05, 8.911099999999936e-05, 8.927800000000166e-05, 8.924999999999905e-05, 8.938899999999875e-05, 8.925000000000252e-05, 8.951399999999887e-05, 8.958400000000019e-05, 8.96800000000017e-05, 8.967999999999823e-05, 8.907000000000012e-05, 8.926399999999862e-05, 8.957000000000062e-05, 8.915299999999807e-05, 8.919400000000077e-05, 8.961099999999986e-05, 8.96250000000029e-05, 8.908300000000022e-05, 8.976399999999912e-05, 8.923600000000295e-05, 8.988899999999925e-05, 8.984700000000054e-05, 8.937499999999918e-05, 8.974999999999955e-05, 8.958300000000072e-05, 8.983300000000097e-05, 8.919500000000025e-05, 8.968099999999771e-05, 8.945799999999712e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.456" endtime="20201029 12:46:42.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.452" endtime="20201029 12:46:42.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.463" endtime="20201029 12:46:42.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.461" endtime="20201029 12:46:42.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.460" endtime="20201029 12:46:42.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.102" endtime="20201029 12:46:42.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.102" endtime="20201029 12:46:42.483"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.492" endtime="20201029 12:46:42.510"></status>
</kw>
<msg timestamp="20201029 12:46:42.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.490" endtime="20201029 12:46:42.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.512" endtime="20201029 12:46:42.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.514" endtime="20201029 12:46:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.488" endtime="20201029 12:46:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.486" endtime="20201029 12:46:42.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.523" endtime="20201029 12:46:42.810"></status>
</kw>
<msg timestamp="20201029 12:46:42.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.522" endtime="20201029 12:46:42.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.814" endtime="20201029 12:46:42.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.822" endtime="20201029 12:46:42.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.519" endtime="20201029 12:46:42.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.518" endtime="20201029 12:46:42.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.829" level="INFO">${RESULT} = [{'diff': 9.058300000000172e-05}, {'diff': 9.016599999999916e-05}, {'diff': 9.040299999999932e-05}, {'diff': 9.020900000000082e-05}, {'diff': 9.026399999999962e-05}, {'diff': 9.020899999999735e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:42.826" endtime="20201029 12:46:42.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.833" level="INFO">${ACCURACY} = {'diff': [9.058300000000172e-05, 9.016599999999916e-05, 9.040299999999932e-05, 9.020900000000082e-05, 9.026399999999962e-05, 9.020899999999735e-05, 9.062500000000043e-05, 9.005599999999808e-05, 9.0889...</msg>
<status status="PASS" starttime="20201029 12:46:42.830" endtime="20201029 12:46:42.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.838" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.836" endtime="20201029 12:46:42.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.840" level="INFO">VALUE: [9.058300000000172e-05, 9.016599999999916e-05, 9.040299999999932e-05, 9.020900000000082e-05, 9.026399999999962e-05, 9.020899999999735e-05, 9.062500000000043e-05, 9.005599999999808e-05, 9.088900000000025e-05, 9.045800000000159e-05, 9.052699999999997e-05, 9.088800000000077e-05, 9.058299999999825e-05, 9.082000000000187e-05, 9.086099999999764e-05, 9.025000000000005e-05, 9.001399999999937e-05, 9.016699999999864e-05, 9.077700000000022e-05, 9.037499999999671e-05, 9.066599999999966e-05, 9.056900000000215e-05, 9.043000000000245e-05, 9.033300000000147e-05, 9.009700000000079e-05, 9.032000000000137e-05, 8.994399999999805e-05, 9.076300000000065e-05, 9.01670000000021e-05, 9.052799999999944e-05, 9.007000000000112e-05, 9.020799999999787e-05, 9.086100000000111e-05, 9.055600000000205e-05, 9.033400000000094e-05, 9.019499999999778e-05, 9.027799999999919e-05, 9.036099999999714e-05, 9.034800000000051e-05, 9.090299999999982e-05, 9.030499999999886e-05, 9.023600000000048e-05, 9.091599999999991e-05, 9.056899999999868e-05, 9.001399999999937e-05, 9.084799999999754e-05, 9.083300000000197e-05, 9.036100000000061e-05, 9.072300000000089e-05, 9.083300000000197e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.839" endtime="20201029 12:46:42.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.834" endtime="20201029 12:46:42.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.845" endtime="20201029 12:46:42.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.843" endtime="20201029 12:46:42.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.842" endtime="20201029 12:46:42.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.484" endtime="20201029 12:46:42.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.484" endtime="20201029 12:46:42.866"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.874" endtime="20201029 12:46:42.894"></status>
</kw>
<msg timestamp="20201029 12:46:42.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.873" endtime="20201029 12:46:42.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.895" endtime="20201029 12:46:42.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.898" endtime="20201029 12:46:42.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.870" endtime="20201029 12:46:42.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.868" endtime="20201029 12:46:42.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.907" endtime="20201029 12:46:43.193"></status>
</kw>
<msg timestamp="20201029 12:46:43.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.905" endtime="20201029 12:46:43.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.197" endtime="20201029 12:46:43.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.206" endtime="20201029 12:46:43.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.903" endtime="20201029 12:46:43.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.901" endtime="20201029 12:46:43.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.212" level="INFO">${RESULT} = [{'diff': 9.23879999999988e-05}, {'diff': 9.102700000000047e-05}, {'diff': 9.137500000000118e-05}, {'diff': 9.179199999999679e-05}, {'diff': 9.14450000000025e-05}, {'diff': 9.11390000000005e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:43.209" endtime="20201029 12:46:43.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.216" level="INFO">${ACCURACY} = {'diff': [9.23879999999988e-05, 9.102700000000047e-05, 9.137500000000118e-05, 9.179199999999679e-05, 9.14450000000025e-05, 9.11390000000005e-05, 9.131899999999943e-05, 9.102799999999994e-05, 9.1153000...</msg>
<status status="PASS" starttime="20201029 12:46:43.213" endtime="20201029 12:46:43.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.221" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.220" endtime="20201029 12:46:43.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.223" level="INFO">VALUE: [9.23879999999988e-05, 9.102700000000047e-05, 9.137500000000118e-05, 9.179199999999679e-05, 9.14450000000025e-05, 9.11390000000005e-05, 9.131899999999943e-05, 9.102799999999994e-05, 9.115300000000007e-05, 9.14589999999986e-05, 9.125000000000105e-05, 9.106999999999865e-05, 9.105600000000255e-05, 9.162500000000143e-05, 9.115300000000007e-05, 9.176400000000112e-05, 9.101400000000037e-05, 9.137500000000118e-05, 9.106899999999918e-05, 9.158399999999872e-05, 9.187499999999821e-05, 9.126399999999715e-05, 9.101400000000037e-05, 9.129100000000029e-05, 9.133399999999847e-05, 9.144499999999903e-05, 9.109700000000179e-05, 9.1332999999999e-05, 9.0945000000002e-05, 9.102700000000047e-05, 9.115300000000007e-05, 9.095799999999862e-05, 9.126400000000062e-05, 9.181899999999993e-05, 9.1026999999997e-05, 9.15139999999974e-05, 9.104100000000004e-05, 9.099999999999733e-05, 9.165300000000057e-05, 9.188900000000125e-05, 9.134799999999804e-05, 9.1026999999997e-05, 9.162500000000143e-05, 9.104199999999951e-05, 9.133300000000247e-05, 9.176400000000112e-05, 9.120800000000234e-05, 9.10000000000008e-05, 9.152800000000044e-05, 9.188900000000125e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.222" endtime="20201029 12:46:43.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.217" endtime="20201029 12:46:43.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.229" endtime="20201029 12:46:43.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.227" endtime="20201029 12:46:43.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.226" endtime="20201029 12:46:43.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.867" endtime="20201029 12:46:43.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.866" endtime="20201029 12:46:43.250"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.258" endtime="20201029 12:46:43.277"></status>
</kw>
<msg timestamp="20201029 12:46:43.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.257" endtime="20201029 12:46:43.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.278" endtime="20201029 12:46:43.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.281" endtime="20201029 12:46:43.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.254" endtime="20201029 12:46:43.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.252" endtime="20201029 12:46:43.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.290" endtime="20201029 12:46:43.578"></status>
</kw>
<msg timestamp="20201029 12:46:43.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.288" endtime="20201029 12:46:43.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.584" endtime="20201029 12:46:43.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.592" endtime="20201029 12:46:43.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.286" endtime="20201029 12:46:43.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.284" endtime="20201029 12:46:43.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.599" level="INFO">${RESULT} = [{'diff': 9.261100000000286e-05}, {'diff': 9.237499999999871e-05}, {'diff': 9.237499999999871e-05}, {'diff': 9.205600000000008e-05}, {'diff': 9.270800000000037e-05}, {'diff': 9.24589999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:43.596" endtime="20201029 12:46:43.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.605" level="INFO">${ACCURACY} = {'diff': [9.261100000000286e-05, 9.237499999999871e-05, 9.237499999999871e-05, 9.205600000000008e-05, 9.270800000000037e-05, 9.24589999999996e-05, 9.288900000000225e-05, 9.205600000000008e-05, 9.24310...</msg>
<status status="PASS" starttime="20201029 12:46:43.601" endtime="20201029 12:46:43.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.610" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.609" endtime="20201029 12:46:43.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.612" level="INFO">VALUE: [9.261100000000286e-05, 9.237499999999871e-05, 9.237499999999871e-05, 9.205600000000008e-05, 9.270800000000037e-05, 9.24589999999996e-05, 9.288900000000225e-05, 9.205600000000008e-05, 9.243100000000046e-05, 9.257000000000015e-05, 9.287499999999921e-05, 9.290300000000182e-05, 9.227699999999825e-05, 9.20139999999979e-05, 9.262500000000243e-05, 9.270800000000037e-05, 9.269500000000028e-05, 9.20000000000018e-05, 9.276399999999865e-05, 9.2639000000002e-05, 9.193000000000048e-05, 9.255500000000111e-05, 9.269500000000028e-05, 9.219499999999978e-05, 9.201400000000137e-05, 9.209699999999932e-05, 9.263899999999853e-05, 9.206900000000018e-05, 9.205600000000008e-05, 9.23199999999999e-05, 9.190300000000082e-05, 9.2333e-05, 9.201299999999843e-05, 9.236099999999914e-05, 9.248600000000273e-05, 9.201400000000137e-05, 9.248599999999926e-05, 9.244500000000003e-05, 9.284700000000007e-05, 9.234699999999957e-05, 9.245800000000012e-05, 9.194400000000005e-05, 9.242999999999751e-05, 9.257000000000015e-05, 9.244400000000055e-05, 9.206900000000018e-05, 9.249999999999883e-05, 9.237499999999871e-05, 9.220799999999987e-05, 9.212499999999846e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.611" endtime="20201029 12:46:43.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.606" endtime="20201029 12:46:43.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.618" endtime="20201029 12:46:43.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.616" endtime="20201029 12:46:43.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.615" endtime="20201029 12:46:43.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.251" endtime="20201029 12:46:43.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.250" endtime="20201029 12:46:43.639"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.647" endtime="20201029 12:46:43.666"></status>
</kw>
<msg timestamp="20201029 12:46:43.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.646" endtime="20201029 12:46:43.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.668" endtime="20201029 12:46:43.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.670" endtime="20201029 12:46:43.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.643" endtime="20201029 12:46:43.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.641" endtime="20201029 12:46:43.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.679" endtime="20201029 12:46:43.968"></status>
</kw>
<msg timestamp="20201029 12:46:43.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.678" endtime="20201029 12:46:43.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.972" endtime="20201029 12:46:43.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.980" endtime="20201029 12:46:43.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.675" endtime="20201029 12:46:43.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.673" endtime="20201029 12:46:43.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.987" level="INFO">${RESULT} = [{'diff': 9.425000000000058e-05}, {'diff': 9.293000000000148e-05}, {'diff': 9.340300000000232e-05}, {'diff': 9.331900000000143e-05}, {'diff': 9.323600000000001e-05}, {'diff': 9.308400000000022e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:43.984" endtime="20201029 12:46:43.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.991" level="INFO">${ACCURACY} = {'diff': [9.425000000000058e-05, 9.293000000000148e-05, 9.340300000000232e-05, 9.331900000000143e-05, 9.323600000000001e-05, 9.308400000000022e-05, 9.387500000000021e-05, 9.313899999999903e-05, 9.3513...</msg>
<status status="PASS" starttime="20201029 12:46:43.988" endtime="20201029 12:46:43.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.995" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.994" endtime="20201029 12:46:43.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.998" level="INFO">VALUE: [9.425000000000058e-05, 9.293000000000148e-05, 9.340300000000232e-05, 9.331900000000143e-05, 9.323600000000001e-05, 9.308400000000022e-05, 9.387500000000021e-05, 9.313899999999903e-05, 9.35139999999994e-05, 9.373699999999999e-05, 9.292999999999801e-05, 9.376399999999965e-05, 9.301400000000237e-05, 9.387500000000021e-05, 9.34590000000006e-05, 9.376399999999965e-05, 9.376399999999965e-05, 9.363899999999953e-05, 9.324999999999958e-05, 9.354199999999854e-05, 9.362499999999996e-05, 9.365199999999962e-05, 9.349999999999983e-05, 9.299999999999933e-05, 9.388899999999978e-05, 9.306900000000118e-05, 9.354099999999907e-05, 9.324999999999958e-05, 9.337499999999971e-05, 9.313899999999903e-05, 9.295800000000062e-05, 9.354199999999854e-05, 9.306899999999771e-05, 9.375000000000008e-05, 9.302800000000194e-05, 9.386100000000064e-05, 9.327800000000219e-05, 9.322299999999992e-05, 9.358300000000125e-05, 9.358300000000125e-05, 9.337499999999971e-05, 9.343100000000146e-05, 9.363899999999953e-05, 9.290300000000182e-05, 9.384700000000107e-05, 9.362499999999996e-05, 9.324999999999958e-05, 9.349999999999983e-05, 9.322200000000044e-05, 9.315300000000207e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.997" endtime="20201029 12:46:43.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.992" endtime="20201029 12:46:43.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.005" endtime="20201029 12:46:44.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.002" endtime="20201029 12:46:44.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.000" endtime="20201029 12:46:44.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.640" endtime="20201029 12:46:44.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.639" endtime="20201029 12:46:44.027"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.036" endtime="20201029 12:46:44.056"></status>
</kw>
<msg timestamp="20201029 12:46:44.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.035" endtime="20201029 12:46:44.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.057" endtime="20201029 12:46:44.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.060" endtime="20201029 12:46:44.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.032" endtime="20201029 12:46:44.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.030" endtime="20201029 12:46:44.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.069" endtime="20201029 12:46:44.354"></status>
</kw>
<msg timestamp="20201029 12:46:44.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024323083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.067" endtime="20201029 12:46:44.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024323083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.359" endtime="20201029 12:46:44.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.368" endtime="20201029 12:46:44.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.065" endtime="20201029 12:46:44.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.063" endtime="20201029 12:46:44.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.375" level="INFO">${RESULT} = [{'diff': 9.544400000000008e-05}, {'diff': 9.475000000000108e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.416699999999917e-05}, {'diff': 9.406999999999818e-05}, {'diff': 9.4333999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:44.371" endtime="20201029 12:46:44.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.379" level="INFO">${ACCURACY} = {'diff': [9.544400000000008e-05, 9.475000000000108e-05, 9.438900000000028e-05, 9.416699999999917e-05, 9.406999999999818e-05, 9.4333999999998e-05, 9.468100000000271e-05, 9.425000000000058e-05, 9.415299...</msg>
<status status="PASS" starttime="20201029 12:46:44.376" endtime="20201029 12:46:44.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.383" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.382" endtime="20201029 12:46:44.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.386" level="INFO">VALUE: [9.544400000000008e-05, 9.475000000000108e-05, 9.438900000000028e-05, 9.416699999999917e-05, 9.406999999999818e-05, 9.4333999999998e-05, 9.468100000000271e-05, 9.425000000000058e-05, 9.41529999999996e-05, 9.480599999999936e-05, 9.408399999999775e-05, 9.43200000000019e-05, 9.475000000000108e-05, 9.426399999999668e-05, 9.426299999999721e-05, 9.449999999999736e-05, 9.437500000000071e-05, 9.450000000000083e-05, 9.417999999999926e-05, 9.462500000000096e-05, 9.406899999999871e-05, 9.452799999999997e-05, 9.448600000000126e-05, 9.487500000000121e-05, 9.45140000000004e-05, 9.406999999999818e-05, 9.394499999999806e-05, 9.476400000000065e-05, 9.408300000000175e-05, 9.436099999999767e-05, 9.426400000000015e-05, 9.449999999999736e-05, 9.4333000000002e-05, 9.43469999999981e-05, 9.425000000000058e-05, 9.458400000000172e-05, 9.408299999999828e-05, 9.407000000000165e-05, 9.419399999999883e-05, 9.408300000000175e-05, 9.457000000000215e-05, 9.418099999999874e-05, 9.427799999999972e-05, 9.473700000000099e-05, 9.456900000000268e-05, 9.467999999999976e-05, 9.461100000000139e-05, 9.48330000000025e-05, 9.462500000000096e-05, 9.431999999999843e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.384" endtime="20201029 12:46:44.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.380" endtime="20201029 12:46:44.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.392" endtime="20201029 12:46:44.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.390" endtime="20201029 12:46:44.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.389" endtime="20201029 12:46:44.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.028" endtime="20201029 12:46:44.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.027" endtime="20201029 12:46:44.412"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.421" endtime="20201029 12:46:44.439"></status>
</kw>
<msg timestamp="20201029 12:46:44.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.419" endtime="20201029 12:46:44.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.441" endtime="20201029 12:46:44.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.443" endtime="20201029 12:46:44.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.417" endtime="20201029 12:46:44.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.415" endtime="20201029 12:46:44.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.453" endtime="20201029 12:46:44.738"></status>
</kw>
<msg timestamp="20201029 12:46:44.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.451" endtime="20201029 12:46:44.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.742" endtime="20201029 12:46:44.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.750" endtime="20201029 12:46:44.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.448" endtime="20201029 12:46:44.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.447" endtime="20201029 12:46:44.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.757" level="INFO">${RESULT} = [{'diff': 9.593100000000049e-05}, {'diff': 9.536099999999867e-05}, {'diff': 9.495800000000262e-05}, {'diff': 9.575000000000208e-05}, {'diff': 9.544400000000008e-05}, {'diff': 9.558299999999978e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:44.753" endtime="20201029 12:46:44.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.762" level="INFO">${ACCURACY} = {'diff': [9.593100000000049e-05, 9.536099999999867e-05, 9.495800000000262e-05, 9.575000000000208e-05, 9.544400000000008e-05, 9.558299999999978e-05, 9.500000000000133e-05, 9.568100000000024e-05, 9.5887...</msg>
<status status="PASS" starttime="20201029 12:46:44.758" endtime="20201029 12:46:44.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.766" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.765" endtime="20201029 12:46:44.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.769" level="INFO">VALUE: [9.593100000000049e-05, 9.536099999999867e-05, 9.495800000000262e-05, 9.575000000000208e-05, 9.544400000000008e-05, 9.558299999999978e-05, 9.500000000000133e-05, 9.568100000000024e-05, 9.588799999999884e-05, 9.542999999999704e-05, 9.511100000000189e-05, 9.569499999999981e-05, 9.556900000000021e-05, 9.512500000000146e-05, 9.519399999999983e-05, 9.53469999999991e-05, 9.561099999999892e-05, 9.556900000000021e-05, 9.543099999999999e-05, 9.556900000000021e-05, 9.531999999999943e-05, 9.56799999999973e-05, 9.530500000000039e-05, 9.505500000000014e-05, 9.590299999999788e-05, 9.511099999999842e-05, 9.513899999999756e-05, 9.556900000000021e-05, 9.511199999999789e-05, 9.506899999999971e-05, 9.573600000000251e-05, 9.573599999999904e-05, 9.559699999999935e-05, 9.494499999999906e-05, 9.519499999999931e-05, 9.555600000000011e-05, 9.495899999999863e-05, 9.569499999999981e-05, 9.550000000000183e-05, 9.581999999999993e-05, 9.518099999999974e-05, 9.540299999999738e-05, 9.520899999999888e-05, 9.526400000000115e-05, 9.549999999999836e-05, 9.512500000000146e-05, 9.526399999999768e-05, 9.502800000000047e-05, 9.533299999999953e-05, 9.580500000000089e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.767" endtime="20201029 12:46:44.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.762" endtime="20201029 12:46:44.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.773" endtime="20201029 12:46:44.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.772" endtime="20201029 12:46:44.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.771" endtime="20201029 12:46:44.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.413" endtime="20201029 12:46:44.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.413" endtime="20201029 12:46:44.794"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.803" endtime="20201029 12:46:44.822"></status>
</kw>
<msg timestamp="20201029 12:46:44.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.801" endtime="20201029 12:46:44.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.823" endtime="20201029 12:46:44.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.826" endtime="20201029 12:46:44.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.799" endtime="20201029 12:46:44.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.797" endtime="20201029 12:46:44.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.835" endtime="20201029 12:46:45.121"></status>
</kw>
<msg timestamp="20201029 12:46:45.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.833" endtime="20201029 12:46:45.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.125" endtime="20201029 12:46:45.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.133" endtime="20201029 12:46:45.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.831" endtime="20201029 12:46:45.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.829" endtime="20201029 12:46:45.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.140" level="INFO">${RESULT} = [{'diff': 9.66799999999983e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.599999999999886e-05}, {'diff': 9.627799999999825e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.63470000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:45.136" endtime="20201029 12:46:45.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.144" level="INFO">${ACCURACY} = {'diff': [9.66799999999983e-05, 9.643100000000099e-05, 9.599999999999886e-05, 9.627799999999825e-05, 9.674999999999961e-05, 9.63470000000001e-05, 9.638899999999881e-05, 9.625000000000258e-05, 9.659699...</msg>
<status status="PASS" starttime="20201029 12:46:45.141" endtime="20201029 12:46:45.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.148" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.147" endtime="20201029 12:46:45.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.151" level="INFO">VALUE: [9.66799999999983e-05, 9.643100000000099e-05, 9.599999999999886e-05, 9.627799999999825e-05, 9.674999999999961e-05, 9.63470000000001e-05, 9.638899999999881e-05, 9.625000000000258e-05, 9.659699999999688e-05, 9.68470000000006e-05, 9.597199999999972e-05, 9.641700000000142e-05, 9.658400000000025e-05, 9.647200000000022e-05, 9.641700000000142e-05, 9.590299999999788e-05, 9.641700000000142e-05, 9.66799999999983e-05, 9.663900000000253e-05, 9.604200000000104e-05, 9.59859999999993e-05, 9.67920000000018e-05, 9.672200000000047e-05, 9.674999999999961e-05, 9.666599999999873e-05, 9.588900000000178e-05, 9.672200000000047e-05, 9.61530000000016e-05, 9.609800000000279e-05, 9.636099999999967e-05, 9.661099999999992e-05, 9.599999999999886e-05, 9.61669999999977e-05, 9.605500000000114e-05, 9.611099999999942e-05, 9.655600000000111e-05, 9.622199999999997e-05, 9.605600000000061e-05, 9.636099999999967e-05, 9.65140000000024e-05, 9.672200000000047e-05, 9.680499999999842e-05, 9.64859999999998e-05, 9.643100000000099e-05, 9.591700000000092e-05, 9.595800000000015e-05, 9.640299999999838e-05, 9.66669999999982e-05, 9.605500000000114e-05, 9.643100000000099e-05]</msg>
<status status="PASS" starttime="20201029 12:46:45.149" endtime="20201029 12:46:45.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.144" endtime="20201029 12:46:45.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.160" endtime="20201029 12:46:45.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.158" endtime="20201029 12:46:45.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.157" endtime="20201029 12:46:45.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.795" endtime="20201029 12:46:45.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.795" endtime="20201029 12:46:45.181"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.189" endtime="20201029 12:46:45.209"></status>
</kw>
<msg timestamp="20201029 12:46:45.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.188" endtime="20201029 12:46:45.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.211" endtime="20201029 12:46:45.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.213" endtime="20201029 12:46:45.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.185" endtime="20201029 12:46:45.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.183" endtime="20201029 12:46:45.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.222" endtime="20201029 12:46:45.508"></status>
</kw>
<msg timestamp="20201029 12:46:45.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02255175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:45.220" endtime="20201029 12:46:45.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02255175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:45.512" endtime="20201029 12:46:45.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.521" endtime="20201029 12:46:45.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.218" endtime="20201029 12:46:45.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.216" endtime="20201029 12:46:45.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.527" level="INFO">${RESULT} = [{'diff': 9.761099999999745e-05}, {'diff': 9.775000000000061e-05}, {'diff': 9.75279999999995e-05}, {'diff': 9.730600000000186e-05}, {'diff': 9.741699999999895e-05}, {'diff': 9.773600000000104e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:45.524" endtime="20201029 12:46:45.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.531" level="INFO">${ACCURACY} = {'diff': [9.761099999999745e-05, 9.775000000000061e-05, 9.75279999999995e-05, 9.730600000000186e-05, 9.741699999999895e-05, 9.773600000000104e-05, 9.697200000000072e-05, 9.738899999999981e-05, 9.76529...</msg>
<status status="PASS" starttime="20201029 12:46:45.528" endtime="20201029 12:46:45.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.535" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.535" endtime="20201029 12:46:45.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.538" level="INFO">VALUE: [9.761099999999745e-05, 9.775000000000061e-05, 9.75279999999995e-05, 9.730600000000186e-05, 9.741699999999895e-05, 9.773600000000104e-05, 9.697200000000072e-05, 9.738899999999981e-05, 9.765299999999963e-05, 9.78340000000015e-05, 9.733300000000153e-05, 9.781899999999899e-05, 9.737499999999677e-05, 9.754199999999907e-05, 9.722200000000097e-05, 9.740299999999938e-05, 9.787500000000074e-05, 9.719399999999837e-05, 9.693100000000149e-05, 9.71669999999987e-05, 9.723600000000054e-05, 9.76660000000032e-05, 9.777799999999975e-05, 9.694399999999812e-05, 9.694400000000158e-05, 9.762500000000049e-05, 9.73059999999984e-05, 9.793099999999902e-05, 9.784800000000107e-05, 9.783299999999856e-05, 9.763900000000006e-05, 9.758400000000125e-05, 9.71799999999988e-05, 9.769399999999887e-05, 9.769499999999834e-05, 9.731899999999849e-05, 9.708400000000075e-05, 9.726399999999968e-05, 9.758400000000125e-05, 9.755599999999864e-05, 9.740299999999938e-05, 9.78059999999989e-05, 9.740299999999938e-05, 9.691600000000244e-05, 9.705599999999814e-05, 9.737500000000024e-05, 9.727800000000272e-05, 9.712499999999999e-05, 9.727799999999925e-05, 9.712499999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:46:45.537" endtime="20201029 12:46:45.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.532" endtime="20201029 12:46:45.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.544" endtime="20201029 12:46:45.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.542" endtime="20201029 12:46:45.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.541" endtime="20201029 12:46:45.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.181" endtime="20201029 12:46:45.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.181" endtime="20201029 12:46:45.565"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.573" endtime="20201029 12:46:45.592"></status>
</kw>
<msg timestamp="20201029 12:46:45.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.572" endtime="20201029 12:46:45.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.594" endtime="20201029 12:46:45.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.596" endtime="20201029 12:46:45.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.569" endtime="20201029 12:46:45.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.567" endtime="20201029 12:46:45.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.605" endtime="20201029 12:46:45.891"></status>
</kw>
<msg timestamp="20201029 12:46:45.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.604" endtime="20201029 12:46:45.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.895" endtime="20201029 12:46:45.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.904" endtime="20201029 12:46:45.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.601" endtime="20201029 12:46:45.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.599" endtime="20201029 12:46:45.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.910" level="INFO">${RESULT} = [{'diff': 9.873599999999857e-05}, {'diff': 9.880500000000042e-05}, {'diff': 9.852700000000103e-05}, {'diff': 9.843099999999952e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.884800000000207e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:45.907" endtime="20201029 12:46:45.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.915" level="INFO">${ACCURACY} = {'diff': [9.873599999999857e-05, 9.880500000000042e-05, 9.852700000000103e-05, 9.843099999999952e-05, 9.854200000000007e-05, 9.884800000000207e-05, 9.80410000000001e-05, 9.798599999999782e-05, 9.84579...</msg>
<status status="PASS" starttime="20201029 12:46:45.911" endtime="20201029 12:46:45.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.920" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.919" endtime="20201029 12:46:45.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.922" level="INFO">VALUE: [9.873599999999857e-05, 9.880500000000042e-05, 9.852700000000103e-05, 9.843099999999952e-05, 9.854200000000007e-05, 9.884800000000207e-05, 9.80410000000001e-05, 9.798599999999782e-05, 9.845799999999919e-05, 9.865200000000116e-05, 9.837500000000124e-05, 9.854099999999713e-05, 9.875000000000161e-05, 9.831899999999949e-05, 9.85410000000006e-05, 9.859699999999888e-05, 9.800000000000086e-05, 9.85410000000006e-05, 9.829199999999982e-05, 9.836100000000167e-05, 9.855599999999964e-05, 9.873600000000204e-05, 9.869499999999934e-05, 9.800000000000086e-05, 9.877799999999728e-05, 9.797199999999825e-05, 9.838900000000081e-05, 9.877800000000075e-05, 9.794499999999859e-05, 9.858299999999931e-05, 9.837500000000124e-05, 9.884699999999913e-05, 9.798700000000077e-05, 9.797200000000172e-05, 9.809700000000185e-05, 9.876399999999771e-05, 9.809800000000132e-05, 9.845899999999866e-05, 9.861099999999845e-05, 9.844499999999909e-05, 9.820900000000188e-05, 9.845800000000265e-05, 9.848599999999832e-05, 9.831899999999949e-05, 9.887500000000174e-05, 9.838899999999734e-05, 9.852799999999703e-05, 9.85410000000006e-05, 9.873599999999857e-05, 9.819399999999937e-05]</msg>
<status status="PASS" starttime="20201029 12:46:45.921" endtime="20201029 12:46:45.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.916" endtime="20201029 12:46:45.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.927" endtime="20201029 12:46:45.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.926" endtime="20201029 12:46:45.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.925" endtime="20201029 12:46:45.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.566" endtime="20201029 12:46:45.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.565" endtime="20201029 12:46:45.948"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.957" endtime="20201029 12:46:45.976"></status>
</kw>
<msg timestamp="20201029 12:46:45.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.955" endtime="20201029 12:46:45.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.977" endtime="20201029 12:46:45.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.980" endtime="20201029 12:46:45.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.953" endtime="20201029 12:46:45.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.950" endtime="20201029 12:46:45.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.989" endtime="20201029 12:46:46.275"></status>
</kw>
<msg timestamp="20201029 12:46:46.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.987" endtime="20201029 12:46:46.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.279" endtime="20201029 12:46:46.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.287" endtime="20201029 12:46:46.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.985" endtime="20201029 12:46:46.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.983" endtime="20201029 12:46:46.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.294" level="INFO">${RESULT} = [{'diff': 0.00010038899999999934}, {'diff': 9.961100000000292e-05}, {'diff': 9.891700000000045e-05}, {'diff': 9.952699999999856e-05}, {'diff': 9.92219999999995e-05}, {'diff': 9.934699999999963e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:46.290" endtime="20201029 12:46:46.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.298" level="INFO">${ACCURACY} = {'diff': [0.00010038899999999934, 9.961100000000292e-05, 9.891700000000045e-05, 9.952699999999856e-05, 9.92219999999995e-05, 9.934699999999963e-05, 9.941700000000095e-05, 9.962500000000249e-05, 9.9583...</msg>
<status status="PASS" starttime="20201029 12:46:46.294" endtime="20201029 12:46:46.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.302" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.301" endtime="20201029 12:46:46.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.305" level="INFO">VALUE: [0.00010038899999999934, 9.961100000000292e-05, 9.891700000000045e-05, 9.952699999999856e-05, 9.92219999999995e-05, 9.934699999999963e-05, 9.941700000000095e-05, 9.962500000000249e-05, 9.958399999999978e-05, 9.969500000000034e-05, 9.911099999999895e-05, 9.963900000000206e-05, 9.944500000000009e-05, 9.90410000000011e-05, 9.947299999999923e-05, 9.904200000000057e-05, 9.90410000000011e-05, 9.9722e-05, 9.934699999999963e-05, 9.929100000000135e-05, 9.950000000000236e-05, 9.95419999999976e-05, 9.979200000000132e-05, 9.951399999999846e-05, 9.970899999999991e-05, 9.926399999999821e-05, 9.984700000000013e-05, 9.89860000000023e-05, 9.974999999999914e-05, 9.91800000000008e-05, 9.895799999999969e-05, 9.963900000000206e-05, 9.984700000000013e-05, 9.938900000000181e-05, 9.909799999999885e-05, 9.908399999999928e-05, 9.920799999999994e-05, 9.961099999999945e-05, 9.970899999999991e-05, 9.905500000000067e-05, 9.976399999999871e-05, 9.96939999999974e-05, 9.965300000000163e-05, 9.909699999999938e-05, 9.945899999999966e-05, 9.897200000000272e-05, 9.911099999999895e-05, 9.901400000000143e-05, 9.952699999999856e-05, 9.959699999999988e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.303" endtime="20201029 12:46:46.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.298" endtime="20201029 12:46:46.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.310" endtime="20201029 12:46:46.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.308" endtime="20201029 12:46:46.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.307" endtime="20201029 12:46:46.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.949" endtime="20201029 12:46:46.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.948" endtime="20201029 12:46:46.330"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.339" endtime="20201029 12:46:46.359"></status>
</kw>
<msg timestamp="20201029 12:46:46.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.337" endtime="20201029 12:46:46.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.360" endtime="20201029 12:46:46.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.363" endtime="20201029 12:46:46.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.335" endtime="20201029 12:46:46.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.333" endtime="20201029 12:46:46.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.372" endtime="20201029 12:46:46.658"></status>
</kw>
<msg timestamp="20201029 12:46:46.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.370" endtime="20201029 12:46:46.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.662" endtime="20201029 12:46:46.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.670" endtime="20201029 12:46:46.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.368" endtime="20201029 12:46:46.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.366" endtime="20201029 12:46:46.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.677" level="INFO">${RESULT} = [{'diff': 0.00010077799999999928}, {'diff': 0.00010050000000000336}, {'diff': 0.00010002799999999853}, {'diff': 0.00010042999999999858}, {'diff': 0.00010043100000000152}, {'diff': 0.000100152000000002...</msg>
<status status="PASS" starttime="20201029 12:46:46.673" endtime="20201029 12:46:46.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.681" level="INFO">${ACCURACY} = {'diff': [0.00010077799999999928, 0.00010050000000000336, 0.00010002799999999853, 0.00010042999999999858, 0.00010043100000000152, 0.00010015200000000266, 0.00010047200000000076, 0.00010011099999999995...</msg>
<status status="PASS" starttime="20201029 12:46:46.678" endtime="20201029 12:46:46.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.685" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.684" endtime="20201029 12:46:46.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.687" level="INFO">VALUE: [0.00010077799999999928, 0.00010050000000000336, 0.00010002799999999853, 0.00010042999999999858, 0.00010043100000000152, 0.00010015200000000266, 0.00010047200000000076, 0.00010011099999999995, 0.000100722000000001, 0.00010070900000000091, 9.993100000000102e-05, 0.00010083299999999809, 0.00010079200000000232, 0.00010041699999999848, 0.00010076399999999971, 0.00010040299999999891, 0.00010058300000000131, 0.00010043100000000152, 0.00010009700000000038, 0.00010084700000000113, 0.00010052799999999903, 0.00010047200000000076, 9.993100000000102e-05, 9.997299999999973e-05, 0.0001005419999999986, 0.00010027799999999878, 0.00010088899999999984, 0.00010065299999999916, 0.00010083300000000156, 0.0001003610000000002, 0.0001001939999999979, 0.00010072199999999754, 0.00010015299999999866, 0.00010036199999999967, 0.00010002799999999853, 0.00010052799999999903, 0.00010043100000000152, 0.00010015199999999919, 0.00010075000000000014, 0.00010054200000000207, 0.0001008610000000007, 0.00010029200000000182, 9.990299999999841e-05, 0.00010004099999999863, 9.988799999999937e-05, 0.00010034700000000063, 0.00010041699999999848, 0.0001005419999999986, 9.993100000000102e-05, 0.00010083399999999756]</msg>
<status status="PASS" starttime="20201029 12:46:46.686" endtime="20201029 12:46:46.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.681" endtime="20201029 12:46:46.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.693" endtime="20201029 12:46:46.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.692" endtime="20201029 12:46:46.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.691" endtime="20201029 12:46:46.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.331" endtime="20201029 12:46:46.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.331" endtime="20201029 12:46:46.714"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.723" endtime="20201029 12:46:46.741"></status>
</kw>
<msg timestamp="20201029 12:46:46.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.721" endtime="20201029 12:46:46.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.743" endtime="20201029 12:46:46.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.745" endtime="20201029 12:46:46.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.718" endtime="20201029 12:46:46.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.716" endtime="20201029 12:46:46.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.755" endtime="20201029 12:46:47.040"></status>
</kw>
<msg timestamp="20201029 12:46:47.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021435597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.753" endtime="20201029 12:46:47.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021435597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021537528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.044" endtime="20201029 12:46:47.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.052" endtime="20201029 12:46:47.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.750" endtime="20201029 12:46:47.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.749" endtime="20201029 12:46:47.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.059" level="INFO">${RESULT} = [{'diff': 0.00010193099999999955}, {'diff': 0.00010148599999999786}, {'diff': 0.00010175000000000115}, {'diff': 0.00010179199999999985}, {'diff': 0.00010104099999999963}, {'diff': 0.000101181000000002...</msg>
<status status="PASS" starttime="20201029 12:46:47.056" endtime="20201029 12:46:47.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.064" level="INFO">${ACCURACY} = {'diff': [0.00010193099999999955, 0.00010148599999999786, 0.00010175000000000115, 0.00010179199999999985, 0.00010104099999999963, 0.00010118100000000227, 0.00010112500000000052, 0.00010116699999999923...</msg>
<status status="PASS" starttime="20201029 12:46:47.060" endtime="20201029 12:46:47.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.068" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.067" endtime="20201029 12:46:47.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.071" level="INFO">VALUE: [0.00010193099999999955, 0.00010148599999999786, 0.00010175000000000115, 0.00010179199999999985, 0.00010104099999999963, 0.00010118100000000227, 0.00010112500000000052, 0.00010116699999999923, 0.0001015419999999996, 0.0001013610000000012, 0.00010090299999999941, 0.00010155600000000264, 0.00010173600000000158, 0.00010122199999999804, 0.00010129199999999935, 0.00010109700000000138, 0.0001015419999999996, 0.00010091699999999898, 0.00010180599999999942, 0.00010095800000000169, 0.00010111100000000095, 0.0001015000000000009, 0.00010184799999999813, 0.00010109700000000138, 0.0001015549999999997, 0.00010159699999999841, 0.00010126300000000074, 0.00010172199999999854, 0.00010109699999999791, 0.00010148600000000133, 0.00010098600000000083, 0.00010133299999999859, 0.00010147299999999776, 0.00010115299999999966, 0.0001015419999999996, 0.00010167999999999983, 0.0001013610000000012, 0.0001015000000000009, 0.00010145799999999872, 0.00010106999999999824, 0.00010123600000000108, 0.00010161100000000145, 0.00010147200000000176, 0.00010105599999999867, 0.00010162500000000102, 0.00010173600000000158, 0.00010145900000000166, 0.00010163900000000059, 0.00010097200000000126, 0.00010144399999999915]</msg>
<status status="PASS" starttime="20201029 12:46:47.069" endtime="20201029 12:46:47.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.065" endtime="20201029 12:46:47.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.076" endtime="20201029 12:46:47.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.074" endtime="20201029 12:46:47.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.073" endtime="20201029 12:46:47.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.715" endtime="20201029 12:46:47.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.714" endtime="20201029 12:46:47.096"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.105" endtime="20201029 12:46:47.124"></status>
</kw>
<msg timestamp="20201029 12:46:47.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.103" endtime="20201029 12:46:47.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.126" endtime="20201029 12:46:47.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.128" endtime="20201029 12:46:47.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.101" endtime="20201029 12:46:47.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.099" endtime="20201029 12:46:47.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.137" endtime="20201029 12:46:47.427"></status>
</kw>
<msg timestamp="20201029 12:46:47.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.135" endtime="20201029 12:46:47.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021663514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.431" endtime="20201029 12:46:47.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.439" endtime="20201029 12:46:47.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.133" endtime="20201029 12:46:47.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.131" endtime="20201029 12:46:47.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.445" level="INFO">${RESULT} = [{'diff': 0.00010247199999999929}, {'diff': 0.00010202800000000053}, {'diff': 0.00010252799999999757}, {'diff': 0.00010277800000000128}, {'diff': 0.00010276399999999825}, {'diff': 0.000102694000000000...</msg>
<status status="PASS" starttime="20201029 12:46:47.442" endtime="20201029 12:46:47.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.449" level="INFO">${ACCURACY} = {'diff': [0.00010247199999999929, 0.00010202800000000053, 0.00010252799999999757, 0.00010277800000000128, 0.00010276399999999825, 0.0001026940000000004, 0.00010272300000000248, 0.00010219500000000284,...</msg>
<status status="PASS" starttime="20201029 12:46:47.446" endtime="20201029 12:46:47.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.454" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.453" endtime="20201029 12:46:47.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.456" level="INFO">VALUE: [0.00010247199999999929, 0.00010202800000000053, 0.00010252799999999757, 0.00010277800000000128, 0.00010276399999999825, 0.0001026940000000004, 0.00010272300000000248, 0.00010219500000000284, 0.00010284699999999966, 0.00010248600000000233, 0.00010240300000000091, 0.0001025420000000006, 0.00010254100000000113, 0.00010205599999999967, 0.00010205599999999967, 0.00010197199999999879, 0.0001018610000000017, 0.0001020420000000001, 0.00010190299999999694, 0.00010215300000000066, 0.00010218000000000033, 0.00010230499999999698, 0.00010194399999999965, 0.00010198600000000183, 0.00010241700000000048, 0.0001020000000000014, 0.00010209799999999838, 0.00010234699999999916, 0.0001022220000000025, 0.00010197199999999879, 0.00010222199999999904, 0.00010220899999999894, 0.00010247200000000276, 0.0001025550000000007, 0.00010197199999999879, 0.00010270799999999997, 0.0001028749999999988, 0.00010238900000000134, 0.00010234699999999916, 0.00010233299999999959, 0.00010195899999999869, 0.0001018480000000016, 0.00010258299999999984, 0.0001026940000000004, 0.00010234700000000263, 0.00010276400000000172, 0.00010197199999999879, 0.00010279100000000138, 0.0001028610000000027, 0.00010243100000000005]</msg>
<status status="PASS" starttime="20201029 12:46:47.455" endtime="20201029 12:46:47.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.450" endtime="20201029 12:46:47.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.461" endtime="20201029 12:46:47.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.460" endtime="20201029 12:46:47.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.459" endtime="20201029 12:46:47.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.097" endtime="20201029 12:46:47.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.097" endtime="20201029 12:46:47.482"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.491" endtime="20201029 12:46:47.510"></status>
</kw>
<msg timestamp="20201029 12:46:47.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.489" endtime="20201029 12:46:47.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.512" endtime="20201029 12:46:47.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.514" endtime="20201029 12:46:47.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.486" endtime="20201029 12:46:47.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.484" endtime="20201029 12:46:47.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.523" endtime="20201029 12:46:47.809"></status>
</kw>
<msg timestamp="20201029 12:46:47.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.522" endtime="20201029 12:46:47.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.813" endtime="20201029 12:46:47.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.821" endtime="20201029 12:46:47.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.519" endtime="20201029 12:46:47.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.518" endtime="20201029 12:46:47.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.828" level="INFO">${RESULT} = [{'diff': 0.00010348599999999986}, {'diff': 0.0001028749999999988}, {'diff': 0.00010383299999999762}, {'diff': 0.00010302799999999807}, {'diff': 0.00010305499999999773}, {'diff': 0.0001034859999999998...</msg>
<status status="PASS" starttime="20201029 12:46:47.825" endtime="20201029 12:46:47.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.832" level="INFO">${ACCURACY} = {'diff': [0.00010348599999999986, 0.0001028749999999988, 0.00010383299999999762, 0.00010302799999999807, 0.00010305499999999773, 0.00010348599999999986, 0.00010365299999999869, 0.00010319500000000037,...</msg>
<status status="PASS" starttime="20201029 12:46:47.829" endtime="20201029 12:46:47.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.836" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.835" endtime="20201029 12:46:47.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.838" level="INFO">VALUE: [0.00010348599999999986, 0.0001028749999999988, 0.00010383299999999762, 0.00010302799999999807, 0.00010305499999999773, 0.00010348599999999986, 0.00010365299999999869, 0.00010319500000000037, 0.00010358400000000031, 0.00010340200000000244, 0.00010288900000000184, 0.00010304100000000163, 0.00010331900000000102, 0.0001031810000000008, 0.00010372200000000054, 0.00010302800000000154, 0.00010338899999999887, 0.0001035420000000016, 0.00010352800000000204, 0.00010313900000000209, 0.00010377800000000229, 0.00010377799999999882, 0.00010372200000000054, 0.00010372300000000001, 0.00010315299999999819, 0.00010370900000000044, 0.00010334700000000016, 0.00010333300000000059, 0.00010376400000000272, 0.00010308300000000034, 0.00010333400000000006, 0.00010358300000000084, 0.00010359700000000041, 0.00010334699999999669, 0.00010365300000000216, 0.00010333299999999712, 0.00010359700000000041, 0.00010366700000000173, 0.00010341599999999854, 0.00010297199999999979, 0.00010307000000000024, 0.00010320899999999994, 0.000103513999999999, 0.00010383300000000109, 0.00010312499999999905, 0.00010357000000000074, 0.00010294500000000012, 0.00010326400000000222, 0.0001031810000000008, 0.00010383400000000056]</msg>
<status status="PASS" starttime="20201029 12:46:47.837" endtime="20201029 12:46:47.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.833" endtime="20201029 12:46:47.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.844" endtime="20201029 12:46:47.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.843" endtime="20201029 12:46:47.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.842" endtime="20201029 12:46:47.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.483" endtime="20201029 12:46:47.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.482" endtime="20201029 12:46:47.865"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.873" endtime="20201029 12:46:47.893"></status>
</kw>
<msg timestamp="20201029 12:46:47.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.872" endtime="20201029 12:46:47.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.894" endtime="20201029 12:46:47.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.897" endtime="20201029 12:46:47.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.869" endtime="20201029 12:46:47.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.867" endtime="20201029 12:46:47.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.905" endtime="20201029 12:46:48.191"></status>
</kw>
<msg timestamp="20201029 12:46:48.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021513236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.904" endtime="20201029 12:46:48.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021513236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.195" endtime="20201029 12:46:48.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.203" endtime="20201029 12:46:48.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.901" endtime="20201029 12:46:48.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.900" endtime="20201029 12:46:48.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.210" level="INFO">${RESULT} = [{'diff': 0.0001046940000000024}, {'diff': 0.00010466699999999926}, {'diff': 0.00010452700000000009}, {'diff': 0.00010440299999999944}, {'diff': 0.00010442999999999911}, {'diff': 0.0001041950000000013...</msg>
<status status="PASS" starttime="20201029 12:46:48.206" endtime="20201029 12:46:48.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.214" level="INFO">${ACCURACY} = {'diff': [0.0001046940000000024, 0.00010466699999999926, 0.00010452700000000009, 0.00010440299999999944, 0.00010442999999999911, 0.00010419500000000137, 0.0001047360000000011, 0.00010393099999999808, ...</msg>
<status status="PASS" starttime="20201029 12:46:48.211" endtime="20201029 12:46:48.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.219" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.218" endtime="20201029 12:46:48.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.221" level="INFO">VALUE: [0.0001046940000000024, 0.00010466699999999926, 0.00010452700000000009, 0.00010440299999999944, 0.00010442999999999911, 0.00010419500000000137, 0.0001047360000000011, 0.00010393099999999808, 0.00010426399999999975, 0.00010465299999999969, 0.00010447200000000129, 0.00010430500000000245, 0.00010416699999999876, 0.00010454099999999966, 0.00010402800000000254, 0.00010436100000000073, 0.00010486100000000123, 0.00010417999999999886, 0.00010459699999999794, 0.00010483299999999862, 0.00010395800000000122, 0.00010466699999999926, 0.00010388899999999937, 0.00010476400000000025, 0.00010470899999999797, 0.00010486100000000123, 0.00010429199999999889, 0.00010475000000000068, 0.00010419500000000137, 0.00010404099999999916, 0.00010479199999999939, 0.00010459700000000141, 0.00010416699999999876, 0.000104514, 0.00010458400000000131, 0.00010429199999999889, 0.00010459799999999742, 0.0001046810000000023, 0.00010391599999999904, 0.00010433299999999812, 0.00010459699999999794, 0.00010416699999999876, 0.00010395800000000122, 0.00010443100000000205, 0.00010408400000000081, 0.00010486100000000123, 0.00010459800000000088, 0.00010429200000000236, 0.00010423700000000008, 0.0001043750000000003]</msg>
<status status="PASS" starttime="20201029 12:46:48.220" endtime="20201029 12:46:48.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.215" endtime="20201029 12:46:48.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.226" endtime="20201029 12:46:48.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.225" endtime="20201029 12:46:48.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.224" endtime="20201029 12:46:48.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.866" endtime="20201029 12:46:48.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.865" endtime="20201029 12:46:48.247"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.255" endtime="20201029 12:46:48.275"></status>
</kw>
<msg timestamp="20201029 12:46:48.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.254" endtime="20201029 12:46:48.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.276" endtime="20201029 12:46:48.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.279" endtime="20201029 12:46:48.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.251" endtime="20201029 12:46:48.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.249" endtime="20201029 12:46:48.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.288" endtime="20201029 12:46:48.574"></status>
</kw>
<msg timestamp="20201029 12:46:48.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021494597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.286" endtime="20201029 12:46:48.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021494597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.578" endtime="20201029 12:46:48.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.586" endtime="20201029 12:46:48.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.284" endtime="20201029 12:46:48.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.282" endtime="20201029 12:46:48.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.593" level="INFO">${RESULT} = [{'diff': 0.00010636099999999926}, {'diff': 0.00010584700000000266}, {'diff': 0.00010559699999999894}, {'diff': 0.00010565300000000069}, {'diff': 0.00010568000000000036}, {'diff': 0.000105235999999998...</msg>
<status status="PASS" starttime="20201029 12:46:48.590" endtime="20201029 12:46:48.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.597" level="INFO">${ACCURACY} = {'diff': [0.00010636099999999926, 0.00010584700000000266, 0.00010559699999999894, 0.00010565300000000069, 0.00010568000000000036, 0.00010523599999999814, 0.00010570899999999897, 0.00010584699999999919...</msg>
<status status="PASS" starttime="20201029 12:46:48.594" endtime="20201029 12:46:48.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.601" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.600" endtime="20201029 12:46:48.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.603" level="INFO">VALUE: [0.00010636099999999926, 0.00010584700000000266, 0.00010559699999999894, 0.00010565300000000069, 0.00010568000000000036, 0.00010523599999999814, 0.00010570899999999897, 0.00010584699999999919, 0.00010494399999999918, 0.00010504199999999964, 0.00010572199999999907, 0.0001051940000000029, 0.00010547199999999882, 0.00010505499999999973, 0.00010566700000000026, 0.00010556999999999928, 0.00010494500000000212, 0.00010547199999999882, 0.00010584799999999867, 0.00010552699999999762, 0.00010551300000000152, 0.00010544499999999915, 0.00010516600000000029, 0.00010527700000000084, 0.00010584699999999919, 0.00010581999999999953, 0.00010527799999999685, 0.00010490299999999994, 0.00010540299999999697, 0.00010581900000000005, 0.00010576400000000125, 0.00010533400000000206, 0.00010577800000000082, 0.00010527800000000032, 0.00010497199999999832, 0.0001057079999999995, 0.00010490299999999994, 0.00010526400000000075, 0.00010502800000000007, 0.00010498600000000136, 0.00010583299999999962, 0.00010540300000000044, 0.00010516699999999976, 0.00010558300000000284, 0.00010558399999999885, 0.00010572200000000254, 0.00010569399999999993, 0.00010572300000000201, 0.00010529100000000041, 0.0001050140000000005]</msg>
<status status="PASS" starttime="20201029 12:46:48.602" endtime="20201029 12:46:48.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.598" endtime="20201029 12:46:48.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.609" endtime="20201029 12:46:48.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.607" endtime="20201029 12:46:48.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.606" endtime="20201029 12:46:48.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.248" endtime="20201029 12:46:48.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.247" endtime="20201029 12:46:48.629"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.640" endtime="20201029 12:46:48.662"></status>
</kw>
<msg timestamp="20201029 12:46:48.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.637" endtime="20201029 12:46:48.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.663" endtime="20201029 12:46:48.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.667" endtime="20201029 12:46:48.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.634" endtime="20201029 12:46:48.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.632" endtime="20201029 12:46:48.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.678" endtime="20201029 12:46:48.963"></status>
</kw>
<msg timestamp="20201029 12:46:48.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025455431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0255625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:48.676" endtime="20201029 12:46:48.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025455431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0255625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:48.967" endtime="20201029 12:46:48.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.975" endtime="20201029 12:46:48.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.674" endtime="20201029 12:46:48.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.671" endtime="20201029 12:46:48.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.982" level="INFO">${RESULT} = [{'diff': 0.00010706899999999783}, {'diff': 0.00010615199999999825}, {'diff': 0.00010633300000000012}, {'diff': 0.00010666599999999832}, {'diff': 0.00010658399999999985}, {'diff': 0.000106638999999998...</msg>
<status status="PASS" starttime="20201029 12:46:48.978" endtime="20201029 12:46:48.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.986" level="INFO">${ACCURACY} = {'diff': [0.00010706899999999783, 0.00010615199999999825, 0.00010633300000000012, 0.00010666599999999832, 0.00010658399999999985, 0.00010663899999999865, 0.00010604199999999717, 0.00010627699999999837...</msg>
<status status="PASS" starttime="20201029 12:46:48.983" endtime="20201029 12:46:48.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.990" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.989" endtime="20201029 12:46:48.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.992" level="INFO">VALUE: [0.00010706899999999783, 0.00010615199999999825, 0.00010633300000000012, 0.00010666599999999832, 0.00010658399999999985, 0.00010663899999999865, 0.00010604199999999717, 0.00010627699999999837, 0.00010658300000000037, 0.0001063750000000023, 0.00010608399999999935, 0.0001067080000000005, 0.00010652800000000157, 0.00010615299999999772, 0.00010626400000000175, 0.00010684700000000019, 0.00010615300000000119, 0.00010666600000000179, 0.0001060140000000015, 0.00010662500000000255, 0.00010654200000000114, 0.00010627800000000132, 0.00010640299999999797, 0.00010652699999999862, 0.0001068750000000028, 0.00010644500000000015, 0.00010602800000000107, 0.00010662500000000255, 0.00010652800000000157, 0.00010647199999999982, 0.00010626399999999828, 0.00010652800000000157, 0.00010622199999999957, 0.00010644400000000068, 0.0001065690000000008, 0.00010622199999999957, 0.00010615300000000119, 0.00010633300000000012, 0.00010634700000000316, 0.00010591700000000398, 0.0001058889999999979, 0.00010663899999999865, 0.00010616599999999782, 0.00010645800000000372, 0.0001062360000000026, 0.00010611099999999901, 0.00010637499999999883, 0.00010591599999999757, 0.00010652800000000157, 0.000106514000000002]</msg>
<status status="PASS" starttime="20201029 12:46:48.991" endtime="20201029 12:46:48.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.986" endtime="20201029 12:46:48.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.998" endtime="20201029 12:46:49.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.997" endtime="20201029 12:46:49.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.996" endtime="20201029 12:46:49.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.630" endtime="20201029 12:46:49.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.630" endtime="20201029 12:46:49.019"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.028" endtime="20201029 12:46:49.047"></status>
</kw>
<msg timestamp="20201029 12:46:49.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.026" endtime="20201029 12:46:49.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.048" endtime="20201029 12:46:49.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.051" endtime="20201029 12:46:49.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.023" endtime="20201029 12:46:49.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.021" endtime="20201029 12:46:49.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.060" endtime="20201029 12:46:49.345"></status>
</kw>
<msg timestamp="20201029 12:46:49.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02157575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:49.058" endtime="20201029 12:46:49.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02157575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:49.349" endtime="20201029 12:46:49.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.357" endtime="20201029 12:46:49.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.056" endtime="20201029 12:46:49.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.054" endtime="20201029 12:46:49.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.364" level="INFO">${RESULT} = [{'diff': 0.00010773600000000064}, {'diff': 0.00010777799999999935}, {'diff': 0.00010763900000000312}, {'diff': 0.00010776399999999978}, {'diff': 0.00010712499999999958}, {'diff': 0.000106959000000000...</msg>
<status status="PASS" starttime="20201029 12:46:49.361" endtime="20201029 12:46:49.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.369" level="INFO">${ACCURACY} = {'diff': [0.00010773600000000064, 0.00010777799999999935, 0.00010763900000000312, 0.00010776399999999978, 0.00010712499999999958, 0.00010695900000000022, 0.00010715299999999872, 0.00010777799999999935...</msg>
<status status="PASS" starttime="20201029 12:46:49.365" endtime="20201029 12:46:49.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.373" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.372" endtime="20201029 12:46:49.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.375" level="INFO">VALUE: [0.00010773600000000064, 0.00010777799999999935, 0.00010763900000000312, 0.00010776399999999978, 0.00010712499999999958, 0.00010695900000000022, 0.00010715299999999872, 0.00010777799999999935, 0.00010781999999999806, 0.0001073340000000006, 0.00010780500000000248, 0.0001068889999999989, 0.00010777799999999935, 0.00010744500000000115, 0.00010758400000000085, 0.00010704100000000216, 0.00010722200000000057, 0.00010716699999999829, 0.00010748599999999692, 0.00010709700000000044, 0.00010769499999999793, 0.00010763899999999965, 0.00010716699999999829, 0.00010713799999999968, 0.00010690299999999847, 0.00010745900000000072, 0.0001074019999999995, 0.00010704200000000164, 0.00010781999999999806, 0.00010715299999999872, 0.00010711100000000001, 0.00010745799999999778, 0.00010761100000000051, 0.0001075279999999991, 0.00010708400000000035, 0.00010769400000000193, 0.0001077500000000002, 0.00010758300000000137, 0.00010736100000000026, 0.00010745800000000125, 0.00010709700000000044, 0.00010690300000000194, 0.00010745800000000125, 0.00010770900000000097, 0.00010752699999999962, 0.00010763899999999965, 0.00010691600000000204, 0.00010777799999999935, 0.00010727800000000232, 0.000106901999999999]</msg>
<status status="PASS" starttime="20201029 12:46:49.374" endtime="20201029 12:46:49.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.370" endtime="20201029 12:46:49.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.380" endtime="20201029 12:46:49.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.379" endtime="20201029 12:46:49.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.378" endtime="20201029 12:46:49.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.020" endtime="20201029 12:46:49.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.019" endtime="20201029 12:46:49.401"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.410" endtime="20201029 12:46:49.430"></status>
</kw>
<msg timestamp="20201029 12:46:49.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.409" endtime="20201029 12:46:49.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.432" endtime="20201029 12:46:49.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.434" endtime="20201029 12:46:49.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.406" endtime="20201029 12:46:49.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.404" endtime="20201029 12:46:49.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.443" endtime="20201029 12:46:49.730"></status>
</kw>
<msg timestamp="20201029 12:46:49.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.442" endtime="20201029 12:46:49.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.734" endtime="20201029 12:46:49.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.742" endtime="20201029 12:46:49.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.439" endtime="20201029 12:46:49.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.437" endtime="20201029 12:46:49.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.748" level="INFO">${RESULT} = [{'diff': 0.00010906899999999983}, {'diff': 0.00010793099999999861}, {'diff': 0.00010800000000000046}, {'diff': 0.00010844400000000268}, {'diff': 0.00010812500000000058}, {'diff': 0.000107875000000000...</msg>
<status status="PASS" starttime="20201029 12:46:49.745" endtime="20201029 12:46:49.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.752" level="INFO">${ACCURACY} = {'diff': [0.00010906899999999983, 0.00010793099999999861, 0.00010800000000000046, 0.00010844400000000268, 0.00010812500000000058, 0.00010787500000000033, 0.00010876400000000078, 0.00010809800000000092...</msg>
<status status="PASS" starttime="20201029 12:46:49.749" endtime="20201029 12:46:49.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.757" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.756" endtime="20201029 12:46:49.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.759" level="INFO">VALUE: [0.00010906899999999983, 0.00010793099999999861, 0.00010800000000000046, 0.00010844400000000268, 0.00010812500000000058, 0.00010787500000000033, 0.00010876400000000078, 0.00010809800000000092, 0.00010820900000000147, 0.00010874999999999774, 0.00010850000000000096, 0.000108208999999998, 0.00010883299999999915, 0.00010813900000000015, 0.00010805599999999874, 0.00010872200000000207, 0.00010794500000000165, 0.00010819499999999843, 0.00010868099999999936, 0.00010820799999999853, 0.00010826400000000028, 0.0001086950000000024, 0.00010844499999999868, 0.00010849999999999749, 0.00010883299999999915, 0.00010808400000000135, 0.00010813900000000015, 0.00010868099999999936, 0.00010791699999999904, 0.00010845800000000225, 0.0001080690000000023, 0.0001080699999999983, 0.00010859800000000142, 0.000108208000000002, 0.00010815200000000025, 0.00010820900000000147, 0.00010865300000000022, 0.00010831999999999856, 0.000107902, 0.00010808399999999788, 0.00010833300000000212, 0.00010874999999999774, 0.0001083479999999977, 0.00010831999999999856, 0.00010851400000000053, 0.00010816700000000276, 0.00010891700000000004, 0.00010876399999999731, 0.00010808300000000187, 0.00010840299999999997]</msg>
<status status="PASS" starttime="20201029 12:46:49.758" endtime="20201029 12:46:49.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.753" endtime="20201029 12:46:49.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.764" endtime="20201029 12:46:49.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.763" endtime="20201029 12:46:49.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.762" endtime="20201029 12:46:49.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.402" endtime="20201029 12:46:49.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.402" endtime="20201029 12:46:49.785"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.794" endtime="20201029 12:46:49.814"></status>
</kw>
<msg timestamp="20201029 12:46:49.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.792" endtime="20201029 12:46:49.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.815" endtime="20201029 12:46:49.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.818" endtime="20201029 12:46:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.790" endtime="20201029 12:46:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.787" endtime="20201029 12:46:49.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.827" endtime="20201029 12:46:50.112"></status>
</kw>
<msg timestamp="20201029 12:46:50.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:49.825" endtime="20201029 12:46:50.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:50.116" endtime="20201029 12:46:50.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.125" endtime="20201029 12:46:50.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.823" endtime="20201029 12:46:50.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.821" endtime="20201029 12:46:50.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.131" level="INFO">${RESULT} = [{'diff': 0.00011015300000000172}, {'diff': 0.00010951399999999806}, {'diff': 0.00010923600000000214}, {'diff': 0.00010949999999999849}, {'diff': 0.00010962499999999861}, {'diff': 0.000109431000000000...</msg>
<status status="PASS" starttime="20201029 12:46:50.128" endtime="20201029 12:46:50.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.135" level="INFO">${ACCURACY} = {'diff': [0.00011015300000000172, 0.00010951399999999806, 0.00010923600000000214, 0.00010949999999999849, 0.00010962499999999861, 0.00010943100000000011, 0.00010895800000000275, 0.00010913899999999768...</msg>
<status status="PASS" starttime="20201029 12:46:50.132" endtime="20201029 12:46:50.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.139" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.138" endtime="20201029 12:46:50.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.142" level="INFO">VALUE: [0.00011015300000000172, 0.00010951399999999806, 0.00010923600000000214, 0.00010949999999999849, 0.00010962499999999861, 0.00010943100000000011, 0.00010895800000000275, 0.00010913899999999768, 0.00010891700000000004, 0.00010983300000000015, 0.00010906899999999983, 0.00010907000000000278, 0.00010918000000000039, 0.0001093890000000014, 0.00010951399999999806, 0.00010938800000000193, 0.00010962499999999861, 0.00010984699999999972, 0.00010887499999999786, 0.00010973600000000264, 0.00010920799999999953, 0.00010925000000000171, 0.00010906899999999983, 0.00010920799999999953, 0.00010898599999999842, 0.00010951299999999858, 0.00010919499999999943, 0.0001090829999999994, 0.00010918000000000039, 0.00010940199999999803, 0.00010901400000000103, 0.00010965300000000122, 0.00010950000000000196, 0.00010959699999999947, 0.00010970800000000003, 0.00010901400000000103, 0.00010938899999999793, 0.00010963799999999871, 0.00010887500000000133, 0.00010937500000000183, 0.00010947200000000282, 0.00010955600000000024, 0.000108902999999997, 0.00010934800000000217, 0.00010945799999999978, 0.00010937500000000183, 0.00010911100000000201, 0.00010982000000000006, 0.00010965200000000175, 0.00010897199999999885]</msg>
<status status="PASS" starttime="20201029 12:46:50.141" endtime="20201029 12:46:50.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.136" endtime="20201029 12:46:50.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.148" endtime="20201029 12:46:50.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.146" endtime="20201029 12:46:50.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.145" endtime="20201029 12:46:50.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.786" endtime="20201029 12:46:50.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.785" endtime="20201029 12:46:50.169"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.177" endtime="20201029 12:46:50.196"></status>
</kw>
<msg timestamp="20201029 12:46:50.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.175" endtime="20201029 12:46:50.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.198" endtime="20201029 12:46:50.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.201" endtime="20201029 12:46:50.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.173" endtime="20201029 12:46:50.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.171" endtime="20201029 12:46:50.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.209" endtime="20201029 12:46:50.495"></status>
</kw>
<msg timestamp="20201029 12:46:50.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.208" endtime="20201029 12:46:50.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.499" endtime="20201029 12:46:50.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.507" endtime="20201029 12:46:50.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.205" endtime="20201029 12:46:50.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.204" endtime="20201029 12:46:50.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.514" level="INFO">${RESULT} = [{'diff': 0.00011052700000000262}, {'diff': 0.00011023599999999967}, {'diff': 0.00011011099999999954}, {'diff': 0.0001107090000000005}, {'diff': 0.00011025000000000271}, {'diff': 0.0001103879999999994...</msg>
<status status="PASS" starttime="20201029 12:46:50.511" endtime="20201029 12:46:50.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.519" level="INFO">${ACCURACY} = {'diff': [0.00011052700000000262, 0.00011023599999999967, 0.00011011099999999954, 0.0001107090000000005, 0.00011025000000000271, 0.00011038799999999946, 0.00011081999999999759, 0.00010986099999999929,...</msg>
<status status="PASS" starttime="20201029 12:46:50.515" endtime="20201029 12:46:50.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.523" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.522" endtime="20201029 12:46:50.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.526" level="INFO">VALUE: [0.00011052700000000262, 0.00011023599999999967, 0.00011011099999999954, 0.0001107090000000005, 0.00011025000000000271, 0.00011038799999999946, 0.00011081999999999759, 0.00010986099999999929, 0.00010994500000000018, 0.00010994399999999724, 0.00011024999999999924, 0.00011058400000000038, 0.00010993000000000114, 0.00011080600000000149, 0.00011080599999999802, 0.00011033300000000065, 0.00010999999999999899, 0.00010991699999999757, 0.00011056999999999734, 0.00011056900000000133, 0.00010981899999999711, 0.00011066700000000179, 0.00011012499999999911, 0.00011077799999999888, 0.00011069499999999746, 0.00011065199999999928, 0.00011054099999999872, 0.00011045900000000025, 0.00011019500000000043, 0.00011048599999999992, 0.00011020800000000053, 0.00011062499999999961, 0.00011019400000000096, 0.00010995800000000028, 0.00011074999999999974, 0.00011074999999999974, 0.00011029199999999795, 0.00010986099999999929, 0.00011058400000000038, 0.00011001400000000203, 0.00011076400000000278, 0.00011037499999999936, 0.00011036099999999979, 0.00011063899999999918, 0.00011026400000000228, 0.00011080499999999854, 0.00011056900000000133, 0.00011013799999999921, 0.00011051399999999906, 0.00011001399999999856]</msg>
<status status="PASS" starttime="20201029 12:46:50.525" endtime="20201029 12:46:50.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.520" endtime="20201029 12:46:50.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.535" endtime="20201029 12:46:50.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.534" endtime="20201029 12:46:50.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.533" endtime="20201029 12:46:50.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.169" endtime="20201029 12:46:50.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.169" endtime="20201029 12:46:50.556"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.565" endtime="20201029 12:46:50.584"></status>
</kw>
<msg timestamp="20201029 12:46:50.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.563" endtime="20201029 12:46:50.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.586" endtime="20201029 12:46:50.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.588" endtime="20201029 12:46:50.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.561" endtime="20201029 12:46:50.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.559" endtime="20201029 12:46:50.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.597" endtime="20201029 12:46:50.888"></status>
</kw>
<msg timestamp="20201029 12:46:50.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.596" endtime="20201029 12:46:50.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.892" endtime="20201029 12:46:50.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.900" endtime="20201029 12:46:50.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.593" endtime="20201029 12:46:50.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.592" endtime="20201029 12:46:50.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.906" level="INFO">${RESULT} = [{'diff': 0.00011151400000000006}, {'diff': 0.0001115830000000019}, {'diff': 0.00011162500000000061}, {'diff': 0.00011169499999999846}, {'diff': 0.00011115299999999925}, {'diff': 0.0001118480000000012...</msg>
<status status="PASS" starttime="20201029 12:46:50.903" endtime="20201029 12:46:50.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.910" level="INFO">${ACCURACY} = {'diff': [0.00011151400000000006, 0.0001115830000000019, 0.00011162500000000061, 0.00011169499999999846, 0.00011115299999999925, 0.0001118480000000012, 0.00011170799999999856, 0.00011145800000000178, ...</msg>
<status status="PASS" starttime="20201029 12:46:50.907" endtime="20201029 12:46:50.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.915" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.914" endtime="20201029 12:46:50.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.917" level="INFO">VALUE: [0.00011151400000000006, 0.0001115830000000019, 0.00011162500000000061, 0.00011169499999999846, 0.00011115299999999925, 0.0001118480000000012, 0.00011170799999999856, 0.00011145800000000178, 0.00011177799999999988, 0.00011105600000000174, 0.00011162500000000061, 0.00011162500000000061, 0.00011183300000000215, 0.00011119400000000196, 0.00011101399999999956, 0.00011115299999999925, 0.00011144499999999821, 0.00011119400000000196, 0.00011175000000000074, 0.00011087499999999986, 0.00011105599999999827, 0.00011168099999999889, 0.0001113480000000007, 0.0001110830000000014, 0.00011152799999999963, 0.00011104099999999922, 0.00011113900000000315, 0.00011151400000000006, 0.0001110830000000014, 0.00011144399999999874, 0.00011150000000000049, 0.00011137499999999689, 0.00011136100000000079, 0.00011158299999999843, 0.00011099999999999999, 0.0001114029999999995, 0.00011152799999999963, 0.00011126300000000033, 0.00011095800000000128, 0.00011175000000000074, 0.00011169500000000193, 0.00011095799999999781, 0.00011165299999999975, 0.00011130600000000199, 0.00011094500000000118, 0.00011120799999999806, 0.00011176400000000031, 0.00011165299999999975, 0.00011152799999999963, 0.00011105599999999827]</msg>
<status status="PASS" starttime="20201029 12:46:50.916" endtime="20201029 12:46:50.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.911" endtime="20201029 12:46:50.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.922" endtime="20201029 12:46:50.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.920" endtime="20201029 12:46:50.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.919" endtime="20201029 12:46:50.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.557" endtime="20201029 12:46:50.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.556" endtime="20201029 12:46:50.943"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.951" endtime="20201029 12:46:50.972"></status>
</kw>
<msg timestamp="20201029 12:46:50.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.950" endtime="20201029 12:46:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.973" endtime="20201029 12:46:50.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.976" endtime="20201029 12:46:50.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.947" endtime="20201029 12:46:50.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.945" endtime="20201029 12:46:50.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.985" endtime="20201029 12:46:51.270"></status>
</kw>
<msg timestamp="20201029 12:46:51.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.983" endtime="20201029 12:46:51.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.274" endtime="20201029 12:46:51.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.282" endtime="20201029 12:46:51.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.981" endtime="20201029 12:46:51.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.979" endtime="20201029 12:46:51.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.289" level="INFO">${RESULT} = [{'diff': 0.00011336100000000279}, {'diff': 0.00011193099999999914}, {'diff': 0.00011200000000000099}, {'diff': 0.00011212500000000111}, {'diff': 0.00011209700000000197}, {'diff': 0.000112124999999997...</msg>
<status status="PASS" starttime="20201029 12:46:51.286" endtime="20201029 12:46:51.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.293" level="INFO">${ACCURACY} = {'diff': [0.00011336100000000279, 0.00011193099999999914, 0.00011200000000000099, 0.00011212500000000111, 0.00011209700000000197, 0.00011212499999999764, 0.00011224999999999777, 0.00011268099999999989...</msg>
<status status="PASS" starttime="20201029 12:46:51.290" endtime="20201029 12:46:51.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.297" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.296" endtime="20201029 12:46:51.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.300" level="INFO">VALUE: [0.00011336100000000279, 0.00011193099999999914, 0.00011200000000000099, 0.00011212500000000111, 0.00011209700000000197, 0.00011212499999999764, 0.00011224999999999777, 0.00011268099999999989, 0.00011205600000000274, 0.00011194500000000218, 0.00011244500000000268, 0.00011255599999999977, 0.00011194399999999924, 0.0001123749999999979, 0.00011200000000000099, 0.00011215200000000078, 0.00011227800000000038, 0.00011274999999999827, 0.00011268099999999989, 0.00011213899999999721, 0.00011243000000000017, 0.00011266700000000032, 0.00011281999999999959, 0.0001120419999999997, 0.00011212500000000111, 0.00011244499999999921, 0.00011212500000000111, 0.00011279200000000045, 0.00011199999999999752, 0.00011255599999999977, 0.00011194399999999924, 0.00011280500000000054, 0.00011231999999999909, 0.00011236099999999832, 0.0001127359999999987, 0.00011269499999999946, 0.00011249999999999802, 0.00011205599999999927, 0.00011217999999999992, 0.00011268000000000042, 0.00011234699999999875, 0.00011226400000000081, 0.00011211100000000154, 0.00011204100000000022, 0.00011212499999999764, 0.00011281999999999959, 0.00011281900000000011, 0.00011225000000000124, 0.0001125550000000003, 0.00011249999999999802]</msg>
<status status="PASS" starttime="20201029 12:46:51.298" endtime="20201029 12:46:51.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.294" endtime="20201029 12:46:51.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.305" endtime="20201029 12:46:51.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.304" endtime="20201029 12:46:51.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.303" endtime="20201029 12:46:51.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.943" endtime="20201029 12:46:51.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.943" endtime="20201029 12:46:51.326"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.335" endtime="20201029 12:46:51.354"></status>
</kw>
<msg timestamp="20201029 12:46:51.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.333" endtime="20201029 12:46:51.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.356" endtime="20201029 12:46:51.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.358" endtime="20201029 12:46:51.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.330" endtime="20201029 12:46:51.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.328" endtime="20201029 12:46:51.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.367" endtime="20201029 12:46:51.653"></status>
</kw>
<msg timestamp="20201029 12:46:51.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.366" endtime="20201029 12:46:51.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.657" endtime="20201029 12:46:51.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.665" endtime="20201029 12:46:51.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.363" endtime="20201029 12:46:51.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.361" endtime="20201029 12:46:51.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.672" level="INFO">${RESULT} = [{'diff': 0.00011424999999999977}, {'diff': 0.00011324999999999877}, {'diff': 0.0001130969999999995}, {'diff': 0.00011369500000000046}, {'diff': 0.00011347199999999988}, {'diff': 0.0001133749999999989...</msg>
<status status="PASS" starttime="20201029 12:46:51.669" endtime="20201029 12:46:51.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.677" level="INFO">${ACCURACY} = {'diff': [0.00011424999999999977, 0.00011324999999999877, 0.0001130969999999995, 0.00011369500000000046, 0.00011347199999999988, 0.0001133749999999989, 0.00011349999999999902, 0.00011379200000000145, ...</msg>
<status status="PASS" starttime="20201029 12:46:51.673" endtime="20201029 12:46:51.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.681" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.680" endtime="20201029 12:46:51.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.684" level="INFO">VALUE: [0.00011424999999999977, 0.00011324999999999877, 0.0001130969999999995, 0.00011369500000000046, 0.00011347199999999988, 0.0001133749999999989, 0.00011349999999999902, 0.00011379200000000145, 0.00011341599999999813, 0.00011331899999999714, 0.00011298599999999895, 0.0001130550000000008, 0.00011319400000000049, 0.0001134030000000015, 0.00011362499999999914, 0.00011374999999999927, 0.00011370799999999709, 0.00011326300000000233, 0.00011291700000000057, 0.00011293000000000067, 0.00011368100000000089, 0.00011329199999999748, 0.00011318100000000039, 0.00011302699999999818, 0.00011348599999999945, 0.00011313900000000168, 0.00011330500000000104, 0.00011322199999999963, 0.0001132770000000019, 0.00011347199999999988, 0.00011379199999999798, 0.00011311199999999855, 0.00011345800000000031, 0.00011365199999999881, 0.00011331900000000061, 0.00011341700000000107, 0.00011348599999999945, 0.00011366700000000132, 0.00011298699999999842, 0.00011286099999999882, 0.00011383300000000068, 0.00011284699999999925, 0.00011336099999999932, 0.00011372200000000013, 0.000112903000000001, 0.00011323600000000267, 0.00011374999999999927, 0.00011363799999999924, 0.00011348599999999945, 0.0001130420000000007]</msg>
<status status="PASS" starttime="20201029 12:46:51.682" endtime="20201029 12:46:51.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.678" endtime="20201029 12:46:51.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.689" endtime="20201029 12:46:51.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.687" endtime="20201029 12:46:51.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.686" endtime="20201029 12:46:51.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.327" endtime="20201029 12:46:51.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.326" endtime="20201029 12:46:51.709"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.718" endtime="20201029 12:46:51.738"></status>
</kw>
<msg timestamp="20201029 12:46:51.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.716" endtime="20201029 12:46:51.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.739" endtime="20201029 12:46:51.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.742" endtime="20201029 12:46:51.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.714" endtime="20201029 12:46:51.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.712" endtime="20201029 12:46:51.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.751" endtime="20201029 12:46:52.037"></status>
</kw>
<msg timestamp="20201029 12:46:52.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:51.749" endtime="20201029 12:46:52.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:52.041" endtime="20201029 12:46:52.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.049" endtime="20201029 12:46:52.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.747" endtime="20201029 12:46:52.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.745" endtime="20201029 12:46:52.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.056" level="INFO">${RESULT} = [{'diff': 0.00011511100000000107}, {'diff': 0.00011431899999999814}, {'diff': 0.0001145550000000023}, {'diff': 0.00011384700000000025}, {'diff': 0.00011480499999999907}, {'diff': 0.0001144440000000017...</msg>
<status status="PASS" starttime="20201029 12:46:52.053" endtime="20201029 12:46:52.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.060" level="INFO">${ACCURACY} = {'diff': [0.00011511100000000107, 0.00011431899999999814, 0.0001145550000000023, 0.00011384700000000025, 0.00011480499999999907, 0.00011444400000000174, 0.00011398599999999995, 0.0001138749999999994, ...</msg>
<status status="PASS" starttime="20201029 12:46:52.057" endtime="20201029 12:46:52.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.064" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.063" endtime="20201029 12:46:52.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.067" level="INFO">VALUE: [0.00011511100000000107, 0.00011431899999999814, 0.0001145550000000023, 0.00011384700000000025, 0.00011480499999999907, 0.00011444400000000174, 0.00011398599999999995, 0.0001138749999999994, 0.00011398700000000289, 0.00011427799999999891, 0.00011405499999999832, 0.0001144169999999986, 0.000114597000000001, 0.00011469399999999852, 0.00011456900000000186, 0.00011418100000000139, 0.0001145559999999983, 0.00011411100000000007, 0.00011413899999999921, 0.00011398599999999995, 0.00011391700000000157, 0.00011465199999999981, 0.00011384700000000025, 0.00011418000000000192, 0.00011476399999999984, 0.00011452699999999968, 0.00011412499999999964, 0.00011418099999999792, 0.0001147360000000007, 0.00011436100000000032, 0.00011416699999999835, 0.00011406999999999737, 0.00011404099999999875, 0.00011461100000000057, 0.00011443100000000164, 0.00011409799999999998, 0.00011422199999999716, 0.0001139299999999982, 0.00011462500000000014, 0.00011413899999999921, 0.00011448699999999992, 0.00011440199999999956, 0.00011405499999999832, 0.000113903000000002, 0.00011411100000000007, 0.00011468100000000189, 0.00011399999999999952, 0.0001144169999999986, 0.00011486100000000082, 0.00011458300000000143]</msg>
<status status="PASS" starttime="20201029 12:46:52.065" endtime="20201029 12:46:52.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.061" endtime="20201029 12:46:52.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.072" endtime="20201029 12:46:52.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.070" endtime="20201029 12:46:52.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.069" endtime="20201029 12:46:52.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.710" endtime="20201029 12:46:52.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.710" endtime="20201029 12:46:52.093"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.101" endtime="20201029 12:46:52.122"></status>
</kw>
<msg timestamp="20201029 12:46:52.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.100" endtime="20201029 12:46:52.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.123" endtime="20201029 12:46:52.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.126" endtime="20201029 12:46:52.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.097" endtime="20201029 12:46:52.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.095" endtime="20201029 12:46:52.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.135" endtime="20201029 12:46:52.420"></status>
</kw>
<msg timestamp="20201029 12:46:52.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:52.133" endtime="20201029 12:46:52.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:52.424" endtime="20201029 12:46:52.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.432" endtime="20201029 12:46:52.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.131" endtime="20201029 12:46:52.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.129" endtime="20201029 12:46:52.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.439" level="INFO">${RESULT} = [{'diff': 0.00011563900000000071}, {'diff': 0.00011526400000000034}, {'diff': 0.00011551400000000059}, {'diff': 0.00011548600000000145}, {'diff': 0.00011544500000000221}, {'diff': 0.000115791999999999...</msg>
<status status="PASS" starttime="20201029 12:46:52.435" endtime="20201029 12:46:52.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.443" level="INFO">${ACCURACY} = {'diff': [0.00011563900000000071, 0.00011526400000000034, 0.00011551400000000059, 0.00011548600000000145, 0.00011544500000000221, 0.00011579199999999998, 0.000115597000000002, 0.00011530499999999957, ...</msg>
<status status="PASS" starttime="20201029 12:46:52.440" endtime="20201029 12:46:52.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.447" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.446" endtime="20201029 12:46:52.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.449" level="INFO">VALUE: [0.00011563900000000071, 0.00011526400000000034, 0.00011551400000000059, 0.00011548600000000145, 0.00011544500000000221, 0.00011579199999999998, 0.000115597000000002, 0.00011530499999999957, 0.0001149169999999991, 0.00011497199999999791, 0.00011548600000000145, 0.00011530499999999957, 0.00011561199999999758, 0.00011494500000000171, 0.00011479199999999898, 0.0001154299999999997, 0.00011522199999999816, 0.00011508299999999846, 0.00011495899999999781, 0.00011579199999999998, 0.00011513800000000074, 0.00011572199999999866, 0.00011551400000000059, 0.0001148750000000004, 0.00011531899999999914, 0.0001148750000000004, 0.00011508300000000193, 0.00011498700000000042, 0.00011541600000000013, 0.000115388999999997, 0.0001152360000000012, 0.00011493099999999867, 0.00011511100000000107, 0.00011581899999999964, 0.00011498600000000095, 0.00011559799999999801, 0.0001155559999999993, 0.0001154299999999997, 0.00011555499999999982, 0.0001154299999999997, 0.00011558300000000243, 0.00011568099999999942, 0.0001149169999999991, 0.00011577800000000041, 0.00011522200000000163, 0.0001154169999999996, 0.00011580600000000302, 0.0001154169999999996, 0.00011579199999999998, 0.000114903000000003]</msg>
<status status="PASS" starttime="20201029 12:46:52.448" endtime="20201029 12:46:52.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.443" endtime="20201029 12:46:52.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.455" endtime="20201029 12:46:52.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.454" endtime="20201029 12:46:52.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.453" endtime="20201029 12:46:52.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.093" endtime="20201029 12:46:52.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.093" endtime="20201029 12:46:52.476"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.485" endtime="20201029 12:46:52.504"></status>
</kw>
<msg timestamp="20201029 12:46:52.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.483" endtime="20201029 12:46:52.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.506" endtime="20201029 12:46:52.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.508" endtime="20201029 12:46:52.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.481" endtime="20201029 12:46:52.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.479" endtime="20201029 12:46:52.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.518" endtime="20201029 12:46:52.803"></status>
</kw>
<msg timestamp="20201029 12:46:52.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.516" endtime="20201029 12:46:52.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021610056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.807" endtime="20201029 12:46:52.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.815" endtime="20201029 12:46:52.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.513" endtime="20201029 12:46:52.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.512" endtime="20201029 12:46:52.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.822" level="INFO">${RESULT} = [{'diff': 0.000117291000000002}, {'diff': 0.0001162360000000022}, {'diff': 0.00011618000000000045}, {'diff': 0.00011619400000000002}, {'diff': 0.00011608299999999946}, {'diff': 0.00011631900000000014}...</msg>
<status status="PASS" starttime="20201029 12:46:52.819" endtime="20201029 12:46:52.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.827" level="INFO">${ACCURACY} = {'diff': [0.000117291000000002, 0.0001162360000000022, 0.00011618000000000045, 0.00011619400000000002, 0.00011608299999999946, 0.00011631900000000014, 0.00011662499999999867, 0.0001164300000000007, 0....</msg>
<status status="PASS" starttime="20201029 12:46:52.823" endtime="20201029 12:46:52.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.831" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.830" endtime="20201029 12:46:52.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.834" level="INFO">VALUE: [0.000117291000000002, 0.0001162360000000022, 0.00011618000000000045, 0.00011619400000000002, 0.00011608299999999946, 0.00011631900000000014, 0.00011662499999999867, 0.0001164300000000007, 0.0001166109999999991, 0.00011622199999999916, 0.00011590299999999706, 0.00011648599999999898, 0.00011644499999999974, 0.00011623599999999873, 0.0001158889999999975, 0.00011584699999999878, 0.00011597300000000185, 0.00011590300000000053, 0.00011654199999999726, 0.00011640200000000156, 0.00011684799999999926, 0.00011605500000000032, 0.00011647199999999941, 0.00011604100000000075, 0.00011644400000000027, 0.0001166109999999991, 0.00011620799999999959, 0.00011634699999999928, 0.00011584700000000225, 0.00011641599999999766, 0.00011652800000000116, 0.00011598599999999848, 0.00011605500000000032, 0.00011597199999999891, 0.00011619400000000002, 0.00011659699999999953, 0.00011652800000000116, 0.00011629200000000048, 0.00011598600000000195, 0.00011633299999999971, 0.00011622199999999916, 0.00011638900000000146, 0.00011647199999999941, 0.00011643100000000017, 0.00011600000000000152, 0.00011609699999999903, 0.0001159170000000001, 0.00011659699999999953, 0.00011597199999999891, 0.00011679200000000098]</msg>
<status status="PASS" starttime="20201029 12:46:52.832" endtime="20201029 12:46:52.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.828" endtime="20201029 12:46:52.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.839" endtime="20201029 12:46:52.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.837" endtime="20201029 12:46:52.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.836" endtime="20201029 12:46:52.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.477" endtime="20201029 12:46:52.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.476" endtime="20201029 12:46:52.859"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.868" endtime="20201029 12:46:52.888"></status>
</kw>
<msg timestamp="20201029 12:46:52.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.867" endtime="20201029 12:46:52.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.890" endtime="20201029 12:46:52.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.892" endtime="20201029 12:46:52.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.864" endtime="20201029 12:46:52.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.862" endtime="20201029 12:46:52.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.901" endtime="20201029 12:46:53.188"></status>
</kw>
<msg timestamp="20201029 12:46:53.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:52.900" endtime="20201029 12:46:53.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:53.192" endtime="20201029 12:46:53.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.200" endtime="20201029 12:46:53.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.897" endtime="20201029 12:46:53.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.895" endtime="20201029 12:46:53.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.207" level="INFO">${RESULT} = [{'diff': 0.00011804199999999876}, {'diff': 0.00011755499999999836}, {'diff': 0.00011748599999999998}, {'diff': 0.00011707000000000037}, {'diff': 0.00011712499999999917}, {'diff': 0.000117791000000002...</msg>
<status status="PASS" starttime="20201029 12:46:53.204" endtime="20201029 12:46:53.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.211" level="INFO">${ACCURACY} = {'diff': [0.00011804199999999876, 0.00011755499999999836, 0.00011748599999999998, 0.00011707000000000037, 0.00011712499999999917, 0.0001177910000000025, 0.00011697199999999991, 0.00011763899999999924,...</msg>
<status status="PASS" starttime="20201029 12:46:53.208" endtime="20201029 12:46:53.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.215" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.214" endtime="20201029 12:46:53.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.218" level="INFO">VALUE: [0.00011804199999999876, 0.00011755499999999836, 0.00011748599999999998, 0.00011707000000000037, 0.00011712499999999917, 0.0001177910000000025, 0.00011697199999999991, 0.00011763899999999924, 0.00011777800000000241, 0.00011736199999999933, 0.00011766700000000185, 0.00011773600000000023, 0.00011729199999999801, 0.00011715300000000178, 0.00011759700000000053, 0.00011715300000000178, 0.00011741699999999813, 0.00011690299999999806, 0.00011769400000000152, 0.00011754200000000173, 0.00011754200000000173, 0.00011709700000000003, 0.00011733300000000071, 0.0001171109999999996, 0.00011758400000000044, 0.00011740300000000203, 0.00011729200000000148, 0.00011726399999999887, 0.00011751399999999912, 0.00011687499999999892, 0.00011734799999999976, 0.00011699999999999905, 0.0001173620000000028, 0.00011737499999999942, 0.00011749999999999955, 0.00011720799999999712, 0.00011740199999999909, 0.00011770900000000056, 0.00011701399999999862, 0.00011751399999999912, 0.00011748599999999998, 0.00011712500000000264, 0.00011684799999999926, 0.00011709799999999951, 0.00011751399999999912, 0.00011716699999999788, 0.00011677799999999794, 0.00011727799999999844, 0.0001171109999999996, 0.00011727800000000191]</msg>
<status status="PASS" starttime="20201029 12:46:53.216" endtime="20201029 12:46:53.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.212" endtime="20201029 12:46:53.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.223" endtime="20201029 12:46:53.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.221" endtime="20201029 12:46:53.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.220" endtime="20201029 12:46:53.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.860" endtime="20201029 12:46:53.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.860" endtime="20201029 12:46:53.243"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.252" endtime="20201029 12:46:53.273"></status>
</kw>
<msg timestamp="20201029 12:46:53.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.251" endtime="20201029 12:46:53.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.274" endtime="20201029 12:46:53.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.277" endtime="20201029 12:46:53.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.248" endtime="20201029 12:46:53.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.246" endtime="20201029 12:46:53.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.286" endtime="20201029 12:46:53.571"></status>
</kw>
<msg timestamp="20201029 12:46:53.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.284" endtime="20201029 12:46:53.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.575" endtime="20201029 12:46:53.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.583" endtime="20201029 12:46:53.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.282" endtime="20201029 12:46:53.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.280" endtime="20201029 12:46:53.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.590" level="INFO">${RESULT} = [{'diff': 0.00011904199999999976}, {'diff': 0.00011851400000000012}, {'diff': 0.00011873599999999776}, {'diff': 0.00011870799999999862}, {'diff': 0.00011865299999999981}, {'diff': 0.000118652999999999...</msg>
<status status="PASS" starttime="20201029 12:46:53.586" endtime="20201029 12:46:53.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.594" level="INFO">${ACCURACY} = {'diff': [0.00011904199999999976, 0.00011851400000000012, 0.00011873599999999776, 0.00011870799999999862, 0.00011865299999999981, 0.00011865299999999981, 0.00011827799999999944, 0.00011863900000000024...</msg>
<status status="PASS" starttime="20201029 12:46:53.591" endtime="20201029 12:46:53.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.598" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.597" endtime="20201029 12:46:53.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.600" level="INFO">VALUE: [0.00011904199999999976, 0.00011851400000000012, 0.00011873599999999776, 0.00011870799999999862, 0.00011865299999999981, 0.00011865299999999981, 0.00011827799999999944, 0.00011863900000000024, 0.00011834800000000076, 0.00011802799999999919, 0.00011841699999999913, 0.00011790299999999906, 0.00011847199999999794, 0.00011845800000000184, 0.00011880599999999908, 0.0001185690000000024, 0.00011827699999999997, 0.00011808400000000094, 0.00011827799999999944, 0.00011822199999999769, 0.0001186110000000011, 0.00011841699999999913, 0.00011834700000000128, 0.00011845799999999837, 0.00011798600000000048, 0.00011866699999999938, 0.00011872199999999819, 0.00011837500000000042, 0.00011876400000000037, 0.00011879199999999951, 0.00011840299999999956, 0.00011877799999999994, 0.00011808400000000094, 0.00011822199999999769, 0.0001185829999999985, 0.0001184439999999988, 0.00011786100000000035, 0.00011869399999999905, 0.00011857000000000187, 0.00011820800000000159, 0.00011797200000000091, 0.00011777799999999894, 0.00011844499999999827, 0.0001180699999999979, 0.00011790199999999959, 0.00011859699999999807, 0.00011834700000000128, 0.00011827799999999944, 0.00011822200000000116, 0.00011802799999999919]</msg>
<status status="PASS" starttime="20201029 12:46:53.599" endtime="20201029 12:46:53.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.594" endtime="20201029 12:46:53.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.606" endtime="20201029 12:46:53.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.605" endtime="20201029 12:46:53.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.604" endtime="20201029 12:46:53.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.244" endtime="20201029 12:46:53.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.244" endtime="20201029 12:46:53.627"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.636" endtime="20201029 12:46:53.655"></status>
</kw>
<msg timestamp="20201029 12:46:53.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.634" endtime="20201029 12:46:53.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.657" endtime="20201029 12:46:53.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.659" endtime="20201029 12:46:53.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.631" endtime="20201029 12:46:53.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.629" endtime="20201029 12:46:53.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.669" endtime="20201029 12:46:53.955"></status>
</kw>
<msg timestamp="20201029 12:46:53.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021432139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:53.667" endtime="20201029 12:46:53.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021432139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:53.959" endtime="20201029 12:46:53.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.967" endtime="20201029 12:46:53.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.664" endtime="20201029 12:46:53.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.663" endtime="20201029 12:46:53.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.974" level="INFO">${RESULT} = [{'diff': 0.00012036099999999939}, {'diff': 0.00011890300000000006}, {'diff': 0.00011945799999999937}, {'diff': 0.00011977800000000094}, {'diff': 0.00011961099999999864}, {'diff': 0.000118999999999997...</msg>
<status status="PASS" starttime="20201029 12:46:53.971" endtime="20201029 12:46:53.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.979" level="INFO">${ACCURACY} = {'diff': [0.00012036099999999939, 0.00011890300000000006, 0.00011945799999999937, 0.00011977800000000094, 0.00011961099999999864, 0.00011899999999999758, 0.00011895799999999887, 0.00011933300000000271...</msg>
<status status="PASS" starttime="20201029 12:46:53.975" endtime="20201029 12:46:53.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.983" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.982" endtime="20201029 12:46:53.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.986" level="INFO">VALUE: [0.00012036099999999939, 0.00011890300000000006, 0.00011945799999999937, 0.00011977800000000094, 0.00011961099999999864, 0.00011899999999999758, 0.00011895799999999887, 0.00011933300000000271, 0.00011947200000000241, 0.0001197089999999991, 0.00011963899999999777, 0.00011979199999999704, 0.00011945799999999937, 0.00011970799999999962, 0.0001192089999999986, 0.00011919399999999955, 0.00011894499999999877, 0.00011927800000000044, 0.00011881899999999918, 0.00011981900000000018, 0.00011954100000000079, 0.00011919499999999902, 0.00011891699999999963, 0.00011929100000000054, 0.00011934800000000176, 0.00011913900000000074, 0.00011965300000000081, 0.0001198050000000006, 0.0001197500000000018, 0.00011911099999999814, 0.00011955500000000036, 0.00011897200000000191, 0.00011908300000000246, 0.00011965300000000081, 0.00011919499999999902, 0.00011976400000000137, 0.00011931899999999968, 0.000119389000000001, 0.00011968099999999995, 0.00011909700000000203, 0.00011915200000000084, 0.00011913900000000074, 0.00011943000000000023, 0.00011879199999999951, 0.00011904199999999976, 0.00011916699999999988, 0.00011929200000000001, 0.00011905499999999986, 0.00011915300000000031, 0.00011933399999999872]</msg>
<status status="PASS" starttime="20201029 12:46:53.984" endtime="20201029 12:46:53.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.980" endtime="20201029 12:46:53.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.991" endtime="20201029 12:46:54.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.989" endtime="20201029 12:46:54.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.988" endtime="20201029 12:46:54.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.628" endtime="20201029 12:46:54.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.627" endtime="20201029 12:46:54.012"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.020" endtime="20201029 12:46:54.040"></status>
</kw>
<msg timestamp="20201029 12:46:54.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.019" endtime="20201029 12:46:54.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.042" endtime="20201029 12:46:54.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.044" endtime="20201029 12:46:54.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.016" endtime="20201029 12:46:54.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.014" endtime="20201029 12:46:54.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.053" endtime="20201029 12:46:54.342"></status>
</kw>
<msg timestamp="20201029 12:46:54.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.052" endtime="20201029 12:46:54.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.346" endtime="20201029 12:46:54.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.354" endtime="20201029 12:46:54.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.049" endtime="20201029 12:46:54.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.047" endtime="20201029 12:46:54.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.361" level="INFO">${RESULT} = [{'diff': 0.00012049999999999908}, {'diff': 0.00012052800000000169}, {'diff': 0.00012006900000000043}, {'diff': 0.00012074999999999933}, {'diff': 0.00012005600000000033}, {'diff': 0.000120139000000001...</msg>
<status status="PASS" starttime="20201029 12:46:54.358" endtime="20201029 12:46:54.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.365" level="INFO">${ACCURACY} = {'diff': [0.00012049999999999908, 0.00012052800000000169, 0.00012006900000000043, 0.00012074999999999933, 0.00012005600000000033, 0.00012013900000000174, 0.0001202639999999984, 0.00011980600000000008,...</msg>
<status status="PASS" starttime="20201029 12:46:54.362" endtime="20201029 12:46:54.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.369" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.368" endtime="20201029 12:46:54.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.372" level="INFO">VALUE: [0.00012049999999999908, 0.00012052800000000169, 0.00012006900000000043, 0.00012074999999999933, 0.00012005600000000033, 0.00012013900000000174, 0.0001202639999999984, 0.00011980600000000008, 0.00012031900000000068, 0.0001199310000000002, 0.00012001399999999815, 0.00012020800000000012, 0.0001204029999999981, 0.00012005600000000033, 0.00012052700000000222, 0.00012032000000000015, 0.00012059799999999954, 0.00012006900000000043, 0.00011983399999999922, 0.00012052799999999822, 0.00011994499999999977, 0.00012041699999999766, 0.0001202500000000023, 0.00012045899999999984, 0.00012070800000000062, 0.00012024999999999883, 0.00012044500000000027, 0.00012074999999999933, 0.00012004100000000129, 0.00011998599999999901, 0.0001204579999999969, 0.00012038800000000252, 0.00012045899999999984, 0.00012074999999999933, 0.00011987499999999846, 0.0001204310000000007, 0.00012018100000000045, 0.00012020800000000012, 0.00011995799999999987, 0.0001204440000000008, 0.00012031900000000068, 0.00012058399999999997, 0.00012045899999999984, 0.00012034699999999982, 0.0001202500000000023, 0.00011998700000000195, 0.00012052800000000169, 0.0001202639999999984, 0.00012079200000000151, 0.0001202639999999984]</msg>
<status status="PASS" starttime="20201029 12:46:54.370" endtime="20201029 12:46:54.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.366" endtime="20201029 12:46:54.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.377" endtime="20201029 12:46:54.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.375" endtime="20201029 12:46:54.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.374" endtime="20201029 12:46:54.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.013" endtime="20201029 12:46:54.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.012" endtime="20201029 12:46:54.398"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.406" endtime="20201029 12:46:54.427"></status>
</kw>
<msg timestamp="20201029 12:46:54.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.405" endtime="20201029 12:46:54.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.429" endtime="20201029 12:46:54.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.431" endtime="20201029 12:46:54.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.402" endtime="20201029 12:46:54.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.400" endtime="20201029 12:46:54.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.440" endtime="20201029 12:46:54.725"></status>
</kw>
<msg timestamp="20201029 12:46:54.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.438" endtime="20201029 12:46:54.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.730" endtime="20201029 12:46:54.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.738" endtime="20201029 12:46:54.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.436" endtime="20201029 12:46:54.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.434" endtime="20201029 12:46:54.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.744" level="INFO">${RESULT} = [{'diff': 0.0001221120000000006}, {'diff': 0.00012080599999999761}, {'diff': 0.00012092999999999826}, {'diff': 0.00012105600000000133}, {'diff': 0.000121083000000001}, {'diff': 0.00012118000000000198}...</msg>
<status status="PASS" starttime="20201029 12:46:54.741" endtime="20201029 12:46:54.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.748" level="INFO">${ACCURACY} = {'diff': [0.0001221120000000006, 0.00012080599999999761, 0.00012092999999999826, 0.00012105600000000133, 0.000121083000000001, 0.00012118000000000198, 0.00012091699999999816, 0.00012119400000000155, 0...</msg>
<status status="PASS" starttime="20201029 12:46:54.745" endtime="20201029 12:46:54.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.752" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.751" endtime="20201029 12:46:54.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.755" level="INFO">VALUE: [0.0001221120000000006, 0.00012080599999999761, 0.00012092999999999826, 0.00012105600000000133, 0.000121083000000001, 0.00012118000000000198, 0.00012091699999999816, 0.00012119400000000155, 0.00012083399999999675, 0.00012102800000000219, 0.0001216380000000003, 0.00012145900000000084, 0.00012095900000000034, 0.00012127799999999897, 0.00012101400000000262, 0.00012163899999999978, 0.00012081900000000118, 0.00012106999999999743, 0.0001215830000000015, 0.0001211379999999998, 0.0001208890000000025, 0.00012148600000000051, 0.00012148600000000051, 0.00012119500000000102, 0.00012101400000000262, 0.0001215830000000015, 0.0001208189999999977, 0.00012169400000000205, 0.00012177799999999947, 0.0001214029999999991, 0.00012083300000000075, 0.0001213189999999982, 0.0001210700000000009, 0.00012133299999999778, 0.00012162499999999674, 0.00012105600000000133, 0.00012102699999999925, 0.00012143000000000223, 0.00012141699999999866, 0.00012156899999999846, 0.00012127800000000244, 0.0001208189999999977, 0.00012111100000000014, 0.00012087499999999946, 0.00012094500000000077, 0.00012095900000000034, 0.00012137499999999996, 0.00012101399999999915, 0.00012120800000000112, 0.00012151300000000018]</msg>
<status status="PASS" starttime="20201029 12:46:54.754" endtime="20201029 12:46:54.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.749" endtime="20201029 12:46:54.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.761" endtime="20201029 12:46:54.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.759" endtime="20201029 12:46:54.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.758" endtime="20201029 12:46:54.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.398" endtime="20201029 12:46:54.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.398" endtime="20201029 12:46:54.781"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.790" endtime="20201029 12:46:54.810"></status>
</kw>
<msg timestamp="20201029 12:46:54.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.789" endtime="20201029 12:46:54.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.812" endtime="20201029 12:46:54.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.814" endtime="20201029 12:46:54.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.786" endtime="20201029 12:46:54.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.784" endtime="20201029 12:46:54.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.823" endtime="20201029 12:46:55.109"></status>
</kw>
<msg timestamp="20201029 12:46:55.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.822" endtime="20201029 12:46:55.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.113" endtime="20201029 12:46:55.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.121" endtime="20201029 12:46:55.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.819" endtime="20201029 12:46:55.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.817" endtime="20201029 12:46:55.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.128" level="INFO">${RESULT} = [{'diff': 0.00012270799999999915}, {'diff': 0.00012250000000000108}, {'diff': 0.00012200000000000058}, {'diff': 0.0001221799999999995}, {'diff': 0.00012181999999999818}, {'diff': 0.0001226390000000007...</msg>
<status status="PASS" starttime="20201029 12:46:55.124" endtime="20201029 12:46:55.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.132" level="INFO">${ACCURACY} = {'diff': [0.00012270799999999915, 0.00012250000000000108, 0.00012200000000000058, 0.0001221799999999995, 0.00012181999999999818, 0.00012263900000000078, 0.0001224579999999989, 0.00012273600000000176, ...</msg>
<status status="PASS" starttime="20201029 12:46:55.129" endtime="20201029 12:46:55.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.137" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.136" endtime="20201029 12:46:55.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.139" level="INFO">VALUE: [0.00012270799999999915, 0.00012250000000000108, 0.00012200000000000058, 0.0001221799999999995, 0.00012181999999999818, 0.00012263900000000078, 0.0001224579999999989, 0.00012273600000000176, 0.00012230600000000258, 0.00012273600000000176, 0.00012202700000000025, 0.0001223189999999992, 0.00012230499999999964, 0.00012186100000000089, 0.00012200000000000058, 0.00012223600000000126, 0.00012202799999999972, 0.00012224999999999736, 0.00012204200000000276, 0.00012236100000000139, 0.00012220899999999812, 0.00012211100000000114, 0.00012201400000000015, 0.00012240200000000062, 0.00012273600000000176, 0.00012224999999999736, 0.0001223480000000013, 0.00012225000000000083, 0.00012225000000000083, 0.00012180600000000208, 0.00012181900000000218, 0.00012244399999999933, 0.00012261100000000164, 0.00012186100000000089, 0.00012198600000000101, 0.00012269499999999905, 0.00012219500000000202, 0.00012237500000000096, 0.00012220799999999865, 0.00012236100000000139, 0.00012183400000000122, 0.00012223600000000126, 0.00012186100000000089, 0.00012233300000000225, 0.00012236099999999792, 0.00012251399999999718, 0.00012266699999999991, 0.00012195800000000187, 0.00012218099999999898, 0.00012269399999999958]</msg>
<status status="PASS" starttime="20201029 12:46:55.138" endtime="20201029 12:46:55.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.133" endtime="20201029 12:46:55.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.144" endtime="20201029 12:46:55.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.143" endtime="20201029 12:46:55.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.142" endtime="20201029 12:46:55.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.782" endtime="20201029 12:46:55.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.782" endtime="20201029 12:46:55.165"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.174" endtime="20201029 12:46:55.194"></status>
</kw>
<msg timestamp="20201029 12:46:55.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.172" endtime="20201029 12:46:55.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.195" endtime="20201029 12:46:55.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.198" endtime="20201029 12:46:55.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.169" endtime="20201029 12:46:55.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.167" endtime="20201029 12:46:55.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.207" endtime="20201029 12:46:55.493"></status>
</kw>
<msg timestamp="20201029 12:46:55.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.205" endtime="20201029 12:46:55.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.497" endtime="20201029 12:46:55.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.506" endtime="20201029 12:46:55.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.203" endtime="20201029 12:46:55.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.201" endtime="20201029 12:46:55.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.513" level="INFO">${RESULT} = [{'diff': 0.00012372199999999972}, {'diff': 0.00012306899999999996}, {'diff': 0.00012295900000000234}, {'diff': 0.0001236389999999983}, {'diff': 0.00012377800000000147}, {'diff': 0.0001235140000000016...</msg>
<status status="PASS" starttime="20201029 12:46:55.509" endtime="20201029 12:46:55.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.517" level="INFO">${ACCURACY} = {'diff': [0.00012372199999999972, 0.00012306899999999996, 0.00012295900000000234, 0.0001236389999999983, 0.00012377800000000147, 0.00012351400000000165, 0.00012369400000000058, 0.00012351400000000165,...</msg>
<status status="PASS" starttime="20201029 12:46:55.514" endtime="20201029 12:46:55.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.522" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.521" endtime="20201029 12:46:55.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.524" level="INFO">VALUE: [0.00012372199999999972, 0.00012306899999999996, 0.00012295900000000234, 0.0001236389999999983, 0.00012377800000000147, 0.00012351400000000165, 0.00012369400000000058, 0.00012351400000000165, 0.0001228059999999996, 0.0001231389999999978, 0.0001232229999999987, 0.00012344400000000033, 0.00012351400000000165, 0.00012352799999999775, 0.00012288900000000103, 0.0001233190000000002, 0.00012290200000000112, 0.0001234999999999986, 0.00012312499999999824, 0.0001232640000000014, 0.00012370800000000015, 0.00012366599999999797, 0.0001234999999999986, 0.00012312499999999824, 0.000123083000000003, 0.0001229579999999994, 0.00012329200000000054, 0.00012306999999999943, 0.00012319499999999955, 0.000123568999999997, 0.00012288900000000103, 0.00012351399999999818, 0.00012319400000000008, 0.00012293000000000026, 0.00012369400000000058, 0.00012324999999999836, 0.00012333300000000325, 0.00012326399999999793, 0.0001234169999999972, 0.00012283299999999928, 0.00012363900000000178, 0.00012327800000000097, 0.00012351400000000165, 0.00012283400000000222, 0.00012283299999999928, 0.00012306899999999996, 0.00012320799999999965, 0.0001234030000000011, 0.00012315300000000085, 0.00012305600000000333]</msg>
<status status="PASS" starttime="20201029 12:46:55.523" endtime="20201029 12:46:55.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.518" endtime="20201029 12:46:55.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.536" endtime="20201029 12:46:55.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.534" endtime="20201029 12:46:55.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.533" endtime="20201029 12:46:55.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.166" endtime="20201029 12:46:55.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.165" endtime="20201029 12:46:55.557"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.565" endtime="20201029 12:46:55.586"></status>
</kw>
<msg timestamp="20201029 12:46:55.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.564" endtime="20201029 12:46:55.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.588" endtime="20201029 12:46:55.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.590" endtime="20201029 12:46:55.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.561" endtime="20201029 12:46:55.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.559" endtime="20201029 12:46:55.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.599" endtime="20201029 12:46:55.885"></status>
</kw>
<msg timestamp="20201029 12:46:55.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.598" endtime="20201029 12:46:55.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.890" endtime="20201029 12:46:55.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.898" endtime="20201029 12:46:55.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.595" endtime="20201029 12:46:55.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.593" endtime="20201029 12:46:55.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.904" level="INFO">${RESULT} = [{'diff': 0.00012504100000000282}, {'diff': 0.00012425000000000283}, {'diff': 0.00012419400000000108}, {'diff': 0.0001244450000000008}, {'diff': 0.0001241800000000015}, {'diff': 0.00012406900000000096...</msg>
<status status="PASS" starttime="20201029 12:46:55.901" endtime="20201029 12:46:55.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.908" level="INFO">${ACCURACY} = {'diff': [0.00012504100000000282, 0.00012425000000000283, 0.00012419400000000108, 0.0001244450000000008, 0.0001241800000000015, 0.00012406900000000096, 0.00012436099999999992, 0.0001237909999999981, 0...</msg>
<status status="PASS" starttime="20201029 12:46:55.905" endtime="20201029 12:46:55.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.912" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.911" endtime="20201029 12:46:55.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.915" level="INFO">VALUE: [0.00012504100000000282, 0.00012425000000000283, 0.00012419400000000108, 0.0001244450000000008, 0.0001241800000000015, 0.00012406900000000096, 0.00012436099999999992, 0.0001237909999999981, 0.00012443099999999777, 0.0001240970000000001, 0.0001247360000000003, 0.00012386100000000289, 0.0001245840000000005, 0.0001244030000000021, 0.00012397299999999944, 0.0001245559999999979, 0.00012470800000000115, 0.00012474999999999986, 0.00012458299999999756, 0.00012469500000000105, 0.00012401399999999868, 0.00012424999999999936, 0.00012470900000000062, 0.0001246389999999993, 0.0001245559999999979, 0.00012381899999999724, 0.0001241939999999976, 0.00012426399999999893, 0.00012441700000000167, 0.00012436099999999992, 0.0001241389999999988, 0.00012419500000000055, 0.0001245420000000018, 0.0001241389999999988, 0.00012412499999999924, 0.00012388900000000203, 0.00012429200000000154, 0.00012420799999999718, 0.0001244169999999982, 0.0001240970000000001, 0.00012444400000000133, 0.0001246939999999981, 0.00012443100000000124, 0.0001244450000000008, 0.00012413900000000228, 0.00012400000000000258, 0.00012458299999999756, 0.00012388899999999856, 0.000124568999999998, 0.00012469499999999759]</msg>
<status status="PASS" starttime="20201029 12:46:55.913" endtime="20201029 12:46:55.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.909" endtime="20201029 12:46:55.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.921" endtime="20201029 12:46:55.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.919" endtime="20201029 12:46:55.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.918" endtime="20201029 12:46:55.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.558" endtime="20201029 12:46:55.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.557" endtime="20201029 12:46:55.941"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.950" endtime="20201029 12:46:55.970"></status>
</kw>
<msg timestamp="20201029 12:46:55.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.948" endtime="20201029 12:46:55.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.972" endtime="20201029 12:46:55.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.974" endtime="20201029 12:46:55.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.946" endtime="20201029 12:46:55.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.944" endtime="20201029 12:46:55.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.983" endtime="20201029 12:46:56.269"></status>
</kw>
<msg timestamp="20201029 12:46:56.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.982" endtime="20201029 12:46:56.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021430069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.273" endtime="20201029 12:46:56.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.281" endtime="20201029 12:46:56.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.979" endtime="20201029 12:46:56.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.977" endtime="20201029 12:46:56.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.287" level="INFO">${RESULT} = [{'diff': 0.0001255559999999989}, {'diff': 0.00012490199999999965}, {'diff': 0.00012575000000000086}, {'diff': 0.00012555499999999942}, {'diff': 0.00012531899999999874}, {'diff': 0.0001248610000000004...</msg>
<status status="PASS" starttime="20201029 12:46:56.284" endtime="20201029 12:46:56.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.292" level="INFO">${ACCURACY} = {'diff': [0.0001255559999999989, 0.00012490199999999965, 0.00012575000000000086, 0.00012555499999999942, 0.00012531899999999874, 0.00012486100000000042, 0.00012483400000000075, 0.0001250000000000001, ...</msg>
<status status="PASS" starttime="20201029 12:46:56.288" endtime="20201029 12:46:56.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.297" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.296" endtime="20201029 12:46:56.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.299" level="INFO">VALUE: [0.0001255559999999989, 0.00012490199999999965, 0.00012575000000000086, 0.00012555499999999942, 0.00012531899999999874, 0.00012486100000000042, 0.00012483400000000075, 0.0001250000000000001, 0.00012566599999999997, 0.00012518099999999852, 0.00012525000000000036, 0.00012506900000000196, 0.00012512500000000024, 0.00012501399999999968, 0.0001255000000000006, 0.00012494399999999836, 0.00012554199999999932, 0.0001252779999999995, 0.0001257360000000013, 0.0001248190000000017, 0.00012479200000000204, 0.00012531899999999874, 0.00012559699999999813, 0.0001249169999999987, 0.00012575000000000086, 0.0001255420000000028, 0.00012582000000000218, 0.00012551400000000018, 0.0001250550000000024, 0.00012557000000000193, 0.00012494399999999836, 0.0001254299999999993, 0.00012512500000000024, 0.0001256390000000003, 0.00012487499999999999, 0.00012490299999999913, 0.00012562500000000074, 0.00012488899999999956, 0.00012529199999999907, 0.0001250559999999984, 0.0001252779999999995, 0.00012555600000000236, 0.00012493000000000226, 0.00012531899999999874, 0.00012522200000000122, 0.0001257360000000013, 0.00012516700000000242, 0.0001252360000000008, 0.0001250559999999984, 0.00012502799999999925]</msg>
<status status="PASS" starttime="20201029 12:46:56.298" endtime="20201029 12:46:56.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.293" endtime="20201029 12:46:56.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.304" endtime="20201029 12:46:56.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.303" endtime="20201029 12:46:56.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.301" endtime="20201029 12:46:56.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.942" endtime="20201029 12:46:56.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.942" endtime="20201029 12:46:56.325"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.334" endtime="20201029 12:46:56.354"></status>
</kw>
<msg timestamp="20201029 12:46:56.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.332" endtime="20201029 12:46:56.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.355" endtime="20201029 12:46:56.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.358" endtime="20201029 12:46:56.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.329" endtime="20201029 12:46:56.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.327" endtime="20201029 12:46:56.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.367" endtime="20201029 12:46:56.653"></status>
</kw>
<msg timestamp="20201029 12:46:56.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.365" endtime="20201029 12:46:56.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.657" endtime="20201029 12:46:56.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.665" endtime="20201029 12:46:56.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.363" endtime="20201029 12:46:56.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.361" endtime="20201029 12:46:56.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.672" level="INFO">${RESULT} = [{'diff': 0.00012637500000000149}, {'diff': 0.00012612500000000124}, {'diff': 0.00012593099999999927}, {'diff': 0.00012587500000000099}, {'diff': 0.00012616699999999995}, {'diff': 0.000126348000000001...</msg>
<status status="PASS" starttime="20201029 12:46:56.669" endtime="20201029 12:46:56.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.677" level="INFO">${ACCURACY} = {'diff': [0.00012637500000000149, 0.00012612500000000124, 0.00012593099999999927, 0.00012587500000000099, 0.00012616699999999995, 0.00012634800000000182, 0.00012661100000000217, 0.00012637500000000149...</msg>
<status status="PASS" starttime="20201029 12:46:56.673" endtime="20201029 12:46:56.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.682" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.681" endtime="20201029 12:46:56.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.684" level="INFO">VALUE: [0.00012637500000000149, 0.00012612500000000124, 0.00012593099999999927, 0.00012587500000000099, 0.00012616699999999995, 0.00012634800000000182, 0.00012661100000000217, 0.00012637500000000149, 0.00012666700000000045, 0.0001259580000000024, 0.00012584800000000132, 0.00012612500000000124, 0.00012580599999999914, 0.00012655500000000042, 0.000126569, 0.00012662500000000174, 0.0001262499999999979, 0.00012612500000000124, 0.00012648600000000204, 0.00012608399999999853, 0.00012593099999999927, 0.0001262230000000017, 0.00012587500000000099, 0.00012631899999999974, 0.00012666700000000045, 0.00012605499999999992, 0.00012584699999999838, 0.00012618099999999952, 0.0001263329999999993, 0.00012654200000000032, 0.00012627700000000103, 0.00012620799999999918, 0.00012629200000000007, 0.00012586100000000142, 0.00012661100000000217, 0.00012630500000000017, 0.00012612500000000124, 0.00012581899999999924, 0.00012676400000000143, 0.00012609699999999863, 0.00012637500000000149, 0.00012662500000000174, 0.00012612500000000124, 0.00012586100000000142, 0.0001260000000000011, 0.00012637500000000149, 0.00012673599999999882, 0.00012644399999999986, 0.00012586099999999795, 0.0001263620000000014]</msg>
<status status="PASS" starttime="20201029 12:46:56.683" endtime="20201029 12:46:56.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.678" endtime="20201029 12:46:56.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.689" endtime="20201029 12:46:56.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.688" endtime="20201029 12:46:56.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.687" endtime="20201029 12:46:56.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.326" endtime="20201029 12:46:56.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.325" endtime="20201029 12:46:56.710"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.719" endtime="20201029 12:46:56.740"></status>
</kw>
<msg timestamp="20201029 12:46:56.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.717" endtime="20201029 12:46:56.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.742" endtime="20201029 12:46:56.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.744" endtime="20201029 12:46:56.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.715" endtime="20201029 12:46:56.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.713" endtime="20201029 12:46:56.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.753" endtime="20201029 12:46:57.039"></status>
</kw>
<msg timestamp="20201029 12:46:57.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.752" endtime="20201029 12:46:57.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.043" endtime="20201029 12:46:57.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.051" endtime="20201029 12:46:57.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.749" endtime="20201029 12:46:57.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.747" endtime="20201029 12:46:57.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.057" level="INFO">${RESULT} = [{'diff': 0.00012822300000000023}, {'diff': 0.00012704100000000135}, {'diff': 0.00012712499999999877}, {'diff': 0.00012744500000000034}, {'diff': 0.00012736099999999945}, {'diff': 0.000126944000000000...</msg>
<status status="PASS" starttime="20201029 12:46:57.054" endtime="20201029 12:46:57.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.061" level="INFO">${ACCURACY} = {'diff': [0.00012822300000000023, 0.00012704100000000135, 0.00012712499999999877, 0.00012744500000000034, 0.00012736099999999945, 0.00012694400000000036, 0.0001274170000000012, 0.00012748699999999905,...</msg>
<status status="PASS" starttime="20201029 12:46:57.058" endtime="20201029 12:46:57.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.066" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.065" endtime="20201029 12:46:57.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.068" level="INFO">VALUE: [0.00012822300000000023, 0.00012704100000000135, 0.00012712499999999877, 0.00012744500000000034, 0.00012736099999999945, 0.00012694400000000036, 0.0001274170000000012, 0.00012748699999999905, 0.00012743100000000077, 0.00012709699999999963, 0.00012676400000000143, 0.00012691699999999723, 0.0001273200000000002, 0.0001273049999999977, 0.0001270560000000004, 0.00012722199999999975, 0.00012769499999999712, 0.00012733399999999978, 0.00012720800000000018, 0.00012758400000000003, 0.00012740199999999868, 0.00012686099999999895, 0.00012715199999999843, 0.0001270560000000004, 0.00012736099999999945, 0.000127472, 0.0001268889999999981, 0.00012709699999999963, 0.0001269719999999995, 0.00012686100000000242, 0.00012734799999999935, 0.00012765300000000188, 0.0001275979999999996, 0.0001268329999999998, 0.00012704199999999735, 0.0001272369999999988, 0.0001272780000000015, 0.0001270970000000031, 0.0001275139999999987, 0.00012726399999999846, 0.00012676400000000143, 0.00012723599999999932, 0.00012734699999999988, 0.0001269170000000007, 0.00012722199999999975, 0.00012704099999999788, 0.0001269170000000007, 0.00012680600000000014, 0.0001276659999999985, 0.00012711199999999867]</msg>
<status status="PASS" starttime="20201029 12:46:57.067" endtime="20201029 12:46:57.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.062" endtime="20201029 12:46:57.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.074" endtime="20201029 12:46:57.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.073" endtime="20201029 12:46:57.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.071" endtime="20201029 12:46:57.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.711" endtime="20201029 12:46:57.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.711" endtime="20201029 12:46:57.095"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.103" endtime="20201029 12:46:57.124"></status>
</kw>
<msg timestamp="20201029 12:46:57.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.102" endtime="20201029 12:46:57.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.125" endtime="20201029 12:46:57.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.128" endtime="20201029 12:46:57.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.099" endtime="20201029 12:46:57.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.097" endtime="20201029 12:46:57.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.137" endtime="20201029 12:46:57.423"></status>
</kw>
<msg timestamp="20201029 12:46:57.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021429694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.135" endtime="20201029 12:46:57.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021429694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.427" endtime="20201029 12:46:57.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.435" endtime="20201029 12:46:57.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.133" endtime="20201029 12:46:57.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.131" endtime="20201029 12:46:57.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.442" level="INFO">${RESULT} = [{'diff': 0.00012902799999999978}, {'diff': 0.00012786099999999995}, {'diff': 0.00012854200000000232}, {'diff': 0.0001280269999999993}, {'diff': 0.00012872200000000125}, {'diff': 0.0001278889999999991...</msg>
<status status="PASS" starttime="20201029 12:46:57.439" endtime="20201029 12:46:57.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.447" level="INFO">${ACCURACY} = {'diff': [0.00012902799999999978, 0.00012786099999999995, 0.00012854200000000232, 0.0001280269999999993, 0.00012872200000000125, 0.0001278889999999991, 0.00012848600000000057, 0.00012866699999999898, ...</msg>
<status status="PASS" starttime="20201029 12:46:57.443" endtime="20201029 12:46:57.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.451" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.450" endtime="20201029 12:46:57.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.453" level="INFO">VALUE: [0.00012902799999999978, 0.00012786099999999995, 0.00012854200000000232, 0.0001280269999999993, 0.00012872200000000125, 0.0001278889999999991, 0.00012848600000000057, 0.00012866699999999898, 0.00012822300000000023, 0.0001283330000000013, 0.00012873599999999735, 0.00012827699999999956, 0.00012798600000000007, 0.0001280139999999992, 0.00012829200000000207, 0.0001287630000000005, 0.00012852799999999928, 0.00012827699999999956, 0.00012809700000000063, 0.00012798600000000007, 0.00012870800000000168, 0.0001282780000000025, 0.00012795800000000093, 0.00012858399999999756, 0.00012836100000000045, 0.00012822200000000075, 0.0001281390000000028, 0.0001283469999999974, 0.0001279170000000017, 0.0001285139999999997, 0.00012840300000000263, 0.00012873600000000082, 0.00012820899999999719, 0.00012784799999999985, 0.00012836100000000045, 0.0001280980000000001, 0.00012790199999999918, 0.000128472000000001, 0.00012816700000000195, 0.0001281520000000029, 0.00012812499999999977, 0.00012822200000000075, 0.00012840299999999916, 0.00012847199999999753, 0.00012852800000000275, 0.00012822200000000075, 0.00012833400000000078, 0.0001284439999999984, 0.00012833400000000078, 0.0001279720000000005]</msg>
<status status="PASS" starttime="20201029 12:46:57.452" endtime="20201029 12:46:57.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.448" endtime="20201029 12:46:57.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.459" endtime="20201029 12:46:57.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.457" endtime="20201029 12:46:57.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.456" endtime="20201029 12:46:57.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.096" endtime="20201029 12:46:57.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.095" endtime="20201029 12:46:57.479"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.488" endtime="20201029 12:46:57.508"></status>
</kw>
<msg timestamp="20201029 12:46:57.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.486" endtime="20201029 12:46:57.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.510" endtime="20201029 12:46:57.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.512" endtime="20201029 12:46:57.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.484" endtime="20201029 12:46:57.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.482" endtime="20201029 12:46:57.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.521" endtime="20201029 12:46:57.811"></status>
</kw>
<msg timestamp="20201029 12:46:57.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.520" endtime="20201029 12:46:57.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.815" endtime="20201029 12:46:57.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.823" endtime="20201029 12:46:57.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.517" endtime="20201029 12:46:57.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.515" endtime="20201029 12:46:57.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.829" level="INFO">${RESULT} = [{'diff': 0.00012937500000000102}, {'diff': 0.0001297920000000001}, {'diff': 0.00012905599999999892}, {'diff': 0.00012919399999999914}, {'diff': 0.0001295829999999991}, {'diff': 0.00012956899999999952...</msg>
<status status="PASS" starttime="20201029 12:46:57.826" endtime="20201029 12:46:57.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.833" level="INFO">${ACCURACY} = {'diff': [0.00012937500000000102, 0.0001297920000000001, 0.00012905599999999892, 0.00012919399999999914, 0.0001295829999999991, 0.00012956899999999952, 0.00012954199999999985, 0.00012955599999999942, ...</msg>
<status status="PASS" starttime="20201029 12:46:57.830" endtime="20201029 12:46:57.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.838" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.837" endtime="20201029 12:46:57.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.840" level="INFO">VALUE: [0.00012937500000000102, 0.0001297920000000001, 0.00012905599999999892, 0.00012919399999999914, 0.0001295829999999991, 0.00012956899999999952, 0.00012954199999999985, 0.00012955599999999942, 0.00012911200000000067, 0.0001289439999999989, 0.00012886100000000095, 0.000129166, 0.00012923600000000132, 0.0001289439999999989, 0.00012941699999999973, 0.00012904099999999988, 0.00012890299999999966, 0.00012916699999999948, 0.00012883400000000128, 0.0001291529999999999, 0.00012870800000000168, 0.00012909700000000163, 0.00012927800000000003, 0.00012942999999999982, 0.00012926400000000046, 0.000129472000000002, 0.00012972299999999826, 0.00012887499999999705, 0.00012904199999999935, 0.00012940200000000068, 0.00012936099999999798, 0.00012958399999999856, 0.0001288049999999992, 0.00012920800000000218, 0.00012892999999999932, 0.000129166, 0.00012879099999999963, 0.00012927800000000003, 0.000129166, 0.0001294859999999981, 0.0001287630000000005, 0.00012966699999999998, 0.0001297920000000001, 0.0001297079999999992, 0.00012972199999999878, 0.00012911099999999773, 0.00012891699999999923, 0.00012970800000000268, 0.0001292500000000009, 0.00012966699999999998]</msg>
<status status="PASS" starttime="20201029 12:46:57.839" endtime="20201029 12:46:57.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.834" endtime="20201029 12:46:57.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.845" endtime="20201029 12:46:57.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.843" endtime="20201029 12:46:57.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.842" endtime="20201029 12:46:57.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.480" endtime="20201029 12:46:57.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.480" endtime="20201029 12:46:57.866"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.874" endtime="20201029 12:46:57.896"></status>
</kw>
<msg timestamp="20201029 12:46:57.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.873" endtime="20201029 12:46:57.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.897" endtime="20201029 12:46:57.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.900" endtime="20201029 12:46:57.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.870" endtime="20201029 12:46:57.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.868" endtime="20201029 12:46:57.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.909" endtime="20201029 12:46:58.195"></status>
</kw>
<msg timestamp="20201029 12:46:58.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.907" endtime="20201029 12:46:58.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.199" endtime="20201029 12:46:58.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.207" endtime="20201029 12:46:58.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.905" endtime="20201029 12:46:58.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.903" endtime="20201029 12:46:58.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.213" level="INFO">${RESULT} = [{'diff': 0.00013124999999999942}, {'diff': 0.0001306660000000015}, {'diff': 0.00013037499999999855}, {'diff': 0.00013001399999999774}, {'diff': 0.000130263999999998}, {'diff': 0.0001298200000000027},...</msg>
<status status="PASS" starttime="20201029 12:46:58.210" endtime="20201029 12:46:58.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.217" level="INFO">${ACCURACY} = {'diff': [0.00013124999999999942, 0.0001306660000000015, 0.00013037499999999855, 0.00013001399999999774, 0.000130263999999998, 0.0001298200000000027, 0.00013005599999999992, 0.0001302079999999997, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:58.214" endtime="20201029 12:46:58.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.222" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.221" endtime="20201029 12:46:58.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.224" level="INFO">VALUE: [0.00013124999999999942, 0.0001306660000000015, 0.00013037499999999855, 0.00013001399999999774, 0.000130263999999998, 0.0001298200000000027, 0.00013005599999999992, 0.0001302079999999997, 0.00012977800000000053, 0.00013031900000000027, 0.00013068100000000055, 0.00013073599999999935, 0.00013018000000000057, 0.00013013900000000134, 0.00013018100000000005, 0.00013056899999999705, 0.00013037499999999855, 0.00013005599999999992, 0.00013044499999999987, 0.00013050000000000214, 0.00013044499999999987, 0.00012993000000000032, 0.0001304310000000003, 0.00013011099999999873, 0.00012997199999999903, 0.00013009700000000263, 0.00013024999999999842, 0.00013079099999999816, 0.00013016599999999753, 0.00013013900000000134, 0.00013063900000000184, 0.0001307080000000002, 0.00012981999999999924, 0.00012986100000000195, 0.0001303890000000016, 0.00012987499999999805, 0.00013073599999999935, 0.00013059699999999966, 0.00012997199999999903, 0.00013068100000000055, 0.0001298050000000002, 0.00013048600000000257, 0.00013068000000000107, 0.00013037499999999855, 0.00012990300000000066, 0.00013072199999999978, 0.0001301249999999983, 0.0001301799999999971, 0.00013054100000000138, 0.0001301249999999983]</msg>
<status status="PASS" starttime="20201029 12:46:58.223" endtime="20201029 12:46:58.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.218" endtime="20201029 12:46:58.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.230" endtime="20201029 12:46:58.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.228" endtime="20201029 12:46:58.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.227" endtime="20201029 12:46:58.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.866" endtime="20201029 12:46:58.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.866" endtime="20201029 12:46:58.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.772" endtime="20201029 12:46:58.251"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:19.705" endtime="20201029 12:46:58.251" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.258" endtime="20201029 12:46:58.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.256" endtime="20201029 12:46:58.278"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.291" endtime="20201029 12:46:58.303"></status>
</kw>
<msg timestamp="20201029 12:46:58.304" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.289" endtime="20201029 12:46:58.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.305" endtime="20201029 12:46:58.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.309" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:58.307" endtime="20201029 12:46:58.309"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:58.287" endtime="20201029 12:46:58.310"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:58.284" endtime="20201029 12:46:58.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.283" endtime="20201029 12:46:58.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:58.314" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:58.314" endtime="20201029 12:46:58.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.312" endtime="20201029 12:46:58.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.282" endtime="20201029 12:46:58.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.282" endtime="20201029 12:46:58.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.316" endtime="20201029 12:46:58.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.280" endtime="20201029 12:46:58.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.279" endtime="20201029 12:46:58.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.255" endtime="20201029 12:46:58.319"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.330" endtime="20201029 12:46:58.346"></status>
</kw>
<msg timestamp="20201029 12:46:58.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.328" endtime="20201029 12:46:58.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.348" endtime="20201029 12:46:58.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.351" endtime="20201029 12:46:58.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.324" endtime="20201029 12:46:58.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.322" endtime="20201029 12:46:58.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.360" endtime="20201029 12:46:58.646"></status>
</kw>
<msg timestamp="20201029 12:46:58.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063800083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063875986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.358" endtime="20201029 12:46:58.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063800083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063875986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.651" endtime="20201029 12:46:58.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.659" endtime="20201029 12:46:58.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.356" endtime="20201029 12:46:58.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.354" endtime="20201029 12:46:58.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.665" level="INFO">${RESULT} = [{'diff': 7.590300000000216e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.545899999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:58.662" endtime="20201029 12:46:58.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.670" level="INFO">${ACCURACY} = {'diff': [7.590300000000216e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.543000000000133e-05, 7.545899999999994e-05, 7.545799999998659e-05, 7.544499999999343e-05, 7.544400...</msg>
<status status="PASS" starttime="20201029 12:46:58.666" endtime="20201029 12:46:58.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.675" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.674" endtime="20201029 12:46:58.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.677" level="INFO">VALUE: [7.590300000000216e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.543000000000133e-05, 7.545899999999994e-05, 7.545799999998659e-05, 7.544499999999343e-05, 7.544400000000784e-05, 7.544400000000784e-05, 7.540300000000166e-05, 7.543000000000133e-05, 7.544399999999396e-05, 7.544399999999396e-05, 7.544400000000784e-05, 7.544399999999396e-05, 7.545899999999994e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.547200000000698e-05, 7.544500000000731e-05, 7.544499999999343e-05, 7.54310000000008e-05, 7.544400000000784e-05, 7.544500000000731e-05, 7.54310000000008e-05, 7.54160000000087e-05, 7.543000000000133e-05, 7.545899999999994e-05, 7.544500000000731e-05, 7.545800000000047e-05, 7.54719999999931e-05, 7.544400000000784e-05, 7.544499999999343e-05, 7.542999999998745e-05, 7.545800000000047e-05, 7.544500000000731e-05, 7.543000000000133e-05, 7.544400000000784e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.544500000000731e-05, 7.544500000000731e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.544500000000731e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.676" endtime="20201029 12:46:58.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.670" endtime="20201029 12:46:58.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.682" endtime="20201029 12:46:58.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.680" endtime="20201029 12:46:58.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.679" endtime="20201029 12:46:58.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.321" endtime="20201029 12:46:58.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.320" endtime="20201029 12:46:58.703"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.711" endtime="20201029 12:46:58.728"></status>
</kw>
<msg timestamp="20201029 12:46:58.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.710" endtime="20201029 12:46:58.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.730" endtime="20201029 12:46:58.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.732" endtime="20201029 12:46:58.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.707" endtime="20201029 12:46:58.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.705" endtime="20201029 12:46:58.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.741" endtime="20201029 12:46:59.027"></status>
</kw>
<msg timestamp="20201029 12:46:59.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.740" endtime="20201029 12:46:59.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.031" endtime="20201029 12:46:59.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.039" endtime="20201029 12:46:59.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.737" endtime="20201029 12:46:59.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.735" endtime="20201029 12:46:59.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.046" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.541600000000176e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.547300000000298e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:59.043" endtime="20201029 12:46:59.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.051" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.541600000000176e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.547300000000298e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.543000...</msg>
<status status="PASS" starttime="20201029 12:46:59.047" endtime="20201029 12:46:59.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.055" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.054" endtime="20201029 12:46:59.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.058" level="INFO">VALUE: [7.587499999999955e-05, 7.541600000000176e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.547300000000298e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.54310000000008e-05, 7.537499999999905e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.54029999999982e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.549999999999918e-05, 7.544399999999743e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.544399999999743e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.54310000000008e-05, 7.547200000000004e-05, 7.544399999999743e-05, 7.545800000000047e-05, 7.543000000000133e-05, 7.548600000000308e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.541700000000123e-05, 7.543000000000133e-05, 7.545899999999994e-05, 7.5457999999997e-05, 7.544399999999743e-05, 7.54440000000009e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.056" endtime="20201029 12:46:59.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.052" endtime="20201029 12:46:59.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.062" endtime="20201029 12:46:59.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.061" endtime="20201029 12:46:59.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.060" endtime="20201029 12:46:59.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.703" endtime="20201029 12:46:59.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.703" endtime="20201029 12:46:59.083"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.092" endtime="20201029 12:46:59.109"></status>
</kw>
<msg timestamp="20201029 12:46:59.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.091" endtime="20201029 12:46:59.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.110" endtime="20201029 12:46:59.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.113" endtime="20201029 12:46:59.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.088" endtime="20201029 12:46:59.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.085" endtime="20201029 12:46:59.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.122" endtime="20201029 12:46:59.408"></status>
</kw>
<msg timestamp="20201029 12:46:59.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:59.120" endtime="20201029 12:46:59.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:59.413" endtime="20201029 12:46:59.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.421" endtime="20201029 12:46:59.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.118" endtime="20201029 12:46:59.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.116" endtime="20201029 12:46:59.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.427" level="INFO">${RESULT} = [{'diff': 7.581900000000127e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.545800000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:59.424" endtime="20201029 12:46:59.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.432" level="INFO">${ACCURACY} = {'diff': [7.581900000000127e-05, 7.54310000000008e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.542999999999786e-05, 7.54029...</msg>
<status status="PASS" starttime="20201029 12:46:59.428" endtime="20201029 12:46:59.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.436" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.435" endtime="20201029 12:46:59.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.439" level="INFO">VALUE: [7.581900000000127e-05, 7.54310000000008e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.542999999999786e-05, 7.54029999999982e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.542999999999786e-05, 7.547200000000004e-05, 7.54310000000008e-05, 7.537499999999905e-05, 7.543099999999733e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.54449999999969e-05, 7.545800000000047e-05, 7.550000000000265e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.541700000000123e-05, 7.545800000000047e-05, 7.541600000000176e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.542999999999786e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.542999999999786e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.54449999999969e-05, 7.544500000000037e-05, 7.545899999999994e-05, 7.547200000000004e-05, 7.54440000000009e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.437" endtime="20201029 12:46:59.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.432" endtime="20201029 12:46:59.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.443" endtime="20201029 12:46:59.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.441" endtime="20201029 12:46:59.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.440" endtime="20201029 12:46:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.084" endtime="20201029 12:46:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.083" endtime="20201029 12:46:59.464"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.473" endtime="20201029 12:46:59.490"></status>
</kw>
<msg timestamp="20201029 12:46:59.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.471" endtime="20201029 12:46:59.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.492" endtime="20201029 12:46:59.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.494" endtime="20201029 12:46:59.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.469" endtime="20201029 12:46:59.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.467" endtime="20201029 12:46:59.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.503" endtime="20201029 12:46:59.789"></status>
</kw>
<msg timestamp="20201029 12:46:59.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:59.502" endtime="20201029 12:46:59.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:59.793" endtime="20201029 12:46:59.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.801" endtime="20201029 12:46:59.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.499" endtime="20201029 12:46:59.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.498" endtime="20201029 12:46:59.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.808" level="INFO">${RESULT} = [{'diff': 7.586099999999998e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.544399999999743e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.549999999999918e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:59.805" endtime="20201029 12:46:59.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.812" level="INFO">${ACCURACY} = {'diff': [7.586099999999998e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.545899999999994e-05, 7.549999999999918e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54439...</msg>
<status status="PASS" starttime="20201029 12:46:59.809" endtime="20201029 12:46:59.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.816" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.815" endtime="20201029 12:46:59.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.819" level="INFO">VALUE: [7.586099999999998e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.545899999999994e-05, 7.549999999999918e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.544399999999743e-05, 7.540200000000219e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.547299999999951e-05, 7.543000000000133e-05, 7.547300000000298e-05, 7.547299999999951e-05, 7.543099999999733e-05, 7.545899999999994e-05, 7.540199999999872e-05, 7.54449999999969e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.549999999999918e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.540300000000166e-05, 7.547200000000004e-05, 7.554200000000136e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.544399999999743e-05, 7.541699999999776e-05, 7.54440000000009e-05, 7.543099999999733e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.538899999999862e-05, 7.54440000000009e-05, 7.545800000000047e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.817" endtime="20201029 12:46:59.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.813" endtime="20201029 12:46:59.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.825" endtime="20201029 12:46:59.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.823" endtime="20201029 12:46:59.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.822" endtime="20201029 12:46:59.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.465" endtime="20201029 12:46:59.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.464" endtime="20201029 12:46:59.845"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.854" endtime="20201029 12:46:59.871"></status>
</kw>
<msg timestamp="20201029 12:46:59.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.852" endtime="20201029 12:46:59.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.872" endtime="20201029 12:46:59.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.875" endtime="20201029 12:46:59.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.850" endtime="20201029 12:46:59.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.848" endtime="20201029 12:46:59.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.884" endtime="20201029 12:47:00.168"></status>
</kw>
<msg timestamp="20201029 12:47:00.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.882" endtime="20201029 12:47:00.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021580361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.172" endtime="20201029 12:47:00.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.181" endtime="20201029 12:47:00.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.879" endtime="20201029 12:47:00.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.878" endtime="20201029 12:47:00.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.187" level="INFO">${RESULT} = [{'diff': 7.588899999999912e-05}, {'diff': 7.542999999999786e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.544399999999743e-05}, {'diff': 7.541600000000176e-05}, {'diff': 7.541599999999829e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:00.184" endtime="20201029 12:47:00.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.192" level="INFO">${ACCURACY} = {'diff': [7.588899999999912e-05, 7.542999999999786e-05, 7.547200000000004e-05, 7.544399999999743e-05, 7.541600000000176e-05, 7.541599999999829e-05, 7.544399999999743e-05, 7.54310000000008e-05, 7.54310...</msg>
<status status="PASS" starttime="20201029 12:47:00.188" endtime="20201029 12:47:00.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.197" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.196" endtime="20201029 12:47:00.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.199" level="INFO">VALUE: [7.588899999999912e-05, 7.542999999999786e-05, 7.547200000000004e-05, 7.544399999999743e-05, 7.541600000000176e-05, 7.541599999999829e-05, 7.544399999999743e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.542999999999786e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.54449999999969e-05, 7.543099999999733e-05, 7.542999999999786e-05, 7.544399999999743e-05, 7.545899999999994e-05, 7.543000000000133e-05, 7.542999999999786e-05, 7.54310000000008e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.542999999999786e-05, 7.541700000000123e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.537499999999905e-05, 7.540300000000166e-05, 7.54310000000008e-05, 7.543000000000133e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.541700000000123e-05, 7.543000000000133e-05, 7.541700000000123e-05, 7.541600000000176e-05, 7.548599999999961e-05, 7.543000000000133e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.543099999999733e-05, 7.542999999999786e-05, 7.5457999999997e-05, 7.545899999999994e-05, 7.543099999999733e-05, 7.544399999999743e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.198" endtime="20201029 12:47:00.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.193" endtime="20201029 12:47:00.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.204" endtime="20201029 12:47:00.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.203" endtime="20201029 12:47:00.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.202" endtime="20201029 12:47:00.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.846" endtime="20201029 12:47:00.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.846" endtime="20201029 12:47:00.225"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.234" endtime="20201029 12:47:00.250"></status>
</kw>
<msg timestamp="20201029 12:47:00.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.232" endtime="20201029 12:47:00.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.252" endtime="20201029 12:47:00.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.254" endtime="20201029 12:47:00.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.229" endtime="20201029 12:47:00.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.227" endtime="20201029 12:47:00.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.263" endtime="20201029 12:47:00.549"></status>
</kw>
<msg timestamp="20201029 12:47:00.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:00.262" endtime="20201029 12:47:00.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:00.553" endtime="20201029 12:47:00.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.561" endtime="20201029 12:47:00.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.259" endtime="20201029 12:47:00.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.257" endtime="20201029 12:47:00.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.568" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.541700000000123e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:00.564" endtime="20201029 12:47:00.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.572" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.545899999999994e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.541700000000123e-05, 7.54440000000009e-05, 7.54579999...</msg>
<status status="PASS" starttime="20201029 12:47:00.569" endtime="20201029 12:47:00.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.576" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.575" endtime="20201029 12:47:00.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.579" level="INFO">VALUE: [7.587499999999955e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.545899999999994e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.541700000000123e-05, 7.54440000000009e-05, 7.5457999999997e-05, 7.54310000000008e-05, 7.5457999999997e-05, 7.547200000000004e-05, 7.543000000000133e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.538799999999915e-05, 7.54440000000009e-05, 7.541599999999829e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.53890000000021e-05, 7.54440000000009e-05, 7.543000000000133e-05, 7.545899999999994e-05, 7.53890000000021e-05, 7.545800000000047e-05, 7.542999999999786e-05, 7.545899999999994e-05, 7.550000000000265e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.545800000000047e-05, 7.541699999999776e-05, 7.545800000000047e-05, 7.548599999999961e-05, 7.541599999999829e-05, 7.544500000000037e-05, 7.544399999999743e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.543000000000133e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.577" endtime="20201029 12:47:00.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.573" endtime="20201029 12:47:00.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.589" endtime="20201029 12:47:00.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.587" endtime="20201029 12:47:00.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.586" endtime="20201029 12:47:00.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.226" endtime="20201029 12:47:00.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.225" endtime="20201029 12:47:00.610"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.619" endtime="20201029 12:47:00.636"></status>
</kw>
<msg timestamp="20201029 12:47:00.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.617" endtime="20201029 12:47:00.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.638" endtime="20201029 12:47:00.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.640" endtime="20201029 12:47:00.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.614" endtime="20201029 12:47:00.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.612" endtime="20201029 12:47:00.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.649" endtime="20201029 12:47:00.935"></status>
</kw>
<msg timestamp="20201029 12:47:00.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.648" endtime="20201029 12:47:00.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.939" endtime="20201029 12:47:00.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.947" endtime="20201029 12:47:00.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.645" endtime="20201029 12:47:00.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.643" endtime="20201029 12:47:00.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.954" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.53890000000021e-05}, {'diff': 7.545899999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:00.951" endtime="20201029 12:47:00.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.958" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.548599999999961e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.53890000000021e-05, 7.545899999999994e-05, 7.544399999999743e-05, 7.542999999999786e-05, 7.54589...</msg>
<status status="PASS" starttime="20201029 12:47:00.955" endtime="20201029 12:47:00.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.962" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.961" endtime="20201029 12:47:00.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.965" level="INFO">VALUE: [7.587499999999955e-05, 7.548599999999961e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.53890000000021e-05, 7.545899999999994e-05, 7.544399999999743e-05, 7.542999999999786e-05, 7.545899999999994e-05, 7.541599999999829e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.54029999999982e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.543099999999733e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.5457999999997e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.542999999999786e-05, 7.545800000000047e-05, 7.549999999999918e-05, 7.540300000000166e-05, 7.548599999999961e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.5457999999997e-05, 7.541599999999829e-05, 7.542999999999786e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.543099999999733e-05, 7.544399999999743e-05, 7.54310000000008e-05, 7.545899999999994e-05, 7.551399999999875e-05, 7.548599999999961e-05, 7.54310000000008e-05, 7.545899999999994e-05, 7.544399999999743e-05, 7.545899999999994e-05, 7.547299999999951e-05, 7.544500000000037e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.963" endtime="20201029 12:47:00.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.959" endtime="20201029 12:47:00.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.973" endtime="20201029 12:47:00.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.971" endtime="20201029 12:47:00.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.970" endtime="20201029 12:47:00.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.611" endtime="20201029 12:47:00.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.610" endtime="20201029 12:47:00.994"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.002" endtime="20201029 12:47:01.019"></status>
</kw>
<msg timestamp="20201029 12:47:01.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.001" endtime="20201029 12:47:01.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.020" endtime="20201029 12:47:01.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.023" endtime="20201029 12:47:01.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.998" endtime="20201029 12:47:01.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.996" endtime="20201029 12:47:01.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.032" endtime="20201029 12:47:01.318"></status>
</kw>
<msg timestamp="20201029 12:47:01.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.030" endtime="20201029 12:47:01.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.322" endtime="20201029 12:47:01.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.330" endtime="20201029 12:47:01.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.028" endtime="20201029 12:47:01.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.026" endtime="20201029 12:47:01.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.337" level="INFO">${RESULT} = [{'diff': 7.590199999999922e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.54440000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:01.334" endtime="20201029 12:47:01.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.391" level="INFO">${ACCURACY} = {'diff': [7.590199999999922e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.5444000...</msg>
<status status="PASS" starttime="20201029 12:47:01.338" endtime="20201029 12:47:01.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.395" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.394" endtime="20201029 12:47:01.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.398" level="INFO">VALUE: [7.590199999999922e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.541700000000123e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.54310000000008e-05, 7.541599999999829e-05, 7.54310000000008e-05, 7.547200000000004e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.543099999999733e-05, 7.543000000000133e-05, 7.536099999999948e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.536100000000295e-05, 7.543000000000133e-05, 7.5457999999997e-05, 7.54449999999969e-05, 7.541699999999776e-05, 7.544500000000037e-05, 7.542999999999786e-05, 7.548600000000308e-05, 7.541700000000123e-05, 7.544399999999743e-05, 7.5457999999997e-05, 7.544500000000037e-05, 7.545899999999994e-05, 7.54310000000008e-05, 7.54440000000009e-05, 7.542999999999786e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.54029999999982e-05, 7.544399999999743e-05, 7.548699999999908e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.543000000000133e-05, 7.545800000000047e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.396" endtime="20201029 12:47:01.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.392" endtime="20201029 12:47:01.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.402" endtime="20201029 12:47:01.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.401" endtime="20201029 12:47:01.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.400" endtime="20201029 12:47:01.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.995" endtime="20201029 12:47:01.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.994" endtime="20201029 12:47:01.423"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.432" endtime="20201029 12:47:01.448"></status>
</kw>
<msg timestamp="20201029 12:47:01.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.430" endtime="20201029 12:47:01.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.450" endtime="20201029 12:47:01.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.452" endtime="20201029 12:47:01.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.428" endtime="20201029 12:47:01.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.426" endtime="20201029 12:47:01.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.462" endtime="20201029 12:47:01.754"></status>
</kw>
<msg timestamp="20201029 12:47:01.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.461" endtime="20201029 12:47:01.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.758" endtime="20201029 12:47:01.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.766" endtime="20201029 12:47:01.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.458" endtime="20201029 12:47:01.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.456" endtime="20201029 12:47:01.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.773" level="INFO">${RESULT} = [{'diff': 7.59029999999987e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.5457999999997e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.545800000000047e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:01.770" endtime="20201029 12:47:01.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.777" level="INFO">${ACCURACY} = {'diff': [7.59029999999987e-05, 7.548599999999961e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.5458000...</msg>
<status status="PASS" starttime="20201029 12:47:01.774" endtime="20201029 12:47:01.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.782" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.780" endtime="20201029 12:47:01.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.785" level="INFO">VALUE: [7.59029999999987e-05, 7.548599999999961e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.547200000000004e-05, 7.547200000000004e-05, 7.551399999999875e-05, 7.538899999999862e-05, 7.547200000000004e-05, 7.541700000000123e-05, 7.547200000000004e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.547200000000004e-05, 7.544500000000037e-05, 7.545899999999994e-05, 7.541699999999776e-05, 7.547200000000004e-05, 7.550000000000265e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.54310000000008e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.544399999999743e-05, 7.544500000000037e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.552799999999832e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.547200000000004e-05, 7.543000000000133e-05, 7.54029999999982e-05, 7.545899999999994e-05, 7.547200000000004e-05, 7.547299999999951e-05, 7.545899999999994e-05, 7.547200000000004e-05, 7.547200000000004e-05, 7.545899999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.783" endtime="20201029 12:47:01.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.778" endtime="20201029 12:47:01.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.790" endtime="20201029 12:47:01.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.788" endtime="20201029 12:47:01.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.787" endtime="20201029 12:47:01.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.424" endtime="20201029 12:47:01.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.424" endtime="20201029 12:47:01.810"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.819" endtime="20201029 12:47:01.836"></status>
</kw>
<msg timestamp="20201029 12:47:01.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.817" endtime="20201029 12:47:01.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.837" endtime="20201029 12:47:01.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.840" endtime="20201029 12:47:01.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.815" endtime="20201029 12:47:01.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.813" endtime="20201029 12:47:01.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.849" endtime="20201029 12:47:02.135"></status>
</kw>
<msg timestamp="20201029 12:47:02.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:01.847" endtime="20201029 12:47:02.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:02.139" endtime="20201029 12:47:02.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.147" endtime="20201029 12:47:02.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.845" endtime="20201029 12:47:02.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.843" endtime="20201029 12:47:02.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.154" level="INFO">${RESULT} = [{'diff': 7.588899999999912e-05}, {'diff': 7.542999999999786e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.541599999999829e-05}, {'diff': 7.544500000000037e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:02.151" endtime="20201029 12:47:02.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.159" level="INFO">${ACCURACY} = {'diff': [7.588899999999912e-05, 7.542999999999786e-05, 7.548599999999961e-05, 7.547200000000004e-05, 7.541599999999829e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.54589...</msg>
<status status="PASS" starttime="20201029 12:47:02.155" endtime="20201029 12:47:02.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.163" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.162" endtime="20201029 12:47:02.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.166" level="INFO">VALUE: [7.588899999999912e-05, 7.542999999999786e-05, 7.548599999999961e-05, 7.547200000000004e-05, 7.541599999999829e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.545899999999994e-05, 7.544500000000037e-05, 7.551400000000222e-05, 7.547200000000004e-05, 7.548599999999961e-05, 7.547299999999951e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.547299999999951e-05, 7.540300000000166e-05, 7.544500000000037e-05, 7.544399999999743e-05, 7.545800000000047e-05, 7.552800000000179e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.540200000000219e-05, 7.545800000000047e-05, 7.549999999999918e-05, 7.544500000000037e-05, 7.551400000000222e-05, 7.549999999999918e-05, 7.548599999999961e-05, 7.54440000000009e-05, 7.547299999999951e-05, 7.547200000000004e-05, 7.543099999999733e-05, 7.54440000000009e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.547299999999951e-05, 7.543000000000133e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.547200000000004e-05, 7.545899999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.164" endtime="20201029 12:47:02.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.160" endtime="20201029 12:47:02.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.171" endtime="20201029 12:47:02.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.169" endtime="20201029 12:47:02.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.168" endtime="20201029 12:47:02.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.811" endtime="20201029 12:47:02.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.811" endtime="20201029 12:47:02.191"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.200" endtime="20201029 12:47:02.217"></status>
</kw>
<msg timestamp="20201029 12:47:02.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.198" endtime="20201029 12:47:02.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.218" endtime="20201029 12:47:02.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.221" endtime="20201029 12:47:02.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.196" endtime="20201029 12:47:02.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.194" endtime="20201029 12:47:02.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.230" endtime="20201029 12:47:02.516"></status>
</kw>
<msg timestamp="20201029 12:47:02.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.228" endtime="20201029 12:47:02.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.520" endtime="20201029 12:47:02.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.528" endtime="20201029 12:47:02.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.226" endtime="20201029 12:47:02.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.224" endtime="20201029 12:47:02.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.535" level="INFO">${RESULT} = [{'diff': 7.587499999999955e-05}, {'diff': 7.569500000000062e-05}, {'diff': 7.548600000000308e-05}, {'diff': 7.583300000000084e-05}, {'diff': 7.55830000000006e-05}, {'diff': 7.545899999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:02.532" endtime="20201029 12:47:02.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.539" level="INFO">${ACCURACY} = {'diff': [7.587499999999955e-05, 7.569500000000062e-05, 7.548600000000308e-05, 7.583300000000084e-05, 7.55830000000006e-05, 7.545899999999994e-05, 7.551399999999875e-05, 7.55830000000006e-05, 7.570800...</msg>
<status status="PASS" starttime="20201029 12:47:02.536" endtime="20201029 12:47:02.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.544" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.543" endtime="20201029 12:47:02.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.546" level="INFO">VALUE: [7.587499999999955e-05, 7.569500000000062e-05, 7.548600000000308e-05, 7.583300000000084e-05, 7.55830000000006e-05, 7.545899999999994e-05, 7.551399999999875e-05, 7.55830000000006e-05, 7.570800000000072e-05, 7.545899999999994e-05, 7.544500000000037e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.554200000000136e-05, 7.551399999999875e-05, 7.552800000000179e-05, 7.54440000000009e-05, 7.538899999999862e-05, 7.569500000000062e-05, 7.54440000000009e-05, 7.551399999999875e-05, 7.558400000000007e-05, 7.558299999999712e-05, 7.548600000000308e-05, 7.581900000000127e-05, 7.586099999999998e-05, 7.54449999999969e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.549999999999918e-05, 7.547200000000004e-05, 7.59310000000013e-05, 7.577799999999857e-05, 7.5763000000003e-05, 7.551399999999875e-05, 7.547200000000004e-05, 7.544399999999743e-05, 7.569399999999768e-05, 7.594500000000087e-05, 7.54440000000009e-05, 7.558400000000007e-05, 7.587499999999955e-05, 7.582000000000075e-05, 7.56249999999993e-05, 7.545899999999994e-05, 7.582000000000075e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.545" endtime="20201029 12:47:02.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.540" endtime="20201029 12:47:02.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.551" endtime="20201029 12:47:02.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.549" endtime="20201029 12:47:02.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.548" endtime="20201029 12:47:02.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.192" endtime="20201029 12:47:02.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.192" endtime="20201029 12:47:02.573"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.585" endtime="20201029 12:47:02.603"></status>
</kw>
<msg timestamp="20201029 12:47:02.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.583" endtime="20201029 12:47:02.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.604" endtime="20201029 12:47:02.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.607" endtime="20201029 12:47:02.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.580" endtime="20201029 12:47:02.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.577" endtime="20201029 12:47:02.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.617" endtime="20201029 12:47:02.903"></status>
</kw>
<msg timestamp="20201029 12:47:02.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026562403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026638431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.615" endtime="20201029 12:47:02.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026562403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026638431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.907" endtime="20201029 12:47:02.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.915" endtime="20201029 12:47:02.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.612" endtime="20201029 12:47:02.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.610" endtime="20201029 12:47:02.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.922" level="INFO">${RESULT} = [{'diff': 7.602800000000229e-05}, {'diff': 7.562500000000277e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.563800000000287e-05}, {'diff': 7.551400000000222e-05}, {'diff': 7.552799999999832e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:02.919" endtime="20201029 12:47:02.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.926" level="INFO">${ACCURACY} = {'diff': [7.602800000000229e-05, 7.562500000000277e-05, 7.543000000000133e-05, 7.563800000000287e-05, 7.551400000000222e-05, 7.552799999999832e-05, 7.545899999999994e-05, 7.558299999999712e-05, 7.5429...</msg>
<status status="PASS" starttime="20201029 12:47:02.923" endtime="20201029 12:47:02.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.931" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.930" endtime="20201029 12:47:02.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.934" level="INFO">VALUE: [7.602800000000229e-05, 7.562500000000277e-05, 7.543000000000133e-05, 7.563800000000287e-05, 7.551400000000222e-05, 7.552799999999832e-05, 7.545899999999994e-05, 7.558299999999712e-05, 7.542999999999786e-05, 7.556900000000102e-05, 7.551399999999875e-05, 7.555600000000093e-05, 7.559799999999964e-05, 7.563899999999887e-05, 7.52500000000024e-05, 7.550000000000265e-05, 7.598600000000011e-05, 7.545800000000047e-05, 7.551399999999875e-05, 7.56379999999994e-05, 7.545800000000047e-05, 7.545899999999994e-05, 7.559799999999964e-05, 7.56379999999994e-05, 7.555500000000145e-05, 7.54440000000009e-05, 7.561099999999973e-05, 7.55700000000005e-05, 7.552800000000179e-05, 7.563900000000234e-05, 7.556900000000102e-05, 7.544399999999743e-05, 7.544399999999743e-05, 7.551399999999875e-05, 7.54440000000009e-05, 7.56379999999994e-05, 7.54440000000009e-05, 7.52639999999985e-05, 7.523599999999936e-05, 7.549999999999918e-05, 7.55700000000005e-05, 7.526400000000197e-05, 7.555599999999746e-05, 7.601299999999978e-05, 7.559799999999964e-05, 7.559700000000016e-05, 7.54310000000008e-05, 7.563899999999887e-05, 7.556999999999703e-05, 7.544500000000037e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.932" endtime="20201029 12:47:02.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.927" endtime="20201029 12:47:02.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.939" endtime="20201029 12:47:02.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.937" endtime="20201029 12:47:02.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.936" endtime="20201029 12:47:02.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.574" endtime="20201029 12:47:02.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.573" endtime="20201029 12:47:02.960"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.968" endtime="20201029 12:47:02.986"></status>
</kw>
<msg timestamp="20201029 12:47:02.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.966" endtime="20201029 12:47:02.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.987" endtime="20201029 12:47:02.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.990" endtime="20201029 12:47:02.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.964" endtime="20201029 12:47:02.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.962" endtime="20201029 12:47:02.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.999" endtime="20201029 12:47:03.285"></status>
</kw>
<msg timestamp="20201029 12:47:03.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02169125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:02.997" endtime="20201029 12:47:03.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021615306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02169125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:03.289" endtime="20201029 12:47:03.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.298" endtime="20201029 12:47:03.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.995" endtime="20201029 12:47:03.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.993" endtime="20201029 12:47:03.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.304" level="INFO">${RESULT} = [{'diff': 7.594399999999793e-05}, {'diff': 0.00010061100000000045}, {'diff': 0.000100722000000001}, {'diff': 7.570800000000072e-05}, {'diff': 0.00010061199999999992}, {'diff': 7.572200000000029e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:03.301" endtime="20201029 12:47:03.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.309" level="INFO">${ACCURACY} = {'diff': [7.594399999999793e-05, 0.00010061100000000045, 0.000100722000000001, 7.570800000000072e-05, 0.00010061199999999992, 7.572200000000029e-05, 0.00010059800000000035, 7.570799999999725e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:03.305" endtime="20201029 12:47:03.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.313" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.312" endtime="20201029 12:47:03.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.316" level="INFO">VALUE: [7.594399999999793e-05, 0.00010061100000000045, 0.000100722000000001, 7.570800000000072e-05, 0.00010061199999999992, 7.572200000000029e-05, 0.00010059800000000035, 7.570799999999725e-05, 0.00010059799999999688, 7.569500000000062e-05, 7.57769999999991e-05, 7.580600000000118e-05, 7.552800000000179e-05, 0.00010056899999999827, 0.00010070799999999797, 7.566600000000201e-05, 7.556900000000102e-05, 0.00010058400000000078, 7.56249999999993e-05, 7.55830000000006e-05, 7.568000000000158e-05, 7.56249999999993e-05, 7.582000000000075e-05, 7.565300000000191e-05, 7.555600000000093e-05, 7.583300000000084e-05, 7.563899999999887e-05, 7.567999999999811e-05, 7.577799999999857e-05, 7.565200000000244e-05, 0.00010058300000000131, 0.00010072199999999754, 0.0001007359999999971, 0.00010070800000000144, 0.000100722000000001, 7.567999999999811e-05, 7.563900000000234e-05, 7.568000000000158e-05, 0.00010061100000000045, 7.569400000000115e-05, 0.00010061199999999992, 7.573699999999933e-05, 7.569399999999768e-05, 7.56249999999993e-05, 0.00010059800000000035, 7.570800000000072e-05, 0.00010059699999999741, 7.569400000000115e-05, 7.561099999999973e-05, 0.00010061100000000045]</msg>
<status status="PASS" starttime="20201029 12:47:03.314" endtime="20201029 12:47:03.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.310" endtime="20201029 12:47:03.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.321" endtime="20201029 12:47:03.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.319" endtime="20201029 12:47:03.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.318" endtime="20201029 12:47:03.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.960" endtime="20201029 12:47:03.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.960" endtime="20201029 12:47:03.341"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.350" endtime="20201029 12:47:03.368"></status>
</kw>
<msg timestamp="20201029 12:47:03.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.349" endtime="20201029 12:47:03.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.370" endtime="20201029 12:47:03.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.372" endtime="20201029 12:47:03.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.346" endtime="20201029 12:47:03.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.344" endtime="20201029 12:47:03.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.381" endtime="20201029 12:47:03.668"></status>
</kw>
<msg timestamp="20201029 12:47:03.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.380" endtime="20201029 12:47:03.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.672" endtime="20201029 12:47:03.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.680" endtime="20201029 12:47:03.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.377" endtime="20201029 12:47:03.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.375" endtime="20201029 12:47:03.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.686" level="INFO">${RESULT} = [{'diff': 0.0001010419999999991}, {'diff': 0.00010072199999999754}, {'diff': 0.00010065199999999969}, {'diff': 0.00010079100000000285}, {'diff': 0.000100722000000001}, {'diff': 0.00010070800000000144}...</msg>
<status status="PASS" starttime="20201029 12:47:03.683" endtime="20201029 12:47:03.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.691" level="INFO">${ACCURACY} = {'diff': [0.0001010419999999991, 0.00010072199999999754, 0.00010065199999999969, 0.00010079100000000285, 0.000100722000000001, 0.00010070800000000144, 0.00010073600000000058, 0.00010072300000000048, 0...</msg>
<status status="PASS" starttime="20201029 12:47:03.688" endtime="20201029 12:47:03.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.695" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.694" endtime="20201029 12:47:03.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.698" level="INFO">VALUE: [0.0001010419999999991, 0.00010072199999999754, 0.00010065199999999969, 0.00010079100000000285, 0.000100722000000001, 0.00010070800000000144, 0.00010073600000000058, 0.00010072300000000048, 0.00010076400000000318, 0.00010073600000000058, 0.00010073600000000058, 0.000100722000000001, 0.00010072300000000048, 0.000100722000000001, 0.00010079199999999885, 0.00010080599999999842, 0.000100722000000001, 0.00010066599999999926, 0.00010069400000000187, 0.0001006939999999984, 0.00010070800000000144, 0.00010080499999999895, 0.00010075000000000014, 0.00010073600000000058, 0.000100722000000001, 0.00010070900000000091, 0.00010070799999999797, 0.000100722000000001, 0.00010070800000000144, 0.000100722000000001, 0.000100722000000001, 0.00010073600000000058, 0.00010073600000000058, 0.000100722000000001, 0.00010075000000000014, 0.00010072199999999754, 0.0001007359999999971, 0.000100722000000001, 0.00010073600000000058, 0.00010072300000000048, 0.00010072300000000048, 0.00010072300000000048, 0.00010070800000000144, 0.00010072300000000048, 0.000100722000000001, 0.00010073700000000005, 0.00010075000000000014, 0.00010077799999999928, 0.00010069500000000134, 0.00010073600000000058]</msg>
<status status="PASS" starttime="20201029 12:47:03.696" endtime="20201029 12:47:03.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.692" endtime="20201029 12:47:03.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.702" endtime="20201029 12:47:03.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.701" endtime="20201029 12:47:03.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.700" endtime="20201029 12:47:03.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.342" endtime="20201029 12:47:03.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.342" endtime="20201029 12:47:03.723"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.732" endtime="20201029 12:47:03.751"></status>
</kw>
<msg timestamp="20201029 12:47:03.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.730" endtime="20201029 12:47:03.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.752" endtime="20201029 12:47:03.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.756" endtime="20201029 12:47:03.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.728" endtime="20201029 12:47:03.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.726" endtime="20201029 12:47:03.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.768" endtime="20201029 12:47:04.055"></status>
</kw>
<msg timestamp="20201029 12:47:04.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.766" endtime="20201029 12:47:04.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.059" endtime="20201029 12:47:04.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.067" endtime="20201029 12:47:04.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.763" endtime="20201029 12:47:04.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.761" endtime="20201029 12:47:04.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.074" level="INFO">${RESULT} = [{'diff': 0.0001010419999999991}, {'diff': 0.00010072299999999701}, {'diff': 0.0001007359999999971}, {'diff': 0.00010075000000000014}, {'diff': 0.0001007359999999971}, {'diff': 0.00010072300000000048}...</msg>
<status status="PASS" starttime="20201029 12:47:04.071" endtime="20201029 12:47:04.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.078" level="INFO">${ACCURACY} = {'diff': [0.0001010419999999991, 0.00010072299999999701, 0.0001007359999999971, 0.00010075000000000014, 0.0001007359999999971, 0.00010072300000000048, 0.0001007359999999971, 0.00010070800000000144, 0....</msg>
<status status="PASS" starttime="20201029 12:47:04.075" endtime="20201029 12:47:04.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.082" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.081" endtime="20201029 12:47:04.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.085" level="INFO">VALUE: [0.0001010419999999991, 0.00010072299999999701, 0.0001007359999999971, 0.00010075000000000014, 0.0001007359999999971, 0.00010072300000000048, 0.0001007359999999971, 0.00010070800000000144, 0.000100722000000001, 0.00010067999999999883, 0.00010072300000000048, 0.00010073600000000058, 0.00010070899999999744, 0.00010073600000000058, 0.00010070799999999797, 0.00010075000000000014, 0.00010070799999999797, 0.00010073600000000058, 0.00010070799999999797, 0.00010072199999999754, 0.00010073600000000058, 0.00010070799999999797, 0.00010073600000000058, 0.00010073600000000058, 0.000100722000000001, 0.00010072199999999754, 0.000100722000000001, 0.00010076399999999971, 0.000100722000000001, 0.00010072300000000048, 0.00010074999999999668, 0.00010073600000000058, 0.00010073600000000058, 0.000100722000000001, 0.000100722000000001, 0.00010072300000000048, 0.00010072299999999701, 0.00010073600000000058, 0.00010077799999999928, 0.00010073600000000058, 0.000100722000000001, 0.000100722000000001, 0.0001007359999999971, 0.00010073600000000058, 0.000100722000000001, 0.00010072300000000048, 0.00010066699999999873, 0.0001007359999999971, 0.0001006809999999983, 0.000100722000000001]</msg>
<status status="PASS" starttime="20201029 12:47:04.083" endtime="20201029 12:47:04.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.078" endtime="20201029 12:47:04.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.090" endtime="20201029 12:47:04.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.089" endtime="20201029 12:47:04.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.087" endtime="20201029 12:47:04.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.724" endtime="20201029 12:47:04.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.723" endtime="20201029 12:47:04.111"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.120" endtime="20201029 12:47:04.138"></status>
</kw>
<msg timestamp="20201029 12:47:04.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.118" endtime="20201029 12:47:04.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.139" endtime="20201029 12:47:04.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.142" endtime="20201029 12:47:04.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.115" endtime="20201029 12:47:04.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.113" endtime="20201029 12:47:04.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.151" endtime="20201029 12:47:04.437"></status>
</kw>
<msg timestamp="20201029 12:47:04.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.149" endtime="20201029 12:47:04.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.441" endtime="20201029 12:47:04.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.449" endtime="20201029 12:47:04.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.147" endtime="20201029 12:47:04.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.145" endtime="20201029 12:47:04.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.456" level="INFO">${RESULT} = [{'diff': 0.00010102799999999953}, {'diff': 0.00010070800000000144}, {'diff': 0.00010069500000000134}, {'diff': 0.000100722000000001}, {'diff': 0.0001006809999999983}, {'diff': 0.000100722000000001}, ...</msg>
<status status="PASS" starttime="20201029 12:47:04.453" endtime="20201029 12:47:04.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.460" level="INFO">${ACCURACY} = {'diff': [0.00010102799999999953, 0.00010070800000000144, 0.00010069500000000134, 0.000100722000000001, 0.0001006809999999983, 0.000100722000000001, 0.00010076300000000024, 0.00010072199999999754, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:04.457" endtime="20201029 12:47:04.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.465" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.464" endtime="20201029 12:47:04.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.467" level="INFO">VALUE: [0.00010102799999999953, 0.00010070800000000144, 0.00010069500000000134, 0.000100722000000001, 0.0001006809999999983, 0.000100722000000001, 0.00010076300000000024, 0.00010072199999999754, 0.00010069400000000187, 0.00010070799999999797, 0.0001006809999999983, 0.000100722000000001, 0.00010070800000000144, 0.00010073600000000058, 0.000100722000000001, 0.00010073600000000058, 0.00010075000000000014, 0.00010073700000000005, 0.00010067999999999883, 0.000100722000000001, 0.00010070799999999797, 0.00010075000000000014, 0.000100722000000001, 0.000100722000000001, 0.00010072300000000048, 0.00010072299999999701, 0.00010065300000000263, 0.00010070799999999797, 0.000100722000000001, 0.000100722000000001, 0.00010072299999999701, 0.00010072199999999754, 0.00010072300000000048, 0.000100722000000001, 0.00010072199999999754, 0.000100722000000001, 0.00010070800000000144, 0.00010072199999999754, 0.000100722000000001, 0.00010070800000000144, 0.000100722000000001, 0.00010069500000000134, 0.00010070800000000144, 0.0001007359999999971, 0.00010070900000000091, 0.00010065299999999916, 0.000100722000000001, 0.00010063900000000306, 0.00010072199999999754, 0.00010069400000000187]</msg>
<status status="PASS" starttime="20201029 12:47:04.466" endtime="20201029 12:47:04.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.461" endtime="20201029 12:47:04.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.472" endtime="20201029 12:47:04.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.471" endtime="20201029 12:47:04.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.470" endtime="20201029 12:47:04.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.112" endtime="20201029 12:47:04.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.111" endtime="20201029 12:47:04.493"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.503" endtime="20201029 12:47:04.522"></status>
</kw>
<msg timestamp="20201029 12:47:04.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.502" endtime="20201029 12:47:04.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.523" endtime="20201029 12:47:04.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.525" endtime="20201029 12:47:04.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.498" endtime="20201029 12:47:04.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.495" endtime="20201029 12:47:04.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.535" endtime="20201029 12:47:04.825"></status>
</kw>
<msg timestamp="20201029 12:47:04.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02324625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:04.533" endtime="20201029 12:47:04.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02324625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023347278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:04.829" endtime="20201029 12:47:04.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.837" endtime="20201029 12:47:04.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.531" endtime="20201029 12:47:04.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.529" endtime="20201029 12:47:04.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.843" level="INFO">${RESULT} = [{'diff': 0.00010102799999999953}, {'diff': 0.00010067999999999883}, {'diff': 0.000100722000000001}, {'diff': 0.00010070799999999797}, {'diff': 0.000100722000000001}, {'diff': 0.00010069400000000187},...</msg>
<status status="PASS" starttime="20201029 12:47:04.840" endtime="20201029 12:47:04.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.848" level="INFO">${ACCURACY} = {'diff': [0.00010102799999999953, 0.00010067999999999883, 0.000100722000000001, 0.00010070799999999797, 0.000100722000000001, 0.00010069400000000187, 0.000100722000000001, 0.0001006939999999984, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:04.844" endtime="20201029 12:47:04.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.852" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.851" endtime="20201029 12:47:04.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.854" level="INFO">VALUE: [0.00010102799999999953, 0.00010067999999999883, 0.000100722000000001, 0.00010070799999999797, 0.000100722000000001, 0.00010069400000000187, 0.000100722000000001, 0.0001006939999999984, 0.000100722000000001, 0.00010070799999999797, 0.00010070900000000091, 0.00010070799999999797, 0.00010072199999999754, 0.00010072300000000048, 0.00010070800000000144, 0.000100722000000001, 0.00010070799999999797, 0.0001006939999999984, 0.000100722000000001, 0.00010075000000000014, 0.00010070799999999797, 0.00010072300000000048, 0.000100722000000001, 0.00010070799999999797, 0.00010066599999999926, 0.00010070900000000091, 0.00010072199999999754, 0.00010070900000000091, 0.00010070799999999797, 0.00010073600000000058, 0.00010070900000000091, 0.00010070800000000144, 0.00010069499999999787, 0.0001006809999999983, 0.00010069400000000187, 0.00010073600000000058, 0.00010072199999999754, 0.000100722000000001, 0.00010073700000000005, 0.00010069400000000187, 0.00010070800000000144, 0.00010072300000000048, 0.00010069500000000134, 0.00010069500000000134, 0.00010069500000000134, 0.00010073600000000058, 0.0001006939999999984, 0.00010069500000000134, 0.00010072300000000048, 0.00010072199999999754]</msg>
<status status="PASS" starttime="20201029 12:47:04.853" endtime="20201029 12:47:04.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.848" endtime="20201029 12:47:04.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.860" endtime="20201029 12:47:04.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.858" endtime="20201029 12:47:04.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.856" endtime="20201029 12:47:04.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.494" endtime="20201029 12:47:04.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.493" endtime="20201029 12:47:04.881"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.889" endtime="20201029 12:47:04.908"></status>
</kw>
<msg timestamp="20201029 12:47:04.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.888" endtime="20201029 12:47:04.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.910" endtime="20201029 12:47:04.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.912" endtime="20201029 12:47:04.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.885" endtime="20201029 12:47:04.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.883" endtime="20201029 12:47:04.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.921" endtime="20201029 12:47:05.207"></status>
</kw>
<msg timestamp="20201029 12:47:05.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.920" endtime="20201029 12:47:05.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.211" endtime="20201029 12:47:05.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.219" endtime="20201029 12:47:05.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.917" endtime="20201029 12:47:05.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.916" endtime="20201029 12:47:05.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.226" level="INFO">${RESULT} = [{'diff': 0.00010101399999999996}, {'diff': 0.00010073600000000058}, {'diff': 0.0001007359999999971}, {'diff': 0.000100722000000001}, {'diff': 0.00010070799999999797}, {'diff': 0.00010077799999999928}...</msg>
<status status="PASS" starttime="20201029 12:47:05.223" endtime="20201029 12:47:05.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.230" level="INFO">${ACCURACY} = {'diff': [0.00010101399999999996, 0.00010073600000000058, 0.0001007359999999971, 0.000100722000000001, 0.00010070799999999797, 0.00010077799999999928, 0.0001006939999999984, 0.000100722000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:05.227" endtime="20201029 12:47:05.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.234" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.233" endtime="20201029 12:47:05.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.237" level="INFO">VALUE: [0.00010101399999999996, 0.00010073600000000058, 0.0001007359999999971, 0.000100722000000001, 0.00010070799999999797, 0.00010077799999999928, 0.0001006939999999984, 0.000100722000000001, 0.00010075000000000014, 0.00010070900000000091, 0.00010070800000000144, 0.00010075000000000014, 0.00010073600000000058, 0.000100722000000001, 0.000100722000000001, 0.0001007359999999971, 0.000100722000000001, 0.00010077799999999928, 0.00010067999999999883, 0.00010070900000000091, 0.00010072300000000048, 0.000100722000000001, 0.00010065299999999916, 0.00010069499999999787, 0.0001006939999999984, 0.0001007359999999971, 0.00010073600000000058, 0.00010070900000000091, 0.00010070800000000144, 0.000100722000000001, 0.00010072300000000048, 0.000100722000000001, 0.00010070800000000144, 0.00010072199999999754, 0.00010072199999999754, 0.000100722000000001, 0.00010073600000000058, 0.00010070799999999797, 0.000100722000000001, 0.00010075000000000014, 0.0001006939999999984, 0.00010075000000000014, 0.00010079099999999938, 0.0001006939999999984, 0.000100722000000001, 0.000100722000000001, 0.00010070900000000091, 0.00010072199999999754, 0.00010077799999999928, 0.00010080599999999842]</msg>
<status status="PASS" starttime="20201029 12:47:05.235" endtime="20201029 12:47:05.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.231" endtime="20201029 12:47:05.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.243" endtime="20201029 12:47:05.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.241" endtime="20201029 12:47:05.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.240" endtime="20201029 12:47:05.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.881" endtime="20201029 12:47:05.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.881" endtime="20201029 12:47:05.263"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.272" endtime="20201029 12:47:05.290"></status>
</kw>
<msg timestamp="20201029 12:47:05.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.270" endtime="20201029 12:47:05.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.292" endtime="20201029 12:47:05.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.294" endtime="20201029 12:47:05.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.268" endtime="20201029 12:47:05.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.266" endtime="20201029 12:47:05.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.303" endtime="20201029 12:47:05.590"></status>
</kw>
<msg timestamp="20201029 12:47:05.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021593667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.302" endtime="20201029 12:47:05.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021593667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.596" endtime="20201029 12:47:05.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.606" endtime="20201029 12:47:05.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.299" endtime="20201029 12:47:05.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.297" endtime="20201029 12:47:05.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.616" level="INFO">${RESULT} = [{'diff': 0.00010102700000000006}, {'diff': 0.000100722000000001}, {'diff': 0.00010073600000000058}, {'diff': 0.00010077799999999928}, {'diff': 0.000100722000000001}, {'diff': 0.00010075000000000014},...</msg>
<status status="PASS" starttime="20201029 12:47:05.611" endtime="20201029 12:47:05.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.623" level="INFO">${ACCURACY} = {'diff': [0.00010102700000000006, 0.000100722000000001, 0.00010073600000000058, 0.00010077799999999928, 0.000100722000000001, 0.00010075000000000014, 0.00010070800000000144, 0.00010073600000000058, 0....</msg>
<status status="PASS" starttime="20201029 12:47:05.617" endtime="20201029 12:47:05.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.629" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.628" endtime="20201029 12:47:05.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.633" level="INFO">VALUE: [0.00010102700000000006, 0.000100722000000001, 0.00010073600000000058, 0.00010077799999999928, 0.000100722000000001, 0.00010075000000000014, 0.00010070800000000144, 0.00010073600000000058, 0.00010073600000000058, 0.0001006939999999984, 0.00010073700000000005, 0.00010070799999999797, 0.00010072199999999754, 0.000100722000000001, 0.000100722000000001, 0.00010070799999999797, 0.00010075000000000014, 0.00010067999999999883, 0.00010070900000000091, 0.00010072199999999754, 0.00010072300000000048, 0.00010076399999999971, 0.00010070900000000091, 0.00010075000000000014, 0.000100722000000001, 0.0001006809999999983, 0.00010072199999999754, 0.0001007359999999971, 0.00010070800000000144, 0.00010072199999999754, 0.00010076399999999971, 0.00010070899999999744, 0.00010068100000000177, 0.00010069500000000134, 0.00010070799999999797, 0.00010070900000000091, 0.00010073600000000058, 0.000100722000000001, 0.00010070900000000091, 0.00010070800000000144, 0.00010070800000000144, 0.000100722000000001, 0.000100722000000001, 0.00010070800000000144, 0.00010072199999999754, 0.00010070900000000091, 0.000100722000000001, 0.00010070800000000144, 0.00010070799999999797, 0.00010070800000000144]</msg>
<status status="PASS" starttime="20201029 12:47:05.631" endtime="20201029 12:47:05.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.624" endtime="20201029 12:47:05.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.680" endtime="20201029 12:47:05.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.678" endtime="20201029 12:47:05.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.677" endtime="20201029 12:47:05.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.264" endtime="20201029 12:47:05.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.264" endtime="20201029 12:47:05.701"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.709" endtime="20201029 12:47:05.728"></status>
</kw>
<msg timestamp="20201029 12:47:05.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.708" endtime="20201029 12:47:05.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.729" endtime="20201029 12:47:05.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.732" endtime="20201029 12:47:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.705" endtime="20201029 12:47:05.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.703" endtime="20201029 12:47:05.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.741" endtime="20201029 12:47:06.028"></status>
</kw>
<msg timestamp="20201029 12:47:06.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.739" endtime="20201029 12:47:06.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.032" endtime="20201029 12:47:06.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.040" endtime="20201029 12:47:06.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.736" endtime="20201029 12:47:06.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.735" endtime="20201029 12:47:06.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.046" level="INFO">${RESULT} = [{'diff': 0.00010104099999999963}, {'diff': 0.00010097300000000073}, {'diff': 0.00010077799999999928}, {'diff': 0.00010081899999999852}, {'diff': 0.00010070800000000144}, {'diff': 0.000100693999999998...</msg>
<status status="PASS" starttime="20201029 12:47:06.043" endtime="20201029 12:47:06.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.050" level="INFO">${ACCURACY} = {'diff': [0.00010104099999999963, 0.00010097300000000073, 0.00010077799999999928, 0.00010081899999999852, 0.00010070800000000144, 0.0001006939999999984, 0.0001006939999999984, 0.00010076399999999971, ...</msg>
<status status="PASS" starttime="20201029 12:47:06.047" endtime="20201029 12:47:06.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.055" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.054" endtime="20201029 12:47:06.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.057" level="INFO">VALUE: [0.00010104099999999963, 0.00010097300000000073, 0.00010077799999999928, 0.00010081899999999852, 0.00010070800000000144, 0.0001006939999999984, 0.0001006939999999984, 0.00010076399999999971, 0.00010070799999999797, 0.00010072199999999754, 0.00010070900000000091, 0.00010083300000000156, 0.00010075000000000014, 0.00010076399999999971, 0.00010095800000000169, 0.00010095800000000169, 0.00010088899999999984, 0.00010084699999999766, 0.00010077800000000275, 0.00010077699999999981, 0.0001006939999999984, 0.00010070900000000091, 0.00010091600000000298, 0.00010069500000000134, 0.00010079199999999885, 0.00010077799999999928, 0.00010068100000000177, 0.00010082000000000146, 0.000100722000000001, 0.00010077799999999928, 0.00010075000000000014, 0.00010077799999999928, 0.00010095799999999822, 0.00010075000000000014, 0.0001006800000000023, 0.00010073600000000058, 0.00010070900000000091, 0.000100722000000001, 0.00010077799999999928, 0.0001006809999999983, 0.00010079199999999885, 0.00010070800000000144, 0.0001006939999999984, 0.00010088899999999984, 0.00010092999999999908, 0.00010075000000000014, 0.00010090199999999994, 0.00010073600000000058, 0.00010077799999999928, 0.0001008060000000019]</msg>
<status status="PASS" starttime="20201029 12:47:06.056" endtime="20201029 12:47:06.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.051" endtime="20201029 12:47:06.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.062" endtime="20201029 12:47:06.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.061" endtime="20201029 12:47:06.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.059" endtime="20201029 12:47:06.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.702" endtime="20201029 12:47:06.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.701" endtime="20201029 12:47:06.083"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.091" endtime="20201029 12:47:06.111"></status>
</kw>
<msg timestamp="20201029 12:47:06.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.090" endtime="20201029 12:47:06.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.113" endtime="20201029 12:47:06.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.115" endtime="20201029 12:47:06.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.087" endtime="20201029 12:47:06.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.085" endtime="20201029 12:47:06.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.124" endtime="20201029 12:47:06.409"></status>
</kw>
<msg timestamp="20201029 12:47:06.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.123" endtime="20201029 12:47:06.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.413" endtime="20201029 12:47:06.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.421" endtime="20201029 12:47:06.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.120" endtime="20201029 12:47:06.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.119" endtime="20201029 12:47:06.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.428" level="INFO">${RESULT} = [{'diff': 0.00011630600000000005}, {'diff': 0.00011612500000000164}, {'diff': 0.0001011670000000027}, {'diff': 0.00011595899999999881}, {'diff': 0.00011615300000000078}, {'diff': 0.0001161389999999977...</msg>
<status status="PASS" starttime="20201029 12:47:06.425" endtime="20201029 12:47:06.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.432" level="INFO">${ACCURACY} = {'diff': [0.00011630600000000005, 0.00011612500000000164, 0.0001011670000000027, 0.00011595899999999881, 0.00011615300000000078, 0.00011613899999999774, 0.00011612499999999817, 0.00011620799999999959,...</msg>
<status status="PASS" starttime="20201029 12:47:06.429" endtime="20201029 12:47:06.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.436" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.435" endtime="20201029 12:47:06.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.439" level="INFO">VALUE: [0.00011630600000000005, 0.00011612500000000164, 0.0001011670000000027, 0.00011595899999999881, 0.00011615300000000078, 0.00011613899999999774, 0.00011612499999999817, 0.00011620799999999959, 0.00011616700000000035, 0.00011615300000000078, 0.00011615300000000078, 0.00011615200000000131, 0.00010116599999999976, 0.00011597199999999891, 0.00011616700000000035, 0.00011615199999999784, 0.00011615300000000078, 0.00010113900000000009, 0.00011595799999999934, 0.00010115300000000313, 0.00011597199999999891, 0.0001160689999999999, 0.00011615300000000078, 0.00010115299999999966, 0.00011594400000000324, 0.00011615199999999784, 0.00011616700000000035, 0.0001161109999999986, 0.00011612500000000164, 0.00011613899999999774, 0.00011613899999999774, 0.00011602799999999719, 0.0001161109999999986, 0.00011615300000000078, 0.00011612499999999817, 0.00010116699999999923, 0.00011593099999999967, 0.00011622200000000263, 0.00011602700000000118, 0.00011615200000000131, 0.00011613900000000121, 0.00011622200000000263, 0.00011615300000000078, 0.00011615300000000078, 0.00011613900000000121, 0.00011608300000000293, 0.00011612499999999817, 0.00011608399999999894, 0.00011615299999999731, 0.00011615199999999784]</msg>
<status status="PASS" starttime="20201029 12:47:06.437" endtime="20201029 12:47:06.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.433" endtime="20201029 12:47:06.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.445" endtime="20201029 12:47:06.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.443" endtime="20201029 12:47:06.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.442" endtime="20201029 12:47:06.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.084" endtime="20201029 12:47:06.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.083" endtime="20201029 12:47:06.465"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.474" endtime="20201029 12:47:06.493"></status>
</kw>
<msg timestamp="20201029 12:47:06.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.472" endtime="20201029 12:47:06.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.494" endtime="20201029 12:47:06.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.497" endtime="20201029 12:47:06.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.470" endtime="20201029 12:47:06.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.468" endtime="20201029 12:47:06.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.506" endtime="20201029 12:47:06.791"></status>
</kw>
<msg timestamp="20201029 12:47:06.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.504" endtime="20201029 12:47:06.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.796" endtime="20201029 12:47:06.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.804" endtime="20201029 12:47:06.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.502" endtime="20201029 12:47:06.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.500" endtime="20201029 12:47:06.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.810" level="INFO">${RESULT} = [{'diff': 0.00011634699999999928}, {'diff': 0.00011613899999999774}, {'diff': 0.00011616700000000035}, {'diff': 0.00011616600000000088}, {'diff': 0.00011609799999999851}, {'diff': 0.000116180000000000...</msg>
<status status="PASS" starttime="20201029 12:47:06.807" endtime="20201029 12:47:06.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.815" level="INFO">${ACCURACY} = {'diff': [0.00011634699999999928, 0.00011613899999999774, 0.00011616700000000035, 0.00011616600000000088, 0.00011609799999999851, 0.00011618000000000045, 0.00011615300000000078, 0.00011616700000000035...</msg>
<status status="PASS" starttime="20201029 12:47:06.811" endtime="20201029 12:47:06.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.819" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.818" endtime="20201029 12:47:06.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.822" level="INFO">VALUE: [0.00011634699999999928, 0.00011613899999999774, 0.00011616700000000035, 0.00011616600000000088, 0.00011609799999999851, 0.00011618000000000045, 0.00011615300000000078, 0.00011616700000000035, 0.00011615299999999731, 0.00011612500000000164, 0.00011616700000000035, 0.00011613899999999774, 0.00011616700000000035, 0.00011615300000000078, 0.00011616700000000035, 0.00011615300000000078, 0.00011615199999999784, 0.00011616600000000088, 0.00011615300000000078, 0.00011615300000000078, 0.00011619400000000002, 0.00011615300000000078, 0.00011616700000000035, 0.00011613900000000121, 0.00011613900000000121, 0.00011613899999999774, 0.00011613900000000121, 0.00011613900000000121, 0.00011615300000000078, 0.00011608299999999946, 0.00011615300000000078, 0.00011622200000000263, 0.00011613900000000121, 0.00011618000000000045, 0.00011616700000000035, 0.00011616600000000088, 0.00011616700000000035, 0.00011613900000000121, 0.00011615300000000078, 0.00011615299999999731, 0.00011613899999999774, 0.00011613899999999774, 0.00011616600000000088, 0.00011615300000000078, 0.00011615200000000131, 0.00011618000000000045, 0.00011613800000000174, 0.00011615300000000078, 0.00011612499999999817, 0.00011613900000000121]</msg>
<status status="PASS" starttime="20201029 12:47:06.821" endtime="20201029 12:47:06.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.816" endtime="20201029 12:47:06.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.827" endtime="20201029 12:47:06.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.825" endtime="20201029 12:47:06.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.824" endtime="20201029 12:47:06.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.466" endtime="20201029 12:47:06.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.466" endtime="20201029 12:47:06.848"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.856" endtime="20201029 12:47:06.875"></status>
</kw>
<msg timestamp="20201029 12:47:06.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.855" endtime="20201029 12:47:06.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.877" endtime="20201029 12:47:06.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.879" endtime="20201029 12:47:06.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.852" endtime="20201029 12:47:06.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.850" endtime="20201029 12:47:06.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.889" endtime="20201029 12:47:07.175"></status>
</kw>
<msg timestamp="20201029 12:47:07.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.887" endtime="20201029 12:47:07.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.180" endtime="20201029 12:47:07.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.188" endtime="20201029 12:47:07.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.884" endtime="20201029 12:47:07.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.882" endtime="20201029 12:47:07.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.194" level="INFO">${RESULT} = [{'diff': 0.00011636100000000232}, {'diff': 0.00011616599999999741}, {'diff': 0.00011616700000000035}, {'diff': 0.00011613899999999774}, {'diff': 0.00011608399999999894}, {'diff': 0.000116153000000000...</msg>
<status status="PASS" starttime="20201029 12:47:07.191" endtime="20201029 12:47:07.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.198" level="INFO">${ACCURACY} = {'diff': [0.00011636100000000232, 0.00011616599999999741, 0.00011616700000000035, 0.00011613899999999774, 0.00011608399999999894, 0.00011615300000000078, 0.00011616699999999688, 0.00011609699999999903...</msg>
<status status="PASS" starttime="20201029 12:47:07.195" endtime="20201029 12:47:07.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.203" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.202" endtime="20201029 12:47:07.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.205" level="INFO">VALUE: [0.00011636100000000232, 0.00011616599999999741, 0.00011616700000000035, 0.00011613899999999774, 0.00011608399999999894, 0.00011615300000000078, 0.00011616699999999688, 0.00011609699999999903, 0.00011615300000000078, 0.00011616700000000035, 0.00011616600000000088, 0.00011616599999999741, 0.00011615300000000078, 0.00011613900000000121, 0.0001161109999999986, 0.00011615299999999731, 0.00011622199999999916, 0.00011613900000000121, 0.00011615300000000078, 0.00011613900000000121, 0.00011615200000000131, 0.00011611100000000207, 0.00011615299999999731, 0.00011616599999999741, 0.00011613900000000121, 0.00011616699999999688, 0.00011616700000000035, 0.00011613899999999774, 0.00011612499999999817, 0.00011616699999999688, 0.00011615199999999784, 0.00011613900000000121, 0.00011613900000000121, 0.00011612499999999817, 0.00011612500000000164, 0.00011613900000000121, 0.00011618099999999992, 0.00011616700000000035, 0.00011618099999999992, 0.00011613799999999827, 0.00011616700000000035, 0.00011615200000000131, 0.00011616700000000035, 0.00011613900000000121, 0.00011612500000000164, 0.00011613899999999774, 0.00011613899999999774, 0.00011616700000000035, 0.00011615300000000078, 0.00011615299999999731]</msg>
<status status="PASS" starttime="20201029 12:47:07.204" endtime="20201029 12:47:07.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.199" endtime="20201029 12:47:07.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.210" endtime="20201029 12:47:07.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.209" endtime="20201029 12:47:07.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.208" endtime="20201029 12:47:07.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.849" endtime="20201029 12:47:07.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.848" endtime="20201029 12:47:07.231"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.239" endtime="20201029 12:47:07.259"></status>
</kw>
<msg timestamp="20201029 12:47:07.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.238" endtime="20201029 12:47:07.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.261" endtime="20201029 12:47:07.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.263" endtime="20201029 12:47:07.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.235" endtime="20201029 12:47:07.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.233" endtime="20201029 12:47:07.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.272" endtime="20201029 12:47:07.558"></status>
</kw>
<msg timestamp="20201029 12:47:07.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.271" endtime="20201029 12:47:07.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.562" endtime="20201029 12:47:07.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.570" endtime="20201029 12:47:07.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.268" endtime="20201029 12:47:07.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.266" endtime="20201029 12:47:07.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.576" level="INFO">${RESULT} = [{'diff': 0.00011631900000000014}, {'diff': 0.00011616700000000035}, {'diff': 0.00011616699999999688}, {'diff': 0.00011615299999999731}, {'diff': 0.00011613900000000121}, {'diff': 0.000116153000000000...</msg>
<status status="PASS" starttime="20201029 12:47:07.573" endtime="20201029 12:47:07.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.580" level="INFO">${ACCURACY} = {'diff': [0.00011631900000000014, 0.00011616700000000035, 0.00011616699999999688, 0.00011615299999999731, 0.00011613900000000121, 0.00011615300000000078, 0.00011615300000000078, 0.00011612499999999817...</msg>
<status status="PASS" starttime="20201029 12:47:07.577" endtime="20201029 12:47:07.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.585" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.584" endtime="20201029 12:47:07.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.588" level="INFO">VALUE: [0.00011631900000000014, 0.00011616700000000035, 0.00011616699999999688, 0.00011615299999999731, 0.00011613900000000121, 0.00011615300000000078, 0.00011615300000000078, 0.00011612499999999817, 0.00011616700000000035, 0.00011615300000000078, 0.00011616600000000088, 0.00011616700000000035, 0.00011615200000000131, 0.00011615300000000078, 0.00011615200000000131, 0.00011612499999999817, 0.00011616600000000088, 0.00011616700000000035, 0.00011616699999999688, 0.00011618000000000045, 0.00011616700000000035, 0.00011615300000000078, 0.00011615200000000131, 0.00011615299999999731, 0.00011616700000000035, 0.00011613899999999774, 0.00011620899999999906, 0.00011619499999999949, 0.00011615300000000078, 0.00011620799999999959, 0.00011615300000000078, 0.00011616700000000035, 0.00011612499999999817, 0.00011615300000000078, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011613900000000121, 0.00011615300000000078, 0.00011619499999999949, 0.00011613900000000121, 0.00011616599999999741, 0.00011618000000000045, 0.00011615299999999731, 0.00011613900000000121, 0.00011618000000000045, 0.00011615300000000078, 0.00011616600000000088, 0.00011615299999999731, 0.00011615300000000078]</msg>
<status status="PASS" starttime="20201029 12:47:07.586" endtime="20201029 12:47:07.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.581" endtime="20201029 12:47:07.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.593" endtime="20201029 12:47:07.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.591" endtime="20201029 12:47:07.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.590" endtime="20201029 12:47:07.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.232" endtime="20201029 12:47:07.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.231" endtime="20201029 12:47:07.614"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.622" endtime="20201029 12:47:07.641"></status>
</kw>
<msg timestamp="20201029 12:47:07.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.621" endtime="20201029 12:47:07.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.642" endtime="20201029 12:47:07.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.645" endtime="20201029 12:47:07.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.618" endtime="20201029 12:47:07.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.616" endtime="20201029 12:47:07.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.654" endtime="20201029 12:47:07.940"></status>
</kw>
<msg timestamp="20201029 12:47:07.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.653" endtime="20201029 12:47:07.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021666222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.945" endtime="20201029 12:47:07.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.955" endtime="20201029 12:47:07.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.650" endtime="20201029 12:47:07.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.648" endtime="20201029 12:47:07.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.964" level="INFO">${RESULT} = [{'diff': 0.00011636100000000232}, {'diff': 0.00011613900000000121}, {'diff': 0.00011622199999999916}, {'diff': 0.00011615199999999784}, {'diff': 0.00011615199999999784}, {'diff': 0.000116153000000000...</msg>
<status status="PASS" starttime="20201029 12:47:07.960" endtime="20201029 12:47:07.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.971" level="INFO">${ACCURACY} = {'diff': [0.00011636100000000232, 0.00011613900000000121, 0.00011622199999999916, 0.00011615199999999784, 0.00011615199999999784, 0.00011615300000000078, 0.00011618000000000045, 0.00011615300000000078...</msg>
<status status="PASS" starttime="20201029 12:47:07.966" endtime="20201029 12:47:07.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.976" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.975" endtime="20201029 12:47:07.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.979" level="INFO">VALUE: [0.00011636100000000232, 0.00011613900000000121, 0.00011622199999999916, 0.00011615199999999784, 0.00011615199999999784, 0.00011615300000000078, 0.00011618000000000045, 0.00011615300000000078, 0.00011615300000000078, 0.00011618099999999992, 0.00011608399999999894, 0.00011616700000000035, 0.00011613799999999827, 0.00011619400000000002, 0.00011615300000000078, 0.00011616700000000035, 0.00011615200000000131, 0.00011612499999999817, 0.00011618000000000045, 0.00011615300000000078, 0.00011619499999999949, 0.00011613899999999774, 0.00011616600000000088, 0.00011615300000000078, 0.00011615300000000078, 0.00011615300000000078, 0.0001161109999999986, 0.00011618099999999992, 0.00011615300000000078, 0.00011615300000000078, 0.00011616600000000088, 0.00011612499999999817, 0.00011615300000000078, 0.00011618099999999992, 0.00011613900000000121, 0.00011616700000000035, 0.00011613900000000121, 0.00011615199999999784, 0.00011622200000000263, 0.00011615300000000078, 0.00011612499999999817, 0.00011613900000000121, 0.00011615300000000078, 0.00011620899999999906, 0.00011613900000000121, 0.00011619400000000002, 0.00011615300000000078, 0.0001160689999999999, 0.00011615300000000078, 0.00011612499999999817]</msg>
<status status="PASS" starttime="20201029 12:47:07.977" endtime="20201029 12:47:07.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.972" endtime="20201029 12:47:07.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.984" endtime="20201029 12:47:08.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.982" endtime="20201029 12:47:08.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.981" endtime="20201029 12:47:08.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.614" endtime="20201029 12:47:08.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.614" endtime="20201029 12:47:08.004"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.013" endtime="20201029 12:47:08.032"></status>
</kw>
<msg timestamp="20201029 12:47:08.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.012" endtime="20201029 12:47:08.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.034" endtime="20201029 12:47:08.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.036" endtime="20201029 12:47:08.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.009" endtime="20201029 12:47:08.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.007" endtime="20201029 12:47:08.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.045" endtime="20201029 12:47:08.333"></status>
</kw>
<msg timestamp="20201029 12:47:08.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.043" endtime="20201029 12:47:08.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.337" endtime="20201029 12:47:08.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.345" endtime="20201029 12:47:08.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.041" endtime="20201029 12:47:08.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.039" endtime="20201029 12:47:08.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.351" level="INFO">${RESULT} = [{'diff': 0.00011634699999999928}, {'diff': 0.00011616700000000035}, {'diff': 0.00011615200000000131}, {'diff': 0.00011616700000000035}, {'diff': 0.00011615300000000078}, {'diff': 0.000116152000000001...</msg>
<status status="PASS" starttime="20201029 12:47:08.348" endtime="20201029 12:47:08.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.355" level="INFO">${ACCURACY} = {'diff': [0.00011634699999999928, 0.00011616700000000035, 0.00011615200000000131, 0.00011616700000000035, 0.00011615300000000078, 0.00011615200000000131, 0.00011618000000000045, 0.00011616600000000088...</msg>
<status status="PASS" starttime="20201029 12:47:08.352" endtime="20201029 12:47:08.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.360" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.359" endtime="20201029 12:47:08.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.362" level="INFO">VALUE: [0.00011634699999999928, 0.00011616700000000035, 0.00011615200000000131, 0.00011616700000000035, 0.00011615300000000078, 0.00011615200000000131, 0.00011618000000000045, 0.00011616600000000088, 0.00011615300000000078, 0.00011613900000000121, 0.00011620799999999959, 0.00011616700000000035, 0.00011619399999999655, 0.00011616700000000035, 0.00011615199999999784, 0.00011616700000000035, 0.00011615300000000078, 0.00011616700000000035, 0.00011618000000000045, 0.00011613799999999827, 0.00011616600000000088, 0.00011616700000000035, 0.00011616700000000035, 0.00011620799999999959, 0.0001161109999999986, 0.00011619499999999949, 0.00011616700000000035, 0.00011619499999999949, 0.00011616700000000035, 0.00011616600000000088, 0.00011613899999999774, 0.0001160689999999999, 0.00011613900000000121, 0.00011619400000000002, 0.00011615300000000078, 0.00011620800000000306, 0.00011615300000000078, 0.00011612499999999817, 0.00011615299999999731, 0.00011615200000000131, 0.0001161109999999986, 0.00011619499999999949, 0.00011613900000000121, 0.00011613900000000121, 0.00011613899999999774, 0.00011615300000000078, 0.00011615200000000131, 0.00011616700000000035, 0.00011616700000000035, 0.0001161109999999986]</msg>
<status status="PASS" starttime="20201029 12:47:08.361" endtime="20201029 12:47:08.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.356" endtime="20201029 12:47:08.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.367" endtime="20201029 12:47:08.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.365" endtime="20201029 12:47:08.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.364" endtime="20201029 12:47:08.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.005" endtime="20201029 12:47:08.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.005" endtime="20201029 12:47:08.388"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.396" endtime="20201029 12:47:08.416"></status>
</kw>
<msg timestamp="20201029 12:47:08.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.395" endtime="20201029 12:47:08.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.418" endtime="20201029 12:47:08.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.420" endtime="20201029 12:47:08.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.392" endtime="20201029 12:47:08.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.390" endtime="20201029 12:47:08.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.429" endtime="20201029 12:47:08.715"></status>
</kw>
<msg timestamp="20201029 12:47:08.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:08.428" endtime="20201029 12:47:08.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:08.720" endtime="20201029 12:47:08.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.728" endtime="20201029 12:47:08.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.425" endtime="20201029 12:47:08.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.423" endtime="20201029 12:47:08.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.734" level="INFO">${RESULT} = [{'diff': 0.00011638900000000146}, {'diff': 0.00011616700000000035}, {'diff': 0.00011616600000000088}, {'diff': 0.00011613900000000121}, {'diff': 0.00011619400000000002}, {'diff': 0.000116153000000000...</msg>
<status status="PASS" starttime="20201029 12:47:08.731" endtime="20201029 12:47:08.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.738" level="INFO">${ACCURACY} = {'diff': [0.00011638900000000146, 0.00011616700000000035, 0.00011616600000000088, 0.00011613900000000121, 0.00011619400000000002, 0.00011615300000000078, 0.00011616600000000088, 0.00011615300000000078...</msg>
<status status="PASS" starttime="20201029 12:47:08.735" endtime="20201029 12:47:08.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.742" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.741" endtime="20201029 12:47:08.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.745" level="INFO">VALUE: [0.00011638900000000146, 0.00011616700000000035, 0.00011616600000000088, 0.00011613900000000121, 0.00011619400000000002, 0.00011615300000000078, 0.00011616600000000088, 0.00011615300000000078, 0.00011619400000000002, 0.00011613800000000174, 0.00011616700000000035, 0.00011620800000000306, 0.00011618099999999992, 0.00011620799999999959, 0.00011613900000000121, 0.00011616599999999741, 0.00011616700000000035, 0.00011613900000000121, 0.00011608299999999946, 0.0001161109999999986, 0.00011613800000000174, 0.00011611199999999808, 0.00011615300000000078, 0.00011615300000000078, 0.00011615300000000078, 0.00011618099999999992, 0.00011615300000000078, 0.00011619499999999949, 0.00011616700000000035, 0.00011616700000000035, 0.00011618000000000045, 0.00011615200000000131, 0.00011620899999999906, 0.00011616600000000088, 0.00011618000000000045, 0.00011619400000000002, 0.00011615200000000131, 0.00011616700000000035, 0.00011616700000000035, 0.00011616600000000088, 0.00011609699999999903, 0.00011620799999999959, 0.00011619500000000296, 0.00011613900000000121, 0.00011622200000000263, 0.00011609699999999903, 0.00011618000000000045, 0.00011618000000000045, 0.00011615300000000078, 0.00011619499999999949]</msg>
<status status="PASS" starttime="20201029 12:47:08.743" endtime="20201029 12:47:08.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.739" endtime="20201029 12:47:08.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.751" endtime="20201029 12:47:08.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.749" endtime="20201029 12:47:08.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.748" endtime="20201029 12:47:08.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.389" endtime="20201029 12:47:08.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.388" endtime="20201029 12:47:08.771"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.780" endtime="20201029 12:47:08.799"></status>
</kw>
<msg timestamp="20201029 12:47:08.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.778" endtime="20201029 12:47:08.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.801" endtime="20201029 12:47:08.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.803" endtime="20201029 12:47:08.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.776" endtime="20201029 12:47:08.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.774" endtime="20201029 12:47:08.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.812" endtime="20201029 12:47:09.098"></status>
</kw>
<msg timestamp="20201029 12:47:09.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.810" endtime="20201029 12:47:09.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.102" endtime="20201029 12:47:09.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.110" endtime="20201029 12:47:09.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.808" endtime="20201029 12:47:09.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.806" endtime="20201029 12:47:09.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.116" level="INFO">${RESULT} = [{'diff': 0.00011631900000000014}, {'diff': 0.00011615300000000078}, {'diff': 0.00011608299999999946}, {'diff': 0.00011613899999999774}, {'diff': 0.00011611100000000207}, {'diff': 0.000116083999999998...</msg>
<status status="PASS" starttime="20201029 12:47:09.113" endtime="20201029 12:47:09.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.121" level="INFO">${ACCURACY} = {'diff': [0.00011631900000000014, 0.00011615300000000078, 0.00011608299999999946, 0.00011613899999999774, 0.00011611100000000207, 0.00011608399999999894, 0.00011616599999999741, 0.00011616700000000035...</msg>
<status status="PASS" starttime="20201029 12:47:09.118" endtime="20201029 12:47:09.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.126" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.125" endtime="20201029 12:47:09.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.128" level="INFO">VALUE: [0.00011631900000000014, 0.00011615300000000078, 0.00011608299999999946, 0.00011613899999999774, 0.00011611100000000207, 0.00011608399999999894, 0.00011616599999999741, 0.00011616700000000035, 0.00011619499999999949, 0.00011615299999999731, 0.00011616700000000035, 0.00011615300000000078, 0.00011616700000000035, 0.00011613900000000121, 0.00011616599999999741, 0.00011615299999999731, 0.00011613900000000121, 0.00011608300000000293, 0.00011615300000000078, 0.00011615199999999784, 0.00011620799999999959, 0.00011613899999999774, 0.00011615200000000131, 0.00011612499999999817, 0.00011612499999999817, 0.00011616700000000035, 0.00011616700000000035, 0.00011613900000000121, 0.00011619500000000296, 0.00011613899999999774, 0.00011615300000000078, 0.00011620799999999959, 0.00011615300000000078, 0.00011616700000000035, 0.00011620799999999959, 0.00011616700000000035, 0.00011616700000000035, 0.0001161109999999986, 0.00011615300000000078, 0.00011616700000000035, 0.00011615300000000078, 0.00011618100000000339, 0.00011613900000000121, 0.00011620799999999959, 0.00011618000000000045, 0.00011615300000000078, 0.00011615300000000078, 0.00011618099999999992, 0.00011615300000000078, 0.00011622299999999863]</msg>
<status status="PASS" starttime="20201029 12:47:09.127" endtime="20201029 12:47:09.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.122" endtime="20201029 12:47:09.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.133" endtime="20201029 12:47:09.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.132" endtime="20201029 12:47:09.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.131" endtime="20201029 12:47:09.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.772" endtime="20201029 12:47:09.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.772" endtime="20201029 12:47:09.154"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.162" endtime="20201029 12:47:09.181"></status>
</kw>
<msg timestamp="20201029 12:47:09.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.161" endtime="20201029 12:47:09.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.183" endtime="20201029 12:47:09.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.185" endtime="20201029 12:47:09.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.158" endtime="20201029 12:47:09.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.156" endtime="20201029 12:47:09.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.194" endtime="20201029 12:47:09.481"></status>
</kw>
<msg timestamp="20201029 12:47:09.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.193" endtime="20201029 12:47:09.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.485" endtime="20201029 12:47:09.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.493" endtime="20201029 12:47:09.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.190" endtime="20201029 12:47:09.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.188" endtime="20201029 12:47:09.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.500" level="INFO">${RESULT} = [{'diff': 0.000116291000000001}, {'diff': 0.00011615300000000078}, {'diff': 0.00011616700000000035}, {'diff': 0.00011615300000000078}, {'diff': 0.00011616700000000035}, {'diff': 0.00011615200000000131...</msg>
<status status="PASS" starttime="20201029 12:47:09.497" endtime="20201029 12:47:09.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.504" level="INFO">${ACCURACY} = {'diff': [0.000116291000000001, 0.00011615300000000078, 0.00011616700000000035, 0.00011615300000000078, 0.00011616700000000035, 0.00011615200000000131, 0.00011619400000000002, 0.00011615199999999784, ...</msg>
<status status="PASS" starttime="20201029 12:47:09.501" endtime="20201029 12:47:09.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.508" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.507" endtime="20201029 12:47:09.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.511" level="INFO">VALUE: [0.000116291000000001, 0.00011615300000000078, 0.00011616700000000035, 0.00011615300000000078, 0.00011616700000000035, 0.00011615200000000131, 0.00011619400000000002, 0.00011615199999999784, 0.00011619499999999949, 0.00011615299999999731, 0.00011616600000000088, 0.00011615300000000078, 0.00011616700000000035, 0.00011615200000000131, 0.00011616700000000035, 0.00011615300000000078, 0.00011616700000000035, 0.00011613900000000121, 0.00011616700000000035, 0.00011616699999999688, 0.00011615299999999731, 0.00011619400000000002, 0.00011616600000000088, 0.00011618099999999992, 0.00011615300000000078, 0.00011619400000000002, 0.00011616700000000035, 0.00011622199999999916, 0.00011613900000000121, 0.00011616700000000035, 0.00011619499999999949, 0.00011617999999999698, 0.00011616700000000035, 0.00011616700000000035, 0.00011618099999999992, 0.00011615300000000078, 0.00011618000000000045, 0.00011622199999999916, 0.00011618000000000045, 0.00011616700000000035, 0.00011616700000000035, 0.00011615300000000078, 0.00011618099999999992, 0.00011618099999999992, 0.00011618099999999992, 0.00011615299999999731, 0.00011616700000000035, 0.00011618099999999992, 0.00011620899999999906, 0.00011618099999999992]</msg>
<status status="PASS" starttime="20201029 12:47:09.509" endtime="20201029 12:47:09.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.505" endtime="20201029 12:47:09.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.516" endtime="20201029 12:47:09.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.514" endtime="20201029 12:47:09.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.513" endtime="20201029 12:47:09.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.155" endtime="20201029 12:47:09.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.154" endtime="20201029 12:47:09.537"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.545" endtime="20201029 12:47:09.566"></status>
</kw>
<msg timestamp="20201029 12:47:09.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.544" endtime="20201029 12:47:09.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.567" endtime="20201029 12:47:09.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.571" endtime="20201029 12:47:09.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.541" endtime="20201029 12:47:09.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.539" endtime="20201029 12:47:09.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.584" endtime="20201029 12:47:09.870"></status>
</kw>
<msg timestamp="20201029 12:47:09.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.582" endtime="20201029 12:47:09.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.874" endtime="20201029 12:47:09.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.882" endtime="20201029 12:47:09.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.579" endtime="20201029 12:47:09.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.576" endtime="20201029 12:47:09.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.889" level="INFO">${RESULT} = [{'diff': 0.00011636100000000232}, {'diff': 0.00011617999999999698}, {'diff': 0.00011620899999999906}, {'diff': 0.00011617999999999698}, {'diff': 0.00011619400000000002}, {'diff': 0.000116180999999999...</msg>
<status status="PASS" starttime="20201029 12:47:09.886" endtime="20201029 12:47:09.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.893" level="INFO">${ACCURACY} = {'diff': [0.00011636100000000232, 0.00011617999999999698, 0.00011620899999999906, 0.00011617999999999698, 0.00011619400000000002, 0.00011618099999999992, 0.00011620800000000306, 0.00011620799999999959...</msg>
<status status="PASS" starttime="20201029 12:47:09.890" endtime="20201029 12:47:09.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.897" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.896" endtime="20201029 12:47:09.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.900" level="INFO">VALUE: [0.00011636100000000232, 0.00011617999999999698, 0.00011620899999999906, 0.00011617999999999698, 0.00011619400000000002, 0.00011618099999999992, 0.00011620800000000306, 0.00011620799999999959, 0.00011618000000000045, 0.00011618000000000045, 0.00011618000000000045, 0.00011619400000000002, 0.00011618099999999992, 0.00011616700000000035, 0.0001161109999999986, 0.00011615199999999784, 0.00011618099999999992, 0.00011619499999999949, 0.00011616599999999741, 0.00011618099999999992, 0.00011616700000000035, 0.00011616700000000035, 0.00011618099999999992, 0.00011618000000000045, 0.00011620899999999906, 0.00011618000000000045, 0.00011615299999999731, 0.00011619500000000296, 0.00011618099999999992, 0.00011618000000000045, 0.00011623599999999873, 0.00011616700000000035, 0.00011617999999999698, 0.00011616700000000035, 0.00011616600000000088, 0.00011612500000000164, 0.00011615300000000078, 0.00011619499999999949, 0.00011618099999999992, 0.00011613899999999774, 0.00011618000000000045, 0.00011613899999999774, 0.00011616700000000035, 0.00011616699999999688, 0.00011617999999999698, 0.00011622199999999916, 0.00011618000000000045, 0.00011616700000000035, 0.00011618099999999992, 0.00011616700000000035]</msg>
<status status="PASS" starttime="20201029 12:47:09.899" endtime="20201029 12:47:09.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.894" endtime="20201029 12:47:09.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.906" endtime="20201029 12:47:09.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.904" endtime="20201029 12:47:09.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.903" endtime="20201029 12:47:09.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.538" endtime="20201029 12:47:09.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.537" endtime="20201029 12:47:09.926"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.935" endtime="20201029 12:47:09.954"></status>
</kw>
<msg timestamp="20201029 12:47:09.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.933" endtime="20201029 12:47:09.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.955" endtime="20201029 12:47:09.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.958" endtime="20201029 12:47:09.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.931" endtime="20201029 12:47:09.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.929" endtime="20201029 12:47:09.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.967" endtime="20201029 12:47:10.251"></status>
</kw>
<msg timestamp="20201029 12:47:10.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.965" endtime="20201029 12:47:10.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021752722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.256" endtime="20201029 12:47:10.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.264" endtime="20201029 12:47:10.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.963" endtime="20201029 12:47:10.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.961" endtime="20201029 12:47:10.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.270" level="INFO">${RESULT} = [{'diff': 0.00011636099999999885}, {'diff': 0.0001161109999999986}, {'diff': 0.00011618099999999992}, {'diff': 0.00011617999999999698}, {'diff': 0.00011616600000000088}, {'diff': 0.0001161940000000000...</msg>
<status status="PASS" starttime="20201029 12:47:10.267" endtime="20201029 12:47:10.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.275" level="INFO">${ACCURACY} = {'diff': [0.00011636099999999885, 0.0001161109999999986, 0.00011618099999999992, 0.00011617999999999698, 0.00011616600000000088, 0.00011619400000000002, 0.00011618000000000045, 0.00011618099999999992,...</msg>
<status status="PASS" starttime="20201029 12:47:10.271" endtime="20201029 12:47:10.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.279" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.278" endtime="20201029 12:47:10.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.282" level="INFO">VALUE: [0.00011636099999999885, 0.0001161109999999986, 0.00011618099999999992, 0.00011617999999999698, 0.00011616600000000088, 0.00011619400000000002, 0.00011618000000000045, 0.00011618099999999992, 0.00011618099999999992, 0.00011615300000000078, 0.00011620799999999959, 0.00011618099999999992, 0.00011618000000000045, 0.00011616700000000035, 0.00011618099999999992, 0.00011615200000000131, 0.00011620899999999906, 0.00011616599999999741, 0.00011618000000000045, 0.00011619500000000296, 0.00011619499999999949, 0.00011622199999999916, 0.00011618099999999992, 0.00011618000000000045, 0.00011618099999999992, 0.00011618099999999992, 0.00011616600000000088, 0.00011625000000000177, 0.00011619400000000002, 0.00011616599999999741, 0.00011618099999999992, 0.00011618099999999992, 0.00011616600000000088, 0.00011616700000000035, 0.00011618099999999992, 0.00011616599999999741, 0.00011619499999999949, 0.00011616700000000035, 0.00011613900000000121, 0.00011616699999999688, 0.00011619400000000002, 0.00011618099999999992, 0.00011616600000000088, 0.00011616599999999741, 0.00011615300000000078, 0.00011619400000000002, 0.00011620900000000253, 0.00011622199999999916, 0.00011618000000000045, 0.00011616699999999688]</msg>
<status status="PASS" starttime="20201029 12:47:10.281" endtime="20201029 12:47:10.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.276" endtime="20201029 12:47:10.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.287" endtime="20201029 12:47:10.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.285" endtime="20201029 12:47:10.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.284" endtime="20201029 12:47:10.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.927" endtime="20201029 12:47:10.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.927" endtime="20201029 12:47:10.308"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.316" endtime="20201029 12:47:10.335"></status>
</kw>
<msg timestamp="20201029 12:47:10.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.314" endtime="20201029 12:47:10.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.337" endtime="20201029 12:47:10.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.339" endtime="20201029 12:47:10.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.312" endtime="20201029 12:47:10.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.310" endtime="20201029 12:47:10.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.348" endtime="20201029 12:47:10.634"></status>
</kw>
<msg timestamp="20201029 12:47:10.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.346" endtime="20201029 12:47:10.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.638" endtime="20201029 12:47:10.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.646" endtime="20201029 12:47:10.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.344" endtime="20201029 12:47:10.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.342" endtime="20201029 12:47:10.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.653" level="INFO">${RESULT} = [{'diff': 0.00011636099999999885}, {'diff': 0.00011618000000000045}, {'diff': 0.00011613900000000121}, {'diff': 0.00011619400000000002}, {'diff': 0.00011620899999999906}, {'diff': 0.000116180999999999...</msg>
<status status="PASS" starttime="20201029 12:47:10.650" endtime="20201029 12:47:10.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.657" level="INFO">${ACCURACY} = {'diff': [0.00011636099999999885, 0.00011618000000000045, 0.00011613900000000121, 0.00011619400000000002, 0.00011620899999999906, 0.00011618099999999992, 0.00011618099999999992, 0.00011620899999999906...</msg>
<status status="PASS" starttime="20201029 12:47:10.654" endtime="20201029 12:47:10.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.662" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.660" endtime="20201029 12:47:10.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.664" level="INFO">VALUE: [0.00011636099999999885, 0.00011618000000000045, 0.00011613900000000121, 0.00011619400000000002, 0.00011620899999999906, 0.00011618099999999992, 0.00011618099999999992, 0.00011620899999999906, 0.00011615200000000131, 0.00011618000000000045, 0.00011619400000000002, 0.00011618099999999992, 0.00011616700000000035, 0.00011618099999999992, 0.00011619400000000002, 0.00011618000000000045, 0.00011616700000000035, 0.00011616700000000035, 0.00011618099999999992, 0.00011613900000000121, 0.00011622199999999916, 0.00011616600000000088, 0.00011625000000000177, 0.00011620799999999959, 0.00011616700000000035, 0.00011617999999999698, 0.00011616600000000088, 0.00011618099999999992, 0.00011619400000000002, 0.00011616700000000035, 0.00011615299999999731, 0.00011618099999999992, 0.00011611100000000207, 0.00011616700000000035, 0.00011618099999999992, 0.00011616600000000088, 0.00011618099999999992, 0.00011618099999999992, 0.00011618000000000045, 0.00011618099999999992, 0.00011619400000000002, 0.00011619400000000002, 0.00011618000000000045, 0.00011618000000000045, 0.00011620799999999959, 0.00011618000000000045, 0.00011616599999999741, 0.00011618099999999992, 0.00011612499999999817, 0.00011619400000000002]</msg>
<status status="PASS" starttime="20201029 12:47:10.663" endtime="20201029 12:47:10.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.658" endtime="20201029 12:47:10.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.677" endtime="20201029 12:47:10.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.675" endtime="20201029 12:47:10.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.674" endtime="20201029 12:47:10.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.308" endtime="20201029 12:47:10.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.308" endtime="20201029 12:47:10.698"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.707" endtime="20201029 12:47:10.726"></status>
</kw>
<msg timestamp="20201029 12:47:10.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.705" endtime="20201029 12:47:10.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.728" endtime="20201029 12:47:10.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.731" endtime="20201029 12:47:10.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.703" endtime="20201029 12:47:10.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.700" endtime="20201029 12:47:10.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.741" endtime="20201029 12:47:11.026"></status>
</kw>
<msg timestamp="20201029 12:47:11.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.739" endtime="20201029 12:47:11.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.030" endtime="20201029 12:47:11.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.038" endtime="20201029 12:47:11.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.736" endtime="20201029 12:47:11.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.734" endtime="20201029 12:47:11.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.045" level="INFO">${RESULT} = [{'diff': 0.00011627799999999744}, {'diff': 0.00011615300000000078}, {'diff': 0.00011615300000000078}, {'diff': 0.00011616700000000035}, {'diff': 0.00011618099999999992}, {'diff': 0.000116207999999999...</msg>
<status status="PASS" starttime="20201029 12:47:11.042" endtime="20201029 12:47:11.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.049" level="INFO">${ACCURACY} = {'diff': [0.00011627799999999744, 0.00011615300000000078, 0.00011615300000000078, 0.00011616700000000035, 0.00011618099999999992, 0.00011620799999999959, 0.00011618099999999992, 0.00011615200000000131...</msg>
<status status="PASS" starttime="20201029 12:47:11.046" endtime="20201029 12:47:11.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.053" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.052" endtime="20201029 12:47:11.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.057" level="INFO">VALUE: [0.00011627799999999744, 0.00011615300000000078, 0.00011615300000000078, 0.00011616700000000035, 0.00011618099999999992, 0.00011620799999999959, 0.00011618099999999992, 0.00011615200000000131, 0.00011616700000000035, 0.00011616700000000035, 0.00011616700000000035, 0.00011616700000000035, 0.00011613799999999827, 0.00011618000000000045, 0.00011616700000000035, 0.00011618099999999992, 0.00011615300000000078, 0.00011618099999999992, 0.00011613900000000121, 0.00011618000000000045, 0.00011613900000000121, 0.00011618099999999992, 0.00011615300000000078, 0.00011618099999999992, 0.00011613900000000121, 0.00011615199999999784, 0.00011618099999999992, 0.00011626399999999787, 0.00011618000000000045, 0.00011618099999999992, 0.00011620899999999906, 0.00011616700000000035, 0.00011619400000000002, 0.00011618000000000045, 0.00011616700000000035, 0.00011616599999999741, 0.00011616700000000035, 0.00011616599999999741, 0.00011615199999999784, 0.00011616599999999741, 0.0001161109999999986, 0.00011619400000000002, 0.00011616700000000035, 0.00011616600000000088, 0.00011619400000000002, 0.00011618000000000045, 0.00011619399999999655, 0.00011619500000000296, 0.00011620899999999906, 0.00011618099999999992]</msg>
<status status="PASS" starttime="20201029 12:47:11.055" endtime="20201029 12:47:11.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.050" endtime="20201029 12:47:11.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.062" endtime="20201029 12:47:11.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.060" endtime="20201029 12:47:11.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.059" endtime="20201029 12:47:11.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.699" endtime="20201029 12:47:11.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.698" endtime="20201029 12:47:11.082"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.091" endtime="20201029 12:47:11.110"></status>
</kw>
<msg timestamp="20201029 12:47:11.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.090" endtime="20201029 12:47:11.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.111" endtime="20201029 12:47:11.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.114" endtime="20201029 12:47:11.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.087" endtime="20201029 12:47:11.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.085" endtime="20201029 12:47:11.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.123" endtime="20201029 12:47:11.408"></status>
</kw>
<msg timestamp="20201029 12:47:11.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.121" endtime="20201029 12:47:11.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.412" endtime="20201029 12:47:11.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.421" endtime="20201029 12:47:11.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.119" endtime="20201029 12:47:11.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.117" endtime="20201029 12:47:11.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.427" level="INFO">${RESULT} = [{'diff': 0.00011636099999999885}, {'diff': 0.00011611100000000207}, {'diff': 0.00011616700000000035}, {'diff': 0.00011618000000000045}, {'diff': 0.00011613900000000121}, {'diff': 0.000116167000000000...</msg>
<status status="PASS" starttime="20201029 12:47:11.424" endtime="20201029 12:47:11.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.432" level="INFO">${ACCURACY} = {'diff': [0.00011636099999999885, 0.00011611100000000207, 0.00011616700000000035, 0.00011618000000000045, 0.00011613900000000121, 0.00011616700000000035, 0.00011616700000000035, 0.00011618000000000045...</msg>
<status status="PASS" starttime="20201029 12:47:11.428" endtime="20201029 12:47:11.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.438" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.436" endtime="20201029 12:47:11.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.441" level="INFO">VALUE: [0.00011636099999999885, 0.00011611100000000207, 0.00011616700000000035, 0.00011618000000000045, 0.00011613900000000121, 0.00011616700000000035, 0.00011616700000000035, 0.00011618000000000045, 0.00011615300000000078, 0.00011616699999999688, 0.00011615300000000078, 0.00011609799999999851, 0.00011618000000000045, 0.00011618099999999992, 0.00011619499999999949, 0.00011615300000000078, 0.00011615300000000078, 0.00011611100000000207, 0.00011622200000000263, 0.00011618099999999992, 0.00011612499999999817, 0.00011615300000000078, 0.00011616700000000035, 0.00011616700000000035, 0.00011615300000000078, 0.00011616699999999688, 0.00011616700000000035, 0.00011616700000000035, 0.00011618000000000045, 0.00011616600000000088, 0.00011616700000000035, 0.00011618099999999992, 0.00011616700000000035, 0.00011618000000000045, 0.00011613899999999774, 0.00011616700000000035, 0.00011618099999999992, 0.00011616600000000088, 0.00011616700000000035, 0.00011613800000000174, 0.00011616700000000035, 0.00011619400000000002, 0.00011616700000000035, 0.00011622299999999863, 0.00011616600000000088, 0.00011618099999999992, 0.00011618000000000045, 0.00011619500000000296, 0.00011622199999999916, 0.00011619400000000002]</msg>
<status status="PASS" starttime="20201029 12:47:11.439" endtime="20201029 12:47:11.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.433" endtime="20201029 12:47:11.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.448" endtime="20201029 12:47:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.446" endtime="20201029 12:47:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.444" endtime="20201029 12:47:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.083" endtime="20201029 12:47:11.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.083" endtime="20201029 12:47:11.470"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.479" endtime="20201029 12:47:11.498"></status>
</kw>
<msg timestamp="20201029 12:47:11.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.477" endtime="20201029 12:47:11.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.499" endtime="20201029 12:47:11.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.501" endtime="20201029 12:47:11.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.474" endtime="20201029 12:47:11.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.472" endtime="20201029 12:47:11.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.511" endtime="20201029 12:47:11.800"></status>
</kw>
<msg timestamp="20201029 12:47:11.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.509" endtime="20201029 12:47:11.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.804" endtime="20201029 12:47:11.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.812" endtime="20201029 12:47:11.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.506" endtime="20201029 12:47:11.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.505" endtime="20201029 12:47:11.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.819" level="INFO">${RESULT} = [{'diff': 0.00011636099999999885}, {'diff': 0.00011618000000000045}, {'diff': 0.00011616599999999741}, {'diff': 0.00011618099999999992}, {'diff': 0.00011615300000000078}, {'diff': 0.000116180999999999...</msg>
<status status="PASS" starttime="20201029 12:47:11.816" endtime="20201029 12:47:11.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.823" level="INFO">${ACCURACY} = {'diff': [0.00011636099999999885, 0.00011618000000000045, 0.00011616599999999741, 0.00011618099999999992, 0.00011615300000000078, 0.00011618099999999992, 0.00011616700000000035, 0.00011616700000000035...</msg>
<status status="PASS" starttime="20201029 12:47:11.820" endtime="20201029 12:47:11.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.827" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.826" endtime="20201029 12:47:11.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.830" level="INFO">VALUE: [0.00011636099999999885, 0.00011618000000000045, 0.00011616599999999741, 0.00011618099999999992, 0.00011615300000000078, 0.00011618099999999992, 0.00011616700000000035, 0.00011616700000000035, 0.00011609799999999851, 0.00011615299999999731, 0.00011615299999999731, 0.00011615300000000078, 0.00011619400000000002, 0.00011615300000000078, 0.00011618099999999992, 0.00011613900000000121, 0.00011616700000000035, 0.00011615299999999731, 0.00011615299999999731, 0.00011616600000000088, 0.00011616700000000035, 0.00011615300000000078, 0.00011616600000000088, 0.00011615199999999784, 0.00011619400000000002, 0.00011618099999999992, 0.0001162230000000021, 0.00011615300000000078, 0.00011613900000000121, 0.00011622199999999916, 0.00011618000000000045, 0.00011620900000000253, 0.00011618099999999992, 0.00011611200000000155, 0.00011618099999999992, 0.00011619400000000002, 0.00011616600000000088, 0.00011615199999999784, 0.00011615300000000078, 0.00011619400000000002, 0.00011616700000000035, 0.00011615200000000131, 0.00011618099999999992, 0.00011613899999999774, 0.00011617999999999698, 0.00011618000000000045, 0.00011615200000000131, 0.00011618099999999992, 0.00011617999999999698, 0.00011618099999999992]</msg>
<status status="PASS" starttime="20201029 12:47:11.828" endtime="20201029 12:47:11.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.824" endtime="20201029 12:47:11.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.835" endtime="20201029 12:47:11.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.833" endtime="20201029 12:47:11.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.832" endtime="20201029 12:47:11.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.471" endtime="20201029 12:47:11.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.470" endtime="20201029 12:47:11.855"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.864" endtime="20201029 12:47:11.884"></status>
</kw>
<msg timestamp="20201029 12:47:11.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.863" endtime="20201029 12:47:11.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.885" endtime="20201029 12:47:11.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.888" endtime="20201029 12:47:11.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.860" endtime="20201029 12:47:11.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.858" endtime="20201029 12:47:11.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.897" endtime="20201029 12:47:12.183"></status>
</kw>
<msg timestamp="20201029 12:47:12.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.895" endtime="20201029 12:47:12.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.187" endtime="20201029 12:47:12.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.195" endtime="20201029 12:47:12.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.893" endtime="20201029 12:47:12.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.891" endtime="20201029 12:47:12.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.202" level="INFO">${RESULT} = [{'diff': 0.00011633299999999971}, {'diff': 0.00011731999999999715}, {'diff': 0.00011615300000000078}, {'diff': 0.00011612499999999817}, {'diff': 0.00011622200000000263}, {'diff': 0.000116152000000001...</msg>
<status status="PASS" starttime="20201029 12:47:12.198" endtime="20201029 12:47:12.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.206" level="INFO">${ACCURACY} = {'diff': [0.00011633299999999971, 0.00011731999999999715, 0.00011615300000000078, 0.00011612499999999817, 0.00011622200000000263, 0.00011615200000000131, 0.00011616599999999741, 0.00011616700000000035...</msg>
<status status="PASS" starttime="20201029 12:47:12.203" endtime="20201029 12:47:12.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.210" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.209" endtime="20201029 12:47:12.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.212" level="INFO">VALUE: [0.00011633299999999971, 0.00011731999999999715, 0.00011615300000000078, 0.00011612499999999817, 0.00011622200000000263, 0.00011615200000000131, 0.00011616599999999741, 0.00011616700000000035, 0.00011616700000000035, 0.00011727800000000191, 0.00011748599999999998, 0.00011772200000000066, 0.0001175560000000013, 0.00011766599999999891, 0.00011616700000000035, 0.00011615300000000078, 0.00011616700000000035, 0.00011630600000000005, 0.00011732000000000062, 0.00011618099999999992, 0.00011754199999999826, 0.00011612500000000164, 0.00011743100000000117, 0.00011772200000000066, 0.00011742999999999823, 0.0001175690000000014, 0.000117291000000002, 0.00011755499999999836, 0.00011768000000000195, 0.00011759700000000053, 0.00011620899999999906, 0.0001161109999999986, 0.00011616700000000035, 0.00011629200000000048, 0.000116291000000001, 0.00011627800000000091, 0.00011726399999999887, 0.00011770800000000109, 0.00011749999999999955, 0.00011737499999999942, 0.00011772200000000066, 0.00011741699999999813, 0.00011618099999999992, 0.00011629200000000048, 0.00011722200000000016, 0.00011758300000000096, 0.0001177499999999998, 0.00011745800000000084, 0.00011759700000000053, 0.0001172499999999993]</msg>
<status status="PASS" starttime="20201029 12:47:12.211" endtime="20201029 12:47:12.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.207" endtime="20201029 12:47:12.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.218" endtime="20201029 12:47:12.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.217" endtime="20201029 12:47:12.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.216" endtime="20201029 12:47:12.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.856" endtime="20201029 12:47:12.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.856" endtime="20201029 12:47:12.239"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.247" endtime="20201029 12:47:12.267"></status>
</kw>
<msg timestamp="20201029 12:47:12.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.246" endtime="20201029 12:47:12.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.268" endtime="20201029 12:47:12.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.271" endtime="20201029 12:47:12.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.243" endtime="20201029 12:47:12.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.241" endtime="20201029 12:47:12.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.279" endtime="20201029 12:47:12.564"></status>
</kw>
<msg timestamp="20201029 12:47:12.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.278" endtime="20201029 12:47:12.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.568" endtime="20201029 12:47:12.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.576" endtime="20201029 12:47:12.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.275" endtime="20201029 12:47:12.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.274" endtime="20201029 12:47:12.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.583" level="INFO">${RESULT} = [{'diff': 0.00011820900000000106}, {'diff': 0.00011805499999999886}, {'diff': 0.00011863900000000024}, {'diff': 0.00011815199999999984}, {'diff': 0.00011776400000000284}, {'diff': 0.000118667000000002...</msg>
<status status="PASS" starttime="20201029 12:47:12.580" endtime="20201029 12:47:12.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.588" level="INFO">${ACCURACY} = {'diff': [0.00011820900000000106, 0.00011805499999999886, 0.00011863900000000024, 0.00011815199999999984, 0.00011776400000000284, 0.00011866700000000285, 0.00011841699999999913, 0.00011809699999999757...</msg>
<status status="PASS" starttime="20201029 12:47:12.584" endtime="20201029 12:47:12.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.592" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.591" endtime="20201029 12:47:12.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.595" level="INFO">VALUE: [0.00011820900000000106, 0.00011805499999999886, 0.00011863900000000024, 0.00011815199999999984, 0.00011776400000000284, 0.00011866700000000285, 0.00011841699999999913, 0.00011809699999999757, 0.00011866699999999938, 0.00011833300000000171, 0.00011784700000000078, 0.00011840299999999956, 0.00011787499999999992, 0.00011827699999999997, 0.00011777699999999947, 0.00011847199999999794, 0.00011787499999999992, 0.0001178889999999995, 0.00011826399999999987, 0.00011877700000000047, 0.00011859700000000153, 0.00011858300000000196, 0.00011863900000000024, 0.00011859700000000153, 0.00011851400000000012, 0.00011820799999999812, 0.00011783400000000069, 0.00011833299999999825, 0.00011850000000000055, 0.00011827799999999944, 0.00011798600000000048, 0.00011779200000000198, 0.00011842999999999923, 0.00011802799999999919, 0.0001185829999999985, 0.00011844499999999827, 0.00011834699999999782, 0.00011837500000000042, 0.00011790300000000253, 0.00011786100000000035, 0.00011791699999999863, 0.00011812500000000017, 0.0001180690000000019, 0.00011773700000000317, 0.00011791699999999863, 0.00011859699999999807, 0.00011818100000000192, 0.00011790199999999959, 0.00011833400000000119, 0.00011827699999999997]</msg>
<status status="PASS" starttime="20201029 12:47:12.593" endtime="20201029 12:47:12.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.589" endtime="20201029 12:47:12.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.600" endtime="20201029 12:47:12.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.598" endtime="20201029 12:47:12.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.597" endtime="20201029 12:47:12.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.240" endtime="20201029 12:47:12.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.239" endtime="20201029 12:47:12.620"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.629" endtime="20201029 12:47:12.648"></status>
</kw>
<msg timestamp="20201029 12:47:12.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.627" endtime="20201029 12:47:12.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.650" endtime="20201029 12:47:12.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.652" endtime="20201029 12:47:12.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.625" endtime="20201029 12:47:12.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.623" endtime="20201029 12:47:12.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.661" endtime="20201029 12:47:12.948"></status>
</kw>
<msg timestamp="20201029 12:47:12.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.660" endtime="20201029 12:47:12.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.952" endtime="20201029 12:47:12.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.960" endtime="20201029 12:47:12.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.657" endtime="20201029 12:47:12.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.655" endtime="20201029 12:47:12.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.967" level="INFO">${RESULT} = [{'diff': 0.00011991700000000063}, {'diff': 0.00011902800000000019}, {'diff': 0.00011884800000000126}, {'diff': 0.00011927800000000044}, {'diff': 0.0001197089999999991}, {'diff': 0.0001189859999999980...</msg>
<status status="PASS" starttime="20201029 12:47:12.964" endtime="20201029 12:47:12.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.971" level="INFO">${ACCURACY} = {'diff': [0.00011991700000000063, 0.00011902800000000019, 0.00011884800000000126, 0.00011927800000000044, 0.0001197089999999991, 0.00011898599999999801, 0.00011920799999999912, 0.00011948599999999851,...</msg>
<status status="PASS" starttime="20201029 12:47:12.968" endtime="20201029 12:47:12.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.975" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.974" endtime="20201029 12:47:12.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.978" level="INFO">VALUE: [0.00011991700000000063, 0.00011902800000000019, 0.00011884800000000126, 0.00011927800000000044, 0.0001197089999999991, 0.00011898599999999801, 0.00011920799999999912, 0.00011948599999999851, 0.00011963900000000124, 0.00011955500000000036, 0.000119082999999999, 0.00011900000000000105, 0.00011892999999999973, 0.00011958400000000244, 0.00011913900000000074, 0.00011890300000000006, 0.00011901400000000062, 0.0001191110000000016, 0.00011877700000000047, 0.00011941700000000013, 0.00011886099999999789, 0.00011963899999999777, 0.00011883300000000221, 0.00011909699999999857, 0.00011948599999999851, 0.00011895800000000234, 0.00011930599999999958, 0.00011872199999999819, 0.00011934699999999882, 0.0001192500000000013, 0.00011952700000000122, 0.00011954200000000026, 0.00011948599999999851, 0.00011917999999999998, 0.00011938800000000152, 0.00011902800000000019, 0.00011952800000000069, 0.00011927700000000097, 0.00011926400000000087, 0.0001195829999999995, 0.00011895799999999887, 0.00011937500000000142, 0.00011913900000000074, 0.00011926400000000087, 0.00011897200000000191, 0.00011945900000000231, 0.00011908300000000246, 0.00011926400000000087, 0.0001187500000000008, 0.00011917999999999998]</msg>
<status status="PASS" starttime="20201029 12:47:12.976" endtime="20201029 12:47:12.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.972" endtime="20201029 12:47:12.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.982" endtime="20201029 12:47:13.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.981" endtime="20201029 12:47:13.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.980" endtime="20201029 12:47:13.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.621" endtime="20201029 12:47:13.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.621" endtime="20201029 12:47:13.003"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.012" endtime="20201029 12:47:13.032"></status>
</kw>
<msg timestamp="20201029 12:47:13.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.011" endtime="20201029 12:47:13.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.034" endtime="20201029 12:47:13.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.036" endtime="20201029 12:47:13.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.008" endtime="20201029 12:47:13.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.006" endtime="20201029 12:47:13.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.045" endtime="20201029 12:47:13.331"></status>
</kw>
<msg timestamp="20201029 12:47:13.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.043" endtime="20201029 12:47:13.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.335" endtime="20201029 12:47:13.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.343" endtime="20201029 12:47:13.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.041" endtime="20201029 12:47:13.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.039" endtime="20201029 12:47:13.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.349" level="INFO">${RESULT} = [{'diff': 0.00012013899999999827}, {'diff': 0.00012012500000000217}, {'diff': 0.00012068099999999748}, {'diff': 0.00012020800000000012}, {'diff': 0.00012001399999999815}, {'diff': 0.000119901999999998...</msg>
<status status="PASS" starttime="20201029 12:47:13.346" endtime="20201029 12:47:13.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.353" level="INFO">${ACCURACY} = {'diff': [0.00012013899999999827, 0.00012012500000000217, 0.00012068099999999748, 0.00012020800000000012, 0.00012001399999999815, 0.00011990199999999812, 0.00012037499999999896, 0.00012022199999999969...</msg>
<status status="PASS" starttime="20201029 12:47:13.350" endtime="20201029 12:47:13.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.358" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.357" endtime="20201029 12:47:13.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.360" level="INFO">VALUE: [0.00012013899999999827, 0.00012012500000000217, 0.00012068099999999748, 0.00012020800000000012, 0.00012001399999999815, 0.00011990199999999812, 0.00012037499999999896, 0.00012022199999999969, 0.00011986099999999889, 0.00012026299999999893, 0.000120389000000002, 0.00012024999999999883, 0.00012033399999999972, 0.00011995799999999987, 0.00012052799999999822, 0.00011991700000000063, 0.00012004200000000076, 0.00012048699999999898, 0.0001204440000000008, 0.00011991599999999769, 0.00012040300000000156, 0.00012034700000000328, 0.00011999999999999858, 0.0001202639999999984, 0.00011969499999999952, 0.00012052799999999822, 0.00012037499999999896, 0.00012044500000000027, 0.00012019400000000055, 0.0001204449999999968, 0.00012061099999999964, 0.00011973599999999876, 0.00011979200000000051, 0.00011987499999999846, 0.00012063899999999877, 0.00012033399999999972, 0.00012001399999999815, 0.00011973600000000223, 0.00012059800000000301, 0.0001202639999999984, 0.00012055599999999736, 0.00012030600000000058, 0.00011970799999999962, 0.00012077799999999847, 0.00012013899999999827, 0.00012037499999999896, 0.00011988899999999802, 0.00011984799999999879, 0.00012036099999999939, 0.00012052799999999822]</msg>
<status status="PASS" starttime="20201029 12:47:13.359" endtime="20201029 12:47:13.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.354" endtime="20201029 12:47:13.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.366" endtime="20201029 12:47:13.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.364" endtime="20201029 12:47:13.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.363" endtime="20201029 12:47:13.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.004" endtime="20201029 12:47:13.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.004" endtime="20201029 12:47:13.387"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.395" endtime="20201029 12:47:13.414"></status>
</kw>
<msg timestamp="20201029 12:47:13.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.394" endtime="20201029 12:47:13.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.416" endtime="20201029 12:47:13.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.418" endtime="20201029 12:47:13.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.391" endtime="20201029 12:47:13.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.389" endtime="20201029 12:47:13.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.427" endtime="20201029 12:47:13.713"></status>
</kw>
<msg timestamp="20201029 12:47:13.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.426" endtime="20201029 12:47:13.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.718" endtime="20201029 12:47:13.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.726" endtime="20201029 12:47:13.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.423" endtime="20201029 12:47:13.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.422" endtime="20201029 12:47:13.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.732" level="INFO">${RESULT} = [{'diff': 0.0001214310000000017}, {'diff': 0.0001212500000000033}, {'diff': 0.00012169400000000205}, {'diff': 0.0001211249999999997}, {'diff': 0.00012119400000000155}, {'diff': 0.00012118000000000198}...</msg>
<status status="PASS" starttime="20201029 12:47:13.729" endtime="20201029 12:47:13.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.737" level="INFO">${ACCURACY} = {'diff': [0.0001214310000000017, 0.0001212500000000033, 0.00012169400000000205, 0.0001211249999999997, 0.00012119400000000155, 0.00012118000000000198, 0.00012127700000000297, 0.00012084699999999685, 0...</msg>
<status status="PASS" starttime="20201029 12:47:13.733" endtime="20201029 12:47:13.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.741" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.740" endtime="20201029 12:47:13.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.744" level="INFO">VALUE: [0.0001214310000000017, 0.0001212500000000033, 0.00012169400000000205, 0.0001211249999999997, 0.00012119400000000155, 0.00012118000000000198, 0.00012127700000000297, 0.00012084699999999685, 0.00012090300000000206, 0.00012091700000000163, 0.00012166699999999891, 0.00012148699999999998, 0.00012109700000000057, 0.0001216380000000003, 0.0001214029999999991, 0.00012144399999999833, 0.00012124999999999983, 0.00012152799999999922, 0.0001209029999999986, 0.00012083400000000022, 0.00012152699999999975, 0.00012070799999999715, 0.00012083300000000075, 0.00012113899999999928, 0.00012154199999999879, 0.00012133300000000125, 0.00012076299999999943, 0.00012097200000000044, 0.00012163899999999978, 0.00012123600000000026, 0.00012159700000000107, 0.00012074999999999933, 0.00012073600000000323, 0.00012072200000000019, 0.00012136199999999986, 0.00012137499999999996, 0.00012124999999999983, 0.00012166599999999944, 0.00012152699999999975, 0.00012144399999999833, 0.00012159800000000054, 0.00012144399999999833, 0.00012118099999999798, 0.00012137499999999996, 0.00012077799999999847, 0.00012138899999999953, 0.00012163899999999978, 0.00012083300000000075, 0.00012119500000000102, 0.0001209029999999986]</msg>
<status status="PASS" starttime="20201029 12:47:13.742" endtime="20201029 12:47:13.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.738" endtime="20201029 12:47:13.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.749" endtime="20201029 12:47:13.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.747" endtime="20201029 12:47:13.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.746" endtime="20201029 12:47:13.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.388" endtime="20201029 12:47:13.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.387" endtime="20201029 12:47:13.771"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.784" endtime="20201029 12:47:13.804"></status>
</kw>
<msg timestamp="20201029 12:47:13.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.781" endtime="20201029 12:47:13.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.806" endtime="20201029 12:47:13.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.808" endtime="20201029 12:47:13.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.778" endtime="20201029 12:47:13.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.775" endtime="20201029 12:47:13.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.817" endtime="20201029 12:47:14.104"></status>
</kw>
<msg timestamp="20201029 12:47:14.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028341292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028463681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.816" endtime="20201029 12:47:14.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028341292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028463681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.109" endtime="20201029 12:47:14.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.117" endtime="20201029 12:47:14.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.813" endtime="20201029 12:47:14.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.812" endtime="20201029 12:47:14.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.123" level="INFO">${RESULT} = [{'diff': 0.00012238900000000053}, {'diff': 0.00012266699999999991}, {'diff': 0.00012194399999999883}, {'diff': 0.00012204199999999929}, {'diff': 0.00012256999999999893}, {'diff': 0.000122666999999999...</msg>
<status status="PASS" starttime="20201029 12:47:14.120" endtime="20201029 12:47:14.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.127" level="INFO">${ACCURACY} = {'diff': [0.00012238900000000053, 0.00012266699999999991, 0.00012194399999999883, 0.00012204199999999929, 0.00012256999999999893, 0.00012266699999999991, 0.00012201400000000015, 0.0001226120000000011,...</msg>
<status status="PASS" starttime="20201029 12:47:14.124" endtime="20201029 12:47:14.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.131" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.130" endtime="20201029 12:47:14.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.134" level="INFO">VALUE: [0.00012238900000000053, 0.00012266699999999991, 0.00012194399999999883, 0.00012204199999999929, 0.00012256999999999893, 0.00012266699999999991, 0.00012201400000000015, 0.0001226120000000011, 0.00012184699999999785, 0.00012205499999999939, 0.00012184699999999785, 0.00012216700000000288, 0.0001219579999999984, 0.00012229199999999954, 0.00012197200000000144, 0.00012269399999999958, 0.00012256899999999946, 0.0001224579999999989, 0.00012170899999999762, 0.00012258299999999903, 0.0001224030000000001, 0.000121777999999996, 0.00012238900000000053, 0.00012215200000000037, 0.0001219029999999996, 0.0001222080000000056, 0.00012219399999999908, 0.00012173599999999729, 0.0001224030000000001, 0.00012216599999999994, 0.00012184800000000079, 0.00012170800000000509, 0.00012236100000000139, 0.0001218329999999948, 0.0001221380000000008, 0.0001225280000000037, 0.00012238900000000053, 0.00012220799999999865, 0.00012184699999999438, 0.00012251400000000412, 0.00012230600000000258, 0.00012179200000000251, 0.00012256900000000293, 0.00012201300000000415, 0.00012220799999999865, 0.00012194400000000577, 0.00012259700000000207, 0.0001217229999999972, 0.0001225700000000024, 0.00012234700000000182]</msg>
<status status="PASS" starttime="20201029 12:47:14.133" endtime="20201029 12:47:14.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.128" endtime="20201029 12:47:14.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.139" endtime="20201029 12:47:14.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.137" endtime="20201029 12:47:14.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.136" endtime="20201029 12:47:14.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.772" endtime="20201029 12:47:14.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.771" endtime="20201029 12:47:14.160"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.168" endtime="20201029 12:47:14.188"></status>
</kw>
<msg timestamp="20201029 12:47:14.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.167" endtime="20201029 12:47:14.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.190" endtime="20201029 12:47:14.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.192" endtime="20201029 12:47:14.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.164" endtime="20201029 12:47:14.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.162" endtime="20201029 12:47:14.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.201" endtime="20201029 12:47:14.487"></status>
</kw>
<msg timestamp="20201029 12:47:14.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.200" endtime="20201029 12:47:14.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.491" endtime="20201029 12:47:14.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.499" endtime="20201029 12:47:14.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.197" endtime="20201029 12:47:14.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.195" endtime="20201029 12:47:14.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.505" level="INFO">${RESULT} = [{'diff': 0.0001237359999999993}, {'diff': 0.00012306899999999996}, {'diff': 0.0001231380000000018}, {'diff': 0.00012365300000000135}, {'diff': 0.00012345900000000284}, {'diff': 0.00012319400000000008...</msg>
<status status="PASS" starttime="20201029 12:47:14.502" endtime="20201029 12:47:14.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.509" level="INFO">${ACCURACY} = {'diff': [0.0001237359999999993, 0.00012306899999999996, 0.0001231380000000018, 0.00012365300000000135, 0.00012345900000000284, 0.00012319400000000008, 0.00012308400000000247, 0.00012333299999999978, ...</msg>
<status status="PASS" starttime="20201029 12:47:14.506" endtime="20201029 12:47:14.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.514" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.513" endtime="20201029 12:47:14.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.517" level="INFO">VALUE: [0.0001237359999999993, 0.00012306899999999996, 0.0001231380000000018, 0.00012365300000000135, 0.00012345900000000284, 0.00012319400000000008, 0.00012308400000000247, 0.00012333299999999978, 0.00012333399999999925, 0.00012356999999999993, 0.00012302700000000125, 0.00012277800000000047, 0.0001232640000000014, 0.00012316700000000042, 0.00012332000000000315, 0.00012269399999999958, 0.00012336200000000186, 0.00012351400000000165, 0.000122777000000001, 0.00012356999999999993, 0.00012270799999999915, 0.00012288900000000103, 0.0001227640000000009, 0.00012358300000000003, 0.00012297199999999897, 0.00012277800000000047, 0.00012269500000000252, 0.0001234860000000025, 0.00012338900000000153, 0.00012330500000000064, 0.00012280500000000014, 0.00012294399999999983, 0.00012324999999999836, 0.00012351400000000165, 0.00012330500000000064, 0.0001229579999999994, 0.00012338899999999806, 0.00012301399999999768, 0.00012327800000000097, 0.00012358300000000003, 0.00012312499999999824, 0.00012318099999999998, 0.00012270800000000262, 0.00012356900000000046, 0.00012295900000000234, 0.00012311099999999867, 0.0001234449999999998, 0.00012325000000000183, 0.00012308400000000247, 0.00012327800000000097]</msg>
<status status="PASS" starttime="20201029 12:47:14.515" endtime="20201029 12:47:14.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.510" endtime="20201029 12:47:14.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.522" endtime="20201029 12:47:14.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.521" endtime="20201029 12:47:14.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.519" endtime="20201029 12:47:14.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.161" endtime="20201029 12:47:14.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.160" endtime="20201029 12:47:14.543"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.551" endtime="20201029 12:47:14.571"></status>
</kw>
<msg timestamp="20201029 12:47:14.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.550" endtime="20201029 12:47:14.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.572" endtime="20201029 12:47:14.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.575" endtime="20201029 12:47:14.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.547" endtime="20201029 12:47:14.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.545" endtime="20201029 12:47:14.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.584" endtime="20201029 12:47:14.870"></status>
</kw>
<msg timestamp="20201029 12:47:14.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.582" endtime="20201029 12:47:14.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.874" endtime="20201029 12:47:14.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.882" endtime="20201029 12:47:14.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.580" endtime="20201029 12:47:14.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.578" endtime="20201029 12:47:14.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.888" level="INFO">${RESULT} = [{'diff': 0.00012469500000000105}, {'diff': 0.00012401300000000268}, {'diff': 0.00012425000000000283}, {'diff': 0.00012458299999999756}, {'diff': 0.00012412499999999924}, {'diff': 0.000123985999999999...</msg>
<status status="PASS" starttime="20201029 12:47:14.885" endtime="20201029 12:47:14.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.893" level="INFO">${ACCURACY} = {'diff': [0.00012469500000000105, 0.00012401300000000268, 0.00012425000000000283, 0.00012458299999999756, 0.00012412499999999924, 0.00012398599999999954, 0.00012383300000000028, 0.0001238060000000006,...</msg>
<status status="PASS" starttime="20201029 12:47:14.889" endtime="20201029 12:47:14.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.898" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.897" endtime="20201029 12:47:14.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.900" level="INFO">VALUE: [0.00012469500000000105, 0.00012401300000000268, 0.00012425000000000283, 0.00012458299999999756, 0.00012412499999999924, 0.00012398599999999954, 0.00012383300000000028, 0.0001238060000000006, 0.00012443000000000176, 0.00012443100000000124, 0.00012383399999999975, 0.0001242359999999998, 0.00012387499999999899, 0.000123986000000003, 0.00012443099999999777, 0.0001239999999999991, 0.00012457000000000093, 0.00012430499999999817, 0.000124568999999998, 0.00012412499999999924, 0.0001246250000000032, 0.00012373600000000276, 0.00012419400000000108, 0.00012404100000000182, 0.00012401399999999868, 0.00012413900000000228, 0.0001241389999999988, 0.00012387499999999899, 0.0001239450000000003, 0.00012461100000000017, 0.0001239999999999991, 0.00012402799999999825, 0.00012402800000000172, 0.00012425000000000283, 0.0001243190000000012, 0.00012387499999999899, 0.00012397199999999997, 0.0001238190000000007, 0.0001239999999999991, 0.0001242359999999998, 0.00012369500000000005, 0.00012400000000000258, 0.0001243190000000012, 0.00012422199999999675, 0.00012397199999999997, 0.0001242640000000024, 0.00012380500000000114, 0.00012401400000000215, 0.00012423699999999926, 0.00012427800000000197]</msg>
<status status="PASS" starttime="20201029 12:47:14.899" endtime="20201029 12:47:14.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.894" endtime="20201029 12:47:14.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.905" endtime="20201029 12:47:14.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.904" endtime="20201029 12:47:14.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.902" endtime="20201029 12:47:14.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.544" endtime="20201029 12:47:14.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.543" endtime="20201029 12:47:14.926"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.934" endtime="20201029 12:47:14.954"></status>
</kw>
<msg timestamp="20201029 12:47:14.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.933" endtime="20201029 12:47:14.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.955" endtime="20201029 12:47:14.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.958" endtime="20201029 12:47:14.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.930" endtime="20201029 12:47:14.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.928" endtime="20201029 12:47:14.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.967" endtime="20201029 12:47:15.255"></status>
</kw>
<msg timestamp="20201029 12:47:15.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.965" endtime="20201029 12:47:15.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.259" endtime="20201029 12:47:15.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.267" endtime="20201029 12:47:15.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.963" endtime="20201029 12:47:15.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.961" endtime="20201029 12:47:15.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.274" level="INFO">${RESULT} = [{'diff': 0.00012549999999999714}, {'diff': 0.0001250130000000002}, {'diff': 0.00012484700000000085}, {'diff': 0.00012466700000000192}, {'diff': 0.00012498600000000054}, {'diff': 0.0001247499999999998...</msg>
<status status="PASS" starttime="20201029 12:47:15.271" endtime="20201029 12:47:15.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.278" level="INFO">${ACCURACY} = {'diff': [0.00012549999999999714, 0.0001250130000000002, 0.00012484700000000085, 0.00012466700000000192, 0.00012498600000000054, 0.00012474999999999986, 0.00012525000000000036, 0.00012502799999999925,...</msg>
<status status="PASS" starttime="20201029 12:47:15.275" endtime="20201029 12:47:15.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.282" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.281" endtime="20201029 12:47:15.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.285" level="INFO">VALUE: [0.00012549999999999714, 0.0001250130000000002, 0.00012484700000000085, 0.00012466700000000192, 0.00012498600000000054, 0.00012474999999999986, 0.00012525000000000036, 0.00012502799999999925, 0.00012476399999999943, 0.00012556999999999846, 0.00012538800000000058, 0.00012537500000000049, 0.00012555499999999942, 0.00012562500000000074, 0.00012516699999999895, 0.0001251389999999998, 0.0001250559999999984, 0.00012536100000000092, 0.00012516599999999947, 0.00012548599999999757, 0.00012530599999999864, 0.00012576300000000096, 0.00012543100000000224, 0.00012529200000000254, 0.00012527800000000297, 0.00012548600000000104, 0.0001255130000000007, 0.0001248060000000016, 0.00012511100000000067, 0.0001249299999999988, 0.00012509699999999763, 0.00012490199999999965, 0.0001251939999999986, 0.00012469500000000105, 0.00012519499999999809, 0.00012497200000000097, 0.00012549999999999714, 0.0001255000000000006, 0.00012552799999999975, 0.00012529200000000254, 0.00012487499999999999, 0.0001249580000000014, 0.00012476399999999943, 0.00012569499999999859, 0.00012488899999999956, 0.0001252360000000008, 0.00012504199999999882, 0.00012477800000000247, 0.00012495900000000087, 0.00012518099999999852]</msg>
<status status="PASS" starttime="20201029 12:47:15.283" endtime="20201029 12:47:15.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.279" endtime="20201029 12:47:15.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.290" endtime="20201029 12:47:15.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.288" endtime="20201029 12:47:15.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.287" endtime="20201029 12:47:15.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.927" endtime="20201029 12:47:15.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.926" endtime="20201029 12:47:15.310"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.319" endtime="20201029 12:47:15.339"></status>
</kw>
<msg timestamp="20201029 12:47:15.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.317" endtime="20201029 12:47:15.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.341" endtime="20201029 12:47:15.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.344" endtime="20201029 12:47:15.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.315" endtime="20201029 12:47:15.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.313" endtime="20201029 12:47:15.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.353" endtime="20201029 12:47:15.638"></status>
</kw>
<msg timestamp="20201029 12:47:15.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.351" endtime="20201029 12:47:15.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.642" endtime="20201029 12:47:15.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.650" endtime="20201029 12:47:15.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.349" endtime="20201029 12:47:15.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.347" endtime="20201029 12:47:15.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.657" level="INFO">${RESULT} = [{'diff': 0.0001259299999999998}, {'diff': 0.00012630500000000017}, {'diff': 0.00012606999999999896}, {'diff': 0.0001260559999999994}, {'diff': 0.00012587500000000099}, {'diff': 0.00012638900000000106...</msg>
<status status="PASS" starttime="20201029 12:47:15.653" endtime="20201029 12:47:15.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.661" level="INFO">${ACCURACY} = {'diff': [0.0001259299999999998, 0.00012630500000000017, 0.00012606999999999896, 0.0001260559999999994, 0.00012587500000000099, 0.00012638900000000106, 0.0001261939999999996, 0.0001264450000000028, 0....</msg>
<status status="PASS" starttime="20201029 12:47:15.658" endtime="20201029 12:47:15.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.665" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.664" endtime="20201029 12:47:15.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.668" level="INFO">VALUE: [0.0001259299999999998, 0.00012630500000000017, 0.00012606999999999896, 0.0001260559999999994, 0.00012587500000000099, 0.00012638900000000106, 0.0001261939999999996, 0.0001264450000000028, 0.0001262780000000005, 0.00012607000000000243, 0.0001266520000000014, 0.0001263329999999993, 0.00012580499999999967, 0.00012613899999999734, 0.0001263620000000014, 0.00012669499999999959, 0.0001259299999999998, 0.0001261939999999996, 0.0001263329999999993, 0.00012613899999999734, 0.00012648600000000204, 0.00012649999999999814, 0.00012594399999999936, 0.00012606900000000296, 0.00012577700000000053, 0.00012598600000000154, 0.0001261109999999982, 0.00012581899999999924, 0.00012605600000000286, 0.00012648599999999857, 0.00012630500000000017, 0.00012598600000000154, 0.00012612499999999777, 0.0001265559999999999, 0.00012655500000000042, 0.0001259299999999998, 0.000125778, 0.0001265559999999999, 0.00012645799999999943, 0.00012676400000000143, 0.0001265559999999999, 0.0001257499999999974, 0.00012631899999999974, 0.00012630500000000017, 0.0001261390000000008, 0.00012618099999999952, 0.00012584699999999838, 0.00012658300000000303, 0.00012637500000000149, 0.0001265139999999977]</msg>
<status status="PASS" starttime="20201029 12:47:15.666" endtime="20201029 12:47:15.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.662" endtime="20201029 12:47:15.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.677" endtime="20201029 12:47:15.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.676" endtime="20201029 12:47:15.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.675" endtime="20201029 12:47:15.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.311" endtime="20201029 12:47:15.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.311" endtime="20201029 12:47:15.698"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.706" endtime="20201029 12:47:15.726"></status>
</kw>
<msg timestamp="20201029 12:47:15.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.705" endtime="20201029 12:47:15.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.728" endtime="20201029 12:47:15.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.730" endtime="20201029 12:47:15.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.702" endtime="20201029 12:47:15.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.700" endtime="20201029 12:47:15.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.739" endtime="20201029 12:47:16.025"></status>
</kw>
<msg timestamp="20201029 12:47:16.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.738" endtime="20201029 12:47:16.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.029" endtime="20201029 12:47:16.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.037" endtime="20201029 12:47:16.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.735" endtime="20201029 12:47:16.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.733" endtime="20201029 12:47:16.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.044" level="INFO">${RESULT} = [{'diff': 0.00012773599999999982}, {'diff': 0.0001272780000000015}, {'diff': 0.00012687500000000199}, {'diff': 0.00012754199999999785}, {'diff': 0.00012709699999999963}, {'diff': 0.0001266670000000004...</msg>
<status status="PASS" starttime="20201029 12:47:16.041" endtime="20201029 12:47:16.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.049" level="INFO">${ACCURACY} = {'diff': [0.00012773599999999982, 0.0001272780000000015, 0.00012687500000000199, 0.00012754199999999785, 0.00012709699999999963, 0.00012666700000000045, 0.00012665300000000088, 0.00012720800000000018,...</msg>
<status status="PASS" starttime="20201029 12:47:16.045" endtime="20201029 12:47:16.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.053" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.052" endtime="20201029 12:47:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.056" level="INFO">VALUE: [0.00012773599999999982, 0.0001272780000000015, 0.00012687500000000199, 0.00012754199999999785, 0.00012709699999999963, 0.00012666700000000045, 0.00012665300000000088, 0.00012720800000000018, 0.0001269309999999968, 0.00012734699999999988, 0.00012758400000000003, 0.00012680600000000014, 0.00012693100000000027, 0.0001275139999999987, 0.00012704199999999735, 0.00012706999999999996, 0.0001269719999999995, 0.00012679200000000057, 0.0001268329999999998, 0.0001272499999999989, 0.00012723599999999932, 0.00012751400000000218, 0.00012755500000000142, 0.0001275560000000009, 0.0001267499999999984, 0.0001269719999999995, 0.00012672199999999925, 0.0001273889999999986, 0.00012691600000000122, 0.00012672200000000272, 0.00012741600000000172, 0.00012668100000000002, 0.0001269589999999994, 0.00012758300000000056, 0.0001267360000000023, 0.00012680600000000014, 0.00012752800000000175, 0.00012743100000000077, 0.00012687499999999852, 0.00012718100000000052, 0.00012665300000000088, 0.00012672199999999925, 0.00012695799999999993, 0.00012758300000000056, 0.00012723599999999932, 0.00012718000000000104, 0.00012737499999999902, 0.00012737499999999902, 0.00012717999999999757, 0.00012748599999999957]</msg>
<status status="PASS" starttime="20201029 12:47:16.054" endtime="20201029 12:47:16.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.050" endtime="20201029 12:47:16.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.061" endtime="20201029 12:47:16.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.059" endtime="20201029 12:47:16.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.058" endtime="20201029 12:47:16.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.699" endtime="20201029 12:47:16.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.698" endtime="20201029 12:47:16.081"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.090" endtime="20201029 12:47:16.109"></status>
</kw>
<msg timestamp="20201029 12:47:16.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.088" endtime="20201029 12:47:16.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.111" endtime="20201029 12:47:16.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.114" endtime="20201029 12:47:16.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.086" endtime="20201029 12:47:16.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.084" endtime="20201029 12:47:16.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.123" endtime="20201029 12:47:16.410"></status>
</kw>
<msg timestamp="20201029 12:47:16.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.121" endtime="20201029 12:47:16.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.414" endtime="20201029 12:47:16.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.422" endtime="20201029 12:47:16.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.119" endtime="20201029 12:47:16.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.117" endtime="20201029 12:47:16.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.429" level="INFO">${RESULT} = [{'diff': 0.00012822200000000075}, {'diff': 0.0001280139999999992}, {'diff': 0.0001280980000000001}, {'diff': 0.00012805500000000192}, {'diff': 0.0001281940000000016}, {'diff': 0.00012772200000000025}...</msg>
<status status="PASS" starttime="20201029 12:47:16.425" endtime="20201029 12:47:16.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.433" level="INFO">${ACCURACY} = {'diff': [0.00012822200000000075, 0.0001280139999999992, 0.0001280980000000001, 0.00012805500000000192, 0.0001281940000000016, 0.00012772200000000025, 0.00012773599999999982, 0.00012847300000000048, 0...</msg>
<status status="PASS" starttime="20201029 12:47:16.430" endtime="20201029 12:47:16.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.437" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.436" endtime="20201029 12:47:16.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.439" level="INFO">VALUE: [0.00012822200000000075, 0.0001280139999999992, 0.0001280980000000001, 0.00012805500000000192, 0.0001281940000000016, 0.00012772200000000025, 0.00012773599999999982, 0.00012847300000000048, 0.00012808300000000106, 0.0001278879999999996, 0.00012765300000000188, 0.00012766700000000145, 0.00012834800000000035, 0.00012872200000000125, 0.00012802799999999878, 0.00012836100000000045, 0.00012779099999999863, 0.00012802799999999878, 0.00012786099999999995, 0.0001276520000000024, 0.00012808400000000053, 0.00012804099999999888, 0.00012836100000000045, 0.00012816699999999848, 0.00012840299999999916, 0.00012836100000000045, 0.0001279309999999978, 0.0001283330000000013, 0.000128165999999999, 0.0001277499999999994, 0.00012766700000000145, 0.00012766699999999798, 0.00012822199999999728, 0.00012841699999999873, 0.00012766699999999798, 0.00012868099999999855, 0.00012799999999999964, 0.00012780600000000114, 0.0001281529999999989, 0.00012848600000000057, 0.00012852799999999928, 0.00012855599999999842, 0.0001282499999999999, 0.00012826399999999946, 0.00012799999999999964, 0.0001282079999999977, 0.0001282079999999977, 0.00012841599999999925, 0.00012836100000000045, 0.0001277919999999981]</msg>
<status status="PASS" starttime="20201029 12:47:16.438" endtime="20201029 12:47:16.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.433" endtime="20201029 12:47:16.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.444" endtime="20201029 12:47:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.443" endtime="20201029 12:47:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.442" endtime="20201029 12:47:16.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.082" endtime="20201029 12:47:16.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.082" endtime="20201029 12:47:16.465"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.474" endtime="20201029 12:47:16.494"></status>
</kw>
<msg timestamp="20201029 12:47:16.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.472" endtime="20201029 12:47:16.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.496" endtime="20201029 12:47:16.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.498" endtime="20201029 12:47:16.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.470" endtime="20201029 12:47:16.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.468" endtime="20201029 12:47:16.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.507" endtime="20201029 12:47:16.792"></status>
</kw>
<msg timestamp="20201029 12:47:16.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.506" endtime="20201029 12:47:16.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.796" endtime="20201029 12:47:16.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.804" endtime="20201029 12:47:16.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.503" endtime="20201029 12:47:16.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.501" endtime="20201029 12:47:16.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.811" level="INFO">${RESULT} = [{'diff': 0.00012905599999999892}, {'diff': 0.0001291529999999999}, {'diff': 0.00012908400000000153}, {'diff': 0.00012930599999999917}, {'diff': 0.00012886100000000095}, {'diff': 0.0001289029999999996...</msg>
<status status="PASS" starttime="20201029 12:47:16.808" endtime="20201029 12:47:16.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.815" level="INFO">${ACCURACY} = {'diff': [0.00012905599999999892, 0.0001291529999999999, 0.00012908400000000153, 0.00012930599999999917, 0.00012886100000000095, 0.00012890299999999966, 0.00012942999999999982, 0.00012931999999999874,...</msg>
<status status="PASS" starttime="20201029 12:47:16.812" endtime="20201029 12:47:16.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.819" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.818" endtime="20201029 12:47:16.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.822" level="INFO">VALUE: [0.00012905599999999892, 0.0001291529999999999, 0.00012908400000000153, 0.00012930599999999917, 0.00012886100000000095, 0.00012890299999999966, 0.00012942999999999982, 0.00012931999999999874, 0.00012904199999999935, 0.00012922299999999776, 0.00012905499999999945, 0.00012886099999999748, 0.00012936099999999798, 0.000129472000000002, 0.00012954100000000038, 0.00012872200000000125, 0.00012891599999999975, 0.00012866699999999898, 0.00012923600000000132, 0.0001293049999999997, 0.00012868100000000202, 0.00012884799999999738, 0.00012955499999999995, 0.0001290270000000003, 0.00012945800000000243, 0.00012930599999999917, 0.0001291119999999972, 0.0001290140000000002, 0.00012879099999999963, 0.0001288330000000018, 0.00012891699999999923, 0.00012873600000000082, 0.00012877700000000006, 0.00012959700000000213, 0.00012958399999999856, 0.0001296530000000004, 0.00012873599999999735, 0.0001292919999999996, 0.00012968000000000007, 0.0001293049999999997, 0.00012926400000000046, 0.0001293880000000011, 0.00012891699999999923, 0.00012891699999999923, 0.00012973599999999835, 0.0001296110000000017, 0.00012929100000000013, 0.00012884700000000138, 0.0001292919999999996, 0.00012941699999999973]</msg>
<status status="PASS" starttime="20201029 12:47:16.820" endtime="20201029 12:47:16.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.816" endtime="20201029 12:47:16.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.828" endtime="20201029 12:47:16.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.826" endtime="20201029 12:47:16.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.825" endtime="20201029 12:47:16.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.466" endtime="20201029 12:47:16.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.465" endtime="20201029 12:47:16.849"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.858" endtime="20201029 12:47:16.877"></status>
</kw>
<msg timestamp="20201029 12:47:16.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.856" endtime="20201029 12:47:16.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.879" endtime="20201029 12:47:16.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.881" endtime="20201029 12:47:16.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.854" endtime="20201029 12:47:16.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.852" endtime="20201029 12:47:16.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.890" endtime="20201029 12:47:17.176"></status>
</kw>
<msg timestamp="20201029 12:47:17.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.889" endtime="20201029 12:47:17.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021834569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.181" endtime="20201029 12:47:17.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.189" endtime="20201029 12:47:17.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.886" endtime="20201029 12:47:17.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.884" endtime="20201029 12:47:17.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.195" level="INFO">${RESULT} = [{'diff': 0.00013054199999999738}, {'diff': 0.0001299309999999998}, {'diff': 0.00012998600000000207}, {'diff': 0.00013019499999999962}, {'diff': 0.00012963900000000084}, {'diff': 0.0001300979999999986...</msg>
<status status="PASS" starttime="20201029 12:47:17.192" endtime="20201029 12:47:17.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.200" level="INFO">${ACCURACY} = {'diff': [0.00013054199999999738, 0.0001299309999999998, 0.00012998600000000207, 0.00013019499999999962, 0.00012963900000000084, 0.00013009799999999863, 0.00013073600000000282, 0.00013041700000000073,...</msg>
<status status="PASS" starttime="20201029 12:47:17.196" endtime="20201029 12:47:17.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.204" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.203" endtime="20201029 12:47:17.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.207" level="INFO">VALUE: [0.00013054199999999738, 0.0001299309999999998, 0.00012998600000000207, 0.00013019499999999962, 0.00012963900000000084, 0.00013009799999999863, 0.00013073600000000282, 0.00013041700000000073, 0.00013055600000000042, 0.0001306669999999975, 0.0001306669999999975, 0.00013048600000000257, 0.00012987499999999805, 0.0001296660000000005, 0.0001299720000000025, 0.00013041699999999726, 0.00013018000000000057, 0.000130263999999998, 0.0001296940000000031, 0.00012972300000000173, 0.00012973599999999835, 0.00012973599999999835, 0.00013004200000000035, 0.00013059799999999913, 0.00013041700000000073, 0.0001303339999999993, 0.000130263999999998, 0.00012972200000000225, 0.00013059699999999966, 0.00012986100000000195, 0.00013062500000000227, 0.00013001399999999774, 0.0001299439999999999, 0.0001301530000000009, 0.00012986099999999848, 0.00013026400000000146, 0.00013009700000000263, 0.0001304310000000003, 0.0001306249999999988, 0.00012998600000000207, 0.00013011099999999873, 0.00012986099999999848, 0.00013036099999999898, 0.00013013900000000134, 0.0001302079999999997, 0.0001297920000000001, 0.00012987499999999805, 0.00012987500000000152, 0.00012983299999999934, 0.00013042999999999735]</msg>
<status status="PASS" starttime="20201029 12:47:17.205" endtime="20201029 12:47:17.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.201" endtime="20201029 12:47:17.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.212" endtime="20201029 12:47:17.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.210" endtime="20201029 12:47:17.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.209" endtime="20201029 12:47:17.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.850" endtime="20201029 12:47:17.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.849" endtime="20201029 12:47:17.232"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.241" endtime="20201029 12:47:17.261"></status>
</kw>
<msg timestamp="20201029 12:47:17.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.239" endtime="20201029 12:47:17.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.262" endtime="20201029 12:47:17.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.264" endtime="20201029 12:47:17.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.237" endtime="20201029 12:47:17.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.235" endtime="20201029 12:47:17.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.274" endtime="20201029 12:47:17.560"></status>
</kw>
<msg timestamp="20201029 12:47:17.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.272" endtime="20201029 12:47:17.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.564" endtime="20201029 12:47:17.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.573" endtime="20201029 12:47:17.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.270" endtime="20201029 12:47:17.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.268" endtime="20201029 12:47:17.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.579" level="INFO">${RESULT} = [{'diff': 0.00013172200000000078}, {'diff': 0.00013101399999999874}, {'diff': 0.00013073600000000282}, {'diff': 0.00013086099999999948}, {'diff': 0.0001313890000000026}, {'diff': 0.0001307499999999989...</msg>
<status status="PASS" starttime="20201029 12:47:17.576" endtime="20201029 12:47:17.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.583" level="INFO">${ACCURACY} = {'diff': [0.00013172200000000078, 0.00013101399999999874, 0.00013073600000000282, 0.00013086099999999948, 0.0001313890000000026, 0.00013074999999999892, 0.00013156899999999805, 0.0001317500000000034, ...</msg>
<status status="PASS" starttime="20201029 12:47:17.580" endtime="20201029 12:47:17.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.587" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.586" endtime="20201029 12:47:17.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.590" level="INFO">VALUE: [0.00013172200000000078, 0.00013101399999999874, 0.00013073600000000282, 0.00013086099999999948, 0.0001313890000000026, 0.00013074999999999892, 0.00013156899999999805, 0.0001317500000000034, 0.00013137499999999955, 0.00013109799999999963, 0.00013094500000000037, 0.0001309859999999996, 0.000131166000000002, 0.0001308469999999999, 0.00013161100000000023, 0.0001315409999999989, 0.00013141600000000225, 0.00013115299999999844, 0.00013091699999999776, 0.00013072299999999926, 0.00013131900000000127, 0.00013077800000000153, 0.00013087500000000252, 0.00013066700000000098, 0.00013086099999999948, 0.00013155599999999795, 0.00013074999999999892, 0.00013090200000000218, 0.0001314029999999987, 0.0001314860000000001, 0.00013129099999999866, 0.00013115299999999844, 0.00013111099999999973, 0.00013095800000000046, 0.0001307920000000011, 0.0001316669999999985, 0.0001314449999999974, 0.00013087499999999905, 0.00013169399999999817, 0.00013122200000000028, 0.00013172300000000026, 0.00013113899999999887, 0.00013066700000000098, 0.00013116700000000148, 0.0001312920000000016, 0.00013122200000000028, 0.00013133300000000084, 0.00013155599999999795, 0.00013111099999999973, 0.00013142999999999835]</msg>
<status status="PASS" starttime="20201029 12:47:17.588" endtime="20201029 12:47:17.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.584" endtime="20201029 12:47:17.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.595" endtime="20201029 12:47:17.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.593" endtime="20201029 12:47:17.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.592" endtime="20201029 12:47:17.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.233" endtime="20201029 12:47:17.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.233" endtime="20201029 12:47:17.615"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.624" endtime="20201029 12:47:17.645"></status>
</kw>
<msg timestamp="20201029 12:47:17.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.623" endtime="20201029 12:47:17.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.646" endtime="20201029 12:47:17.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.649" endtime="20201029 12:47:17.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.620" endtime="20201029 12:47:17.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.618" endtime="20201029 12:47:17.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.658" endtime="20201029 12:47:17.943"></status>
</kw>
<msg timestamp="20201029 12:47:17.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.656" endtime="20201029 12:47:17.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.947" endtime="20201029 12:47:17.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.955" endtime="20201029 12:47:17.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.654" endtime="20201029 12:47:17.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.652" endtime="20201029 12:47:17.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.961" level="INFO">${RESULT} = [{'diff': 0.00013240300000000316}, {'diff': 0.0001325279999999998}, {'diff': 0.00013186100000000048}, {'diff': 0.00013238900000000012}, {'diff': 0.0001317769999999996}, {'diff': 0.0001324579999999985}...</msg>
<status status="PASS" starttime="20201029 12:47:17.958" endtime="20201029 12:47:17.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.965" level="INFO">${ACCURACY} = {'diff': [0.00013240300000000316, 0.0001325279999999998, 0.00013186100000000048, 0.00013238900000000012, 0.0001317769999999996, 0.0001324579999999985, 0.00013165299999999894, 0.0001321120000000002, 0....</msg>
<status status="PASS" starttime="20201029 12:47:17.962" endtime="20201029 12:47:17.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.970" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.969" endtime="20201029 12:47:17.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.973" level="INFO">VALUE: [0.00013240300000000316, 0.0001325279999999998, 0.00013186100000000048, 0.00013238900000000012, 0.0001317769999999996, 0.0001324579999999985, 0.00013165299999999894, 0.0001321120000000002, 0.00013238899999999665, 0.00013227799999999956, 0.0001322219999999978, 0.00013213899999999987, 0.0001326250000000008, 0.0001323340000000013, 0.0001319029999999992, 0.00013227799999999956, 0.00013213899999999987, 0.00013209700000000116, 0.0001318059999999982, 0.000132264, 0.00013215299999999944, 0.00013227799999999956, 0.0001316379999999999, 0.0001317080000000012, 0.0001325969999999982, 0.00013261100000000123, 0.00013186100000000048, 0.00013201399999999974, 0.00013215299999999944, 0.00013179100000000263, 0.00013247199999999806, 0.00013174999999999992, 0.00013179199999999863, 0.0001319029999999992, 0.00013187500000000005, 0.00013238900000000012, 0.00013259700000000166, 0.00013200000000000017, 0.000131860999999997, 0.0001323189999999988, 0.0001324029999999997, 0.0001317219999999973, 0.00013229199999999913, 0.00013219500000000162, 0.000132166999999999, 0.00013255500000000295, 0.00013205600000000192, 0.00013237500000000055, 0.00013218100000000205, 0.00013195800000000146]</msg>
<status status="PASS" starttime="20201029 12:47:17.971" endtime="20201029 12:47:17.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.966" endtime="20201029 12:47:17.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.978" endtime="20201029 12:47:17.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.976" endtime="20201029 12:47:17.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.975" endtime="20201029 12:47:17.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.616" endtime="20201029 12:47:17.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.616" endtime="20201029 12:47:17.999"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.007" endtime="20201029 12:47:18.027"></status>
</kw>
<msg timestamp="20201029 12:47:18.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.006" endtime="20201029 12:47:18.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.029" endtime="20201029 12:47:18.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.031" endtime="20201029 12:47:18.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.003" endtime="20201029 12:47:18.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.001" endtime="20201029 12:47:18.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.040" endtime="20201029 12:47:18.325"></status>
</kw>
<msg timestamp="20201029 12:47:18.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.039" endtime="20201029 12:47:18.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.329" endtime="20201029 12:47:18.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.337" endtime="20201029 12:47:18.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.036" endtime="20201029 12:47:18.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.034" endtime="20201029 12:47:18.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.344" level="INFO">${RESULT} = [{'diff': 0.0001335410000000009}, {'diff': 0.00013304099999999694}, {'diff': 0.00013277800000000006}, {'diff': 0.00013305499999999998}, {'diff': 0.00013309700000000216}, {'diff': 0.0001331109999999982...</msg>
<status status="PASS" starttime="20201029 12:47:18.341" endtime="20201029 12:47:18.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.349" level="INFO">${ACCURACY} = {'diff': [0.0001335410000000009, 0.00013304099999999694, 0.00013277800000000006, 0.00013305499999999998, 0.00013309700000000216, 0.00013311099999999826, 0.00013294500000000237, 0.00013327800000000056,...</msg>
<status status="PASS" starttime="20201029 12:47:18.345" endtime="20201029 12:47:18.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.353" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.352" endtime="20201029 12:47:18.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.356" level="INFO">VALUE: [0.0001335410000000009, 0.00013304099999999694, 0.00013277800000000006, 0.00013305499999999998, 0.00013309700000000216, 0.00013311099999999826, 0.00013294500000000237, 0.00013327800000000056, 0.00013297199999999856, 0.0001332770000000011, 0.00013265299999999994, 0.0001334999999999982, 0.00013297200000000203, 0.00013282000000000224, 0.0001336389999999979, 0.00013270799999999874, 0.00013265299999999994, 0.00013311100000000173, 0.00013355599999999995, 0.0001328470000000019, 0.0001328479999999979, 0.00013293099999999933, 0.00013356999999999952, 0.00013340200000000121, 0.00013293099999999933, 0.0001329730000000015, 0.00013280499999999973, 0.0001329030000000002, 0.0001329449999999989, 0.00013279100000000016, 0.00013345900000000244, 0.0001332080000000027, 0.0001331389999999974, 0.0001327770000000006, 0.00013365300000000094, 0.00013272300000000126, 0.00013351399999999777, 0.000132957999999999, 0.00013333299999999937, 0.000133167, 0.00013290200000000071, 0.00013266600000000003, 0.000133167, 0.00013269399999999917, 0.0001329730000000015, 0.00013337499999999808, 0.0001328340000000018, 0.0001327640000000005, 0.00013370799999999974, 0.0001328340000000018]</msg>
<status status="PASS" starttime="20201029 12:47:18.354" endtime="20201029 12:47:18.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.350" endtime="20201029 12:47:18.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.361" endtime="20201029 12:47:18.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.359" endtime="20201029 12:47:18.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.358" endtime="20201029 12:47:18.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.000" endtime="20201029 12:47:18.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.999" endtime="20201029 12:47:18.381"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.390" endtime="20201029 12:47:18.410"></status>
</kw>
<msg timestamp="20201029 12:47:18.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.388" endtime="20201029 12:47:18.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.411" endtime="20201029 12:47:18.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.414" endtime="20201029 12:47:18.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.386" endtime="20201029 12:47:18.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.384" endtime="20201029 12:47:18.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.423" endtime="20201029 12:47:18.711"></status>
</kw>
<msg timestamp="20201029 12:47:18.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.421" endtime="20201029 12:47:18.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.715" endtime="20201029 12:47:18.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.723" endtime="20201029 12:47:18.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.419" endtime="20201029 12:47:18.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.417" endtime="20201029 12:47:18.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.729" level="INFO">${RESULT} = [{'diff': 0.0001344030000000017}, {'diff': 0.0001340969999999997}, {'diff': 0.00013463900000000237}, {'diff': 0.0001339030000000012}, {'diff': 0.00013454200000000138}, {'diff': 0.00013423599999999938}...</msg>
<status status="PASS" starttime="20201029 12:47:18.726" endtime="20201029 12:47:18.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.733" level="INFO">${ACCURACY} = {'diff': [0.0001344030000000017, 0.0001340969999999997, 0.00013463900000000237, 0.0001339030000000012, 0.00013454200000000138, 0.00013423599999999938, 0.00013397199999999956, 0.00013451400000000224, 0...</msg>
<status status="PASS" starttime="20201029 12:47:18.730" endtime="20201029 12:47:18.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.738" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.737" endtime="20201029 12:47:18.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.740" level="INFO">VALUE: [0.0001344030000000017, 0.0001340969999999997, 0.00013463900000000237, 0.0001339030000000012, 0.00013454200000000138, 0.00013423599999999938, 0.00013397199999999956, 0.00013451400000000224, 0.00013433399999999984, 0.00013383299999999987, 0.00013413799999999892, 0.0001345970000000002, 0.0001343060000000007, 0.00013440200000000221, 0.00013422199999999981, 0.0001345280000000018, 0.00013451399999999877, 0.00013384699999999944, 0.00013438899999999865, 0.00013390200000000171, 0.00013393100000000033, 0.00013452699999999887, 0.00013386100000000248, 0.00013433399999999984, 0.00013452699999999887, 0.00013374999999999845, 0.00013365300000000094, 0.00013412499999999883, 0.00013369499999999965, 0.00013411100000000273, 0.00013430500000000123, 0.000134264000000002, 0.00013415299999999797, 0.00013429200000000113, 0.00013387500000000205, 0.00013418100000000058, 0.00013394400000000042, 0.00013463900000000237, 0.00013456899999999758, 0.00013429100000000166, 0.00013441700000000126, 0.0001340969999999997, 0.00013416699999999754, 0.0001346250000000028, 0.00013391599999999781, 0.00013386100000000248, 0.00013402700000000184, 0.00013458300000000062, 0.0001339869999999986, 0.0001345419999999979]</msg>
<status status="PASS" starttime="20201029 12:47:18.739" endtime="20201029 12:47:18.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.734" endtime="20201029 12:47:18.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.745" endtime="20201029 12:47:18.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.744" endtime="20201029 12:47:18.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.743" endtime="20201029 12:47:18.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.382" endtime="20201029 12:47:18.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.382" endtime="20201029 12:47:18.766"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.775" endtime="20201029 12:47:18.795"></status>
</kw>
<msg timestamp="20201029 12:47:18.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.773" endtime="20201029 12:47:18.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.797" endtime="20201029 12:47:18.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.799" endtime="20201029 12:47:18.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.771" endtime="20201029 12:47:18.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.768" endtime="20201029 12:47:18.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.808" endtime="20201029 12:47:19.094"></status>
</kw>
<msg timestamp="20201029 12:47:19.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:18.807" endtime="20201029 12:47:19.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:19.098" endtime="20201029 12:47:19.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.106" endtime="20201029 12:47:19.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.804" endtime="20201029 12:47:19.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.802" endtime="20201029 12:47:19.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.112" level="INFO">${RESULT} = [{'diff': 0.00013577800000000306}, {'diff': 0.00013518100000000158}, {'diff': 0.00013480499999999826}, {'diff': 0.00013533300000000137}, {'diff': 0.00013484700000000044}, {'diff': 0.000134834000000000...</msg>
<status status="PASS" starttime="20201029 12:47:19.109" endtime="20201029 12:47:19.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.116" level="INFO">${ACCURACY} = {'diff': [0.00013577800000000306, 0.00013518100000000158, 0.00013480499999999826, 0.00013533300000000137, 0.00013484700000000044, 0.00013483400000000034, 0.0001352230000000003, 0.00013547200000000106,...</msg>
<status status="PASS" starttime="20201029 12:47:19.113" endtime="20201029 12:47:19.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.121" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.120" endtime="20201029 12:47:19.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.123" level="INFO">VALUE: [0.00013577800000000306, 0.00013518100000000158, 0.00013480499999999826, 0.00013533300000000137, 0.00013484700000000044, 0.00013483400000000034, 0.0001352230000000003, 0.00013547200000000106, 0.0001349030000000022, 0.00013545799999999802, 0.00013520800000000124, 0.00013524999999999995, 0.00013468100000000108, 0.00013541599999999931, 0.00013488899999999915, 0.00013558300000000162, 0.00013530499999999876, 0.00013519400000000167, 0.0001353610000000005, 0.0001351389999999994, 0.0001356109999999973, 0.00013484699999999697, 0.0001350280000000023, 0.0001349999999999997, 0.00013483400000000034, 0.00013520799999999777, 0.00013520900000000072, 0.00013518100000000158, 0.00013487499999999958, 0.0001351389999999994, 0.0001355000000000002, 0.00013475000000000292, 0.00013526399999999952, 0.00013552699999999987, 0.00013556900000000205, 0.00013515299999999897, 0.00013552699999999987, 0.00013548600000000063, 0.00013488899999999915, 0.00013551399999999977, 0.00013533300000000137, 0.00013545900000000097, 0.0001355000000000002, 0.00013494400000000142, 0.00013507000000000102, 0.0001355000000000002, 0.00013482000000000077, 0.00013552799999999934, 0.00013536099999999704, 0.0001346670000000015]</msg>
<status status="PASS" starttime="20201029 12:47:19.122" endtime="20201029 12:47:19.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.117" endtime="20201029 12:47:19.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.129" endtime="20201029 12:47:19.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.128" endtime="20201029 12:47:19.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.126" endtime="20201029 12:47:19.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.767" endtime="20201029 12:47:19.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.766" endtime="20201029 12:47:19.150"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.158" endtime="20201029 12:47:19.178"></status>
</kw>
<msg timestamp="20201029 12:47:19.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.157" endtime="20201029 12:47:19.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.180" endtime="20201029 12:47:19.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.182" endtime="20201029 12:47:19.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.154" endtime="20201029 12:47:19.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.152" endtime="20201029 12:47:19.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.191" endtime="20201029 12:47:19.477"></status>
</kw>
<msg timestamp="20201029 12:47:19.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.190" endtime="20201029 12:47:19.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.481" endtime="20201029 12:47:19.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.489" endtime="20201029 12:47:19.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.187" endtime="20201029 12:47:19.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.185" endtime="20201029 12:47:19.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.496" level="INFO">${RESULT} = [{'diff': 0.00013658300000000262}, {'diff': 0.00013591599999999981}, {'diff': 0.00013647200000000206}, {'diff': 0.00013597299999999757}, {'diff': 0.00013565300000000294}, {'diff': 0.000136514000000000...</msg>
<status status="PASS" starttime="20201029 12:47:19.493" endtime="20201029 12:47:19.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.501" level="INFO">${ACCURACY} = {'diff': [0.00013658300000000262, 0.00013591599999999981, 0.00013647200000000206, 0.00013597299999999757, 0.00013565300000000294, 0.00013651400000000077, 0.0001358329999999984, 0.00013638900000000065,...</msg>
<status status="PASS" starttime="20201029 12:47:19.497" endtime="20201029 12:47:19.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.505" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.504" endtime="20201029 12:47:19.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.508" level="INFO">VALUE: [0.00013658300000000262, 0.00013591599999999981, 0.00013647200000000206, 0.00013597299999999757, 0.00013565300000000294, 0.00013651400000000077, 0.0001358329999999984, 0.00013638900000000065, 0.00013656899999999958, 0.00013595900000000147, 0.00013617999999999963, 0.00013566599999999956, 0.00013634699999999847, 0.00013593100000000233, 0.00013632000000000227, 0.0001357779999999996, 0.00013598599999999766, 0.0001361390000000004, 0.00013638900000000065, 0.0001356389999999999, 0.0001357779999999996, 0.00013661100000000176, 0.00013644399999999945, 0.0001364169999999998, 0.0001356670000000025, 0.0001361390000000004, 0.00013558299999999815, 0.00013598599999999766, 0.00013648599999999816, 0.00013563800000000042, 0.00013615299999999997, 0.00013594400000000242, 0.00013594499999999843, 0.0001360269999999969, 0.00013662500000000133, 0.00013597200000000156, 0.00013658399999999862, 0.00013659699999999872, 0.00013565299999999947, 0.00013572200000000131, 0.0001357909999999997, 0.00013672199999999884, 0.0001358060000000022, 0.00013595799999999852, 0.00013598599999999766, 0.00013583400000000134, 0.00013651400000000077, 0.00013626400000000052, 0.00013644499999999893, 0.0001361390000000004]</msg>
<status status="PASS" starttime="20201029 12:47:19.506" endtime="20201029 12:47:19.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.502" endtime="20201029 12:47:19.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.513" endtime="20201029 12:47:19.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.511" endtime="20201029 12:47:19.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.510" endtime="20201029 12:47:19.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.151" endtime="20201029 12:47:19.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.150" endtime="20201029 12:47:19.533"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.542" endtime="20201029 12:47:19.562"></status>
</kw>
<msg timestamp="20201029 12:47:19.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.540" endtime="20201029 12:47:19.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.563" endtime="20201029 12:47:19.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.566" endtime="20201029 12:47:19.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.538" endtime="20201029 12:47:19.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.536" endtime="20201029 12:47:19.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.575" endtime="20201029 12:47:19.861"></status>
</kw>
<msg timestamp="20201029 12:47:19.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.573" endtime="20201029 12:47:19.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.865" endtime="20201029 12:47:19.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.874" endtime="20201029 12:47:19.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.571" endtime="20201029 12:47:19.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.569" endtime="20201029 12:47:19.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.881" level="INFO">${RESULT} = [{'diff': 0.00013726399999999805}, {'diff': 0.00013765300000000147}, {'diff': 0.00013740199999999828}, {'diff': 0.0001368329999999994}, {'diff': 0.00013724999999999848}, {'diff': 0.0001371670000000005...</msg>
<status status="PASS" starttime="20201029 12:47:19.877" endtime="20201029 12:47:19.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.885" level="INFO">${ACCURACY} = {'diff': [0.00013726399999999805, 0.00013765300000000147, 0.00013740199999999828, 0.0001368329999999994, 0.00013724999999999848, 0.00013716700000000054, 0.00013751400000000177, 0.00013708299999999965,...</msg>
<status status="PASS" starttime="20201029 12:47:19.882" endtime="20201029 12:47:19.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.890" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.889" endtime="20201029 12:47:19.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.892" level="INFO">VALUE: [0.00013726399999999805, 0.00013765300000000147, 0.00013740199999999828, 0.0001368329999999994, 0.00013724999999999848, 0.00013716700000000054, 0.00013751400000000177, 0.00013708299999999965, 0.00013758300000000015, 0.0001370000000000017, 0.0001370550000000005, 0.00013690200000000124, 0.0001370550000000005, 0.00013755600000000048, 0.0001370550000000005, 0.00013666700000000004, 0.00013713899999999793, 0.00013688800000000168, 0.0001369719999999991, 0.0001376109999999993, 0.0001376390000000019, 0.00013690200000000124, 0.0001373329999999999, 0.00013720799999999977, 0.00013724999999999848, 0.00013734699999999947, 0.00013745800000000002, 0.00013734799999999894, 0.0001369719999999991, 0.00013708299999999965, 0.0001375420000000009, 0.00013719499999999968, 0.00013712500000000183, 0.00013720899999999925, 0.000136958999999999, 0.00013756900000000058, 0.00013744499999999993, 0.000136958999999999, 0.0001368329999999994, 0.00013674999999999798, 0.00013666700000000004, 0.00013684699999999897, 0.00013748699999999864, 0.00013702800000000084, 0.00013743100000000036, 0.00013731900000000033, 0.00013701400000000127, 0.00013708299999999965, 0.0001368329999999994, 0.00013730500000000076]</msg>
<status status="PASS" starttime="20201029 12:47:19.891" endtime="20201029 12:47:19.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.886" endtime="20201029 12:47:19.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.897" endtime="20201029 12:47:19.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.895" endtime="20201029 12:47:19.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.894" endtime="20201029 12:47:19.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.534" endtime="20201029 12:47:19.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.534" endtime="20201029 12:47:19.919"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.932" endtime="20201029 12:47:19.954"></status>
</kw>
<msg timestamp="20201029 12:47:19.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.930" endtime="20201029 12:47:19.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.955" endtime="20201029 12:47:19.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.958" endtime="20201029 12:47:19.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.926" endtime="20201029 12:47:19.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.923" endtime="20201029 12:47:19.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.967" endtime="20201029 12:47:20.251"></status>
</kw>
<msg timestamp="20201029 12:47:20.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028821167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028959611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.965" endtime="20201029 12:47:20.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028821167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028959611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.255" endtime="20201029 12:47:20.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.263" endtime="20201029 12:47:20.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.963" endtime="20201029 12:47:20.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.961" endtime="20201029 12:47:20.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.269" level="INFO">${RESULT} = [{'diff': 0.00013844399999999799}, {'diff': 0.00013827799999999862}, {'diff': 0.00013786099999999954}, {'diff': 0.00013798599999999966}, {'diff': 0.00013798599999999966}, {'diff': 0.000137958000000000...</msg>
<status status="PASS" starttime="20201029 12:47:20.266" endtime="20201029 12:47:20.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.274" level="INFO">${ACCURACY} = {'diff': [0.00013844399999999799, 0.00013827799999999862, 0.00013786099999999954, 0.00013798599999999966, 0.00013798599999999966, 0.00013795800000000052, 0.00013781900000000083, 0.00013818000000000163...</msg>
<status status="PASS" starttime="20201029 12:47:20.270" endtime="20201029 12:47:20.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.278" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.277" endtime="20201029 12:47:20.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.280" level="INFO">VALUE: [0.00013844399999999799, 0.00013827799999999862, 0.00013786099999999954, 0.00013798599999999966, 0.00013798599999999966, 0.00013795800000000052, 0.00013781900000000083, 0.00013818000000000163, 0.000137959, 0.00013854199999999844, 0.00013834700000000047, 0.00013772199999999984, 0.00013797299999999957, 0.00013795800000000052, 0.00013770800000000027, 0.00013847300000000007, 0.00013808299999999718, 0.00013811099999999632, 0.00013790200000000225, 0.00013773599999999941, 0.00013819500000000068, 0.00013783300000000387, 0.00013790299999999478, 0.00013845800000000102, 0.00013777799999999812, 0.00013858300000000462, 0.0001381390000000024, 0.0001379720000000001, 0.00013858299999999768, 0.00013852799999999887, 0.00013783300000000387, 0.00013777799999999812, 0.00013837500000000308, 0.00013816700000000154, 0.0001383339999999969, 0.00013794500000000043, 0.0001385970000000042, 0.00013784700000000344, 0.00013780500000000473, 0.00013805600000000445, 0.00013805599999999751, 0.00013779100000000516, 0.0001379720000000001, 0.00013858299999999768, 0.00013852799999999887, 0.00013772199999999984, 0.0001384590000000005, 0.00013827799999999862, 0.00013811100000000326, 0.00013822200000000034]</msg>
<status status="PASS" starttime="20201029 12:47:20.279" endtime="20201029 12:47:20.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.274" endtime="20201029 12:47:20.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.286" endtime="20201029 12:47:20.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.285" endtime="20201029 12:47:20.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.284" endtime="20201029 12:47:20.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.921" endtime="20201029 12:47:20.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.920" endtime="20201029 12:47:20.307"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.315" endtime="20201029 12:47:20.335"></status>
</kw>
<msg timestamp="20201029 12:47:20.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.314" endtime="20201029 12:47:20.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.337" endtime="20201029 12:47:20.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.340" endtime="20201029 12:47:20.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.311" endtime="20201029 12:47:20.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.309" endtime="20201029 12:47:20.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.349" endtime="20201029 12:47:20.634"></status>
</kw>
<msg timestamp="20201029 12:47:20.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021600361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.347" endtime="20201029 12:47:20.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021600361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.638" endtime="20201029 12:47:20.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.646" endtime="20201029 12:47:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.344" endtime="20201029 12:47:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.343" endtime="20201029 12:47:20.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.653" level="INFO">${RESULT} = [{'diff': 0.00013943100000000236}, {'diff': 0.00013909700000000122}, {'diff': 0.0001393750000000006}, {'diff': 0.00013929099999999972}, {'diff': 0.00013944399999999899}, {'diff': 0.0001386110000000003...</msg>
<status status="PASS" starttime="20201029 12:47:20.650" endtime="20201029 12:47:20.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.658" level="INFO">${ACCURACY} = {'diff': [0.00013943100000000236, 0.00013909700000000122, 0.0001393750000000006, 0.00013929099999999972, 0.00013944399999999899, 0.0001386110000000003, 0.00013900000000000023, 0.00013888899999999968, ...</msg>
<status status="PASS" starttime="20201029 12:47:20.654" endtime="20201029 12:47:20.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.662" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.661" endtime="20201029 12:47:20.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.664" level="INFO">VALUE: [0.00013943100000000236, 0.00013909700000000122, 0.0001393750000000006, 0.00013929099999999972, 0.00013944399999999899, 0.0001386110000000003, 0.00013900000000000023, 0.00013888899999999968, 0.00013950000000000073, 0.00013947199999999813, 0.00013894499999999796, 0.0001391110000000008, 0.00013902800000000284, 0.00013894400000000195, 0.00013868099999999814, 0.000138959000000001, 0.00013951399999999683, 0.00013872199999999738, 0.00013950000000000073, 0.00013881899999999836, 0.00013869399999999824, 0.00013940300000000322, 0.00013894399999999849, 0.00013909700000000122, 0.00013900000000000023, 0.00013912500000000036, 0.0001390139999999998, 0.00013956999999999858, 0.00013881900000000183, 0.00013886100000000054, 0.00013870800000000127, 0.0001388330000000014, 0.0001394859999999977, 0.0001395270000000004, 0.00013933299999999843, 0.00013954199999999944, 0.00013958299999999868, 0.00013909700000000122, 0.00013895800000000152, 0.00013908399999999765, 0.00013870800000000127, 0.0001389859999999972, 0.00013902799999999937, 0.00013876300000000008, 0.00013888899999999968, 0.0001394720000000016, 0.0001391659999999996, 0.00013908400000000112, 0.00013920900000000125, 0.00013895799999999806]</msg>
<status status="PASS" starttime="20201029 12:47:20.663" endtime="20201029 12:47:20.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.658" endtime="20201029 12:47:20.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.669" endtime="20201029 12:47:20.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.668" endtime="20201029 12:47:20.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.667" endtime="20201029 12:47:20.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.308" endtime="20201029 12:47:20.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.307" endtime="20201029 12:47:20.690"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.699" endtime="20201029 12:47:20.719"></status>
</kw>
<msg timestamp="20201029 12:47:20.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.697" endtime="20201029 12:47:20.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.721" endtime="20201029 12:47:20.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.725" endtime="20201029 12:47:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.695" endtime="20201029 12:47:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.693" endtime="20201029 12:47:20.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.734" endtime="20201029 12:47:21.020"></status>
</kw>
<msg timestamp="20201029 12:47:21.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.733" endtime="20201029 12:47:21.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.025" endtime="20201029 12:47:21.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.033" endtime="20201029 12:47:21.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.730" endtime="20201029 12:47:21.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.728" endtime="20201029 12:47:21.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.039" level="INFO">${RESULT} = [{'diff': 0.00014042999999999695}, {'diff': 0.00014055600000000001}, {'diff': 0.0001404859999999987}, {'diff': 0.00014005500000000004}, {'diff': 0.00014050000000000173}, {'diff': 0.0001399859999999982...</msg>
<status status="PASS" starttime="20201029 12:47:21.036" endtime="20201029 12:47:21.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.043" level="INFO">${ACCURACY} = {'diff': [0.00014042999999999695, 0.00014055600000000001, 0.0001404859999999987, 0.00014005500000000004, 0.00014050000000000173, 0.0001399859999999982, 0.00014005500000000004, 0.00013970900000000175, ...</msg>
<status status="PASS" starttime="20201029 12:47:21.040" endtime="20201029 12:47:21.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.048" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.047" endtime="20201029 12:47:21.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.050" level="INFO">VALUE: [0.00014042999999999695, 0.00014055600000000001, 0.0001404859999999987, 0.00014005500000000004, 0.00014050000000000173, 0.0001399859999999982, 0.00014005500000000004, 0.00013970900000000175, 0.00014011099999999832, 0.00014005500000000004, 0.0001401249999999979, 0.00014043100000000336, 0.0001403750000000016, 0.00013998600000000166, 0.0001405409999999975, 0.00014050000000000173, 0.0001397079999999988, 0.00014013899999999746, 0.00013962500000000086, 0.0001403750000000016, 0.0001405270000000014, 0.00014025000000000148, 0.00014016700000000007, 0.00014005600000000298, 0.00014047199999999913, 0.00014012500000000136, 0.0001401110000000018, 0.00014012500000000136, 0.0001398200000000023, 0.00013994499999999896, 0.00014034700000000247, 0.0001403050000000003, 0.00014059699999999925, 0.0001396249999999974, 0.00014061099999999882, 0.00014055500000000054, 0.00014062500000000186, 0.0001404309999999999, 0.00014000000000000123, 0.00014016700000000007, 0.00014008399999999865, 0.000139862000000001, 0.0001401110000000018, 0.00014009699999999875, 0.00014011099999999832, 0.0001404590000000025, 0.0001395689999999991, 0.0001403750000000016, 0.00013975000000000098, 0.00013983299999999893]</msg>
<status status="PASS" starttime="20201029 12:47:21.049" endtime="20201029 12:47:21.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.044" endtime="20201029 12:47:21.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.055" endtime="20201029 12:47:21.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.053" endtime="20201029 12:47:21.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.052" endtime="20201029 12:47:21.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.691" endtime="20201029 12:47:21.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.691" endtime="20201029 12:47:21.076"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.084" endtime="20201029 12:47:21.105"></status>
</kw>
<msg timestamp="20201029 12:47:21.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.083" endtime="20201029 12:47:21.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.107" endtime="20201029 12:47:21.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.109" endtime="20201029 12:47:21.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.080" endtime="20201029 12:47:21.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.078" endtime="20201029 12:47:21.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.118" endtime="20201029 12:47:21.404"></status>
</kw>
<msg timestamp="20201029 12:47:21.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.117" endtime="20201029 12:47:21.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.408" endtime="20201029 12:47:21.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.416" endtime="20201029 12:47:21.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.114" endtime="20201029 12:47:21.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.113" endtime="20201029 12:47:21.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.422" level="INFO">${RESULT} = [{'diff': 0.0001416249999999994}, {'diff': 0.0001412920000000012}, {'diff': 0.00014088900000000168}, {'diff': 0.00014137499999999914}, {'diff': 0.0001411249999999989}, {'diff': 0.00014066700000000057}...</msg>
<status status="PASS" starttime="20201029 12:47:21.419" endtime="20201029 12:47:21.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.427" level="INFO">${ACCURACY} = {'diff': [0.0001416249999999994, 0.0001412920000000012, 0.00014088900000000168, 0.00014137499999999914, 0.0001411249999999989, 0.00014066700000000057, 0.0001408889999999982, 0.0001413339999999999, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:21.423" endtime="20201029 12:47:21.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.431" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.430" endtime="20201029 12:47:21.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.434" level="INFO">VALUE: [0.0001416249999999994, 0.0001412920000000012, 0.00014088900000000168, 0.00014137499999999914, 0.0001411249999999989, 0.00014066700000000057, 0.0001408889999999982, 0.0001413339999999999, 0.00014068000000000067, 0.0001413889999999987, 0.0001409310000000004, 0.00014104200000000094, 0.0001416249999999994, 0.00014158300000000068, 0.0001408469999999995, 0.00014129100000000172, 0.00014107000000000008, 0.00014106899999999714, 0.00014155499999999807, 0.00014063900000000143, 0.00014113899999999846, 0.00014122199999999988, 0.00014086099999999907, 0.00014144500000000046, 0.0001413750000000026, 0.00014077700000000165, 0.00014111099999999932, 0.0001409859999999992, 0.00014158300000000068, 0.00014155600000000101, 0.000141347, 0.00014155499999999807, 0.00014157000000000058, 0.00014122299999999935, 0.00014063900000000143, 0.0001408880000000022, 0.00014069400000000024, 0.00014137499999999914, 0.0001410690000000006, 0.00014074999999999852, 0.00014149999999999927, 0.00014077799999999766, 0.0001406249999999984, 0.00014087499999999864, 0.00014126399999999859, 0.00014107000000000008, 0.00014155600000000101, 0.00014155599999999754, 0.0001415829999999972, 0.0001411950000000002]</msg>
<status status="PASS" starttime="20201029 12:47:21.432" endtime="20201029 12:47:21.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.427" endtime="20201029 12:47:21.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.439" endtime="20201029 12:47:21.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.438" endtime="20201029 12:47:21.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.436" endtime="20201029 12:47:21.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.077" endtime="20201029 12:47:21.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.076" endtime="20201029 12:47:21.460"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.468" endtime="20201029 12:47:21.489"></status>
</kw>
<msg timestamp="20201029 12:47:21.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.467" endtime="20201029 12:47:21.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.490" endtime="20201029 12:47:21.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.492" endtime="20201029 12:47:21.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.464" endtime="20201029 12:47:21.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.462" endtime="20201029 12:47:21.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.501" endtime="20201029 12:47:21.787"></status>
</kw>
<msg timestamp="20201029 12:47:21.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.500" endtime="20201029 12:47:21.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.791" endtime="20201029 12:47:21.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.799" endtime="20201029 12:47:21.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.497" endtime="20201029 12:47:21.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.496" endtime="20201029 12:47:21.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.805" level="INFO">${RESULT} = [{'diff': 0.00014186100000000007}, {'diff': 0.00014199999999999977}, {'diff': 0.00014173699999999942}, {'diff': 0.00014254199999999898}, {'diff': 0.00014229099999999925}, {'diff': 0.000141680000000001...</msg>
<status status="PASS" starttime="20201029 12:47:21.802" endtime="20201029 12:47:21.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.810" level="INFO">${ACCURACY} = {'diff': [0.00014186100000000007, 0.00014199999999999977, 0.00014173699999999942, 0.00014254199999999898, 0.00014229099999999925, 0.00014168000000000167, 0.00014168100000000114, 0.00014251300000000036...</msg>
<status status="PASS" starttime="20201029 12:47:21.806" endtime="20201029 12:47:21.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.815" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.814" endtime="20201029 12:47:21.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.817" level="INFO">VALUE: [0.00014186100000000007, 0.00014199999999999977, 0.00014173699999999942, 0.00014254199999999898, 0.00014229099999999925, 0.00014168000000000167, 0.00014168100000000114, 0.00014251300000000036, 0.00014233300000000143, 0.0001423889999999997, 0.00014174999999999952, 0.00014173599999999995, 0.00014244399999999852, 0.00014225000000000002, 0.00014231900000000186, 0.00014187499999999964, 0.00014225000000000002, 0.00014265299999999953, 0.00014183300000000093, 0.00014169400000000124, 0.00014230499999999882, 0.00014251399999999984, 0.00014245800000000156, 0.00014230600000000176, 0.0001421249999999999, 0.00014244399999999852, 0.0001425279999999994, 0.00014182000000000083, 0.0001424999999999968, 0.00014202800000000237, 0.0001422630000000001, 0.00014257000000000158, 0.00014244399999999852, 0.00014218100000000164, 0.00014247199999999766, 0.0001421249999999999, 0.00014191699999999835, 0.00014237500000000014, 0.00014219400000000174, 0.0001425279999999994, 0.00014204199999999848, 0.00014255500000000254, 0.00014243099999999842, 0.00014256999999999811, 0.00014195900000000053, 0.00014187499999999964, 0.00014161099999999982, 0.0001416249999999994, 0.00014230600000000176, 0.00014213899999999946]</msg>
<status status="PASS" starttime="20201029 12:47:21.816" endtime="20201029 12:47:21.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.811" endtime="20201029 12:47:21.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.822" endtime="20201029 12:47:21.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.820" endtime="20201029 12:47:21.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.819" endtime="20201029 12:47:21.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.461" endtime="20201029 12:47:21.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.460" endtime="20201029 12:47:21.843"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.851" endtime="20201029 12:47:21.871"></status>
</kw>
<msg timestamp="20201029 12:47:21.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.850" endtime="20201029 12:47:21.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.873" endtime="20201029 12:47:21.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.876" endtime="20201029 12:47:21.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.847" endtime="20201029 12:47:21.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.845" endtime="20201029 12:47:21.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.884" endtime="20201029 12:47:22.173"></status>
</kw>
<msg timestamp="20201029 12:47:22.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.883" endtime="20201029 12:47:22.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021625792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.177" endtime="20201029 12:47:22.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.185" endtime="20201029 12:47:22.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.880" endtime="20201029 12:47:22.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.879" endtime="20201029 12:47:22.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.192" level="INFO">${RESULT} = [{'diff': 0.000143041}, {'diff': 0.0001433609999999981}, {'diff': 0.00014336200000000104}, {'diff': 0.00014361199999999782}, {'diff': 0.0001432219999999984}, {'diff': 0.00014326400000000059}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:47:22.189" endtime="20201029 12:47:22.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.196" level="INFO">${ACCURACY} = {'diff': [0.000143041, 0.0001433609999999981, 0.00014336200000000104, 0.00014361199999999782, 0.0001432219999999984, 0.00014326400000000059, 0.0001429860000000012, 0.00014337500000000114, 0.0001430980...</msg>
<status status="PASS" starttime="20201029 12:47:22.193" endtime="20201029 12:47:22.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.200" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.199" endtime="20201029 12:47:22.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.202" level="INFO">VALUE: [0.000143041, 0.0001433609999999981, 0.00014336200000000104, 0.00014361199999999782, 0.0001432219999999984, 0.00014326400000000059, 0.0001429860000000012, 0.00014337500000000114, 0.00014309800000000122, 0.00014275000000000052, 0.0001433059999999993, 0.00014361100000000182, 0.00014266700000000257, 0.00014316600000000013, 0.00014265200000000006, 0.00014329199999999973, 0.0001433609999999981, 0.00014318099999999917, 0.00014320799999999884, 0.00014305500000000304, 0.00014305599999999905, 0.00014304199999999948, 0.00014261100000000082, 0.00014320799999999884, 0.0001435280000000004, 0.00014344399999999952, 0.00014337500000000114, 0.00014329099999999678, 0.0001433609999999981, 0.00014283299999999846, 0.00014286100000000107, 0.00014323600000000145, 0.00014277799999999966, 0.000143138999999997, 0.00014294400000000249, 0.00014291700000000282, 0.00014265299999999953, 0.00014352700000000093, 0.00014269400000000224, 0.00014293099999999892, 0.00014312499999999742, 0.0001426799999999992, 0.00014281999999999836, 0.00014279099999999975, 0.0001435280000000004, 0.00014272200000000138, 0.00014300000000000077, 0.0001429860000000012, 0.00014283299999999846, 0.00014304200000000294]</msg>
<status status="PASS" starttime="20201029 12:47:22.201" endtime="20201029 12:47:22.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.196" endtime="20201029 12:47:22.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.207" endtime="20201029 12:47:22.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.206" endtime="20201029 12:47:22.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.205" endtime="20201029 12:47:22.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.844" endtime="20201029 12:47:22.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.843" endtime="20201029 12:47:22.228"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.237" endtime="20201029 12:47:22.258"></status>
</kw>
<msg timestamp="20201029 12:47:22.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.235" endtime="20201029 12:47:22.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.259" endtime="20201029 12:47:22.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.262" endtime="20201029 12:47:22.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.233" endtime="20201029 12:47:22.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.231" endtime="20201029 12:47:22.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.271" endtime="20201029 12:47:22.556"></status>
</kw>
<msg timestamp="20201029 12:47:22.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.269" endtime="20201029 12:47:22.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.561" endtime="20201029 12:47:22.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.569" endtime="20201029 12:47:22.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.267" endtime="20201029 12:47:22.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.265" endtime="20201029 12:47:22.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.575" level="INFO">${RESULT} = [{'diff': 0.0001441250000000019}, {'diff': 0.00014418100000000017}, {'diff': 0.00014423599999999898}, {'diff': 0.00014438899999999824}, {'diff': 0.00014387499999999817}, {'diff': 0.0001445139999999983...</msg>
<status status="PASS" starttime="20201029 12:47:22.572" endtime="20201029 12:47:22.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.579" level="INFO">${ACCURACY} = {'diff': [0.0001441250000000019, 0.00014418100000000017, 0.00014423599999999898, 0.00014438899999999824, 0.00014387499999999817, 0.00014451399999999837, 0.00014455500000000107, 0.00014433299999999996,...</msg>
<status status="PASS" starttime="20201029 12:47:22.576" endtime="20201029 12:47:22.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.584" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.583" endtime="20201029 12:47:22.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.586" level="INFO">VALUE: [0.0001441250000000019, 0.00014418100000000017, 0.00014423599999999898, 0.00014438899999999824, 0.00014387499999999817, 0.00014451399999999837, 0.00014455500000000107, 0.00014433299999999996, 0.0001439449999999995, 0.000144347999999999, 0.0001443609999999991, 0.0001444999999999988, 0.00014444400000000052, 0.00014406900000000014, 0.000144445, 0.0001436250000000014, 0.00014369399999999977, 0.00014447199999999966, 0.0001442630000000021, 0.00014379200000000023, 0.00014438899999999824, 0.00014368099999999967, 0.0001445280000000014, 0.00014401400000000134, 0.0001439860000000022, 0.0001436670000000001, 0.0001445280000000014, 0.00014427800000000116, 0.00014365299999999706, 0.00014413900000000146, 0.0001438890000000012, 0.00014377800000000066, 0.0001445830000000002, 0.00014387499999999817, 0.0001440280000000009, 0.00014447199999999966, 0.0001443890000000017, 0.0001442219999999994, 0.00014365300000000053, 0.00014409799999999875, 0.00014395899999999906, 0.0001435280000000004, 0.00014459699999999978, 0.0001437219999999989, 0.00014409699999999928, 0.00014448599999999923, 0.00014411099999999885, 0.00014401399999999787, 0.0001441670000000006, 0.00014366600000000063]</msg>
<status status="PASS" starttime="20201029 12:47:22.585" endtime="20201029 12:47:22.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.580" endtime="20201029 12:47:22.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.592" endtime="20201029 12:47:22.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.590" endtime="20201029 12:47:22.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.589" endtime="20201029 12:47:22.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.229" endtime="20201029 12:47:22.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.229" endtime="20201029 12:47:22.612"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.621" endtime="20201029 12:47:22.641"></status>
</kw>
<msg timestamp="20201029 12:47:22.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.619" endtime="20201029 12:47:22.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.643" endtime="20201029 12:47:22.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.645" endtime="20201029 12:47:22.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.617" endtime="20201029 12:47:22.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.615" endtime="20201029 12:47:22.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.654" endtime="20201029 12:47:22.939"></status>
</kw>
<msg timestamp="20201029 12:47:22.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.653" endtime="20201029 12:47:22.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.943" endtime="20201029 12:47:22.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.952" endtime="20201029 12:47:22.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.650" endtime="20201029 12:47:22.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.648" endtime="20201029 12:47:22.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.958" level="INFO">${RESULT} = [{'diff': 0.00014529200000000173}, {'diff': 0.00014466600000000163}, {'diff': 0.0001451809999999977}, {'diff': 0.00014492999999999798}, {'diff': 0.00014486100000000307}, {'diff': 0.0001449450000000005...</msg>
<status status="PASS" starttime="20201029 12:47:22.955" endtime="20201029 12:47:22.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.963" level="INFO">${ACCURACY} = {'diff': [0.00014529200000000173, 0.00014466600000000163, 0.0001451809999999977, 0.00014492999999999798, 0.00014486100000000307, 0.0001449450000000005, 0.0001446670000000011, 0.00014498599999999973, 0...</msg>
<status status="PASS" starttime="20201029 12:47:22.959" endtime="20201029 12:47:22.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.968" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.966" endtime="20201029 12:47:22.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.970" level="INFO">VALUE: [0.00014529200000000173, 0.00014466600000000163, 0.0001451809999999977, 0.00014492999999999798, 0.00014486100000000307, 0.0001449450000000005, 0.0001446670000000011, 0.00014498599999999973, 0.00014469500000000024, 0.00014480500000000132, 0.0001447219999999999, 0.00014502699999999896, 0.0001454999999999998, 0.00014486199999999907, 0.0001446670000000011, 0.00014547300000000013, 0.0001446670000000011, 0.00014533399999999697, 0.00014474999999999905, 0.00014526400000000259, 0.00014492999999999798, 0.00014506900000000114, 0.00014515299999999856, 0.00014534699999999706, 0.0001452220000000004, 0.00014547200000000066, 0.00014515299999999856, 0.00014534699999999706, 0.00014511199999999932, 0.00014541600000000238, 0.0001451800000000017, 0.00014497200000000016, 0.00014558400000000069, 0.00014484700000000003, 0.00014477800000000166, 0.00014498599999999973, 0.0001447219999999999, 0.00014520800000000084, 0.00014502799999999844, 0.0001445830000000002, 0.00014515299999999856, 0.00014479099999999828, 0.00014547200000000066, 0.00014543100000000142, 0.0001454719999999972, 0.00014505500000000157, 0.00014556900000000164, 0.00014523599999999998, 0.00014541700000000185, 0.00014495800000000059]</msg>
<status status="PASS" starttime="20201029 12:47:22.969" endtime="20201029 12:47:22.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.964" endtime="20201029 12:47:22.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.975" endtime="20201029 12:47:22.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.973" endtime="20201029 12:47:22.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.972" endtime="20201029 12:47:22.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.613" endtime="20201029 12:47:22.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.613" endtime="20201029 12:47:22.996"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.004" endtime="20201029 12:47:23.025"></status>
</kw>
<msg timestamp="20201029 12:47:23.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.003" endtime="20201029 12:47:23.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.026" endtime="20201029 12:47:23.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.029" endtime="20201029 12:47:23.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.000" endtime="20201029 12:47:23.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.998" endtime="20201029 12:47:23.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.038" endtime="20201029 12:47:23.325"></status>
</kw>
<msg timestamp="20201029 12:47:23.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.036" endtime="20201029 12:47:23.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.329" endtime="20201029 12:47:23.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.337" endtime="20201029 12:47:23.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.034" endtime="20201029 12:47:23.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.032" endtime="20201029 12:47:23.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.344" level="INFO">${RESULT} = [{'diff': 0.0001458610000000006}, {'diff': 0.00014654100000000003}, {'diff': 0.00014608299999999824}, {'diff': 0.0001460549999999991}, {'diff': 0.00014569400000000177}, {'diff': 0.00014627799999999969...</msg>
<status status="PASS" starttime="20201029 12:47:23.341" endtime="20201029 12:47:23.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.348" level="INFO">${ACCURACY} = {'diff': [0.0001458610000000006, 0.00014654100000000003, 0.00014608299999999824, 0.0001460549999999991, 0.00014569400000000177, 0.00014627799999999969, 0.00014625000000000055, 0.00014629199999999926, ...</msg>
<status status="PASS" starttime="20201029 12:47:23.345" endtime="20201029 12:47:23.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.352" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.351" endtime="20201029 12:47:23.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.355" level="INFO">VALUE: [0.0001458610000000006, 0.00014654100000000003, 0.00014608299999999824, 0.0001460549999999991, 0.00014569400000000177, 0.00014627799999999969, 0.00014625000000000055, 0.00014629199999999926, 0.00014598600000000073, 0.00014606900000000214, 0.00014612500000000042, 0.00014615299999999956, 0.00014580500000000232, 0.0001459719999999977, 0.0001458610000000006, 0.00014657000000000212, 0.00014569499999999777, 0.0001464159999999999, 0.00014582000000000137, 0.00014575000000000005, 0.000146445000000002, 0.00014581899999999842, 0.00014580499999999885, 0.00014592999999999898, 0.00014651400000000037, 0.0001456389999999995, 0.00014651400000000037, 0.00014637500000000067, 0.00014612500000000042, 0.00014648599999999776, 0.00014595900000000106, 0.00014591700000000235, 0.00014605599999999858, 0.00014637500000000067, 0.00014586200000000007, 0.00014616599999999966, 0.0001465000000000008, 0.00014604099999999953, 0.00014656899999999917, 0.00014609700000000128, 0.00014625000000000055, 0.00014633399999999797, 0.0001460969999999978, 0.00014637500000000067, 0.0001459159999999994, 0.00014597300000000063, 0.00014655599999999908, 0.000146041999999999, 0.00014584700000000103, 0.00014594399999999855]</msg>
<status status="PASS" starttime="20201029 12:47:23.353" endtime="20201029 12:47:23.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.349" endtime="20201029 12:47:23.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.360" endtime="20201029 12:47:23.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.358" endtime="20201029 12:47:23.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.357" endtime="20201029 12:47:23.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.996" endtime="20201029 12:47:23.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.996" endtime="20201029 12:47:23.380"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.389" endtime="20201029 12:47:23.410"></status>
</kw>
<msg timestamp="20201029 12:47:23.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.387" endtime="20201029 12:47:23.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.412" endtime="20201029 12:47:23.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.414" endtime="20201029 12:47:23.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.385" endtime="20201029 12:47:23.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.383" endtime="20201029 12:47:23.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.423" endtime="20201029 12:47:23.709"></status>
</kw>
<msg timestamp="20201029 12:47:23.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.422" endtime="20201029 12:47:23.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.713" endtime="20201029 12:47:23.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.721" endtime="20201029 12:47:23.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.419" endtime="20201029 12:47:23.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.417" endtime="20201029 12:47:23.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.728" level="INFO">${RESULT} = [{'diff': 0.0001475000000000018}, {'diff': 0.0001474719999999992}, {'diff': 0.00014733400000000244}, {'diff': 0.00014677699999999724}, {'diff': 0.00014722199999999894}, {'diff': 0.00014741700000000038...</msg>
<status status="PASS" starttime="20201029 12:47:23.724" endtime="20201029 12:47:23.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.733" level="INFO">${ACCURACY} = {'diff': [0.0001475000000000018, 0.0001474719999999992, 0.00014733400000000244, 0.00014677699999999724, 0.00014722199999999894, 0.00014741700000000038, 0.0001467220000000019, 0.00014734700000000253, 0...</msg>
<status status="PASS" starttime="20201029 12:47:23.730" endtime="20201029 12:47:23.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.738" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.737" endtime="20201029 12:47:23.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.740" level="INFO">VALUE: [0.0001475000000000018, 0.0001474719999999992, 0.00014733400000000244, 0.00014677699999999724, 0.00014722199999999894, 0.00014741700000000038, 0.0001467220000000019, 0.00014734700000000253, 0.00014733300000000296, 0.0001471939999999998, 0.00014730599999999983, 0.000146832999999999, 0.00014661099999999788, 0.0001466390000000005, 0.00014680499999999985, 0.0001467220000000019, 0.00014693099999999945, 0.00014665300000000006, 0.0001468749999999977, 0.00014702800000000044, 0.00014677699999999724, 0.00014727800000000069, 0.0001474719999999992, 0.00014691699999999988, 0.00014738900000000124, 0.00014694399999999955, 0.00014676399999999715, 0.0001469719999999987, 0.00014719499999999927, 0.00014722199999999894, 0.0001467220000000019, 0.00014756900000000017, 0.00014716699999999666, 0.0001472359999999985, 0.00014661099999999788, 0.00014738899999999777, 0.0001473749999999982, 0.0001474030000000008, 0.00014740200000000134, 0.00014747300000000213, 0.00014662500000000092, 0.00014706899999999967, 0.00014661100000000135, 0.00014666699999999963, 0.00014747299999999866, 0.00014708399999999872, 0.00014726400000000112, 0.00014745799999999962, 0.00014738900000000124, 0.00014701400000000087]</msg>
<status status="PASS" starttime="20201029 12:47:23.739" endtime="20201029 12:47:23.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.734" endtime="20201029 12:47:23.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.746" endtime="20201029 12:47:23.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.744" endtime="20201029 12:47:23.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.743" endtime="20201029 12:47:23.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.381" endtime="20201029 12:47:23.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.381" endtime="20201029 12:47:23.767"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.775" endtime="20201029 12:47:23.796"></status>
</kw>
<msg timestamp="20201029 12:47:23.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.774" endtime="20201029 12:47:23.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.797" endtime="20201029 12:47:23.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.800" endtime="20201029 12:47:23.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.771" endtime="20201029 12:47:23.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.769" endtime="20201029 12:47:23.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.811" endtime="20201029 12:47:24.098"></status>
</kw>
<msg timestamp="20201029 12:47:24.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.809" endtime="20201029 12:47:24.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.103" endtime="20201029 12:47:24.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.111" endtime="20201029 12:47:24.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.806" endtime="20201029 12:47:24.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.803" endtime="20201029 12:47:24.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.117" level="INFO">${RESULT} = [{'diff': 0.00014849999999999933}, {'diff': 0.00014815300000000156}, {'diff': 0.0001479719999999997}, {'diff': 0.0001485139999999989}, {'diff': 0.00014816700000000113}, {'diff': 0.00014849999999999933...</msg>
<status status="PASS" starttime="20201029 12:47:24.114" endtime="20201029 12:47:24.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.122" level="INFO">${ACCURACY} = {'diff': [0.00014849999999999933, 0.00014815300000000156, 0.0001479719999999997, 0.0001485139999999989, 0.00014816700000000113, 0.00014849999999999933, 0.00014815300000000156, 0.00014786200000000208, ...</msg>
<status status="PASS" starttime="20201029 12:47:24.118" endtime="20201029 12:47:24.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.126" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.125" endtime="20201029 12:47:24.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.129" level="INFO">VALUE: [0.00014849999999999933, 0.00014815300000000156, 0.0001479719999999997, 0.0001485139999999989, 0.00014816700000000113, 0.00014849999999999933, 0.00014815300000000156, 0.00014786200000000208, 0.00014824999999999908, 0.00014854199999999804, 0.00014840200000000234, 0.00014819500000000027, 0.00014762499999999845, 0.00014811099999999938, 0.0001479589999999996, 0.00014802800000000144, 0.00014851400000000237, 0.00014840200000000234, 0.0001479030000000013, 0.00014788800000000227, 0.00014765199999999812, 0.00014798599999999926, 0.0001477919999999973, 0.00014852799999999847, 0.00014854099999999856, 0.00014852800000000194, 0.00014777800000000119, 0.00014788899999999827, 0.0001476810000000002, 0.00014776400000000162, 0.0001484720000000002, 0.00014784699999999956, 0.00014779200000000076, 0.00014772199999999944, 0.000148139000000002, 0.00014795800000000012, 0.0001479719999999997, 0.0001480139999999984, 0.0001480550000000011, 0.00014761099999999888, 0.00014845800000000062, 0.00014799999999999883, 0.0001482909999999983, 0.00014791599999999794, 0.00014841599999999844, 0.00014762500000000192, 0.0001483749999999992, 0.0001484720000000002, 0.00014826399999999865, 0.0001479719999999997]</msg>
<status status="PASS" starttime="20201029 12:47:24.128" endtime="20201029 12:47:24.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.123" endtime="20201029 12:47:24.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.134" endtime="20201029 12:47:24.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.133" endtime="20201029 12:47:24.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.131" endtime="20201029 12:47:24.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.768" endtime="20201029 12:47:24.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.767" endtime="20201029 12:47:24.155"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.163" endtime="20201029 12:47:24.184"></status>
</kw>
<msg timestamp="20201029 12:47:24.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.162" endtime="20201029 12:47:24.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.185" endtime="20201029 12:47:24.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.188" endtime="20201029 12:47:24.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.159" endtime="20201029 12:47:24.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.157" endtime="20201029 12:47:24.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.197" endtime="20201029 12:47:24.483"></status>
</kw>
<msg timestamp="20201029 12:47:24.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.195" endtime="20201029 12:47:24.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.487" endtime="20201029 12:47:24.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.495" endtime="20201029 12:47:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.193" endtime="20201029 12:47:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.191" endtime="20201029 12:47:24.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.502" level="INFO">${RESULT} = [{'diff': 0.00014952799999999947}, {'diff': 0.00014945800000000162}, {'diff': 0.0001491529999999991}, {'diff': 0.00014926399999999965}, {'diff': 0.00014881999999999743}, {'diff': 0.0001486940000000013...</msg>
<status status="PASS" starttime="20201029 12:47:24.499" endtime="20201029 12:47:24.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.506" level="INFO">${ACCURACY} = {'diff': [0.00014952799999999947, 0.00014945800000000162, 0.0001491529999999991, 0.00014926399999999965, 0.00014881999999999743, 0.0001486940000000013, 0.00014888899999999927, 0.00014944500000000152, ...</msg>
<status status="PASS" starttime="20201029 12:47:24.503" endtime="20201029 12:47:24.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.510" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.509" endtime="20201029 12:47:24.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.512" level="INFO">VALUE: [0.00014952799999999947, 0.00014945800000000162, 0.0001491529999999991, 0.00014926399999999965, 0.00014881999999999743, 0.0001486940000000013, 0.00014888899999999927, 0.00014944500000000152, 0.0001494720000000012, 0.00014866699999999816, 0.00014933299999999802, 0.0001487079999999974, 0.00014911100000000038, 0.00014947300000000066, 0.00014869500000000077, 0.0001487079999999974, 0.0001490139999999994, 0.00014941599999999944, 0.00014905600000000158, 0.00014926300000000017, 0.00014955600000000208, 0.0001495139999999999, 0.00014954199999999904, 0.0001490970000000008, 0.00014938899999999977, 0.0001494720000000012, 0.00014912499999999995, 0.00014862499999999945, 0.00014883400000000047, 0.00014886100000000013, 0.00014886100000000013, 0.00014908400000000072, 0.00014938899999999977, 0.00014944500000000152, 0.00014874999999999958, 0.00014945799999999815, 0.00014941700000000238, 0.00014899999999999983, 0.00014884700000000056, 0.00014862499999999945, 0.00014918099999999823, 0.0001491949999999978, 0.00014869500000000077, 0.00014963799999999708, 0.00014912499999999995, 0.00014926399999999965, 0.0001489030000000023, 0.00014944399999999858, 0.00014926300000000017, 0.0001493200000000014]</msg>
<status status="PASS" starttime="20201029 12:47:24.511" endtime="20201029 12:47:24.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.506" endtime="20201029 12:47:24.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.517" endtime="20201029 12:47:24.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.516" endtime="20201029 12:47:24.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.515" endtime="20201029 12:47:24.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.156" endtime="20201029 12:47:24.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.155" endtime="20201029 12:47:24.538"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.547" endtime="20201029 12:47:24.568"></status>
</kw>
<msg timestamp="20201029 12:47:24.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.545" endtime="20201029 12:47:24.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.570" endtime="20201029 12:47:24.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.572" endtime="20201029 12:47:24.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.543" endtime="20201029 12:47:24.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.541" endtime="20201029 12:47:24.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.582" endtime="20201029 12:47:24.867"></status>
</kw>
<msg timestamp="20201029 12:47:24.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.580" endtime="20201029 12:47:24.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.871" endtime="20201029 12:47:24.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.879" endtime="20201029 12:47:24.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.577" endtime="20201029 12:47:24.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.576" endtime="20201029 12:47:24.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.886" level="INFO">${RESULT} = [{'diff': 0.0001506530000000006}, {'diff': 0.00015054200000000004}, {'diff': 0.00015027800000000022}, {'diff': 0.00015048600000000176}, {'diff': 0.00015048600000000176}, {'diff': 0.0001498340000000014...</msg>
<status status="PASS" starttime="20201029 12:47:24.883" endtime="20201029 12:47:24.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.890" level="INFO">${ACCURACY} = {'diff': [0.0001506530000000006, 0.00015054200000000004, 0.00015027800000000022, 0.00015048600000000176, 0.00015048600000000176, 0.00014983400000000147, 0.00015038900000000077, 0.00014993100000000245,...</msg>
<status status="PASS" starttime="20201029 12:47:24.887" endtime="20201029 12:47:24.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.894" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.893" endtime="20201029 12:47:24.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.897" level="INFO">VALUE: [0.0001506530000000006, 0.00015054200000000004, 0.00015027800000000022, 0.00015048600000000176, 0.00015048600000000176, 0.00014983400000000147, 0.00015038900000000077, 0.00014993100000000245, 0.00014990299999999984, 0.00015054200000000004, 0.00015045800000000262, 0.00014986099999999766, 0.00015022199999999847, 0.00014970900000000134, 0.0001502919999999998, 0.0001501530000000001, 0.00015022199999999847, 0.00014958400000000122, 0.00015002799999999997, 0.00014998600000000126, 0.00014991599999999994, 0.00015015200000000062, 0.00014963900000000002, 0.00015008399999999825, 0.0001501660000000002, 0.00015002799999999997, 0.0001501660000000002, 0.00015045799999999915, 0.00015026399999999718, 0.0001499030000000033, 0.00014972199999999797, 0.00015058299999999927, 0.00015047199999999872, 0.0001499720000000017, 0.0001501109999999979, 0.0001504169999999999, 0.00014966699999999916, 0.00014966699999999916, 0.000150527999999997, 0.00015026399999999718, 0.0001501949999999988, 0.0001501530000000001, 0.0001500140000000004, 0.00015004199999999954, 0.0001501530000000001, 0.00015047199999999872, 0.00015012500000000095, 0.00015009699999999834, 0.00015043, 0.0001500270000000005]</msg>
<status status="PASS" starttime="20201029 12:47:24.895" endtime="20201029 12:47:24.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.891" endtime="20201029 12:47:24.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.903" endtime="20201029 12:47:24.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.901" endtime="20201029 12:47:24.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.900" endtime="20201029 12:47:24.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.539" endtime="20201029 12:47:24.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.539" endtime="20201029 12:47:24.923"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.932" endtime="20201029 12:47:24.953"></status>
</kw>
<msg timestamp="20201029 12:47:24.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.930" endtime="20201029 12:47:24.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.954" endtime="20201029 12:47:24.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.957" endtime="20201029 12:47:24.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.928" endtime="20201029 12:47:24.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.926" endtime="20201029 12:47:24.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.966" endtime="20201029 12:47:25.252"></status>
</kw>
<msg timestamp="20201029 12:47:25.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.965" endtime="20201029 12:47:25.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.256" endtime="20201029 12:47:25.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.264" endtime="20201029 12:47:25.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.962" endtime="20201029 12:47:25.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.961" endtime="20201029 12:47:25.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.271" level="INFO">${RESULT} = [{'diff': 0.00015126399999999818}, {'diff': 0.000151527999999998}, {'diff': 0.00015076400000000115}, {'diff': 0.00015090300000000084}, {'diff': 0.0001513469999999996}, {'diff': 0.00015077700000000124}...</msg>
<status status="PASS" starttime="20201029 12:47:25.267" endtime="20201029 12:47:25.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.275" level="INFO">${ACCURACY} = {'diff': [0.00015126399999999818, 0.000151527999999998, 0.00015076400000000115, 0.00015090300000000084, 0.0001513469999999996, 0.00015077700000000124, 0.00015144500000000005, 0.0001511109999999989, 0....</msg>
<status status="PASS" starttime="20201029 12:47:25.272" endtime="20201029 12:47:25.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.280" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.279" endtime="20201029 12:47:25.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.283" level="INFO">VALUE: [0.00015126399999999818, 0.000151527999999998, 0.00015076400000000115, 0.00015090300000000084, 0.0001513469999999996, 0.00015077700000000124, 0.00015144500000000005, 0.0001511109999999989, 0.0001513889999999983, 0.00015077800000000072, 0.00015131899999999698, 0.0001510140000000014, 0.0001511530000000011, 0.00015140200000000187, 0.00015138799999999883, 0.00015072199999999897, 0.00015097199999999922, 0.00015101399999999793, 0.0001510690000000002, 0.00015126399999999818, 0.00015077799999999725, 0.00015058400000000222, 0.00015113800000000205, 0.0001512499999999986, 0.0001507230000000019, 0.00015072200000000244, 0.00015149999999999886, 0.0001512360000000025, 0.00015123599999999904, 0.0001506660000000007, 0.00015144400000000058, 0.00015095799999999965, 0.00015072199999999897, 0.0001505970000000023, 0.00015109699999999934, 0.00015127800000000122, 0.0001508469999999991, 0.00015109799999999882, 0.00015120800000000337, 0.00015070800000000287, 0.00015058300000000274, 0.0001509859999999988, 0.00015080500000000038, 0.00015131900000000045, 0.0001512910000000013, 0.0001509300000000005, 0.00015118100000000023, 0.00015148600000000276, 0.00015159699999999984, 0.0001512920000000008]</msg>
<status status="PASS" starttime="20201029 12:47:25.281" endtime="20201029 12:47:25.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.276" endtime="20201029 12:47:25.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.288" endtime="20201029 12:47:25.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.286" endtime="20201029 12:47:25.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.285" endtime="20201029 12:47:25.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.924" endtime="20201029 12:47:25.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.924" endtime="20201029 12:47:25.308"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.317" endtime="20201029 12:47:25.338"></status>
</kw>
<msg timestamp="20201029 12:47:25.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.315" endtime="20201029 12:47:25.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.339" endtime="20201029 12:47:25.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.342" endtime="20201029 12:47:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.313" endtime="20201029 12:47:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.311" endtime="20201029 12:47:25.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.351" endtime="20201029 12:47:25.640"></status>
</kw>
<msg timestamp="20201029 12:47:25.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.350" endtime="20201029 12:47:25.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.644" endtime="20201029 12:47:25.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.652" endtime="20201029 12:47:25.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.347" endtime="20201029 12:47:25.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.345" endtime="20201029 12:47:25.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.658" level="INFO">${RESULT} = [{'diff': 0.00015259699999999737}, {'diff': 0.00015177799999999825}, {'diff': 0.00015255499999999866}, {'diff': 0.00015177799999999825}, {'diff': 0.00015172199999999997}, {'diff': 0.000151694000000000...</msg>
<status status="PASS" starttime="20201029 12:47:25.655" endtime="20201029 12:47:25.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.662" level="INFO">${ACCURACY} = {'diff': [0.00015259699999999737, 0.00015177799999999825, 0.00015255499999999866, 0.00015177799999999825, 0.00015172199999999997, 0.00015169400000000083, 0.00015162499999999898, 0.00015165199999999865...</msg>
<status status="PASS" starttime="20201029 12:47:25.659" endtime="20201029 12:47:25.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.667" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.666" endtime="20201029 12:47:25.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.669" level="INFO">VALUE: [0.00015259699999999737, 0.00015177799999999825, 0.00015255499999999866, 0.00015177799999999825, 0.00015172199999999997, 0.00015169400000000083, 0.00015162499999999898, 0.00015165199999999865, 0.0001522499999999996, 0.0001523059999999979, 0.00015220900000000037, 0.0001517080000000004, 0.00015199999999999936, 0.00015205599999999764, 0.0001516119999999989, 0.00015223600000000004, 0.00015177800000000172, 0.00015169400000000083, 0.0001522499999999996, 0.00015208300000000077, 0.0001524019999999994, 0.00015188900000000227, 0.00015208300000000077, 0.00015231899999999798, 0.00015158399999999975, 0.00015186099999999966, 0.0001520560000000011, 0.0001520690000000012, 0.00015255499999999866, 0.00015230499999999841, 0.00015200000000000283, 0.000151834, 0.00015232000000000093, 0.00015212499999999948, 0.00015240300000000234, 0.00015176400000000215, 0.00015252800000000247, 0.00015169499999999683, 0.0001520279999999985, 0.00015170799999999693, 0.00015251399999999943, 0.00015187499999999923, 0.0001517499999999991, 0.00015168100000000073, 0.0001518889999999988, 0.0001523470000000006, 0.00015201399999999893, 0.000151834, 0.00015163900000000202, 0.00015209700000000034]</msg>
<status status="PASS" starttime="20201029 12:47:25.668" endtime="20201029 12:47:25.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.663" endtime="20201029 12:47:25.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.674" endtime="20201029 12:47:25.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.673" endtime="20201029 12:47:25.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.671" endtime="20201029 12:47:25.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.309" endtime="20201029 12:47:25.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.309" endtime="20201029 12:47:25.695"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.703" endtime="20201029 12:47:25.725"></status>
</kw>
<msg timestamp="20201029 12:47:25.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.702" endtime="20201029 12:47:25.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.727" endtime="20201029 12:47:25.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.729" endtime="20201029 12:47:25.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.699" endtime="20201029 12:47:25.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.697" endtime="20201029 12:47:25.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.738" endtime="20201029 12:47:26.029"></status>
</kw>
<msg timestamp="20201029 12:47:26.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.737" endtime="20201029 12:47:26.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.033" endtime="20201029 12:47:26.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.041" endtime="20201029 12:47:26.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.734" endtime="20201029 12:47:26.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.732" endtime="20201029 12:47:26.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.048" level="INFO">${RESULT} = [{'diff': 0.00015358399999999828}, {'diff': 0.00015358400000000175}, {'diff': 0.00015357000000000218}, {'diff': 0.00015313900000000005}, {'diff': 0.00015365300000000012}, {'diff': 0.000152624999999999...</msg>
<status status="PASS" starttime="20201029 12:47:26.045" endtime="20201029 12:47:26.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.052" level="INFO">${ACCURACY} = {'diff': [0.00015358399999999828, 0.00015358400000000175, 0.00015357000000000218, 0.00015313900000000005, 0.00015365300000000012, 0.00015262499999999998, 0.00015263900000000302, 0.00015344400000000258...</msg>
<status status="PASS" starttime="20201029 12:47:26.049" endtime="20201029 12:47:26.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.056" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.055" endtime="20201029 12:47:26.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.059" level="INFO">VALUE: [0.00015358399999999828, 0.00015358400000000175, 0.00015357000000000218, 0.00015313900000000005, 0.00015365300000000012, 0.00015262499999999998, 0.00015263900000000302, 0.00015344400000000258, 0.00015269399999999836, 0.00015277700000000324, 0.00015332000000000193, 0.00015262499999999998, 0.000152834000000001, 0.00015313900000000005, 0.0001532080000000019, 0.00015276399999999968, 0.00015295799999999818, 0.00015309700000000134, 0.00015340299999999987, 0.00015293100000000198, 0.0001532500000000006, 0.00015343100000000248, 0.00015313900000000005, 0.0001531660000000032, 0.0001526950000000013, 0.0001534999999999974, 0.00015331899999999898, 0.00015261099999999694, 0.00015287500000000023, 0.00015348599999999782, 0.00015294500000000155, 0.00015315200000000015, 0.0001527080000000014, 0.0001528889999999998, 0.00015263899999999955, 0.00015312500000000048, 0.00015319400000000233, 0.0001530140000000034, 0.00015279099999999934, 0.00015333299999999855, 0.00015295900000000112, 0.00015326400000000018, 0.0001528889999999998, 0.00015301399999999993, 0.00015263899999999955, 0.00015308300000000177, 0.0001528889999999998, 0.00015345799999999868, 0.00015330500000000288, 0.00015283399999999753]</msg>
<status status="PASS" starttime="20201029 12:47:26.057" endtime="20201029 12:47:26.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.053" endtime="20201029 12:47:26.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.069" endtime="20201029 12:47:26.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.067" endtime="20201029 12:47:26.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.066" endtime="20201029 12:47:26.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.696" endtime="20201029 12:47:26.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.695" endtime="20201029 12:47:26.090"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.098" endtime="20201029 12:47:26.119"></status>
</kw>
<msg timestamp="20201029 12:47:26.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.096" endtime="20201029 12:47:26.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.120" endtime="20201029 12:47:26.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.123" endtime="20201029 12:47:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.094" endtime="20201029 12:47:26.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.092" endtime="20201029 12:47:26.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.132" endtime="20201029 12:47:26.418"></status>
</kw>
<msg timestamp="20201029 12:47:26.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.130" endtime="20201029 12:47:26.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.422" endtime="20201029 12:47:26.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.430" endtime="20201029 12:47:26.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.128" endtime="20201029 12:47:26.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.126" endtime="20201029 12:47:26.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.437" level="INFO">${RESULT} = [{'diff': 0.00015448599999999882}, {'diff': 0.00015401400000000093}, {'diff': 0.0001541110000000019}, {'diff': 0.000153834000000002}, {'diff': 0.00015401400000000093}, {'diff': 0.00015391600000000047}...</msg>
<status status="PASS" starttime="20201029 12:47:26.433" endtime="20201029 12:47:26.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.442" level="INFO">${ACCURACY} = {'diff': [0.00015448599999999882, 0.00015401400000000093, 0.0001541110000000019, 0.000153834000000002, 0.00015401400000000093, 0.00015391600000000047, 0.0001540829999999993, 0.00015363800000000108, 0....</msg>
<status status="PASS" starttime="20201029 12:47:26.438" endtime="20201029 12:47:26.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.446" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.445" endtime="20201029 12:47:26.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.448" level="INFO">VALUE: [0.00015448599999999882, 0.00015401400000000093, 0.0001541110000000019, 0.000153834000000002, 0.00015401400000000093, 0.00015391600000000047, 0.0001540829999999993, 0.00015363800000000108, 0.00015401400000000093, 0.0001542080000000029, 0.00015369399999999936, 0.00015365300000000012, 0.00015417999999999682, 0.00015358399999999828, 0.0001541670000000002, 0.00015409700000000234, 0.00015430500000000041, 0.00015447199999999925, 0.00015370799999999893, 0.00015365200000000065, 0.00015397199999999875, 0.00015377800000000025, 0.0001539730000000017, 0.00015433299999999955, 0.0001540829999999993, 0.00015401400000000093, 0.00015419499999999933, 0.00015443000000000054, 0.00015391699999999994, 0.00015391600000000047, 0.00015427799999999728, 0.00015409700000000234, 0.0001545829999999998, 0.0001540280000000005, 0.0001537089999999984, 0.00015358399999999828, 0.00015384699999999862, 0.0001540280000000005, 0.00015426400000000118, 0.00015413800000000158, 0.00015419399999999986, 0.00015369399999999936, 0.0001537500000000011, 0.00015433299999999955, 0.00015445799999999968, 0.00015400000000000136, 0.0001536249999999975, 0.0001535829999999988, 0.00015440199999999793, 0.00015415300000000062]</msg>
<status status="PASS" starttime="20201029 12:47:26.447" endtime="20201029 12:47:26.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.442" endtime="20201029 12:47:26.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.453" endtime="20201029 12:47:26.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.452" endtime="20201029 12:47:26.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.451" endtime="20201029 12:47:26.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.090" endtime="20201029 12:47:26.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.090" endtime="20201029 12:47:26.474"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.483" endtime="20201029 12:47:26.504"></status>
</kw>
<msg timestamp="20201029 12:47:26.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.481" endtime="20201029 12:47:26.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.505" endtime="20201029 12:47:26.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.508" endtime="20201029 12:47:26.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.479" endtime="20201029 12:47:26.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.476" endtime="20201029 12:47:26.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.516" endtime="20201029 12:47:26.804"></status>
</kw>
<msg timestamp="20201029 12:47:26.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:26.515" endtime="20201029 12:47:26.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:26.808" endtime="20201029 12:47:26.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.816" endtime="20201029 12:47:26.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.512" endtime="20201029 12:47:26.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.511" endtime="20201029 12:47:26.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.823" level="INFO">${RESULT} = [{'diff': 0.00015512500000000248}, {'diff': 0.0001552500000000026}, {'diff': 0.00015501399999999846}, {'diff': 0.00015530500000000141}, {'diff': 0.00015550000000000286}, {'diff': 0.000155222}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:47:26.820" endtime="20201029 12:47:26.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.827" level="INFO">${ACCURACY} = {'diff': [0.00015512500000000248, 0.0001552500000000026, 0.00015501399999999846, 0.00015530500000000141, 0.00015550000000000286, 0.000155222, 0.00015480499999999744, 0.0001549310000000005, 0.000155041...</msg>
<status status="PASS" starttime="20201029 12:47:26.824" endtime="20201029 12:47:26.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.831" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.830" endtime="20201029 12:47:26.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.834" level="INFO">VALUE: [0.00015512500000000248, 0.0001552500000000026, 0.00015501399999999846, 0.00015530500000000141, 0.00015550000000000286, 0.000155222, 0.00015480499999999744, 0.0001549310000000005, 0.0001550410000000016, 0.00015462499999999851, 0.00015537499999999926, 0.0001554999999999994, 0.00015501299999999898, 0.00015544500000000058, 0.00015493000000000104, 0.00015513900000000205, 0.00015470799999999993, 0.0001550410000000016, 0.00015506900000000073, 0.00015555599999999767, 0.00015470900000000287, 0.00015508399999999978, 0.00015506899999999726, 0.00015488899999999833, 0.00015504200000000107, 0.00015459699999999937, 0.00015461099999999894, 0.00015456900000000023, 0.00015476400000000168, 0.00015533300000000055, 0.00015513899999999858, 0.0001550830000000003, 0.00015547299999999972, 0.00015494500000000008, 0.00015481900000000048, 0.00015493000000000104, 0.00015463899999999808, 0.00015490199999999843, 0.00015537500000000273, 0.00015544500000000058, 0.00015477800000000125, 0.00015540300000000187, 0.00015519500000000033, 0.0001547219999999995, 0.00015519500000000033, 0.00015531900000000098, 0.00015469499999999983, 0.00015463900000000155, 0.00015456900000000023, 0.00015495800000000018]</msg>
<status status="PASS" starttime="20201029 12:47:26.832" endtime="20201029 12:47:26.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.828" endtime="20201029 12:47:26.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.839" endtime="20201029 12:47:26.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.837" endtime="20201029 12:47:26.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.836" endtime="20201029 12:47:26.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.475" endtime="20201029 12:47:26.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.474" endtime="20201029 12:47:26.860"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.868" endtime="20201029 12:47:26.890"></status>
</kw>
<msg timestamp="20201029 12:47:26.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.867" endtime="20201029 12:47:26.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.892" endtime="20201029 12:47:26.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.894" endtime="20201029 12:47:26.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.864" endtime="20201029 12:47:26.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.862" endtime="20201029 12:47:26.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.903" endtime="20201029 12:47:27.189"></status>
</kw>
<msg timestamp="20201029 12:47:27.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.901" endtime="20201029 12:47:27.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.193" endtime="20201029 12:47:27.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.201" endtime="20201029 12:47:27.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.899" endtime="20201029 12:47:27.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.897" endtime="20201029 12:47:27.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.207" level="INFO">${RESULT} = [{'diff': 0.00015586099999999672}, {'diff': 0.00015641699999999897}, {'diff': 0.00015633300000000155}, {'diff': 0.00015591699999999847}, {'diff': 0.0001561800000000023}, {'diff': 0.0001565419999999991...</msg>
<status status="PASS" starttime="20201029 12:47:27.204" endtime="20201029 12:47:27.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.211" level="INFO">${ACCURACY} = {'diff': [0.00015586099999999672, 0.00015641699999999897, 0.00015633300000000155, 0.00015591699999999847, 0.0001561800000000023, 0.0001565419999999991, 0.000156222000000001, 0.0001563610000000007, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:27.208" endtime="20201029 12:47:27.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.216" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.215" endtime="20201029 12:47:27.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.218" level="INFO">VALUE: [0.00015586099999999672, 0.00015641699999999897, 0.00015633300000000155, 0.00015591699999999847, 0.0001561800000000023, 0.0001565419999999991, 0.000156222000000001, 0.0001563610000000007, 0.0001559310000000015, 0.0001558199999999975, 0.000155915999999999, 0.00015647199999999778, 0.00015579200000000182, 0.00015638899999999983, 0.0001556939999999979, 0.00015605600000000164, 0.0001565549999999992, 0.0001563610000000007, 0.0001557220000000005, 0.00015561099999999994, 0.0001559029999999989, 0.00015588899999999933, 0.000155915999999999, 0.00015574999999999964, 0.00015580499999999844, 0.00015627799999999928, 0.0001565419999999991, 0.00015640199999999993, 0.00015640199999999993, 0.00015579099999999887, 0.00015569500000000083, 0.00015597200000000075, 0.00015629200000000232, 0.00015598600000000032, 0.00015609700000000087, 0.0001562639999999997, 0.00015602699999999955, 0.0001558610000000002, 0.00015562500000000298, 0.00015601399999999946, 0.000156222000000001, 0.00015634700000000112, 0.00015633300000000155, 0.0001564029999999994, 0.0001558060000000014, 0.00015629199999999885, 0.00015598600000000032, 0.00015580500000000191, 0.00015612500000000001, 0.00015637500000000026]</msg>
<status status="PASS" starttime="20201029 12:47:27.217" endtime="20201029 12:47:27.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.212" endtime="20201029 12:47:27.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.224" endtime="20201029 12:47:27.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.223" endtime="20201029 12:47:27.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.221" endtime="20201029 12:47:27.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.860" endtime="20201029 12:47:27.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.860" endtime="20201029 12:47:27.245"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.253" endtime="20201029 12:47:27.274"></status>
</kw>
<msg timestamp="20201029 12:47:27.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.252" endtime="20201029 12:47:27.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.276" endtime="20201029 12:47:27.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.278" endtime="20201029 12:47:27.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.249" endtime="20201029 12:47:27.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.247" endtime="20201029 12:47:27.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.288" endtime="20201029 12:47:27.572"></status>
</kw>
<msg timestamp="20201029 12:47:27.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:27.286" endtime="20201029 12:47:27.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:27.576" endtime="20201029 12:47:27.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.585" endtime="20201029 12:47:27.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.283" endtime="20201029 12:47:27.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.282" endtime="20201029 12:47:27.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.591" level="INFO">${RESULT} = [{'diff': 0.00015694399999999914}, {'diff': 0.00015725000000000114}, {'diff': 0.00015661100000000094}, {'diff': 0.0001565969999999979}, {'diff': 0.0001574870000000013}, {'diff': 0.0001567640000000002}...</msg>
<status status="PASS" starttime="20201029 12:47:27.588" endtime="20201029 12:47:27.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.596" level="INFO">${ACCURACY} = {'diff': [0.00015694399999999914, 0.00015725000000000114, 0.00015661100000000094, 0.0001565969999999979, 0.0001574870000000013, 0.0001567640000000002, 0.00015737500000000126, 0.00015733299999999908, 0...</msg>
<status status="PASS" starttime="20201029 12:47:27.592" endtime="20201029 12:47:27.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.601" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.600" endtime="20201029 12:47:27.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.603" level="INFO">VALUE: [0.00015694399999999914, 0.00015725000000000114, 0.00015661100000000094, 0.0001565969999999979, 0.0001574870000000013, 0.0001567640000000002, 0.00015737500000000126, 0.00015733299999999908, 0.00015677799999999978, 0.0001568749999999973, 0.00015730499999999994, 0.00015747199999999878, 0.00015715300000000015, 0.00015698600000000132, 0.0001565549999999992, 0.0001569579999999987, 0.00015669400000000236, 0.0001566809999999988, 0.00015687500000000076, 0.00015669500000000183, 0.0001570549999999997, 0.00015733299999999908, 0.00015655599999999867, 0.0001566809999999988, 0.00015655600000000214, 0.000157222000000002, 0.0001575139999999975, 0.00015715299999999668, 0.00015683400000000153, 0.00015709700000000187, 0.00015659800000000085, 0.00015711099999999797, 0.00015711100000000144, 0.00015740299999999693, 0.00015665299999999965, 0.00015708299999999883, 0.00015698599999999785, 0.00015698599999999785, 0.0001567220000000015, 0.00015659700000000137, 0.00015692999999999957, 0.00015673600000000107, 0.00015677799999999978, 0.00015711099999999797, 0.00015661100000000094, 0.00015683299999999858, 0.00015672300000000097, 0.00015711100000000144, 0.0001573749999999978, 0.0001569029999999999]</msg>
<status status="PASS" starttime="20201029 12:47:27.602" endtime="20201029 12:47:27.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.597" endtime="20201029 12:47:27.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.608" endtime="20201029 12:47:27.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.606" endtime="20201029 12:47:27.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.605" endtime="20201029 12:47:27.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.246" endtime="20201029 12:47:27.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.245" endtime="20201029 12:47:27.629"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.638" endtime="20201029 12:47:27.659"></status>
</kw>
<msg timestamp="20201029 12:47:27.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.636" endtime="20201029 12:47:27.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.660" endtime="20201029 12:47:27.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.663" endtime="20201029 12:47:27.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.633" endtime="20201029 12:47:27.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.631" endtime="20201029 12:47:27.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.672" endtime="20201029 12:47:27.957"></status>
</kw>
<msg timestamp="20201029 12:47:27.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.670" endtime="20201029 12:47:27.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.962" endtime="20201029 12:47:27.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.970" endtime="20201029 12:47:27.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.667" endtime="20201029 12:47:27.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.666" endtime="20201029 12:47:27.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.976" level="INFO">${RESULT} = [{'diff': 0.0001582090000000029}, {'diff': 0.00015754100000000062}, {'diff': 0.00015836099999999922}, {'diff': 0.00015816600000000125}, {'diff': 0.00015775000000000164}, {'diff': 0.0001577780000000007...</msg>
<status status="PASS" starttime="20201029 12:47:27.973" endtime="20201029 12:47:27.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.980" level="INFO">${ACCURACY} = {'diff': [0.0001582090000000029, 0.00015754100000000062, 0.00015836099999999922, 0.00015816600000000125, 0.00015775000000000164, 0.00015777800000000078, 0.00015766600000000075, 0.000158222999999999, 0...</msg>
<status status="PASS" starttime="20201029 12:47:27.977" endtime="20201029 12:47:27.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.985" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.984" endtime="20201029 12:47:27.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.987" level="INFO">VALUE: [0.0001582090000000029, 0.00015754100000000062, 0.00015836099999999922, 0.00015816600000000125, 0.00015775000000000164, 0.00015777800000000078, 0.00015766600000000075, 0.000158222999999999, 0.00015802800000000103, 0.00015784700000000262, 0.00015829200000000085, 0.00015773600000000207, 0.00015847199999999978, 0.00015779200000000035, 0.00015847299999999925, 0.00015769499999999936, 0.00015756899999999976, 0.00015805600000000017, 0.0001579579999999997, 0.0001577359999999986, 0.00015849999999999892, 0.00015758299999999933, 0.00015779200000000035, 0.00015838900000000183, 0.00015847199999999978, 0.00015849999999999892, 0.00015812499999999854, 0.0001575969999999989, 0.00015834699999999965, 0.00015834699999999965, 0.00015829200000000085, 0.00015752800000000053, 0.0001577220000000025, 0.00015838899999999836, 0.00015788900000000133, 0.00015847199999999978, 0.00015768000000000032, 0.00015762500000000151, 0.00015766700000000022, 0.0001581810000000003, 0.00015788800000000186, 0.00015808400000000278, 0.0001577090000000024, 0.00015801400000000146, 0.00015755599999999967, 0.00015798599999999885, 0.00015834699999999965, 0.0001575420000000001, 0.00015806999999999974, 0.00015830600000000042]</msg>
<status status="PASS" starttime="20201029 12:47:27.986" endtime="20201029 12:47:27.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.981" endtime="20201029 12:47:27.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.993" endtime="20201029 12:47:28.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.991" endtime="20201029 12:47:28.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.990" endtime="20201029 12:47:28.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.630" endtime="20201029 12:47:28.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.629" endtime="20201029 12:47:28.014"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.022" endtime="20201029 12:47:28.044"></status>
</kw>
<msg timestamp="20201029 12:47:28.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.021" endtime="20201029 12:47:28.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.046" endtime="20201029 12:47:28.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.049" endtime="20201029 12:47:28.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.018" endtime="20201029 12:47:28.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.016" endtime="20201029 12:47:28.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.057" endtime="20201029 12:47:28.343"></status>
</kw>
<msg timestamp="20201029 12:47:28.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.056" endtime="20201029 12:47:28.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.347" endtime="20201029 12:47:28.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.355" endtime="20201029 12:47:28.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.053" endtime="20201029 12:47:28.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.052" endtime="20201029 12:47:28.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.362" level="INFO">${RESULT} = [{'diff': 0.0001588749999999993}, {'diff': 0.0001590970000000004}, {'diff': 0.00015929199999999838}, {'diff': 0.00015943099999999807}, {'diff': 0.00015908299999999737}, {'diff': 0.00015868099999999732...</msg>
<status status="PASS" starttime="20201029 12:47:28.359" endtime="20201029 12:47:28.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.366" level="INFO">${ACCURACY} = {'diff': [0.0001588749999999993, 0.0001590970000000004, 0.00015929199999999838, 0.00015943099999999807, 0.00015908299999999737, 0.00015868099999999732, 0.0001585969999999999, 0.0001592360000000001, 0....</msg>
<status status="PASS" starttime="20201029 12:47:28.363" endtime="20201029 12:47:28.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.370" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.369" endtime="20201029 12:47:28.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.373" level="INFO">VALUE: [0.0001588749999999993, 0.0001590970000000004, 0.00015929199999999838, 0.00015943099999999807, 0.00015908299999999737, 0.00015868099999999732, 0.0001585969999999999, 0.0001592360000000001, 0.00015905600000000117, 0.00015911099999999997, 0.00015866599999999828, 0.00015911099999999997, 0.00015865300000000165, 0.00015915299999999868, 0.00015938899999999936, 0.00015945799999999774, 0.00015947200000000078, 0.00015944400000000164, 0.00015902800000000203, 0.00015868099999999732, 0.0001591810000000013, 0.0001593749999999998, 0.00015948600000000035, 0.00015954099999999916, 0.00015944400000000164, 0.00015866699999999775, 0.00015886099999999972, 0.00015930499999999848, 0.0001588200000000005, 0.00015901400000000246, 0.00015879100000000188, 0.00015929199999999838, 0.00015911099999999997, 0.0001595559999999982, 0.00015906900000000126, 0.00015929199999999838, 0.000159013999999999, 0.00015929100000000238, 0.00015933299999999762, 0.00015877800000000178, 0.00015924999999999967, 0.00015894400000000114, 0.00015905600000000117, 0.00015934700000000065, 0.00015904199999999813, 0.00015936100000000022, 0.00015916700000000172, 0.00015930599999999795, 0.00015898699999999932, 0.00015904199999999813]</msg>
<status status="PASS" starttime="20201029 12:47:28.371" endtime="20201029 12:47:28.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.367" endtime="20201029 12:47:28.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.379" endtime="20201029 12:47:28.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.377" endtime="20201029 12:47:28.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.376" endtime="20201029 12:47:28.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.015" endtime="20201029 12:47:28.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.014" endtime="20201029 12:47:28.399"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.408" endtime="20201029 12:47:28.429"></status>
</kw>
<msg timestamp="20201029 12:47:28.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.406" endtime="20201029 12:47:28.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.431" endtime="20201029 12:47:28.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.433" endtime="20201029 12:47:28.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.404" endtime="20201029 12:47:28.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.402" endtime="20201029 12:47:28.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.442" endtime="20201029 12:47:28.728"></status>
</kw>
<msg timestamp="20201029 12:47:28.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.441" endtime="20201029 12:47:28.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.732" endtime="20201029 12:47:28.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.740" endtime="20201029 12:47:28.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.438" endtime="20201029 12:47:28.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.436" endtime="20201029 12:47:28.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.746" level="INFO">${RESULT} = [{'diff': 0.00016029200000000285}, {'diff': 0.00016009800000000088}, {'diff': 0.00016034700000000165}, {'diff': 0.0001605420000000031}, {'diff': 0.000160223000000001}, {'diff': 0.00016023700000000057}...</msg>
<status status="PASS" starttime="20201029 12:47:28.743" endtime="20201029 12:47:28.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.751" level="INFO">${ACCURACY} = {'diff': [0.00016029200000000285, 0.00016009800000000088, 0.00016034700000000165, 0.0001605420000000031, 0.000160223000000001, 0.00016023700000000057, 0.00015981899999999855, 0.00015959800000000038, 0...</msg>
<status status="PASS" starttime="20201029 12:47:28.748" endtime="20201029 12:47:28.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.756" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.755" endtime="20201029 12:47:28.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.758" level="INFO">VALUE: [0.00016029200000000285, 0.00016009800000000088, 0.00016034700000000165, 0.0001605420000000031, 0.000160223000000001, 0.00016023700000000057, 0.00015981899999999855, 0.00015959800000000038, 0.00015990299999999943, 0.00016033300000000208, 0.00015991599999999953, 0.0001605689999999993, 0.000159916999999999, 0.00016002799999999956, 0.00015958300000000133, 0.00015994400000000214, 0.00015980600000000192, 0.0001603620000000007, 0.00016040299999999993, 0.00016054199999999963, 0.00016000000000000042, 0.00016050000000000092, 0.00016047299999999778, 0.0001602779999999998, 0.00016038900000000036, 0.00016052800000000006, 0.00016059699999999844, 0.0001598750000000003, 0.0001596940000000019, 0.00016048600000000135, 0.00016045899999999821, 0.0001596940000000019, 0.00016004199999999913, 0.0001602360000000011, 0.0001602360000000011, 0.00015998600000000085, 0.00016002799999999956, 0.0001597360000000006, 0.00015966699999999875, 0.00016027700000000034, 0.00015980599999999845, 0.0001598200000000015, 0.0001597779999999993, 0.0001596940000000019, 0.00016038900000000036, 0.00016040299999999993, 0.0001604719999999983, 0.00016044499999999864, 0.0001597909999999994, 0.00016002799999999956]</msg>
<status status="PASS" starttime="20201029 12:47:28.757" endtime="20201029 12:47:28.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.752" endtime="20201029 12:47:28.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.763" endtime="20201029 12:47:28.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.762" endtime="20201029 12:47:28.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.761" endtime="20201029 12:47:28.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.400" endtime="20201029 12:47:28.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.400" endtime="20201029 12:47:28.784"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.793" endtime="20201029 12:47:28.814"></status>
</kw>
<msg timestamp="20201029 12:47:28.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.791" endtime="20201029 12:47:28.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.815" endtime="20201029 12:47:28.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.818" endtime="20201029 12:47:28.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.789" endtime="20201029 12:47:28.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.786" endtime="20201029 12:47:28.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.827" endtime="20201029 12:47:29.116"></status>
</kw>
<msg timestamp="20201029 12:47:29.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.825" endtime="20201029 12:47:29.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.120" endtime="20201029 12:47:29.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.128" endtime="20201029 12:47:29.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.823" endtime="20201029 12:47:29.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.821" endtime="20201029 12:47:29.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.135" level="INFO">${RESULT} = [{'diff': 0.00016113899999999765}, {'diff': 0.0001607780000000003}, {'diff': 0.00016101399999999752}, {'diff': 0.00016126400000000124}, {'diff': 0.00016063900000000061}, {'diff': 0.0001613890000000013...</msg>
<status status="PASS" starttime="20201029 12:47:29.132" endtime="20201029 12:47:29.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.139" level="INFO">${ACCURACY} = {'diff': [0.00016113899999999765, 0.0001607780000000003, 0.00016101399999999752, 0.00016126400000000124, 0.00016063900000000061, 0.00016138900000000136, 0.000160610999999998, 0.00016120800000000296, 0...</msg>
<status status="PASS" starttime="20201029 12:47:29.136" endtime="20201029 12:47:29.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.143" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.142" endtime="20201029 12:47:29.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.146" level="INFO">VALUE: [0.00016113899999999765, 0.0001607780000000003, 0.00016101399999999752, 0.00016126400000000124, 0.00016063900000000061, 0.00016138900000000136, 0.000160610999999998, 0.00016120800000000296, 0.00016136100000000222, 0.00016086100000000172, 0.00016113900000000111, 0.00016095900000000218, 0.00016081999999999902, 0.00016077700000000084, 0.0001605689999999993, 0.0001608889999999974, 0.0001612079999999995, 0.0001612910000000009, 0.00016108299999999937, 0.00016068099999999932, 0.00016063900000000061, 0.00016131900000000005, 0.00016080499999999998, 0.00016081999999999902, 0.00016104200000000013, 0.0001607780000000003, 0.00016066699999999975, 0.0001613750000000018, 0.00016058299999999887, 0.00016119399999999992, 0.0001611520000000012, 0.0001605140000000005, 0.00016063900000000061, 0.00016097200000000228, 0.00016145899999999921, 0.00016080499999999998, 0.00016126399999999777, 0.00016115300000000068, 0.000160707999999999, 0.00016129200000000038, 0.00016100000000000142, 0.00016108399999999884, 0.00016120899999999896, 0.00016134699999999919, 0.0001605970000000019, 0.00016079199999999988, 0.00016052800000000006, 0.00016138900000000136, 0.00016088900000000086, 0.00016130599999999995]</msg>
<status status="PASS" starttime="20201029 12:47:29.145" endtime="20201029 12:47:29.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.140" endtime="20201029 12:47:29.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.151" endtime="20201029 12:47:29.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.149" endtime="20201029 12:47:29.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.148" endtime="20201029 12:47:29.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.785" endtime="20201029 12:47:29.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.784" endtime="20201029 12:47:29.171"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.180" endtime="20201029 12:47:29.202"></status>
</kw>
<msg timestamp="20201029 12:47:29.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.179" endtime="20201029 12:47:29.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.204" endtime="20201029 12:47:29.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.206" endtime="20201029 12:47:29.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.176" endtime="20201029 12:47:29.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.174" endtime="20201029 12:47:29.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.215" endtime="20201029 12:47:29.500"></status>
</kw>
<msg timestamp="20201029 12:47:29.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.213" endtime="20201029 12:47:29.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.504" endtime="20201029 12:47:29.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.512" endtime="20201029 12:47:29.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.211" endtime="20201029 12:47:29.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.209" endtime="20201029 12:47:29.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.519" level="INFO">${RESULT} = [{'diff': 0.0001620690000000008}, {'diff': 0.00016195899999999971}, {'diff': 0.0001618339999999996}, {'diff': 0.00016163900000000161}, {'diff': 0.0001624439999999977}, {'diff': 0.00016213800000000264}...</msg>
<status status="PASS" starttime="20201029 12:47:29.515" endtime="20201029 12:47:29.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.523" level="INFO">${ACCURACY} = {'diff': [0.0001620690000000008, 0.00016195899999999971, 0.0001618339999999996, 0.00016163900000000161, 0.0001624439999999977, 0.00016213800000000264, 0.00016245799999999727, 0.0001624720000000003, 0....</msg>
<status status="PASS" starttime="20201029 12:47:29.520" endtime="20201029 12:47:29.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.527" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.526" endtime="20201029 12:47:29.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.529" level="INFO">VALUE: [0.0001620690000000008, 0.00016195899999999971, 0.0001618339999999996, 0.00016163900000000161, 0.0001624439999999977, 0.00016213800000000264, 0.00016245799999999727, 0.0001624720000000003, 0.00016161100000000247, 0.00016150000000000192, 0.00016234700000000019, 0.00016245800000000074, 0.00016162500000000204, 0.00016204200000000113, 0.0001623889999999989, 0.00016179200000000088, 0.0001617780000000013, 0.00016245799999999727, 0.0001621659999999983, 0.00016225000000000267, 0.00016177699999999837, 0.0001615979999999989, 0.00016245900000000021, 0.00016212500000000254, 0.00016199999999999895, 0.00016226400000000224, 0.00016175000000000217, 0.00016233300000000062, 0.00016158399999999934, 0.00016175000000000217, 0.00016230500000000148, 0.00016245900000000021, 0.0001619300000000011, 0.00016177700000000184, 0.0001622499999999992, 0.00016166700000000075, 0.00016199999999999895, 0.0001618750000000023, 0.00016215300000000168, 0.0001624300000000016, 0.00016161199999999848, 0.0001620560000000007, 0.0001615140000000015, 0.00016166700000000075, 0.00016169400000000042, 0.00016208399999999984, 0.00016199999999999895, 0.00016182000000000002, 0.00016213899999999865, 0.00016184699999999969]</msg>
<status status="PASS" starttime="20201029 12:47:29.528" endtime="20201029 12:47:29.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.523" endtime="20201029 12:47:29.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.535" endtime="20201029 12:47:29.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.534" endtime="20201029 12:47:29.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.533" endtime="20201029 12:47:29.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.172" endtime="20201029 12:47:29.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.172" endtime="20201029 12:47:29.556"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.564" endtime="20201029 12:47:29.586"></status>
</kw>
<msg timestamp="20201029 12:47:29.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.563" endtime="20201029 12:47:29.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.587" endtime="20201029 12:47:29.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.590" endtime="20201029 12:47:29.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.560" endtime="20201029 12:47:29.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.558" endtime="20201029 12:47:29.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.599" endtime="20201029 12:47:29.885"></status>
</kw>
<msg timestamp="20201029 12:47:29.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:29.597" endtime="20201029 12:47:29.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:29.889" endtime="20201029 12:47:29.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.898" endtime="20201029 12:47:29.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.595" endtime="20201029 12:47:29.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.593" endtime="20201029 12:47:29.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.904" level="INFO">${RESULT} = [{'diff': 0.00016355599999999873}, {'diff': 0.00016298600000000038}, {'diff': 0.00016248599999999988}, {'diff': 0.0001628049999999985}, {'diff': 0.00016290299999999897}, {'diff': 0.0001626249999999995...</msg>
<status status="PASS" starttime="20201029 12:47:29.901" endtime="20201029 12:47:29.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.909" level="INFO">${ACCURACY} = {'diff': [0.00016355599999999873, 0.00016298600000000038, 0.00016248599999999988, 0.0001628049999999985, 0.00016290299999999897, 0.00016262499999999958, 0.00016286100000000026, 0.0001624720000000003, ...</msg>
<status status="PASS" starttime="20201029 12:47:29.905" endtime="20201029 12:47:29.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.913" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.912" endtime="20201029 12:47:29.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.916" level="INFO">VALUE: [0.00016355599999999873, 0.00016298600000000038, 0.00016248599999999988, 0.0001628049999999985, 0.00016290299999999897, 0.00016262499999999958, 0.00016286100000000026, 0.0001624720000000003, 0.0001625979999999999, 0.00016319399999999845, 0.00016312500000000008, 0.0001627499999999997, 0.00016294400000000167, 0.00016286100000000026, 0.00016337500000000033, 0.00016275000000000317, 0.0001630279999999991, 0.00016272300000000003, 0.0001634300000000026, 0.000162917000000002, 0.00016287499999999983, 0.00016258400000000034, 0.00016263899999999915, 0.00016305599999999823, 0.00016254200000000163, 0.00016262499999999958, 0.0001630409999999992, 0.00016269399999999795, 0.0001634300000000026, 0.00016244500000000064, 0.00016286100000000026, 0.00016305599999999823, 0.00016263899999999915, 0.00016336100000000076, 0.0001631110000000005, 0.0001627499999999997, 0.00016280600000000145, 0.00016312500000000008, 0.00016263899999999915, 0.00016309699999999747, 0.00016307000000000127, 0.00016350000000000045, 0.00016283299999999765, 0.0001632089999999975, 0.00016320799999999802, 0.00016262499999999958, 0.00016293100000000157, 0.00016312500000000008, 0.00016315299999999922, 0.00016334700000000119]</msg>
<status status="PASS" starttime="20201029 12:47:29.914" endtime="20201029 12:47:29.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.910" endtime="20201029 12:47:29.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.921" endtime="20201029 12:47:29.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.919" endtime="20201029 12:47:29.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.918" endtime="20201029 12:47:29.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.557" endtime="20201029 12:47:29.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.556" endtime="20201029 12:47:29.941"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.950" endtime="20201029 12:47:29.971"></status>
</kw>
<msg timestamp="20201029 12:47:29.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.949" endtime="20201029 12:47:29.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.973" endtime="20201029 12:47:29.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.975" endtime="20201029 12:47:29.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.946" endtime="20201029 12:47:29.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.944" endtime="20201029 12:47:29.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.984" endtime="20201029 12:47:30.271"></status>
</kw>
<msg timestamp="20201029 12:47:30.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.983" endtime="20201029 12:47:30.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.276" endtime="20201029 12:47:30.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.284" endtime="20201029 12:47:30.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.980" endtime="20201029 12:47:30.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.978" endtime="20201029 12:47:30.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.290" level="INFO">${RESULT} = [{'diff': 0.00016450000000000145}, {'diff': 0.00016445900000000221}, {'diff': 0.00016429100000000044}, {'diff': 0.00016369399999999895}, {'diff': 0.00016419399999999945}, {'diff': 0.000164166999999999...</msg>
<status status="PASS" starttime="20201029 12:47:30.287" endtime="20201029 12:47:30.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.294" level="INFO">${ACCURACY} = {'diff': [0.00016450000000000145, 0.00016445900000000221, 0.00016429100000000044, 0.00016369399999999895, 0.00016419399999999945, 0.00016416699999999979, 0.00016452799999999712, 0.00016386099999999779...</msg>
<status status="PASS" starttime="20201029 12:47:30.291" endtime="20201029 12:47:30.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.299" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.298" endtime="20201029 12:47:30.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.301" level="INFO">VALUE: [0.00016450000000000145, 0.00016445900000000221, 0.00016429100000000044, 0.00016369399999999895, 0.00016419399999999945, 0.00016416699999999979, 0.00016452799999999712, 0.00016386099999999779, 0.00016355599999999873, 0.00016355499999999926, 0.0001637500000000007, 0.00016441700000000004, 0.00016433299999999915, 0.00016423600000000163, 0.00016429100000000044, 0.00016387500000000083, 0.00016409699999999847, 0.000163611000000001, 0.00016395799999999877, 0.00016348600000000088, 0.0001638049999999995, 0.00016362500000000058, 0.00016350000000000045, 0.0001639439999999992, 0.00016386100000000126, 0.00016441700000000004, 0.0001637500000000007, 0.00016436099999999829, 0.00016447199999999884, 0.00016411099999999804, 0.0001639309999999991, 0.0001638049999999995, 0.00016359700000000144, 0.000164402000000001, 0.00016373600000000113, 0.00016379200000000288, 0.0001638049999999995, 0.00016437499999999786, 0.00016356899999999883, 0.00016398600000000138, 0.00016354100000000316, 0.00016390299999999997, 0.00016422299999999806, 0.00016350000000000045, 0.00016394499999999868, 0.00016372299999999756, 0.00016348600000000088, 0.000164402000000001, 0.00016437500000000133, 0.00016441700000000004]</msg>
<status status="PASS" starttime="20201029 12:47:30.300" endtime="20201029 12:47:30.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.295" endtime="20201029 12:47:30.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.306" endtime="20201029 12:47:30.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.305" endtime="20201029 12:47:30.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.304" endtime="20201029 12:47:30.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.942" endtime="20201029 12:47:30.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.942" endtime="20201029 12:47:30.327"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.335" endtime="20201029 12:47:30.358"></status>
</kw>
<msg timestamp="20201029 12:47:30.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.334" endtime="20201029 12:47:30.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.359" endtime="20201029 12:47:30.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.362" endtime="20201029 12:47:30.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.331" endtime="20201029 12:47:30.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.329" endtime="20201029 12:47:30.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.371" endtime="20201029 12:47:30.656"></status>
</kw>
<msg timestamp="20201029 12:47:30.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.369" endtime="20201029 12:47:30.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.660" endtime="20201029 12:47:30.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.669" endtime="20201029 12:47:30.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.367" endtime="20201029 12:47:30.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.365" endtime="20201029 12:47:30.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.675" level="INFO">${RESULT} = [{'diff': 0.0001652639999999983}, {'diff': 0.0001647500000000017}, {'diff': 0.00016538899999999843}, {'diff': 0.00016499999999999848}, {'diff': 0.00016468100000000332}, {'diff': 0.00016481900000000008...</msg>
<status status="PASS" starttime="20201029 12:47:30.672" endtime="20201029 12:47:30.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.679" level="INFO">${ACCURACY} = {'diff': [0.0001652639999999983, 0.0001647500000000017, 0.00016538899999999843, 0.00016499999999999848, 0.00016468100000000332, 0.00016481900000000008, 0.0001650699999999998, 0.0001646249999999981, 0....</msg>
<status status="PASS" starttime="20201029 12:47:30.676" endtime="20201029 12:47:30.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.683" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.682" endtime="20201029 12:47:30.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.686" level="INFO">VALUE: [0.0001652639999999983, 0.0001647500000000017, 0.00016538899999999843, 0.00016499999999999848, 0.00016468100000000332, 0.00016481900000000008, 0.0001650699999999998, 0.0001646249999999981, 0.00016534699999999972, 0.00016509699999999947, 0.0001655419999999977, 0.00016462500000000158, 0.00016509699999999947, 0.0001648890000000014, 0.00016493000000000063, 0.00016511099999999904, 0.00016494499999999968, 0.0001651110000000025, 0.00016463900000000115, 0.0001652639999999983, 0.00016538899999999843, 0.00016500000000000195, 0.00016468000000000038, 0.00016519400000000045, 0.00016466700000000029, 0.00016548600000000288, 0.00016532000000000005, 0.0001654440000000007, 0.00016549999999999898, 0.0001647639999999978, 0.00016536099999999929, 0.0001647500000000017, 0.0001646249999999981, 0.00016533300000000015, 0.00016499999999999848, 0.00016458399999999887, 0.00016541700000000104, 0.0001652920000000009, 0.00016505600000000023, 0.0001652769999999984, 0.00016487499999999836, 0.00016505500000000076, 0.00016495799999999977, 0.00016473600000000213, 0.00016545800000000027, 0.00016529200000000438, 0.00016480500000000398, 0.00016515300000000122, 0.00016501399999999805, 0.00016502799999999762]</msg>
<status status="PASS" starttime="20201029 12:47:30.685" endtime="20201029 12:47:30.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.680" endtime="20201029 12:47:30.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.692" endtime="20201029 12:47:30.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.690" endtime="20201029 12:47:30.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.689" endtime="20201029 12:47:30.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.328" endtime="20201029 12:47:30.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.327" endtime="20201029 12:47:30.713"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.721" endtime="20201029 12:47:30.743"></status>
</kw>
<msg timestamp="20201029 12:47:30.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.720" endtime="20201029 12:47:30.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.744" endtime="20201029 12:47:30.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.746" endtime="20201029 12:47:30.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.717" endtime="20201029 12:47:30.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.715" endtime="20201029 12:47:30.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.755" endtime="20201029 12:47:31.041"></status>
</kw>
<msg timestamp="20201029 12:47:31.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.754" endtime="20201029 12:47:31.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.045" endtime="20201029 12:47:31.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.053" endtime="20201029 12:47:31.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.751" endtime="20201029 12:47:31.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.750" endtime="20201029 12:47:31.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.060" level="INFO">${RESULT} = [{'diff': 0.00016663899999999968}, {'diff': 0.00016636100000000029}, {'diff': 0.00016604099999999872}, {'diff': 0.00016549999999999898}, {'diff': 0.0001659159999999986}, {'diff': 0.0001659859999999999...</msg>
<status status="PASS" starttime="20201029 12:47:31.057" endtime="20201029 12:47:31.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.065" level="INFO">${ACCURACY} = {'diff': [0.00016663899999999968, 0.00016636100000000029, 0.00016604099999999872, 0.00016549999999999898, 0.0001659159999999986, 0.0001659859999999999, 0.00016637499999999986, 0.000165709, 0.000166028...</msg>
<status status="PASS" starttime="20201029 12:47:31.061" endtime="20201029 12:47:31.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.069" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.068" endtime="20201029 12:47:31.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.072" level="INFO">VALUE: [0.00016663899999999968, 0.00016636100000000029, 0.00016604099999999872, 0.00016549999999999898, 0.0001659159999999986, 0.0001659859999999999, 0.00016637499999999986, 0.000165709, 0.0001660280000000021, 0.00016626400000000277, 0.00016559699999999997, 0.00016605599999999776, 0.00016565300000000172, 0.00016652799999999912, 0.0001659029999999985, 0.0001660830000000009, 0.0001659449999999972, 0.0001662639999999993, 0.00016594399999999773, 0.000165709, 0.00016633299999999768, 0.00016559699999999997, 0.00016595800000000077, 0.00016637499999999986, 0.0001663189999999981, 0.0001655700000000003, 0.0001654859999999994, 0.00016620800000000102, 0.0001656249999999991, 0.0001662639999999993, 0.00016636100000000029, 0.00016563900000000215, 0.00016583300000000065, 0.0001662639999999993, 0.0001660830000000009, 0.0001657220000000001, 0.00016565300000000172, 0.0001657769999999989, 0.00016627800000000234, 0.00016581900000000108, 0.00016633400000000062, 0.00016623600000000016, 0.00016569500000000043, 0.00016611100000000004, 0.00016602799999999862, 0.00016637499999999986, 0.00016641700000000204, 0.00016595900000000025, 0.00016611200000000298, 0.0001655700000000003]</msg>
<status status="PASS" starttime="20201029 12:47:31.070" endtime="20201029 12:47:31.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.066" endtime="20201029 12:47:31.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.077" endtime="20201029 12:47:31.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.075" endtime="20201029 12:47:31.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.074" endtime="20201029 12:47:31.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.713" endtime="20201029 12:47:31.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.713" endtime="20201029 12:47:31.098"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.106" endtime="20201029 12:47:31.128"></status>
</kw>
<msg timestamp="20201029 12:47:31.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.105" endtime="20201029 12:47:31.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.129" endtime="20201029 12:47:31.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.132" endtime="20201029 12:47:31.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.102" endtime="20201029 12:47:31.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.100" endtime="20201029 12:47:31.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.141" endtime="20201029 12:47:31.426"></status>
</kw>
<msg timestamp="20201029 12:47:31.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.139" endtime="20201029 12:47:31.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.431" endtime="20201029 12:47:31.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.439" endtime="20201029 12:47:31.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.137" endtime="20201029 12:47:31.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.135" endtime="20201029 12:47:31.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.445" level="INFO">${RESULT} = [{'diff': 0.00016670800000000152}, {'diff': 0.00016716699999999932}, {'diff': 0.00016732000000000205}, {'diff': 0.00016729199999999944}, {'diff': 0.00016692999999999916}, {'diff': 0.000167125000000000...</msg>
<status status="PASS" starttime="20201029 12:47:31.442" endtime="20201029 12:47:31.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.449" level="INFO">${ACCURACY} = {'diff': [0.00016670800000000152, 0.00016716699999999932, 0.00016732000000000205, 0.00016729199999999944, 0.00016692999999999916, 0.0001671250000000006, 0.0001668610000000008, 0.0001668059999999985, 0...</msg>
<status status="PASS" starttime="20201029 12:47:31.446" endtime="20201029 12:47:31.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.454" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.453" endtime="20201029 12:47:31.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.456" level="INFO">VALUE: [0.00016670800000000152, 0.00016716699999999932, 0.00016732000000000205, 0.00016729199999999944, 0.00016692999999999916, 0.0001671250000000006, 0.0001668610000000008, 0.0001668059999999985, 0.0001668189999999986, 0.00016708299999999843, 0.0001668189999999986, 0.00016747300000000132, 0.00016725000000000073, 0.0001664860000000004, 0.00016711100000000104, 0.0001674999999999975, 0.0001669029999999995, 0.00016663899999999968, 0.0001669860000000009, 0.00016673600000000066, 0.00016647200000000084, 0.0001669310000000021, 0.0001672220000000016, 0.00016656900000000183, 0.0001666250000000001, 0.00016686200000000026, 0.00016688899999999993, 0.00016736099999999782, 0.00016733300000000215, 0.00016651399999999955, 0.00016727799999999987, 0.00016726399999999683, 0.0001669449999999982, 0.00016663899999999968, 0.00016677800000000284, 0.00016733300000000215, 0.0001665419999999987, 0.00016658400000000087, 0.00016700000000000048, 0.000166709000000001, 0.0001670830000000019, 0.00016672199999999762, 0.00016673600000000066, 0.0001673189999999991, 0.00016700000000000048, 0.00016697199999999787, 0.0001669860000000009, 0.0001667639999999998, 0.0001665700000000013, 0.00016675000000000023]</msg>
<status status="PASS" starttime="20201029 12:47:31.455" endtime="20201029 12:47:31.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.450" endtime="20201029 12:47:31.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.461" endtime="20201029 12:47:31.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.460" endtime="20201029 12:47:31.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.458" endtime="20201029 12:47:31.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.099" endtime="20201029 12:47:31.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.098" endtime="20201029 12:47:31.482"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.491" endtime="20201029 12:47:31.513"></status>
</kw>
<msg timestamp="20201029 12:47:31.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.489" endtime="20201029 12:47:31.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.514" endtime="20201029 12:47:31.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.517" endtime="20201029 12:47:31.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.486" endtime="20201029 12:47:31.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.484" endtime="20201029 12:47:31.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.526" endtime="20201029 12:47:31.812"></status>
</kw>
<msg timestamp="20201029 12:47:31.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.524" endtime="20201029 12:47:31.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.816" endtime="20201029 12:47:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.824" endtime="20201029 12:47:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.522" endtime="20201029 12:47:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.520" endtime="20201029 12:47:31.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.831" level="INFO">${RESULT} = [{'diff': 0.0001684860000000024}, {'diff': 0.00016838899999999796}, {'diff': 0.00016797200000000234}, {'diff': 0.0001674999999999975}, {'diff': 0.00016761100000000154}, {'diff': 0.00016793099999999964...</msg>
<status status="PASS" starttime="20201029 12:47:31.827" endtime="20201029 12:47:31.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.834" level="INFO">${ACCURACY} = {'diff': [0.0001684860000000024, 0.00016838899999999796, 0.00016797200000000234, 0.0001674999999999975, 0.00016761100000000154, 0.00016793099999999964, 0.00016801400000000105, 0.00016769399999999948, ...</msg>
<status status="PASS" starttime="20201029 12:47:31.832" endtime="20201029 12:47:31.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.839" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.838" endtime="20201029 12:47:31.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.842" level="INFO">VALUE: [0.0001684860000000024, 0.00016838899999999796, 0.00016797200000000234, 0.0001674999999999975, 0.00016761100000000154, 0.00016793099999999964, 0.00016801400000000105, 0.00016769399999999948, 0.00016837500000000186, 0.00016774999999999776, 0.00016783400000000212, 0.0001674860000000014, 0.000168096999999999, 0.0001683749999999984, 0.0001675700000000023, 0.0001679860000000019, 0.0001676250000000011, 0.00016770899999999853, 0.00016805599999999976, 0.00016825000000000173, 0.0001683749999999984, 0.00016756899999999936, 0.00016836099999999882, 0.0001683610000000023, 0.00016838899999999796, 0.00016797199999999887, 0.00016834699999999925, 0.00016794399999999973, 0.00016758299999999893, 0.00016787500000000136, 0.00016756899999999936, 0.00016765300000000025, 0.0001676250000000011, 0.00016761100000000154, 0.0001678059999999995, 0.00016818099999999989, 0.0001684160000000011, 0.0001683749999999984, 0.0001675549999999998, 0.00016834699999999925, 0.0001677220000000021, 0.00016851399999999808, 0.00016750000000000098, 0.00016837500000000186, 0.00016826399999999783, 0.0001684160000000011, 0.0001684440000000037, 0.0001678890000000044, 0.00016816699999999685, 0.00016829200000000044]</msg>
<status status="PASS" starttime="20201029 12:47:31.840" endtime="20201029 12:47:31.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.835" endtime="20201029 12:47:31.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.847" endtime="20201029 12:47:31.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.846" endtime="20201029 12:47:31.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.845" endtime="20201029 12:47:31.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.483" endtime="20201029 12:47:31.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.482" endtime="20201029 12:47:31.868"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.877" endtime="20201029 12:47:31.898"></status>
</kw>
<msg timestamp="20201029 12:47:31.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.875" endtime="20201029 12:47:31.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.900" endtime="20201029 12:47:31.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.902" endtime="20201029 12:47:31.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.873" endtime="20201029 12:47:31.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.870" endtime="20201029 12:47:31.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.911" endtime="20201029 12:47:32.198"></status>
</kw>
<msg timestamp="20201029 12:47:32.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.910" endtime="20201029 12:47:32.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.202" endtime="20201029 12:47:32.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.210" endtime="20201029 12:47:32.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.907" endtime="20201029 12:47:32.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.905" endtime="20201029 12:47:32.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.216" level="INFO">${RESULT} = [{'diff': 0.00016918099999999742}, {'diff': 0.00016884699999999975}, {'diff': 0.0001687779999999979}, {'diff': 0.00016902699999999868}, {'diff': 0.0001692359999999997}, {'diff': 0.00016933400000000015...</msg>
<status status="PASS" starttime="20201029 12:47:32.213" endtime="20201029 12:47:32.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.221" level="INFO">${ACCURACY} = {'diff': [0.00016918099999999742, 0.00016884699999999975, 0.0001687779999999979, 0.00016902699999999868, 0.0001692359999999997, 0.00016933400000000015, 0.00016933300000000068, 0.0001687359999999992, 0...</msg>
<status status="PASS" starttime="20201029 12:47:32.217" endtime="20201029 12:47:32.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.226" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.225" endtime="20201029 12:47:32.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.228" level="INFO">VALUE: [0.00016918099999999742, 0.00016884699999999975, 0.0001687779999999979, 0.00016902699999999868, 0.0001692359999999997, 0.00016933400000000015, 0.00016933300000000068, 0.0001687359999999992, 0.0001688190000000006, 0.00016924999999999926, 0.00016932000000000058, 0.00016870800000000005, 0.00016943099999999767, 0.0001689030000000015, 0.00016947200000000037, 0.00016955600000000126, 0.00016856900000000036, 0.00016944499999999724, 0.00016865300000000125, 0.0001685420000000007, 0.00016945900000000028, 0.00016901400000000205, 0.00016945799999999733, 0.00016866700000000082, 0.00016874999999999876, 0.00016851399999999808, 0.00016933300000000068, 0.00016893099999999717, 0.000169097, 0.00016851399999999808, 0.00016851400000000155, 0.00016915300000000175, 0.00016944499999999724, 0.00016890299999999803, 0.00016863900000000168, 0.00016916700000000132, 0.00016930500000000154, 0.00016916699999999785, 0.00016893100000000064, 0.00016933400000000015, 0.00016944400000000123, 0.00016933300000000068, 0.00016907000000000033, 0.00016933400000000015, 0.0001694450000000007, 0.00016901400000000205, 0.00016869400000000048, 0.00016883300000000018, 0.00016919400000000098, 0.0001687359999999992]</msg>
<status status="PASS" starttime="20201029 12:47:32.227" endtime="20201029 12:47:32.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.222" endtime="20201029 12:47:32.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.233" endtime="20201029 12:47:32.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.231" endtime="20201029 12:47:32.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.230" endtime="20201029 12:47:32.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.869" endtime="20201029 12:47:32.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.868" endtime="20201029 12:47:32.254"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.262" endtime="20201029 12:47:32.284"></status>
</kw>
<msg timestamp="20201029 12:47:32.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.261" endtime="20201029 12:47:32.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.285" endtime="20201029 12:47:32.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.288" endtime="20201029 12:47:32.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.258" endtime="20201029 12:47:32.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.256" endtime="20201029 12:47:32.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.297" endtime="20201029 12:47:32.585"></status>
</kw>
<msg timestamp="20201029 12:47:32.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.295" endtime="20201029 12:47:32.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.589" endtime="20201029 12:47:32.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.597" endtime="20201029 12:47:32.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.293" endtime="20201029 12:47:32.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.291" endtime="20201029 12:47:32.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.604" level="INFO">${RESULT} = [{'diff': 0.0001705840000000014}, {'diff': 0.00017016699999999885}, {'diff': 0.00016972200000000062}, {'diff': 0.00017015299999999928}, {'diff': 0.00017026399999999983}, {'diff': 0.0001698189999999981...</msg>
<status status="PASS" starttime="20201029 12:47:32.601" endtime="20201029 12:47:32.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.608" level="INFO">${ACCURACY} = {'diff': [0.0001705840000000014, 0.00017016699999999885, 0.00016972200000000062, 0.00017015299999999928, 0.00017026399999999983, 0.00016981899999999814, 0.00016988799999999998, 0.00017051400000000008,...</msg>
<status status="PASS" starttime="20201029 12:47:32.605" endtime="20201029 12:47:32.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.612" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.611" endtime="20201029 12:47:32.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.615" level="INFO">VALUE: [0.0001705840000000014, 0.00017016699999999885, 0.00016972200000000062, 0.00017015299999999928, 0.00017026399999999983, 0.00016981899999999814, 0.00016988799999999998, 0.00017051400000000008, 0.00016954099999999875, 0.00017019500000000146, 0.00016984699999999728, 0.00016961100000000007, 0.00017033300000000168, 0.0001704719999999979, 0.00016983400000000065, 0.00016965300000000225, 0.00016993099999999817, 0.00016952699999999918, 0.0001702499999999968, 0.00017040200000000005, 0.0001696389999999992, 0.00016997200000000087, 0.00017047200000000137, 0.00016969400000000148, 0.00017026399999999983, 0.0001695970000000005, 0.00016950000000000298, 0.0001695129999999996, 0.0001704169999999991, 0.00016990299999999903, 0.0001699169999999986, 0.00016948599999999994, 0.00017008299999999796, 0.00016983300000000118, 0.00016966599999999887, 0.00016963900000000268, 0.00017, 0.000169693999999998, 0.0001696519999999993, 0.00017040299999999953, 0.00016970900000000053, 0.00016965299999999878, 0.0001695970000000005, 0.00017033400000000115, 0.00016947200000000037, 0.00016994400000000173, 0.00017011100000000057, 0.00016976399999999933, 0.00016959799999999997, 0.0001702640000000033]</msg>
<status status="PASS" starttime="20201029 12:47:32.613" endtime="20201029 12:47:32.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.609" endtime="20201029 12:47:32.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.620" endtime="20201029 12:47:32.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.618" endtime="20201029 12:47:32.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.617" endtime="20201029 12:47:32.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.255" endtime="20201029 12:47:32.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.254" endtime="20201029 12:47:32.640"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.649" endtime="20201029 12:47:32.672"></status>
</kw>
<msg timestamp="20201029 12:47:32.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.647" endtime="20201029 12:47:32.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.673" endtime="20201029 12:47:32.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.675" endtime="20201029 12:47:32.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.645" endtime="20201029 12:47:32.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.643" endtime="20201029 12:47:32.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.684" endtime="20201029 12:47:32.970"></status>
</kw>
<msg timestamp="20201029 12:47:32.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.683" endtime="20201029 12:47:32.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.974" endtime="20201029 12:47:32.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.982" endtime="20201029 12:47:32.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.680" endtime="20201029 12:47:32.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.679" endtime="20201029 12:47:32.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.989" level="INFO">${RESULT} = [{'diff': 0.00017148599999999847}, {'diff': 0.000171194999999999}, {'diff': 0.00017102800000000015}, {'diff': 0.00017062500000000064}, {'diff': 0.00017098600000000144}, {'diff': 0.0001706390000000002}...</msg>
<status status="PASS" starttime="20201029 12:47:32.985" endtime="20201029 12:47:32.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.993" level="INFO">${ACCURACY} = {'diff': [0.00017148599999999847, 0.000171194999999999, 0.00017102800000000015, 0.00017062500000000064, 0.00017098600000000144, 0.0001706390000000002, 0.0001704580000000018, 0.0001713750000000014, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:32.990" endtime="20201029 12:47:32.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.997" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.996" endtime="20201029 12:47:32.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.000" level="INFO">VALUE: [0.00017148599999999847, 0.000171194999999999, 0.00017102800000000015, 0.00017062500000000064, 0.00017098600000000144, 0.0001706390000000002, 0.0001704580000000018, 0.0001713750000000014, 0.0001707230000000011, 0.00017134800000000172, 0.00017059800000000097, 0.0001713329999999992, 0.00017140300000000053, 0.00017097200000000187, 0.0001712780000000004, 0.00017083400000000165, 0.00017130500000000007, 0.00017051400000000008, 0.0001711939999999995, 0.00017075000000000076, 0.0001709719999999984, 0.00017067999999999944, 0.00017127799999999693, 0.00017108299999999896, 0.00017065299999999978, 0.00017127700000000093, 0.00017051400000000008, 0.00017133300000000268, 0.00017130599999999954, 0.0001713750000000014, 0.0001709589999999983, 0.00017125000000000126, 0.0001708750000000009, 0.00017119500000000246, 0.00017090300000000003, 0.0001712780000000004, 0.00017070799999999858, 0.00017069500000000196, 0.0001707779999999999, 0.00017126400000000083, 0.0001706390000000002, 0.00017104199999999972, 0.00017113899999999724, 0.00017059699999999803, 0.00017113899999999724, 0.00017112500000000114, 0.0001705139999999966, 0.0001706390000000002, 0.00017079200000000294, 0.00017100000000000448]</msg>
<status status="PASS" starttime="20201029 12:47:32.998" endtime="20201029 12:47:33.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.994" endtime="20201029 12:47:33.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.006" endtime="20201029 12:47:33.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.004" endtime="20201029 12:47:33.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.003" endtime="20201029 12:47:33.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.641" endtime="20201029 12:47:33.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.641" endtime="20201029 12:47:33.026"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.035" endtime="20201029 12:47:33.056"></status>
</kw>
<msg timestamp="20201029 12:47:33.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.033" endtime="20201029 12:47:33.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.058" endtime="20201029 12:47:33.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.061" endtime="20201029 12:47:33.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.031" endtime="20201029 12:47:33.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.029" endtime="20201029 12:47:33.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.071" endtime="20201029 12:47:33.356"></status>
</kw>
<msg timestamp="20201029 12:47:33.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.069" endtime="20201029 12:47:33.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.360" endtime="20201029 12:47:33.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.369" endtime="20201029 12:47:33.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.066" endtime="20201029 12:47:33.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.064" endtime="20201029 12:47:33.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.375" level="INFO">${RESULT} = [{'diff': 0.00017168099999999992}, {'diff': 0.000171888999999998}, {'diff': 0.00017230600000000054}, {'diff': 0.0001717499999999983}, {'diff': 0.00017217999999999747}, {'diff': 0.00017231899999999717}...</msg>
<status status="PASS" starttime="20201029 12:47:33.372" endtime="20201029 12:47:33.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.380" level="INFO">${ACCURACY} = {'diff': [0.00017168099999999992, 0.000171888999999998, 0.00017230600000000054, 0.0001717499999999983, 0.00017217999999999747, 0.00017231899999999717, 0.00017176300000000186, 0.00017237499999999892, 0...</msg>
<status status="PASS" starttime="20201029 12:47:33.376" endtime="20201029 12:47:33.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.384" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.383" endtime="20201029 12:47:33.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.387" level="INFO">VALUE: [0.00017168099999999992, 0.000171888999999998, 0.00017230600000000054, 0.0001717499999999983, 0.00017217999999999747, 0.00017231899999999717, 0.00017176300000000186, 0.00017237499999999892, 0.00017233399999999968, 0.00017152800000000065, 0.00017170899999999906, 0.00017222199999999965, 0.0001718329999999997, 0.00017201400000000158, 0.00017184799999999875, 0.00017212499999999867, 0.00017172199999999915, 0.00017152800000000065, 0.00017181900000000014, 0.00017237499999999892, 0.00017199999999999854, 0.00017184699999999928, 0.0001717499999999983, 0.00017241599999999815, 0.00017184699999999928, 0.00017204199999999725, 0.00017179200000000047, 0.0001721390000000017, 0.0001716529999999973, 0.0001715559999999998, 0.00017151400000000108, 0.0001720690000000004, 0.00017170799999999958, 0.0001723889999999985, 0.00017238900000000196, 0.00017152799999999718, 0.0001722780000000014, 0.00017199999999999854, 0.00017193100000000017, 0.00017223599999999922, 0.00017155500000000032, 0.0001718329999999997, 0.0001718329999999997, 0.0001723200000000001, 0.0001724589999999998, 0.0001718620000000018, 0.00017170799999999958, 0.00017148599999999847, 0.00017234699999999978, 0.0001723190000000041]</msg>
<status status="PASS" starttime="20201029 12:47:33.385" endtime="20201029 12:47:33.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.381" endtime="20201029 12:47:33.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.392" endtime="20201029 12:47:33.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.390" endtime="20201029 12:47:33.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.389" endtime="20201029 12:47:33.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.027" endtime="20201029 12:47:33.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.027" endtime="20201029 12:47:33.412"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.421" endtime="20201029 12:47:33.443"></status>
</kw>
<msg timestamp="20201029 12:47:33.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.420" endtime="20201029 12:47:33.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.444" endtime="20201029 12:47:33.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.447" endtime="20201029 12:47:33.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.417" endtime="20201029 12:47:33.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.415" endtime="20201029 12:47:33.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.456" endtime="20201029 12:47:33.742"></status>
</kw>
<msg timestamp="20201029 12:47:33.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.454" endtime="20201029 12:47:33.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.746" endtime="20201029 12:47:33.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.754" endtime="20201029 12:47:33.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.452" endtime="20201029 12:47:33.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.450" endtime="20201029 12:47:33.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.761" level="INFO">${RESULT} = [{'diff': 0.0001729590000000003}, {'diff': 0.00017302799999999868}, {'diff': 0.0001730560000000013}, {'diff': 0.00017270800000000058}, {'diff': 0.0001729170000000016}, {'diff': 0.00017248599999999947}...</msg>
<status status="PASS" starttime="20201029 12:47:33.757" endtime="20201029 12:47:33.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.765" level="INFO">${ACCURACY} = {'diff': [0.0001729590000000003, 0.00017302799999999868, 0.0001730560000000013, 0.00017270800000000058, 0.0001729170000000016, 0.00017248599999999947, 0.00017277699999999896, 0.00017304100000000225, 0...</msg>
<status status="PASS" starttime="20201029 12:47:33.762" endtime="20201029 12:47:33.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.769" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.768" endtime="20201029 12:47:33.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.771" level="INFO">VALUE: [0.0001729590000000003, 0.00017302799999999868, 0.0001730560000000013, 0.00017270800000000058, 0.0001729170000000016, 0.00017248599999999947, 0.00017277699999999896, 0.00017304100000000225, 0.0001724719999999999, 0.0001727780000000019, 0.0001733889999999995, 0.0001724719999999999, 0.00017297299999999988, 0.000172791000000002, 0.00017316699999999838, 0.00017318100000000142, 0.00017320900000000056, 0.00017323600000000022, 0.00017322200000000065, 0.0001731110000000001, 0.00017249999999999904, 0.0001725690000000009, 0.00017283400000000018, 0.00017276400000000233, 0.0001725690000000009, 0.00017267999999999797, 0.00017249999999999904, 0.00017323600000000022, 0.00017252800000000165, 0.00017327799999999893, 0.00017245800000000033, 0.00017337499999999992, 0.0001726529999999983, 0.00017267999999999797, 0.00017320799999999761, 0.00017279099999999853, 0.000172694000000001, 0.00017322300000000013, 0.000172791999999998, 0.00017293100000000117, 0.0001728200000000006, 0.00017318000000000194, 0.00017313899999999924, 0.00017247299999999938, 0.0001734170000000021, 0.00017248600000000294, 0.00017305500000000182, 0.00017326399999999936, 0.00017288900000000246, 0.00017252799999999818]</msg>
<status status="PASS" starttime="20201029 12:47:33.770" endtime="20201029 12:47:33.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.765" endtime="20201029 12:47:33.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.776" endtime="20201029 12:47:33.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.775" endtime="20201029 12:47:33.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.774" endtime="20201029 12:47:33.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.413" endtime="20201029 12:47:33.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.413" endtime="20201029 12:47:33.797"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.806" endtime="20201029 12:47:33.829"></status>
</kw>
<msg timestamp="20201029 12:47:33.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.804" endtime="20201029 12:47:33.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.830" endtime="20201029 12:47:33.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.832" endtime="20201029 12:47:33.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.802" endtime="20201029 12:47:33.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.800" endtime="20201029 12:47:33.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.841" endtime="20201029 12:47:34.127"></status>
</kw>
<msg timestamp="20201029 12:47:34.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.840" endtime="20201029 12:47:34.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.131" endtime="20201029 12:47:34.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.139" endtime="20201029 12:47:34.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.837" endtime="20201029 12:47:34.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.836" endtime="20201029 12:47:34.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.145" level="INFO">${RESULT} = [{'diff': 0.00017381999999999814}, {'diff': 0.00017365199999999983}, {'diff': 0.00017359700000000103}, {'diff': 0.00017390299999999956}, {'diff': 0.00017363800000000026}, {'diff': 0.000174403000000000...</msg>
<status status="PASS" starttime="20201029 12:47:34.142" endtime="20201029 12:47:34.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.149" level="INFO">${ACCURACY} = {'diff': [0.00017381999999999814, 0.00017365199999999983, 0.00017359700000000103, 0.00017390299999999956, 0.00017363800000000026, 0.00017440300000000006, 0.00017452699999999724, 0.00017356899999999842...</msg>
<status status="PASS" starttime="20201029 12:47:34.146" endtime="20201029 12:47:34.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.154" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.153" endtime="20201029 12:47:34.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.156" level="INFO">VALUE: [0.00017381999999999814, 0.00017365199999999983, 0.00017359700000000103, 0.00017390299999999956, 0.00017363800000000026, 0.00017440300000000006, 0.00017452699999999724, 0.00017356899999999842, 0.00017370800000000158, 0.00017413900000000024, 0.0001740140000000001, 0.0001740140000000001, 0.00017345799999999786, 0.00017416699999999938, 0.000174485999999998, 0.0001736110000000006, 0.00017354200000000222, 0.00017397199999999793, 0.00017391599999999965, 0.0001741110000000011, 0.00017372200000000115, 0.00017409799999999753, 0.00017391699999999913, 0.00017419399999999904, 0.00017372299999999716, 0.00017391699999999913, 0.00017441699999999963, 0.00017412500000000067, 0.00017359700000000103, 0.0001740140000000001, 0.0001736950000000015, 0.0001735560000000018, 0.00017411099999999763, 0.0001743049999999996, 0.0001737500000000003, 0.000173791999999999, 0.00017394500000000174, 0.00017362500000000017, 0.0001741940000000025, 0.00017355599999999832, 0.00017447199999999843, 0.00017398700000000045, 0.00017379099999999953, 0.0001735139999999996, 0.00017361100000000407, 0.00017416700000000285, 0.00017386099999999738, 0.00017405599999999882, 0.00017423600000000122, 0.00017447199999999496]</msg>
<status status="PASS" starttime="20201029 12:47:34.155" endtime="20201029 12:47:34.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.150" endtime="20201029 12:47:34.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.162" endtime="20201029 12:47:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.161" endtime="20201029 12:47:34.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.159" endtime="20201029 12:47:34.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.798" endtime="20201029 12:47:34.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.797" endtime="20201029 12:47:34.183"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.191" endtime="20201029 12:47:34.213"></status>
</kw>
<msg timestamp="20201029 12:47:34.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.190" endtime="20201029 12:47:34.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.215" endtime="20201029 12:47:34.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.217" endtime="20201029 12:47:34.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.187" endtime="20201029 12:47:34.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.185" endtime="20201029 12:47:34.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.226" endtime="20201029 12:47:34.512"></status>
</kw>
<msg timestamp="20201029 12:47:34.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.225" endtime="20201029 12:47:34.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.516" endtime="20201029 12:47:34.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.525" endtime="20201029 12:47:34.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.222" endtime="20201029 12:47:34.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.220" endtime="20201029 12:47:34.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.531" level="INFO">${RESULT} = [{'diff': 0.0001750140000000011}, {'diff': 0.0001745140000000006}, {'diff': 0.00017513899999999777}, {'diff': 0.0001744309999999992}, {'diff': 0.0001746110000000016}, {'diff': 0.00017476400000000086},...</msg>
<status status="PASS" starttime="20201029 12:47:34.528" endtime="20201029 12:47:34.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.536" level="INFO">${ACCURACY} = {'diff': [0.0001750140000000011, 0.0001745140000000006, 0.00017513899999999777, 0.0001744309999999992, 0.0001746110000000016, 0.00017476400000000086, 0.0001752920000000005, 0.00017513899999999777, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:34.532" endtime="20201029 12:47:34.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.541" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.540" endtime="20201029 12:47:34.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.543" level="INFO">VALUE: [0.0001750140000000011, 0.0001745140000000006, 0.00017513899999999777, 0.0001744309999999992, 0.0001746110000000016, 0.00017476400000000086, 0.0001752920000000005, 0.00017513899999999777, 0.00017461099999999813, 0.0001744439999999993, 0.00017490300000000056, 0.00017472199999999868, 0.00017533299999999974, 0.0001751660000000009, 0.00017461099999999813, 0.0001745279999999967, 0.000174792, 0.00017501399999999764, 0.00017459699999999856, 0.0001752920000000005, 0.00017459700000000203, 0.00017490300000000056, 0.00017536100000000235, 0.000175485999999999, 0.00017522299999999866, 0.00017502800000000068, 0.00017541600000000115, 0.00017540300000000106, 0.00017537500000000192, 0.00017501300000000164, 0.00017520799999999961, 0.00017470800000000258, 0.0001749029999999971, 0.000175098000000002, 0.00017550000000000204, 0.0001752630000000019, 0.00017473599999999825, 0.00017472299999999816, 0.00017506899999999992, 0.0001751530000000008, 0.0001746660000000004, 0.00017455599999999932, 0.00017467999999999997, 0.00017477800000000043, 0.00017515299999999734, 0.000175485999999999, 0.0001755140000000016, 0.00017472200000000215, 0.00017461200000000454, 0.00017537499999999845]</msg>
<status status="PASS" starttime="20201029 12:47:34.542" endtime="20201029 12:47:34.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.537" endtime="20201029 12:47:34.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.548" endtime="20201029 12:47:34.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.546" endtime="20201029 12:47:34.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.545" endtime="20201029 12:47:34.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.184" endtime="20201029 12:47:34.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.183" endtime="20201029 12:47:34.569"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.577" endtime="20201029 12:47:34.599"></status>
</kw>
<msg timestamp="20201029 12:47:34.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.576" endtime="20201029 12:47:34.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.601" endtime="20201029 12:47:34.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.603" endtime="20201029 12:47:34.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.573" endtime="20201029 12:47:34.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.571" endtime="20201029 12:47:34.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.612" endtime="20201029 12:47:34.898"></status>
</kw>
<msg timestamp="20201029 12:47:34.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.611" endtime="20201029 12:47:34.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.902" endtime="20201029 12:47:34.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.910" endtime="20201029 12:47:34.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.608" endtime="20201029 12:47:34.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.606" endtime="20201029 12:47:34.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.917" level="INFO">${RESULT} = [{'diff': 0.00017583300000000024}, {'diff': 0.0001756530000000013}, {'diff': 0.00017581900000000067}, {'diff': 0.00017622299999999966}, {'diff': 0.0001762639999999989}, {'diff': 0.00017627800000000193...</msg>
<status status="PASS" starttime="20201029 12:47:34.914" endtime="20201029 12:47:34.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.921" level="INFO">${ACCURACY} = {'diff': [0.00017583300000000024, 0.0001756530000000013, 0.00017581900000000067, 0.00017622299999999966, 0.0001762639999999989, 0.00017627800000000193, 0.0001759859999999995, 0.00017590300000000156, 0...</msg>
<status status="PASS" starttime="20201029 12:47:34.918" endtime="20201029 12:47:34.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.925" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.924" endtime="20201029 12:47:34.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.928" level="INFO">VALUE: [0.00017583300000000024, 0.0001756530000000013, 0.00017581900000000067, 0.00017622299999999966, 0.0001762639999999989, 0.00017627800000000193, 0.0001759859999999995, 0.00017590300000000156, 0.00017641700000000163, 0.00017587499999999895, 0.00017636099999999988, 0.0001757639999999984, 0.00017559699999999956, 0.00017551300000000214, 0.0001757639999999984, 0.00017597199999999993, 0.00017626400000000236, 0.00017551399999999814, 0.00017590300000000156, 0.000175485999999999, 0.0001758050000000011, 0.00017545799999999986, 0.00017620800000000061, 0.00017636199999999935, 0.00017551300000000214, 0.00017570800000000011, 0.00017568100000000045, 0.00017631900000000117, 0.00017577800000000143, 0.00017554200000000075, 0.00017611099999999963, 0.00017582000000000014, 0.00017597300000000288, 0.00017580600000000057, 0.00017590199999999862, 0.00017552799999999771, 0.0001764029999999986, 0.00017633300000000074, 0.00017604199999999778, 0.00017556900000000042, 0.00017559699999999956, 0.0001763340000000002, 0.00017597199999999993, 0.00017572200000000315, 0.0001759729999999994, 0.00017637499999999945, 0.00017631900000000117, 0.00017590300000000156, 0.0001754999999999951, 0.00017554100000000128]</msg>
<status status="PASS" starttime="20201029 12:47:34.926" endtime="20201029 12:47:34.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.922" endtime="20201029 12:47:34.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.933" endtime="20201029 12:47:34.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.931" endtime="20201029 12:47:34.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.930" endtime="20201029 12:47:34.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.569" endtime="20201029 12:47:34.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.569" endtime="20201029 12:47:34.953"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.962" endtime="20201029 12:47:34.985"></status>
</kw>
<msg timestamp="20201029 12:47:34.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.961" endtime="20201029 12:47:34.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.986" endtime="20201029 12:47:34.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.989" endtime="20201029 12:47:34.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.958" endtime="20201029 12:47:34.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.956" endtime="20201029 12:47:34.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.998" endtime="20201029 12:47:35.284"></status>
</kw>
<msg timestamp="20201029 12:47:35.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.996" endtime="20201029 12:47:35.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.288" endtime="20201029 12:47:35.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.296" endtime="20201029 12:47:35.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.994" endtime="20201029 12:47:35.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.992" endtime="20201029 12:47:35.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.303" level="INFO">${RESULT} = [{'diff': 0.00017716599999999944}, {'diff': 0.00017693000000000222}, {'diff': 0.0001773479999999973}, {'diff': 0.00017659700000000056}, {'diff': 0.00017683300000000124}, {'diff': 0.0001771529999999993...</msg>
<status status="PASS" starttime="20201029 12:47:35.299" endtime="20201029 12:47:35.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.307" level="INFO">${ACCURACY} = {'diff': [0.00017716599999999944, 0.00017693000000000222, 0.0001773479999999973, 0.00017659700000000056, 0.00017683300000000124, 0.00017715299999999934, 0.0001770140000000031, 0.00017736100000000088, ...</msg>
<status status="PASS" starttime="20201029 12:47:35.304" endtime="20201029 12:47:35.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.311" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.310" endtime="20201029 12:47:35.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.314" level="INFO">VALUE: [0.00017716599999999944, 0.00017693000000000222, 0.0001773479999999973, 0.00017659700000000056, 0.00017683300000000124, 0.00017715299999999934, 0.0001770140000000031, 0.00017736100000000088, 0.0001769860000000005, 0.0001772920000000025, 0.00017723600000000075, 0.00017725000000000032, 0.00017647200000000043, 0.00017729199999999903, 0.00017642999999999825, 0.00017681900000000167, 0.00017669500000000102, 0.0001767639999999994, 0.00017654200000000175, 0.00017665299999999884, 0.0001772639999999999, 0.00017665199999999937, 0.00017663899999999927, 0.00017647200000000043, 0.00017652799999999871, 0.00017682000000000114, 0.00017665299999999884, 0.00017713899999999977, 0.00017711100000000063, 0.00017711100000000063, 0.00017683299999999777, 0.00017659700000000056, 0.000177179999999999, 0.00017716700000000238, 0.0001772639999999999, 0.00017736100000000088, 0.00017709800000000053, 0.00017738900000000002, 0.00017731999999999817, 0.0001771380000000003, 0.00017661100000000013, 0.00017682000000000114, 0.00017722200000000118, 0.00017708400000000096, 0.00017729100000000303, 0.00017711100000000063, 0.00017715299999999934, 0.00017716599999999944, 0.0001774720000000049, 0.0001771669999999989]</msg>
<status status="PASS" starttime="20201029 12:47:35.312" endtime="20201029 12:47:35.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.307" endtime="20201029 12:47:35.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.319" endtime="20201029 12:47:35.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.318" endtime="20201029 12:47:35.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.316" endtime="20201029 12:47:35.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.954" endtime="20201029 12:47:35.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.954" endtime="20201029 12:47:35.340"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.349" endtime="20201029 12:47:35.371"></status>
</kw>
<msg timestamp="20201029 12:47:35.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.347" endtime="20201029 12:47:35.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.372" endtime="20201029 12:47:35.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.375" endtime="20201029 12:47:35.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.345" endtime="20201029 12:47:35.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.342" endtime="20201029 12:47:35.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.384" endtime="20201029 12:47:35.669"></status>
</kw>
<msg timestamp="20201029 12:47:35.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.382" endtime="20201029 12:47:35.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.673" endtime="20201029 12:47:35.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.681" endtime="20201029 12:47:35.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.380" endtime="20201029 12:47:35.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.378" endtime="20201029 12:47:35.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.688" level="INFO">${RESULT} = [{'diff': 0.00017797199999999846}, {'diff': 0.00017801400000000064}, {'diff': 0.00017820799999999914}, {'diff': 0.00017838900000000102}, {'diff': 0.000177583000000002}, {'diff': 0.00017845899999999887...</msg>
<status status="PASS" starttime="20201029 12:47:35.685" endtime="20201029 12:47:35.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.693" level="INFO">${ACCURACY} = {'diff': [0.00017797199999999846, 0.00017801400000000064, 0.00017820799999999914, 0.00017838900000000102, 0.000177583000000002, 0.00017845899999999887, 0.00017788900000000052, 0.00017833299999999927, ...</msg>
<status status="PASS" starttime="20201029 12:47:35.689" endtime="20201029 12:47:35.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.697" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.696" endtime="20201029 12:47:35.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.700" level="INFO">VALUE: [0.00017797199999999846, 0.00017801400000000064, 0.00017820799999999914, 0.00017838900000000102, 0.000177583000000002, 0.00017845899999999887, 0.00017788900000000052, 0.00017833299999999927, 0.00017765299999999984, 0.00017770800000000211, 0.00017820799999999914, 0.0001775409999999998, 0.00017819399999999957, 0.00017840200000000112, 0.0001779860000000015, 0.00017826299999999795, 0.0001778609999999979, 0.00017825000000000132, 0.00017826300000000142, 0.0001774999999999971, 0.0001778470000000018, 0.00017818099999999948, 0.00017780499999999963, 0.00017811099999999816, 0.00017781900000000267, 0.00017762499999999723, 0.00017744399999999882, 0.00017801400000000064, 0.00017781900000000267, 0.00017755600000000232, 0.00017819399999999957, 0.0001779030000000001, 0.00017752799999999971, 0.00017772200000000168, 0.00017745899999999787, 0.00017820799999999914, 0.00017819399999999957, 0.0001775969999999981, 0.00017759700000000156, 0.00017827800000000046, 0.00017745899999999787, 0.00017838900000000102, 0.00017769499999999855, 0.0001779310000000027, 0.00017809700000000206, 0.00017820799999999914, 0.00017802800000000021, 0.00017833300000000274, 0.0001779030000000001, 0.0001781250000000012]</msg>
<status status="PASS" starttime="20201029 12:47:35.698" endtime="20201029 12:47:35.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.694" endtime="20201029 12:47:35.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.705" endtime="20201029 12:47:35.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.703" endtime="20201029 12:47:35.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.702" endtime="20201029 12:47:35.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.341" endtime="20201029 12:47:35.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.340" endtime="20201029 12:47:35.725"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.734" endtime="20201029 12:47:35.756"></status>
</kw>
<msg timestamp="20201029 12:47:35.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.733" endtime="20201029 12:47:35.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.758" endtime="20201029 12:47:35.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.760" endtime="20201029 12:47:35.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.730" endtime="20201029 12:47:35.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.728" endtime="20201029 12:47:35.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.769" endtime="20201029 12:47:36.059"></status>
</kw>
<msg timestamp="20201029 12:47:36.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.768" endtime="20201029 12:47:36.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.063" endtime="20201029 12:47:36.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.071" endtime="20201029 12:47:36.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.765" endtime="20201029 12:47:36.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.763" endtime="20201029 12:47:36.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.077" level="INFO">${RESULT} = [{'diff': 0.00017905600000000035}, {'diff': 0.00017847299999999844}, {'diff': 0.0001791389999999983}, {'diff': 0.0001789030000000011}, {'diff': 0.00017945799999999693}, {'diff': 0.00017870799999999964...</msg>
<status status="PASS" starttime="20201029 12:47:36.074" endtime="20201029 12:47:36.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.081" level="INFO">${ACCURACY} = {'diff': [0.00017905600000000035, 0.00017847299999999844, 0.0001791389999999983, 0.0001789030000000011, 0.00017945799999999693, 0.00017870799999999964, 0.00017870799999999964, 0.00017872200000000268, ...</msg>
<status status="PASS" starttime="20201029 12:47:36.078" endtime="20201029 12:47:36.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.086" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.085" endtime="20201029 12:47:36.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.088" level="INFO">VALUE: [0.00017905600000000035, 0.00017847299999999844, 0.0001791389999999983, 0.0001789030000000011, 0.00017945799999999693, 0.00017870799999999964, 0.00017870799999999964, 0.00017872200000000268, 0.00017926399999999842, 0.00017947299999999944, 0.0001785410000000008, 0.0001786250000000017, 0.0001789999999999986, 0.0001791670000000009, 0.00017925000000000232, 0.00017854200000000028, 0.0001786250000000017, 0.000178583999999999, 0.000179277999999998, 0.00017869499999999955, 0.00017861199999999813, 0.00017933300000000027, 0.00017898599999999903, 0.00017901400000000164, 0.0001788470000000028, 0.00017922199999999971, 0.00017933300000000027, 0.00017911099999999916, 0.00017906999999999992, 0.00017856999999999942, 0.00017904200000000078, 0.00017938899999999855, 0.0001793190000000007, 0.0001789999999999986, 0.00017863900000000127, 0.00017859700000000256, 0.00017917999999999754, 0.00017897199999999946, 0.00017862499999999823, 0.0001791389999999983, 0.0001786389999999978, 0.00017938900000000202, 0.00017911099999999916, 0.000178583999999999, 0.0001788609999999989, 0.00017861099999999866, 0.0001785969999999991, 0.00017926399999999842, 0.00017870899999999912, 0.00017859700000000256]</msg>
<status status="PASS" starttime="20201029 12:47:36.087" endtime="20201029 12:47:36.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.082" endtime="20201029 12:47:36.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.098" endtime="20201029 12:47:36.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.097" endtime="20201029 12:47:36.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.096" endtime="20201029 12:47:36.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.726" endtime="20201029 12:47:36.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.726" endtime="20201029 12:47:36.119"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.128" endtime="20201029 12:47:36.151"></status>
</kw>
<msg timestamp="20201029 12:47:36.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.126" endtime="20201029 12:47:36.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.153" endtime="20201029 12:47:36.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.155" endtime="20201029 12:47:36.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.124" endtime="20201029 12:47:36.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.122" endtime="20201029 12:47:36.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.164" endtime="20201029 12:47:36.449"></status>
</kw>
<msg timestamp="20201029 12:47:36.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.163" endtime="20201029 12:47:36.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.454" endtime="20201029 12:47:36.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.462" endtime="20201029 12:47:36.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.160" endtime="20201029 12:47:36.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.158" endtime="20201029 12:47:36.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.468" level="INFO">${RESULT} = [{'diff': 0.000180180999999998}, {'diff': 0.00018037499999999998}, {'diff': 0.00018038900000000302}, {'diff': 0.0001798609999999999}, {'diff': 0.00018034700000000084}, {'diff': 0.00018019500000000105}...</msg>
<status status="PASS" starttime="20201029 12:47:36.465" endtime="20201029 12:47:36.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.472" level="INFO">${ACCURACY} = {'diff': [0.000180180999999998, 0.00018037499999999998, 0.00018038900000000302, 0.0001798609999999999, 0.00018034700000000084, 0.00018019500000000105, 0.00017954200000000128, 0.0001796800000000015, 0....</msg>
<status status="PASS" starttime="20201029 12:47:36.469" endtime="20201029 12:47:36.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.477" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.476" endtime="20201029 12:47:36.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.479" level="INFO">VALUE: [0.000180180999999998, 0.00018037499999999998, 0.00018038900000000302, 0.0001798609999999999, 0.00018034700000000084, 0.00018019500000000105, 0.00017954200000000128, 0.0001796800000000015, 0.0001796809999999975, 0.00017968100000000098, 0.00017947199999999996, 0.00017993100000000123, 0.0001799869999999995, 0.00018011100000000016, 0.0001800840000000005, 0.00018012499999999973, 0.00018004200000000178, 0.00017945900000000334, 0.0001794450000000003, 0.00017957000000000042, 0.00017974999999999935, 0.00018005599999999788, 0.00018024999999999985, 0.00017972200000000021, 0.0001793609999999994, 0.0001803610000000004, 0.000179486000000003, 0.00017958299999999705, 0.0001803199999999977, 0.0001800970000000006, 0.00017961199999999913, 0.00017966600000000194, 0.00017987500000000295, 0.00017958300000000052, 0.00018037499999999998, 0.00018026399999999942, 0.00018020799999999768, 0.00018037499999999998, 0.00017983400000000024, 0.0001795970000000001, 0.00017998600000000003, 0.00017963900000000227, 0.00017997200000000046, 0.00018006899999999798, 0.00017969500000000055, 0.00018038899999999608, 0.00018008299999999755, 0.00017947199999999996, 0.000179486999999999, 0.00017968100000000098]</msg>
<status status="PASS" starttime="20201029 12:47:36.478" endtime="20201029 12:47:36.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.473" endtime="20201029 12:47:36.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.485" endtime="20201029 12:47:36.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.483" endtime="20201029 12:47:36.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.482" endtime="20201029 12:47:36.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.120" endtime="20201029 12:47:36.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.120" endtime="20201029 12:47:36.506"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.514" endtime="20201029 12:47:36.536"></status>
</kw>
<msg timestamp="20201029 12:47:36.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.513" endtime="20201029 12:47:36.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.538" endtime="20201029 12:47:36.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.541" endtime="20201029 12:47:36.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.510" endtime="20201029 12:47:36.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.508" endtime="20201029 12:47:36.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.549" endtime="20201029 12:47:36.835"></status>
</kw>
<msg timestamp="20201029 12:47:36.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:36.548" endtime="20201029 12:47:36.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:36.839" endtime="20201029 12:47:36.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.847" endtime="20201029 12:47:36.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.545" endtime="20201029 12:47:36.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.544" endtime="20201029 12:47:36.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.854" level="INFO">${RESULT} = [{'diff': 0.00018079199999999906}, {'diff': 0.00018090299999999962}, {'diff': 0.00018091700000000266}, {'diff': 0.00018123599999999782}, {'diff': 0.00018123599999999782}, {'diff': 0.000181278}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:47:36.851" endtime="20201029 12:47:36.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.859" level="INFO">${ACCURACY} = {'diff': [0.00018079199999999906, 0.00018090299999999962, 0.00018091700000000266, 0.00018123599999999782, 0.00018123599999999782, 0.000181278, 0.0001808190000000022, 0.00018123599999999782, 0.00018087...</msg>
<status status="PASS" starttime="20201029 12:47:36.855" endtime="20201029 12:47:36.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.863" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.862" endtime="20201029 12:47:36.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.866" level="INFO">VALUE: [0.00018079199999999906, 0.00018090299999999962, 0.00018091700000000266, 0.00018123599999999782, 0.00018123599999999782, 0.000181278, 0.0001808190000000022, 0.00018123599999999782, 0.00018087500000000048, 0.00018042999999999879, 0.00018084799999999734, 0.00018125000000000085, 0.000181180999999999, 0.000181278, 0.00018055599999999838, 0.0001814169999999997, 0.00018130499999999966, 0.00018087500000000048, 0.00018140300000000012, 0.00018134799999999784, 0.00018056900000000195, 0.00018055599999999838, 0.0001810970000000016, 0.00018048600000000053, 0.00018079199999999906, 0.00018069499999999808, 0.0001805000000000001, 0.00018130599999999913, 0.0001806389999999998, 0.0001808610000000009, 0.00018138900000000055, 0.00018123599999999782, 0.0001808610000000009, 0.00018056899999999848, 0.00018136200000000088, 0.00018045900000000087, 0.00018087500000000048, 0.00018056999999999795, 0.00018125000000000085, 0.0001806519999999999, 0.00018069500000000155, 0.00018048600000000053, 0.00018082000000000167, 0.0001809169999999992, 0.00018076399999999992, 0.00018111100000000116, 0.00018084699999999787, 0.0001811109999999977, 0.00018092999999999582, 0.00018097200000000147]</msg>
<status status="PASS" starttime="20201029 12:47:36.865" endtime="20201029 12:47:36.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.860" endtime="20201029 12:47:36.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.871" endtime="20201029 12:47:36.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.869" endtime="20201029 12:47:36.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.868" endtime="20201029 12:47:36.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.506" endtime="20201029 12:47:36.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.506" endtime="20201029 12:47:36.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.319" endtime="20201029 12:47:36.892"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:58.253" endtime="20201029 12:47:36.892" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:18.181" endtime="20201029 12:47:36.896"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.949" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:36.957" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:38.146" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:36.947" endtime="20201029 12:47:38.147"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.152" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:47:38.149" endtime="20201029 12:47:38.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.946" endtime="20201029 12:47:38.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.159" endtime="20201029 12:47:38.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.155" endtime="20201029 12:47:38.421"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.433" endtime="20201029 12:47:38.446"></status>
</kw>
<msg timestamp="20201029 12:47:38.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.431" endtime="20201029 12:47:38.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.448" endtime="20201029 12:47:38.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.452" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:38.450" endtime="20201029 12:47:38.452"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:38.429" endtime="20201029 12:47:38.453"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:38.427" endtime="20201029 12:47:38.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.425" endtime="20201029 12:47:38.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:38.458" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:38.457" endtime="20201029 12:47:38.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.455" endtime="20201029 12:47:38.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.425" endtime="20201029 12:47:38.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.424" endtime="20201029 12:47:38.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.460" endtime="20201029 12:47:38.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.423" endtime="20201029 12:47:38.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.462" endtime="20201029 12:47:38.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.421" endtime="20201029 12:47:38.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.945" endtime="20201029 12:47:38.465"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.471" endtime="20201029 12:47:38.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.469" endtime="20201029 12:47:38.491"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.503" endtime="20201029 12:47:38.516"></status>
</kw>
<msg timestamp="20201029 12:47:38.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.502" endtime="20201029 12:47:38.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.517" endtime="20201029 12:47:38.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.522" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:38.520" endtime="20201029 12:47:38.523"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:38.499" endtime="20201029 12:47:38.523"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:38.497" endtime="20201029 12:47:38.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.496" endtime="20201029 12:47:38.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:38.528" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:38.527" endtime="20201029 12:47:38.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.525" endtime="20201029 12:47:38.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.495" endtime="20201029 12:47:38.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.494" endtime="20201029 12:47:38.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.530" endtime="20201029 12:47:38.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.493" endtime="20201029 12:47:38.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.491" endtime="20201029 12:47:38.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.468" endtime="20201029 12:47:38.532"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.541" endtime="20201029 12:47:44.637"></status>
</kw>
<msg timestamp="20201029 12:47:44.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.539" endtime="20201029 12:47:44.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.640" endtime="20201029 12:47:44.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.645" endtime="20201029 12:47:44.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.536" endtime="20201029 12:47:44.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.534" endtime="20201029 12:47:44.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.656" level="INFO">${RESULT} = {'bg-timer-count': 0, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:47:44.652" endtime="20201029 12:47:44.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.665" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:44.663" endtime="20201029 12:47:44.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.670" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:44.668" endtime="20201029 12:47:44.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.658" endtime="20201029 12:47:44.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.680" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:44.678" endtime="20201029 12:47:44.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.684" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:44.682" endtime="20201029 12:47:44.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.673" endtime="20201029 12:47:44.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.694" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:44.692" endtime="20201029 12:47:44.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.701" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:47:44.698" endtime="20201029 12:47:44.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.687" endtime="20201029 12:47:44.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.721" endtime="20201029 12:47:45.023"></status>
</kw>
<msg timestamp="20201029 12:47:45.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061119375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160798181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.717" endtime="20201029 12:47:45.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061119375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.160798181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.028" endtime="20201029 12:47:45.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.036" endtime="20201029 12:47:45.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.710" endtime="20201029 12:47:45.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.705" endtime="20201029 12:47:45.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:45.042" level="INFO">${FILTERED} = [{'diff': 0.09967880600000001}, {'diff': 0.099581583}, {'diff': 0.09959658299999996}, {'diff': 0.099603306}, {'diff': 0.09959716699999999}, {'diff': 0.09958887499999991}, {'diff': 0.099593347}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:47:45.039" endtime="20201029 12:47:45.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.046" level="INFO">${RESULT} = {'diff': [0.09967880600000001, 0.099581583, 0.09959658299999996, 0.099603306, 0.09959716699999999, 0.09958887499999991, 0.099593347, 0.09959333299999995, 0.09959709699999997, 0.09959673599999996, 0.09...</msg>
<status status="PASS" starttime="20201029 12:47:45.043" endtime="20201029 12:47:45.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.050" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:45.049" endtime="20201029 12:47:45.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.053" level="INFO">VALUE: [0.09967880600000001, 0.099581583, 0.09959658299999996, 0.099603306, 0.09959716699999999, 0.09958887499999991, 0.099593347, 0.09959333299999995, 0.09959709699999997, 0.09959673599999996, 0.09959479199999999, 0.09959508300000008, 0.09959229200000008, 0.09959482000000008, 0.09959140300000002, 0.09959841600000008, 0.09959487499999997, 0.09960029100000001, 0.0996014999999999, 0.09960470900000007, 0.09960119400000034, 0.09960309700000014, 0.09960058299999996, 0.09959920800000033, 0.09960602799999974, 0.09959970900000004, 0.09960336100000022, 0.0995995970000001, 0.09959916599999996, 0.09959549999999995, 0.09959195899999962, 0.09959408400000003, 0.09958983399999966, 0.09959243100000004, 0.09959980499999999, 0.09960272199999975, 0.09960409700000028, 0.09959763899999974, 0.0995959580000001, 0.09960237499999991, 0.09959743000000021, 0.09959538900000009, 0.0995971520000003, 0.09959917999999934, 0.09959288900000018, 0.09959184700000012, 0.09959491600000003, 0.09960102800000037, 0.09960354200000054, 0.09958995900000023, 0.09958774999999953]</msg>
<status status="PASS" starttime="20201029 12:47:45.051" endtime="20201029 12:47:45.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.047" endtime="20201029 12:47:45.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.533" endtime="20201029 12:47:45.054"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:38.465" endtime="20201029 12:47:45.055" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.061" endtime="20201029 12:47:45.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.060" endtime="20201029 12:47:45.081"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.095" endtime="20201029 12:47:45.107"></status>
</kw>
<msg timestamp="20201029 12:47:45.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.093" endtime="20201029 12:47:45.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.110" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.109" endtime="20201029 12:47:45.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.113" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:45.111" endtime="20201029 12:47:45.113"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:45.091" endtime="20201029 12:47:45.114"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:45.088" endtime="20201029 12:47:45.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.086" endtime="20201029 12:47:45.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:45.118" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:45.118" endtime="20201029 12:47:45.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.116" endtime="20201029 12:47:45.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.085" endtime="20201029 12:47:45.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.085" endtime="20201029 12:47:45.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.120" endtime="20201029 12:47:45.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.083" endtime="20201029 12:47:45.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.082" endtime="20201029 12:47:45.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.058" endtime="20201029 12:47:45.123"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.131" endtime="20201029 12:47:51.227"></status>
</kw>
<msg timestamp="20201029 12:47:51.228" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.130" endtime="20201029 12:47:51.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.233" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.230" endtime="20201029 12:47:51.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.235" endtime="20201029 12:47:51.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.127" endtime="20201029 12:47:51.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.125" endtime="20201029 12:47:51.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.246" level="INFO">${RESULT} = {'bg-timer-count': 5, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:47:51.243" endtime="20201029 12:47:51.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.255" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:51.253" endtime="20201029 12:47:51.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.260" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:51.258" endtime="20201029 12:47:51.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.249" endtime="20201029 12:47:51.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.272" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:51.267" endtime="20201029 12:47:51.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.276" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:51.274" endtime="20201029 12:47:51.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.263" endtime="20201029 12:47:51.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.286" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:51.284" endtime="20201029 12:47:51.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.290" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:47:51.288" endtime="20201029 12:47:51.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.279" endtime="20201029 12:47:51.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.299" endtime="20201029 12:47:51.596"></status>
</kw>
<msg timestamp="20201029 12:47:51.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061325333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161081264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.298" endtime="20201029 12:47:51.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061325333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161081264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.600" endtime="20201029 12:47:51.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.608" endtime="20201029 12:47:51.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.295" endtime="20201029 12:47:51.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.293" endtime="20201029 12:47:51.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:51.614" level="INFO">${FILTERED} = [{'diff': 0.09975593099999999}, {'diff': 0.099509875}, {'diff': 0.09958402700000002}, {'diff': 0.09959102800000003}, {'diff': 0.09958334699999999}, {'diff': 0.09957944400000007}, {'diff': 0.0995878610...</msg>
<status status="PASS" starttime="20201029 12:47:51.611" endtime="20201029 12:47:51.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.618" level="INFO">${RESULT} = {'diff': [0.09975593099999999, 0.099509875, 0.09958402700000002, 0.09959102800000003, 0.09958334699999999, 0.09957944400000007, 0.09958786100000006, 0.09959516600000007, 0.099588805, 0.099590749999999...</msg>
<status status="PASS" starttime="20201029 12:47:51.615" endtime="20201029 12:47:51.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.623" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:51.622" endtime="20201029 12:47:51.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.626" level="INFO">VALUE: [0.09975593099999999, 0.099509875, 0.09958402700000002, 0.09959102800000003, 0.09958334699999999, 0.09957944400000007, 0.09958786100000006, 0.09959516600000007, 0.099588805, 0.09959074999999995, 0.09959301399999987, 0.09959347200000002, 0.09959116600000018, 0.09959665200000001, 0.09959086199999989, 0.09959712499999984, 0.0996026940000001, 0.0995979440000001, 0.09959766599999997, 0.09959309699999985, 0.09959756899999972, 0.09959581900000014, 0.09959119399999983, 0.09959873600000035, 0.09959545800000003, 0.09959458300000001, 0.09959307000000006, 0.09959315300000027, 0.09958181899999996, 0.09958876399999994, 0.0995862780000003, 0.09958726400000018, 0.09959480599999981, 0.09959277800000033, 0.09959483300000027, 0.09959137500000015, 0.09958254199999983, 0.09957437499999999, 0.09957490300000016, 0.0995713880000002, 0.0995757639999999, 0.09958080499999955, 0.09958347199999995, 0.09958484700000003, 0.09958530599999982, 0.0995858200000006, 0.0995886119999998, 0.09958797199999925, 0.09958786099999983, 0.09958708299999941, 0.09958447200000009]</msg>
<status status="PASS" starttime="20201029 12:47:51.624" endtime="20201029 12:47:51.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.619" endtime="20201029 12:47:51.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.124" endtime="20201029 12:47:51.627"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:45.056" endtime="20201029 12:47:51.628" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.634" endtime="20201029 12:47:51.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.633" endtime="20201029 12:47:51.654"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.667" endtime="20201029 12:47:51.679"></status>
</kw>
<msg timestamp="20201029 12:47:51.679" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.665" endtime="20201029 12:47:51.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.682" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.680" endtime="20201029 12:47:51.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.685" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:51.683" endtime="20201029 12:47:51.685"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:51.663" endtime="20201029 12:47:51.686"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:51.660" endtime="20201029 12:47:51.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.659" endtime="20201029 12:47:51.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:51.690" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:51.690" endtime="20201029 12:47:51.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.688" endtime="20201029 12:47:51.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.658" endtime="20201029 12:47:51.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.658" endtime="20201029 12:47:51.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.692" endtime="20201029 12:47:51.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.656" endtime="20201029 12:47:51.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.655" endtime="20201029 12:47:51.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.631" endtime="20201029 12:47:51.695"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.706" endtime="20201029 12:47:57.802"></status>
</kw>
<msg timestamp="20201029 12:47:57.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.701" endtime="20201029 12:47:57.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.806" endtime="20201029 12:47:57.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.811" endtime="20201029 12:47:57.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.699" endtime="20201029 12:47:57.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.697" endtime="20201029 12:47:57.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.822" level="INFO">${RESULT} = {'bg-timer-count': 10, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:47:57.818" endtime="20201029 12:47:57.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.831" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:57.829" endtime="20201029 12:47:57.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.835" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:57.833" endtime="20201029 12:47:57.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.824" endtime="20201029 12:47:57.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.845" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:57.843" endtime="20201029 12:47:57.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.849" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:57.847" endtime="20201029 12:47:57.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.838" endtime="20201029 12:47:57.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.859" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:57.857" endtime="20201029 12:47:57.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.863" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:47:57.861" endtime="20201029 12:47:57.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.852" endtime="20201029 12:47:57.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.878" endtime="20201029 12:47:58.180"></status>
</kw>
<msg timestamp="20201029 12:47:58.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063670931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163721194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.875" endtime="20201029 12:47:58.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063670931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163721194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.184" endtime="20201029 12:47:58.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.192" endtime="20201029 12:47:58.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.870" endtime="20201029 12:47:58.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.866" endtime="20201029 12:47:58.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:58.198" level="INFO">${FILTERED} = [{'diff': 0.10005026299999999}, {'diff': 0.09920273599999999}, {'diff': 0.09958055500000002}, {'diff': 0.09958300000000003}, {'diff': 0.09958336100000004}, {'diff': 0.09958741599999998}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201029 12:47:58.195" endtime="20201029 12:47:58.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.203" level="INFO">${RESULT} = {'diff': [0.10005026299999999, 0.09920273599999999, 0.09958055500000002, 0.09958300000000003, 0.09958336100000004, 0.09958741599999998, 0.09958743000000003, 0.09959263900000004, 0.09959359700000003, 0...</msg>
<status status="PASS" starttime="20201029 12:47:58.199" endtime="20201029 12:47:58.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.207" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:58.206" endtime="20201029 12:47:58.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.210" level="INFO">VALUE: [0.10005026299999999, 0.09920273599999999, 0.09958055500000002, 0.09958300000000003, 0.09958336100000004, 0.09958741599999998, 0.09958743000000003, 0.09959263900000004, 0.09959359700000003, 0.09958822200000006, 0.09958463800000006, 0.09958983300000002, 0.09958166700000004, 0.09958630599999996, 0.09958561099999996, 0.09958747200000007, 0.09958306899999991, 0.09958541700000012, 0.09958201400000011, 0.099569625, 0.09958834700000008, 0.09958822199999995, 0.09958848600000003, 0.09958874999999967, 0.09959074999999995, 0.09958625000000021, 0.09959108299999997, 0.09959187500000022, 0.0995939309999998, 0.0995932500000003, 0.099596236, 0.0996009579999999, 0.09959724999999997, 0.09959195900000006, 0.09958959700000003, 0.09959227799999981, 0.09958774999999997, 0.09958638900000016, 0.09958254200000027, 0.0995885280000004, 0.09958509700000029, 0.09958755599999947, 0.09958387500000043, 0.09958901399999931, 0.0995873619999994, 0.09958937500000076, 0.09959387500000005, 0.09959449999999936, 0.09959127800000012, 0.09959491700000012, 0.09959334799999997]</msg>
<status status="PASS" starttime="20201029 12:47:58.208" endtime="20201029 12:47:58.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.204" endtime="20201029 12:47:58.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.696" endtime="20201029 12:47:58.211"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:51.629" endtime="20201029 12:47:58.212" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.218" endtime="20201029 12:47:58.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.217" endtime="20201029 12:47:58.238"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.251" endtime="20201029 12:47:58.263"></status>
</kw>
<msg timestamp="20201029 12:47:58.264" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.250" endtime="20201029 12:47:58.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.265" endtime="20201029 12:47:58.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.270" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:58.267" endtime="20201029 12:47:58.270"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:58.247" endtime="20201029 12:47:58.271"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:58.245" endtime="20201029 12:47:58.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.243" endtime="20201029 12:47:58.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:58.276" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:58.275" endtime="20201029 12:47:58.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.273" endtime="20201029 12:47:58.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.243" endtime="20201029 12:47:58.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.242" endtime="20201029 12:47:58.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.277" endtime="20201029 12:47:58.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.241" endtime="20201029 12:47:58.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.239" endtime="20201029 12:47:58.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.216" endtime="20201029 12:47:58.280"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.288" endtime="20201029 12:48:04.384"></status>
</kw>
<msg timestamp="20201029 12:48:04.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.286" endtime="20201029 12:48:04.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.387" endtime="20201029 12:48:04.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.393" endtime="20201029 12:48:04.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.284" endtime="20201029 12:48:04.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.282" endtime="20201029 12:48:04.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.404" level="INFO">${RESULT} = {'bg-timer-count': 15, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:48:04.400" endtime="20201029 12:48:04.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.412" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:04.410" endtime="20201029 12:48:04.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.417" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:04.415" endtime="20201029 12:48:04.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.406" endtime="20201029 12:48:04.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.426" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:04.424" endtime="20201029 12:48:04.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.431" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:04.429" endtime="20201029 12:48:04.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.420" endtime="20201029 12:48:04.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.440" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:04.438" endtime="20201029 12:48:04.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.445" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:48:04.443" endtime="20201029 12:48:04.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.434" endtime="20201029 12:48:04.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.461" endtime="20201029 12:48:04.761"></status>
</kw>
<msg timestamp="20201029 12:48:04.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061191389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161432861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.457" endtime="20201029 12:48:04.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061191389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161432861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.765" endtime="20201029 12:48:04.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.774" endtime="20201029 12:48:04.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.451" endtime="20201029 12:48:04.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.448" endtime="20201029 12:48:04.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:04.781" level="INFO">${FILTERED} = [{'diff': 0.10024147200000001}, {'diff': 0.09978959700000001}, {'diff': 0.09880951299999996}, {'diff': 0.09958234700000002}, {'diff': 0.099581111}, {'diff': 0.09958227800000008}, {'diff': 0.0995800409...</msg>
<status status="PASS" starttime="20201029 12:48:04.778" endtime="20201029 12:48:04.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.785" level="INFO">${RESULT} = {'diff': [0.10024147200000001, 0.09978959700000001, 0.09880951299999996, 0.09958234700000002, 0.099581111, 0.09958227800000008, 0.09958004099999995, 0.09959036199999993, 0.09958494399999995, 0.0995777...</msg>
<status status="PASS" starttime="20201029 12:48:04.782" endtime="20201029 12:48:04.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.789" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:04.788" endtime="20201029 12:48:04.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.791" level="INFO">VALUE: [0.10024147200000001, 0.09978959700000001, 0.09880951299999996, 0.09958234700000002, 0.099581111, 0.09958227800000008, 0.09958004099999995, 0.09959036199999993, 0.09958494399999995, 0.09957779199999994, 0.0995764589999999, 0.099575792, 0.09957808299999993, 0.09958134699999999, 0.09959050000000014, 0.099592181, 0.09959372299999991, 0.0995902500000001, 0.09958812499999992, 0.099589347, 0.09959341600000027, 0.09959833299999987, 0.09959045800000021, 0.0995863749999999, 0.09958238900000005, 0.09958984699999984, 0.09958984700000029, 0.09958833399999989, 0.09959411100000004, 0.09959234800000027, 0.09959182000000011, 0.09959304199999996, 0.09959665299999987, 0.09959456900000019, 0.0995939159999999, 0.09959655499999975, 0.09959347200000002, 0.09959252800000007, 0.0995931109999999, 0.0995946390000002, 0.09959931900000019, 0.09959976400000059, 0.09960140299999942, 0.0996007919999995, 0.09959095800000028, 0.09958351299999979, 0.09957904200000023, 0.09958215300000006, 0.09958280499999983, 0.09958681899999977, 0.09958547200000023]</msg>
<status status="PASS" starttime="20201029 12:48:04.790" endtime="20201029 12:48:04.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.785" endtime="20201029 12:48:04.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.281" endtime="20201029 12:48:04.793"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:58.213" endtime="20201029 12:48:04.793" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.799" endtime="20201029 12:48:04.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.798" endtime="20201029 12:48:04.819"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.833" endtime="20201029 12:48:04.845"></status>
</kw>
<msg timestamp="20201029 12:48:04.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.831" endtime="20201029 12:48:04.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.848" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.847" endtime="20201029 12:48:04.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.851" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:04.849" endtime="20201029 12:48:04.851"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:04.829" endtime="20201029 12:48:04.852"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:04.826" endtime="20201029 12:48:04.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.824" endtime="20201029 12:48:04.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:04.856" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:04.856" endtime="20201029 12:48:04.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.854" endtime="20201029 12:48:04.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.824" endtime="20201029 12:48:04.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.823" endtime="20201029 12:48:04.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.858" endtime="20201029 12:48:04.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.822" endtime="20201029 12:48:04.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.820" endtime="20201029 12:48:04.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.797" endtime="20201029 12:48:04.861"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.869" endtime="20201029 12:48:10.961"></status>
</kw>
<msg timestamp="20201029 12:48:10.962" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.867" endtime="20201029 12:48:10.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.964" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.963" endtime="20201029 12:48:10.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.965" endtime="20201029 12:48:10.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.865" endtime="20201029 12:48:10.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.863" endtime="20201029 12:48:10.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:10.971" level="INFO">${RESULT} = {'bg-timer-count': 20, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:48:10.969" endtime="20201029 12:48:10.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.975" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:10.974" endtime="20201029 12:48:10.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.977" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:10.976" endtime="20201029 12:48:10.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.972" endtime="20201029 12:48:10.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.982" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:10.981" endtime="20201029 12:48:10.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.984" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:10.983" endtime="20201029 12:48:10.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.978" endtime="20201029 12:48:10.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.988" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:10.987" endtime="20201029 12:48:10.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.991" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:48:10.989" endtime="20201029 12:48:10.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.985" endtime="20201029 12:48:10.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.999" endtime="20201029 12:48:11.295"></status>
</kw>
<msg timestamp="20201029 12:48:11.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061047125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161562375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.997" endtime="20201029 12:48:11.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061047125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161562375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.299" endtime="20201029 12:48:11.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.307" endtime="20201029 12:48:11.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.995" endtime="20201029 12:48:11.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.993" endtime="20201029 12:48:11.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:11.314" level="INFO">${FILTERED} = [{'diff': 0.10051525}, {'diff': 0.09981168000000001}, {'diff': 0.098473694}, {'diff': 0.099574459}, {'diff': 0.09957086100000001}, {'diff': 0.099569083}, {'diff': 0.09957379199999994}, {'diff': 0.0995...</msg>
<status status="PASS" starttime="20201029 12:48:11.311" endtime="20201029 12:48:11.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:11.318" level="INFO">${RESULT} = {'diff': [0.10051525, 0.09981168000000001, 0.098473694, 0.099574459, 0.09957086100000001, 0.099569083, 0.09957379199999994, 0.09957697200000004, 0.099577111, 0.0995739160000001, 0.099578167, 0.0995793...</msg>
<status status="PASS" starttime="20201029 12:48:11.315" endtime="20201029 12:48:11.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.322" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:11.321" endtime="20201029 12:48:11.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.325" level="INFO">VALUE: [0.10051525, 0.09981168000000001, 0.098473694, 0.099574459, 0.09957086100000001, 0.099569083, 0.09957379199999994, 0.09957697200000004, 0.099577111, 0.0995739160000001, 0.099578167, 0.09957934700000015, 0.09957988899999992, 0.09958123600000013, 0.09957890300000005, 0.09958497199999994, 0.09958566599999985, 0.09958372199999999, 0.09958081899999982, 0.09958055499999996, 0.0995731799999997, 0.09957519400000026, 0.09957658299999972, 0.09957856900000017, 0.09957623599999987, 0.09957520799999964, 0.09957491699999999, 0.09957713800000034, 0.09957493000000017, 0.09957373599999997, 0.09956969500000001, 0.09957967999999973, 0.09957751399999992, 0.09958351400000032, 0.09958105499999981, 0.09958052699999964, 0.09958467999999998, 0.09958409800000023, 0.099582222, 0.0995835559999998, 0.09958388899999981, 0.09958340200000038, 0.09958522199999997, 0.0995845829999995, 0.09958637499999945, 0.09958651400000029, 0.09958695899999981, 0.09958483400000073, 0.09958927799999984, 0.09958772199999988, 0.0995925419999999]</msg>
<status status="PASS" starttime="20201029 12:48:11.323" endtime="20201029 12:48:11.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.319" endtime="20201029 12:48:11.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.861" endtime="20201029 12:48:11.327"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:04.795" endtime="20201029 12:48:11.327" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:11.333" endtime="20201029 12:48:11.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.332" endtime="20201029 12:48:11.353"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.366" endtime="20201029 12:48:11.378"></status>
</kw>
<msg timestamp="20201029 12:48:11.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.364" endtime="20201029 12:48:11.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.381" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.380" endtime="20201029 12:48:11.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.384" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:11.382" endtime="20201029 12:48:11.384"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:11.362" endtime="20201029 12:48:11.385"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:11.360" endtime="20201029 12:48:11.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.358" endtime="20201029 12:48:11.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:11.389" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:11.389" endtime="20201029 12:48:11.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.386" endtime="20201029 12:48:11.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.358" endtime="20201029 12:48:11.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.357" endtime="20201029 12:48:11.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.391" endtime="20201029 12:48:11.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.356" endtime="20201029 12:48:11.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.354" endtime="20201029 12:48:11.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.331" endtime="20201029 12:48:11.394"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.403" endtime="20201029 12:48:17.503"></status>
</kw>
<msg timestamp="20201029 12:48:17.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.400" endtime="20201029 12:48:17.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.509" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.506" endtime="20201029 12:48:17.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.512" endtime="20201029 12:48:17.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.398" endtime="20201029 12:48:17.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.396" endtime="20201029 12:48:17.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:17.523" level="INFO">${RESULT} = {'bg-timer-count': 25, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:48:17.518" endtime="20201029 12:48:17.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.531" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:17.529" endtime="20201029 12:48:17.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.535" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:17.533" endtime="20201029 12:48:17.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.524" endtime="20201029 12:48:17.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.545" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:17.543" endtime="20201029 12:48:17.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.548" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:17.547" endtime="20201029 12:48:17.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.538" endtime="20201029 12:48:17.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.553" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:17.552" endtime="20201029 12:48:17.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.555" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:48:17.554" endtime="20201029 12:48:17.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.550" endtime="20201029 12:48:17.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.562" endtime="20201029 12:48:17.860"></status>
</kw>
<msg timestamp="20201029 12:48:17.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061223097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162108625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.560" endtime="20201029 12:48:17.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061223097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162108625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.864" endtime="20201029 12:48:17.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.872" endtime="20201029 12:48:17.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.558" endtime="20201029 12:48:17.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.556" endtime="20201029 12:48:17.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:17.879" level="INFO">${FILTERED} = [{'diff': 0.100885528}, {'diff': 0.099825833}, {'diff': 0.09814424999999999}, {'diff': 0.10137361099999997}, {'diff': 0.09779890299999999}, {'diff': 0.0995804440000001}, {'diff': 0.09958075}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:48:17.876" endtime="20201029 12:48:17.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:17.884" level="INFO">${RESULT} = {'diff': [0.100885528, 0.099825833, 0.09814424999999999, 0.10137361099999997, 0.09779890299999999, 0.0995804440000001, 0.09958075, 0.09958187499999993, 0.09958576399999997, 0.09958530600000004, 0.0995...</msg>
<status status="PASS" starttime="20201029 12:48:17.880" endtime="20201029 12:48:17.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.888" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:17.887" endtime="20201029 12:48:17.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.890" level="INFO">VALUE: [0.100885528, 0.099825833, 0.09814424999999999, 0.10137361099999997, 0.09779890299999999, 0.0995804440000001, 0.09958075, 0.09958187499999993, 0.09958576399999997, 0.09958530600000004, 0.099588083, 0.09958931999999998, 0.099589237, 0.0995889029999999, 0.09958944400000003, 0.09959065300000014, 0.09958591600000011, 0.09958800000000001, 0.09959107, 0.09959462499999994, 0.0995905549999998, 0.09959251400000024, 0.09959038900000028, 0.09958908300000013, 0.09958394399999992, 0.09958495799999989, 0.09958401399999994, 0.09958248600000008, 0.09957544400000007, 0.0995862230000002, 0.09958541699999968, 0.09958641700000026, 0.09958373700000012, 0.09958024999999981, 0.0995805970000001, 0.09958400000000012, 0.09958194400000009, 0.09958044399999988, 0.09957762500000022, 0.09958416699999972, 0.09959077800000049, 0.09958622200000011, 0.09958722199999936, 0.0995855419999998, 0.09958587499999982, 0.09959490299999985, 0.09959029200000025, 0.09959169499999998, 0.09959413900000058, 0.09958651300000021, 0.09958045900000023]</msg>
<status status="PASS" starttime="20201029 12:48:17.889" endtime="20201029 12:48:17.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.884" endtime="20201029 12:48:17.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.394" endtime="20201029 12:48:17.892"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:11.329" endtime="20201029 12:48:17.892" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:47:36.904" endtime="20201029 12:48:17.899"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:45:30.673" endtime="20201029 12:48:17.932"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
