<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:33:54.936" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:55.540" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:55.549" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:56.746" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:55.538" endtime="20201029 09:33:56.747"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.749" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:56.748" endtime="20201029 09:33:56.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.537" endtime="20201029 09:33:56.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:56.752" endtime="20201029 09:33:56.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.751" endtime="20201029 09:33:56.938"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.952" endtime="20201029 09:33:56.965"></status>
</kw>
<msg timestamp="20201029 09:33:56.965" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.950" endtime="20201029 09:33:56.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.966" endtime="20201029 09:33:56.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.971" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:56.969" endtime="20201029 09:33:56.971"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:56.946" endtime="20201029 09:33:56.972"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:56.944" endtime="20201029 09:33:56.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.943" endtime="20201029 09:33:56.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:56.978" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:56.977" endtime="20201029 09:33:56.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.974" endtime="20201029 09:33:56.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.942" endtime="20201029 09:33:56.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.941" endtime="20201029 09:33:56.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.981" endtime="20201029 09:33:56.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.940" endtime="20201029 09:33:56.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.984" endtime="20201029 09:33:56.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.938" endtime="20201029 09:33:56.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.535" endtime="20201029 09:33:56.986"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:56.994" endtime="20201029 09:33:57.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.992" endtime="20201029 09:33:57.015"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.028" endtime="20201029 09:33:57.040"></status>
</kw>
<msg timestamp="20201029 09:33:57.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.026" endtime="20201029 09:33:57.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.042" endtime="20201029 09:33:57.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.046" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:57.044" endtime="20201029 09:33:57.046"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:57.024" endtime="20201029 09:33:57.047"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:57.021" endtime="20201029 09:33:57.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.020" endtime="20201029 09:33:57.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:57.052" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:57.051" endtime="20201029 09:33:57.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.049" endtime="20201029 09:33:57.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.019" endtime="20201029 09:33:57.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.018" endtime="20201029 09:33:57.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.053" endtime="20201029 09:33:57.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.017" endtime="20201029 09:33:57.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.015" endtime="20201029 09:33:57.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.990" endtime="20201029 09:33:57.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.063" endtime="20201029 09:33:57.072"></status>
</kw>
<msg timestamp="20201029 09:33:57.072" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.061" endtime="20201029 09:33:57.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.075" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.073" endtime="20201029 09:33:57.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.076" endtime="20201029 09:33:57.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.058" endtime="20201029 09:33:57.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.057" endtime="20201029 09:33:57.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.082" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:33:57.081" endtime="20201029 09:33:57.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.084" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:33:57.083" endtime="20201029 09:33:57.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.079" endtime="20201029 09:33:57.085"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:56.987" endtime="20201029 09:33:57.085" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:55.056" endtime="20201029 09:33:57.088"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.141" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:57.149" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:58.340" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:57.140" endtime="20201029 09:33:58.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.346" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:58.343" endtime="20201029 09:33:58.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.139" endtime="20201029 09:33:58.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:58.350" endtime="20201029 09:33:58.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.349" endtime="20201029 09:33:58.575"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.589" endtime="20201029 09:33:58.603"></status>
</kw>
<msg timestamp="20201029 09:33:58.603" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.587" endtime="20201029 09:33:58.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.605" endtime="20201029 09:33:58.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.609" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:58.607" endtime="20201029 09:33:58.609"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.583" endtime="20201029 09:33:58.610"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.581" endtime="20201029 09:33:58.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.580" endtime="20201029 09:33:58.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:58.614" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:58.614" endtime="20201029 09:33:58.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.612" endtime="20201029 09:33:58.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.579" endtime="20201029 09:33:58.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.578" endtime="20201029 09:33:58.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.616" endtime="20201029 09:33:58.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.577" endtime="20201029 09:33:58.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.619" endtime="20201029 09:33:58.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.576" endtime="20201029 09:33:58.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.137" endtime="20201029 09:33:58.621"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:58.628" endtime="20201029 09:33:58.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.625" endtime="20201029 09:33:58.648"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.660" endtime="20201029 09:33:58.672"></status>
</kw>
<msg timestamp="20201029 09:33:58.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.659" endtime="20201029 09:33:58.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.674" endtime="20201029 09:33:58.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.679" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:58.677" endtime="20201029 09:33:58.679"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.656" endtime="20201029 09:33:58.680"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:58.654" endtime="20201029 09:33:58.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.653" endtime="20201029 09:33:58.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:58.684" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:58.684" endtime="20201029 09:33:58.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.682" endtime="20201029 09:33:58.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.652" endtime="20201029 09:33:58.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.651" endtime="20201029 09:33:58.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.686" endtime="20201029 09:33:58.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.650" endtime="20201029 09:33:58.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.648" endtime="20201029 09:33:58.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.624" endtime="20201029 09:33:58.689"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.697" endtime="20201029 09:33:58.708"></status>
</kw>
<msg timestamp="20201029 09:33:58.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.695" endtime="20201029 09:33:58.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.711" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.710" endtime="20201029 09:33:58.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.712" endtime="20201029 09:33:58.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.693" endtime="20201029 09:33:58.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.691" endtime="20201029 09:33:58.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.721" endtime="20201029 09:33:59.011"></status>
</kw>
<msg timestamp="20201029 09:33:59.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060196139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060197361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.720" endtime="20201029 09:33:59.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060196139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060197361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.015" endtime="20201029 09:33:59.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.024" endtime="20201029 09:33:59.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.717" endtime="20201029 09:33:59.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.715" endtime="20201029 09:33:59.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.030" level="INFO">${RESULT} = [{'diff': 1.2219999999951714e-06}, {'diff': 1.0419999999997098e-06}, {'diff': 1.054999999999806e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.0419999999997098e-06}, {'diff': 1.0560000000062186e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:59.027" endtime="20201029 09:33:59.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:59.035" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2219999999951714e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.0560000000062186e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.11...</msg>
<status status="PASS" starttime="20201029 09:33:59.031" endtime="20201029 09:33:59.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.041" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:59.038" endtime="20201029 09:33:59.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.045" level="INFO">VALUE: [1.2219999999951714e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.0560000000062186e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0130000000010964e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.069000000006315e-06, 1.0700000000057885e-06, 1.0700000000057885e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.069000000006315e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0560000000062186e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.1249999999976557e-06, 1.068999999999376e-06, 1.02800000000014e-06]</msg>
<status status="PASS" starttime="20201029 09:33:59.043" endtime="20201029 09:33:59.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.036" endtime="20201029 09:33:59.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.690" endtime="20201029 09:33:59.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.690" endtime="20201029 09:33:59.050"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.077" endtime="20201029 09:33:59.091"></status>
</kw>
<msg timestamp="20201029 09:33:59.092" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.074" endtime="20201029 09:33:59.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.097" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.094" endtime="20201029 09:33:59.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.099" endtime="20201029 09:33:59.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.064" endtime="20201029 09:33:59.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.053" endtime="20201029 09:33:59.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.118" endtime="20201029 09:33:59.430"></status>
</kw>
<msg timestamp="20201029 09:33:59.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061730958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061732042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.115" endtime="20201029 09:33:59.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061730958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061732042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.435" endtime="20201029 09:33:59.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.445" endtime="20201029 09:33:59.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.109" endtime="20201029 09:33:59.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.106" endtime="20201029 09:33:59.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.452" level="INFO">${RESULT} = [{'diff': 1.0839999999984196e-06}, {'diff': 1.068999999999376e-06}, {'diff': 1.000000000001e-06}, {'diff': 1.0699999999988496e-06}, {'diff': 1.068999999999376e-06}, {'diff': 1.0560000000062186e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:59.448" endtime="20201029 09:33:59.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:59.457" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0839999999984196e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0560000000062186e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.04...</msg>
<status status="PASS" starttime="20201029 09:33:59.453" endtime="20201029 09:33:59.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.462" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:59.461" endtime="20201029 09:33:59.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.464" level="INFO">VALUE: [1.0839999999984196e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0560000000062186e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.1249999999976557e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.250000000008189e-06, 1.0419999999511376e-06, 1.0559999999992797e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.0549999999720505e-06, 1.0699999999919108e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0689999999646815e-06, 1.0690000000201927e-06, 1.0559999999992797e-06, 1.0699999999919108e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999919108e-06, 1.0000000000287557e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0549999999720505e-06, 1.0550000000275617e-06, 1.070000000047422e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.1249999999907168e-06, 1.0139999999658755e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0699999999919108e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0690000000201927e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0689999999646815e-06, 9.999999999732445e-07, 1.0419999999511376e-06, 1.0689999999646815e-06, 1.0689999999646815e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201029 09:33:59.463" endtime="20201029 09:33:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.458" endtime="20201029 09:33:59.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.051" endtime="20201029 09:33:59.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.051" endtime="20201029 09:33:59.466"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.473" endtime="20201029 09:33:59.483"></status>
</kw>
<msg timestamp="20201029 09:33:59.484" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.472" endtime="20201029 09:33:59.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.486" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.485" endtime="20201029 09:33:59.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.487" endtime="20201029 09:33:59.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.469" endtime="20201029 09:33:59.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.468" endtime="20201029 09:33:59.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.496" endtime="20201029 09:33:59.804"></status>
</kw>
<msg timestamp="20201029 09:33:59.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.432313028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.432314083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.495" endtime="20201029 09:33:59.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.432313028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.432314083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.810" endtime="20201029 09:33:59.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.820" endtime="20201029 09:33:59.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.492" endtime="20201029 09:33:59.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.490" endtime="20201029 09:33:59.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.827" level="INFO">${RESULT} = [{'diff': 1.0550000000275617e-06}, {'diff': 1.0699999999919108e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0690000000201927e-06}, {'diff': 1.0559999999992797e-...</msg>
<status status="PASS" starttime="20201029 09:33:59.823" endtime="20201029 09:33:59.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:59.831" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0550000000275617e-06, 1.0699999999919108e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0690000000201927e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0830000000128237e-06...</msg>
<status status="PASS" starttime="20201029 09:33:59.828" endtime="20201029 09:33:59.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.836" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:59.835" endtime="20201029 09:33:59.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.838" level="INFO">VALUE: [1.0550000000275617e-06, 1.0699999999919108e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.0690000000201927e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0689999999646815e-06, 9.999999999732445e-07, 1.0419999999511376e-06, 1.0689999999646815e-06, 1.0689999999646815e-06, 1.0559999999992797e-06, 1.26400000000082e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0830000000128237e-06, 1.070000000047422e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0549999999165394e-06, 1.0419999999511376e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0699999999363996e-06, 1.0830000000128237e-06, 1.0699999999363996e-06, 1.0420000000621599e-06, 1.0830000000128237e-06, 1.0830000000128237e-06, 1.125000000046228e-06, 1.0970000000609659e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0830000000128237e-06, 1.0550000000275617e-06, 9.999999999177334e-07, 1.0839999999845418e-06, 9.999999999177334e-07, 1.070000000047422e-06, 9.859999999806135e-07, 1.070000000047422e-06, 1.0689999999646815e-06, 1.0000000000287557e-06, 1.070000000047422e-06, 1.070000000047422e-06, 1.0420000000621599e-06, 9.999999999177334e-07, 1.0139999999658755e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.1109999999980857e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.084000000095564e-06, 1.0559999999992797e-06, 1.070000000047422e-06, 1.0549999999165394e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201029 09:33:59.837" endtime="20201029 09:33:59.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.833" endtime="20201029 09:33:59.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.466" endtime="20201029 09:33:59.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.466" endtime="20201029 09:33:59.840"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.849" endtime="20201029 09:33:59.859"></status>
</kw>
<msg timestamp="20201029 09:33:59.859" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.846" endtime="20201029 09:33:59.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.862" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.860" endtime="20201029 09:33:59.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.863" endtime="20201029 09:33:59.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.844" endtime="20201029 09:33:59.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.842" endtime="20201029 09:33:59.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.876" endtime="20201029 09:34:00.187"></status>
</kw>
<msg timestamp="20201029 09:34:00.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.817875792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.817876792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.873" endtime="20201029 09:34:00.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.817875792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.817876792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.192" endtime="20201029 09:34:00.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.202" endtime="20201029 09:34:00.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.868" endtime="20201029 09:34:00.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.866" endtime="20201029 09:34:00.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.209" level="INFO">${RESULT} = [{'diff': 9.999999999177334e-07}, {'diff': 1.0139999999658755e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0559999999992797e-06}, {'diff': 1.0550000000275617e-06}, {'diff': 1.0550000000275617e-0...</msg>
<status status="PASS" starttime="20201029 09:34:00.205" endtime="20201029 09:34:00.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:00.215" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.999999999177334e-07, 1.0139999999658755e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.1109999999980857e-06, 1.0409999999794195e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:00.211" endtime="20201029 09:34:00.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.219" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:00.218" endtime="20201029 09:34:00.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.222" level="INFO">VALUE: [9.999999999177334e-07, 1.0139999999658755e-06, 1.0550000000275617e-06, 1.0559999999992797e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.1109999999980857e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.084000000095564e-06, 1.0559999999992797e-06, 1.070000000047422e-06, 1.0549999999165394e-06, 1.0559999999992797e-06, 1.26400000000082e-06, 1.0559999998882574e-06, 1.0280000000140177e-06, 1.0690000000757038e-06, 1.1249999998241833e-06, 1.0699999999363996e-06, 1.0409999999794195e-06, 1.0699999999363996e-06, 1.056000000110302e-06, 1.1109999999980857e-06, 1.0419999998401153e-06, 1.0559999998882574e-06, 1.0689999998536592e-06, 1.0550000000275617e-06, 1.0550000000275617e-06, 1.1249999998241833e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.056000000110302e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0140000001879201e-06, 1.0550000000275617e-06, 1.056000000110302e-06, 1.0420000000621599e-06, 1.0699999999363996e-06, 1.054999999805517e-06, 1.0699999999363996e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0699999999363996e-06, 1.0829999999018014e-06, 1.0419999998401153e-06, 1.0689999998536592e-06, 1.0699999999363996e-06, 9.720000000434936e-07, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0839999999845418e-06, 1.0559999998882574e-06, 1.0689999998536592e-06, 1.0550000000275617e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 9.860000000916358e-07, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 09:34:00.220" endtime="20201029 09:34:00.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.216" endtime="20201029 09:34:00.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.841" endtime="20201029 09:34:00.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.840" endtime="20201029 09:34:00.224"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.231" endtime="20201029 09:34:00.241"></status>
</kw>
<msg timestamp="20201029 09:34:00.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.230" endtime="20201029 09:34:00.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.244" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.243" endtime="20201029 09:34:00.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.245" endtime="20201029 09:34:00.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.227" endtime="20201029 09:34:00.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.226" endtime="20201029 09:34:00.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.254" endtime="20201029 09:34:00.560"></status>
</kw>
<msg timestamp="20201029 09:34:00.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.181604875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.181605917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.253" endtime="20201029 09:34:00.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.181604875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.181605917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.568" endtime="20201029 09:34:00.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.578" endtime="20201029 09:34:00.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.250" endtime="20201029 09:34:00.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.248" endtime="20201029 09:34:00.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.585" level="INFO">${RESULT} = [{'diff': 1.0419999998401153e-06}, {'diff': 1.0689999998536592e-06}, {'diff': 1.0699999999363996e-06}, {'diff': 9.720000000434936e-07}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0409999999794195e-0...</msg>
<status status="PASS" starttime="20201029 09:34:00.582" endtime="20201029 09:34:00.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:00.592" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0419999998401153e-06, 1.0689999998536592e-06, 1.0699999999363996e-06, 9.720000000434936e-07, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0839999999845418e-06, 1.0559999998882574e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:00.587" endtime="20201029 09:34:00.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.596" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:00.595" endtime="20201029 09:34:00.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.598" level="INFO">VALUE: [1.0419999998401153e-06, 1.0689999998536592e-06, 1.0699999999363996e-06, 9.720000000434936e-07, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0839999999845418e-06, 1.0559999998882574e-06, 1.0689999998536592e-06, 1.0550000000275617e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 9.860000000916358e-07, 1.0420000000621599e-06, 1.2499999999526779e-06, 1.0559999998882574e-06, 1.0280000000140177e-06, 1.0690000000757038e-06, 1.0139999999658755e-06, 1.083000000123846e-06, 1.0409999999794195e-06, 1.0550000000275617e-06, 1.0829999999018014e-06, 1.0969999999499436e-06, 1.0419999998401153e-06, 1.098000000032684e-06, 1.0550000000275617e-06, 1.0419999998401153e-06, 1.0689999998536592e-06, 1.0700000001584442e-06, 1.0550000000275617e-06, 1.0689999998536592e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.041000000201464e-06, 1.027000000153322e-06, 1.0550000000275617e-06, 1.0700000001584442e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.056000000110302e-06, 1.0699999999363996e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.0699999999363996e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, 1.056000000110302e-06, 1.0419999998401153e-06, 1.083000000123846e-06, 1.056000000110302e-06, 9.999999999177334e-07, 1.056000000110302e-06, 1.0839999999845418e-06, 1.027999999791973e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.0559999998882574e-06, 1.0689999998536592e-06, 1.0409999999794195e-06, 1.0550000000275617e-06]</msg>
<status status="PASS" starttime="20201029 09:34:00.597" endtime="20201029 09:34:00.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.592" endtime="20201029 09:34:00.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.224" endtime="20201029 09:34:00.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.224" endtime="20201029 09:34:00.600"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.608" endtime="20201029 09:34:00.618"></status>
</kw>
<msg timestamp="20201029 09:34:00.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.606" endtime="20201029 09:34:00.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.621" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.619" endtime="20201029 09:34:00.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.622" endtime="20201029 09:34:00.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.603" endtime="20201029 09:34:00.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.602" endtime="20201029 09:34:00.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.631" endtime="20201029 09:34:00.932"></status>
</kw>
<msg timestamp="20201029 09:34:00.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.5541505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.554151556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:00.629" endtime="20201029 09:34:00.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.5541505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.554151556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:00.937" endtime="20201029 09:34:00.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.947" endtime="20201029 09:34:00.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.626" endtime="20201029 09:34:00.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.625" endtime="20201029 09:34:00.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.954" level="INFO">${RESULT} = [{'diff': 1.056000000110302e-06}, {'diff': 1.0419999998401153e-06}, {'diff': 1.083000000123846e-06}, {'diff': 1.056000000110302e-06}, {'diff': 9.999999999177334e-07}, {'diff': 1.056000000110302e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:00.950" endtime="20201029 09:34:00.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:00.959" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.056000000110302e-06, 1.0419999998401153e-06, 1.083000000123846e-06, 1.056000000110302e-06, 9.999999999177334e-07, 1.056000000110302e-06, 1.0839999999845418e-06, 1.027999999791973e-06, 1.06...</msg>
<status status="PASS" starttime="20201029 09:34:00.955" endtime="20201029 09:34:00.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.963" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:00.962" endtime="20201029 09:34:00.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.966" level="INFO">VALUE: [1.056000000110302e-06, 1.0419999998401153e-06, 1.083000000123846e-06, 1.056000000110302e-06, 9.999999999177334e-07, 1.056000000110302e-06, 1.0839999999845418e-06, 1.027999999791973e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.0559999998882574e-06, 1.0689999998536592e-06, 1.0409999999794195e-06, 1.0550000000275617e-06, 1.2769999999662218e-06, 1.0829999999018014e-06, 1.083000000123846e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0699999999363996e-06, 1.0550000000275617e-06, 1.0420000000621599e-06, 1.0550000000275617e-06, 1.0689999998536592e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0269999999312773e-06, 1.0700000001584442e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0419999998401153e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.083000000123846e-06, 1.0699999999363996e-06, 9.999999999177334e-07, 1.083000000123846e-06, 1.0689999998536592e-06, 1.0700000001584442e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.0550000000275617e-06, 1.056000000110302e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0419999998401153e-06, 1.0699999999363996e-06, 1.0420000000621599e-06, 1.056000000110302e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0550000000275617e-06, 1.0130000001051798e-06, 1.0690000000757038e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.1119999998587815e-06]</msg>
<status status="PASS" starttime="20201029 09:34:00.964" endtime="20201029 09:34:00.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.960" endtime="20201029 09:34:00.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.601" endtime="20201029 09:34:00.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.600" endtime="20201029 09:34:00.967"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.975" endtime="20201029 09:34:00.986"></status>
</kw>
<msg timestamp="20201029 09:34:00.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.974" endtime="20201029 09:34:00.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.989" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.987" endtime="20201029 09:34:00.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.990" endtime="20201029 09:34:00.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.971" endtime="20201029 09:34:00.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.969" endtime="20201029 09:34:00.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.999" endtime="20201029 09:34:01.307"></status>
</kw>
<msg timestamp="20201029 09:34:01.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.921427889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.921428931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.997" endtime="20201029 09:34:01.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.921427889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.921428931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.313" endtime="20201029 09:34:01.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.326" endtime="20201029 09:34:01.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.995" endtime="20201029 09:34:01.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.993" endtime="20201029 09:34:01.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.335" level="INFO">${RESULT} = [{'diff': 1.0419999998401153e-06}, {'diff': 1.0699999999363996e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.056000000110302e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0690000000757038e-0...</msg>
<status status="PASS" starttime="20201029 09:34:01.331" endtime="20201029 09:34:01.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:01.342" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0419999998401153e-06, 1.0699999999363996e-06, 1.0420000000621599e-06, 1.056000000110302e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0550000000275617e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:01.336" endtime="20201029 09:34:01.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.347" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:01.346" endtime="20201029 09:34:01.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.351" level="INFO">VALUE: [1.0419999998401153e-06, 1.0699999999363996e-06, 1.0420000000621599e-06, 1.056000000110302e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0550000000275617e-06, 1.0130000001051798e-06, 1.0690000000757038e-06, 1.0550000000275617e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.1119999998587815e-06, 1.2499999999526779e-06, 1.0130000003272244e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.1120000000808261e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.0550000002496063e-06, 1.0700000001584442e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.0139999999658755e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.1250000002682725e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.0690000000757038e-06]</msg>
<status status="PASS" starttime="20201029 09:34:01.349" endtime="20201029 09:34:01.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.343" endtime="20201029 09:34:01.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.968" endtime="20201029 09:34:01.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.967" endtime="20201029 09:34:01.352"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.360" endtime="20201029 09:34:01.370"></status>
</kw>
<msg timestamp="20201029 09:34:01.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.359" endtime="20201029 09:34:01.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.372" endtime="20201029 09:34:01.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.374" endtime="20201029 09:34:01.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.356" endtime="20201029 09:34:01.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.354" endtime="20201029 09:34:01.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.383" endtime="20201029 09:34:01.691"></status>
</kw>
<msg timestamp="20201029 09:34:01.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.278500389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.278501458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.382" endtime="20201029 09:34:01.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.278500389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.278501458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.696" endtime="20201029 09:34:01.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.706" endtime="20201029 09:34:01.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.379" endtime="20201029 09:34:01.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.378" endtime="20201029 09:34:01.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.713" level="INFO">${RESULT} = [{'diff': 1.0690000000757038e-06}, {'diff': 1.000000000139778e-06}, {'diff': 1.0690000000757038e-06}, {'diff': 1.027999999791973e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0829999999018014e-06...</msg>
<status status="PASS" starttime="20201029 09:34:01.710" endtime="20201029 09:34:01.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:01.719" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0690000000757038e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.1250000002682725e-06, 1.0550000002496063e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:01.714" endtime="20201029 09:34:01.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.723" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:01.722" endtime="20201029 09:34:01.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.726" level="INFO">VALUE: [1.0690000000757038e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.1250000002682725e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.2360000001265803e-06, 1.0409999999794195e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.0830000003458906e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.069999999714355e-06, 1.0559999998882574e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.027000000153322e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0700000001584442e-06, 1.054999999805517e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0700000001584442e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 9.860000003136804e-07, 1.0550000002496063e-06, 1.0839999999845418e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0700000001584442e-06]</msg>
<status status="PASS" starttime="20201029 09:34:01.724" endtime="20201029 09:34:01.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.720" endtime="20201029 09:34:01.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.353" endtime="20201029 09:34:01.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.353" endtime="20201029 09:34:01.727"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.735" endtime="20201029 09:34:01.759"></status>
</kw>
<msg timestamp="20201029 09:34:01.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.733" endtime="20201029 09:34:01.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.761" endtime="20201029 09:34:01.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.767" endtime="20201029 09:34:01.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.731" endtime="20201029 09:34:01.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.729" endtime="20201029 09:34:01.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.781" endtime="20201029 09:34:02.108"></status>
</kw>
<msg timestamp="20201029 09:34:02.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.651449958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.651451014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.780" endtime="20201029 09:34:02.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.651449958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.651451014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.119" endtime="20201029 09:34:02.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.142" endtime="20201029 09:34:02.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.776" endtime="20201029 09:34:02.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.774" endtime="20201029 09:34:02.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.157" level="INFO">${RESULT} = [{'diff': 1.0559999998882574e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0700000001584442e-06}, {'diff': 1.000000000139778e-06}, {'diff': 1.0690000000757038e-0...</msg>
<status status="PASS" starttime="20201029 09:34:02.149" endtime="20201029 09:34:02.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.167" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999998882574e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0700000001584442e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0559999998882574e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:02.159" endtime="20201029 09:34:02.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.175" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.173" endtime="20201029 09:34:02.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.181" level="INFO">VALUE: [1.0559999998882574e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0700000001584442e-06, 1.000000000139778e-06, 1.0690000000757038e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 9.860000003136804e-07, 1.0550000002496063e-06, 1.0839999999845418e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0700000001584442e-06, 1.2639999997787754e-06, 1.054999999805517e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0690000000757038e-06, 1.1250000002682725e-06, 1.0700000001584442e-06, 1.0980000002547285e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.096999999727899e-06, 1.0559999998882574e-06, 1.0560000003323466e-06, 1.0139999999658755e-06, 1.069999999714355e-06, 9.999999996956888e-07, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0700000001584442e-06, 1.054999999805517e-06, 1.0700000001584442e-06, 1.0980000002547285e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.0980000002547285e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0409999999794195e-06]</msg>
<status status="PASS" starttime="20201029 09:34:02.178" endtime="20201029 09:34:02.183"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.169" endtime="20201029 09:34:02.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.728" endtime="20201029 09:34:02.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.728" endtime="20201029 09:34:02.185"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.199" endtime="20201029 09:34:02.209"></status>
</kw>
<msg timestamp="20201029 09:34:02.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.197" endtime="20201029 09:34:02.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.212" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.210" endtime="20201029 09:34:02.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.213" endtime="20201029 09:34:02.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.193" endtime="20201029 09:34:02.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.189" endtime="20201029 09:34:02.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.222" endtime="20201029 09:34:02.542"></status>
</kw>
<msg timestamp="20201029 09:34:02.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.016917333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.016918375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.220" endtime="20201029 09:34:02.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.016917333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.016918375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.548" endtime="20201029 09:34:02.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.559" endtime="20201029 09:34:02.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.218" endtime="20201029 09:34:02.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.216" endtime="20201029 09:34:02.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.566" level="INFO">${RESULT} = [{'diff': 1.0420000000621599e-06}, {'diff': 1.054999999805517e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.054999999805517e-06}, {'diff': 1.054999999805517e-06}, {'diff': 1.0559999998882574e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:02.562" endtime="20201029 09:34:02.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.571" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0420000000621599e-06, 1.054999999805517e-06, 1.0980000002547285e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:02.567" endtime="20201029 09:34:02.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.575" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:02.574" endtime="20201029 09:34:02.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.578" level="INFO">VALUE: [1.0420000000621599e-06, 1.054999999805517e-06, 1.0980000002547285e-06, 1.054999999805517e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0970000001719882e-06, 1.0690000000757038e-06, 1.0409999999794195e-06, 1.319999999971344e-06, 1.0690000000757038e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.096999999727899e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.054999999805517e-06, 9.859999998695912e-07, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 1.0690000000757038e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0700000001584442e-06, 1.0420000000621599e-06, 1.1120000000808261e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0419999996180707e-06, 1.0830000003458906e-06]</msg>
<status status="PASS" starttime="20201029 09:34:02.576" endtime="20201029 09:34:02.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.572" endtime="20201029 09:34:02.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.187" endtime="20201029 09:34:02.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.186" endtime="20201029 09:34:02.579"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.587" endtime="20201029 09:34:02.597"></status>
</kw>
<msg timestamp="20201029 09:34:02.598" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.585" endtime="20201029 09:34:02.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.600" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.599" endtime="20201029 09:34:02.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.601" endtime="20201029 09:34:02.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.583" endtime="20201029 09:34:02.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.581" endtime="20201029 09:34:02.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.610" endtime="20201029 09:34:02.937"></status>
</kw>
<msg timestamp="20201029 09:34:02.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.4700125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.470013569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:02.608" endtime="20201029 09:34:02.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.4700125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.470013569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:02.949" endtime="20201029 09:34:02.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.971" endtime="20201029 09:34:02.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.606" endtime="20201029 09:34:02.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.604" endtime="20201029 09:34:02.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.985" level="INFO">${RESULT} = [{'diff': 1.0689999996316146e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0559999998882574e-...</msg>
<status status="PASS" starttime="20201029 09:34:02.978" endtime="20201029 09:34:02.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:02.996" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0689999996316146e-06, 1.0689999996316146e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0559999998882574e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:02.987" endtime="20201029 09:34:02.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.004" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.002" endtime="20201029 09:34:03.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.009" level="INFO">VALUE: [1.0689999996316146e-06, 1.0689999996316146e-06, 1.0559999998882574e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0419999996180707e-06, 1.0830000003458906e-06, 1.2370000002093207e-06, 1.0839999999845418e-06, 1.0550000002496063e-06, 1.0690000000757038e-06, 1.0700000001584442e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.054999999805517e-06, 9.720000000434936e-07, 1.0550000002496063e-06, 1.0420000000621599e-06, 9.859999998695912e-07, 1.054999999805517e-06, 1.0409999999794195e-06, 1.0829999999018014e-06, 1.0700000001584442e-06, 1.0419999996180707e-06, 1.0420000000621599e-06, 1.000000000139778e-06, 1.0970000001719882e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0140000004099647e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 9.859999998695912e-07, 1.0830000003458906e-06, 1.096999999727899e-06, 1.0689999996316146e-06, 1.0129999998831352e-06, 1.0559999998882574e-06, 1.0139999999658755e-06, 1.0700000001584442e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.000000000139778e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0829999999018014e-06]</msg>
<status status="PASS" starttime="20201029 09:34:03.006" endtime="20201029 09:34:03.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.998" endtime="20201029 09:34:03.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.580" endtime="20201029 09:34:03.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.580" endtime="20201029 09:34:03.011"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.019" endtime="20201029 09:34:03.030"></status>
</kw>
<msg timestamp="20201029 09:34:03.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.017" endtime="20201029 09:34:03.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.031" endtime="20201029 09:34:03.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.033" endtime="20201029 09:34:03.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.014" endtime="20201029 09:34:03.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.013" endtime="20201029 09:34:03.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.042" endtime="20201029 09:34:03.351"></status>
</kw>
<msg timestamp="20201029 09:34:03.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.847276611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.847277681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.041" endtime="20201029 09:34:03.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.847276611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.847277681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.356" endtime="20201029 09:34:03.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.366" endtime="20201029 09:34:03.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.038" endtime="20201029 09:34:03.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.036" endtime="20201029 09:34:03.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.373" level="INFO">${RESULT} = [{'diff': 1.0700000001584442e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.000000000139778e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.054999999805517e-06...</msg>
<status status="PASS" starttime="20201029 09:34:03.370" endtime="20201029 09:34:03.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.379" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0700000001584442e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:03.374" endtime="20201029 09:34:03.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.383" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.382" endtime="20201029 09:34:03.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.385" level="INFO">VALUE: [1.0700000001584442e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.000000000139778e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0700000001584442e-06, 1.0829999999018014e-06, 1.2229999999391339e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.0980000002547285e-06, 1.0700000006025334e-06, 1.0560000003323466e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.000000000139778e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0419999991739815e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 9.860000007577696e-07, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0549999993614279e-06, 1.0550000002496063e-06]</msg>
<status status="PASS" starttime="20201029 09:34:03.384" endtime="20201029 09:34:03.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.379" endtime="20201029 09:34:03.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.012" endtime="20201029 09:34:03.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.011" endtime="20201029 09:34:03.387"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.394" endtime="20201029 09:34:03.405"></status>
</kw>
<msg timestamp="20201029 09:34:03.405" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.393" endtime="20201029 09:34:03.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.406" endtime="20201029 09:34:03.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.409" endtime="20201029 09:34:03.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.390" endtime="20201029 09:34:03.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.389" endtime="20201029 09:34:03.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.417" endtime="20201029 09:34:03.739"></status>
</kw>
<msg timestamp="20201029 09:34:03.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.269752917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.269753972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.416" endtime="20201029 09:34:03.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.269752917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.269753972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.751" endtime="20201029 09:34:03.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.774" endtime="20201029 09:34:03.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.413" endtime="20201029 09:34:03.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.412" endtime="20201029 09:34:03.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.788" level="INFO">${RESULT} = [{'diff': 1.0550000002496063e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 9.860000007577696e-07}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0549999993614279e-06}, {'diff': 1.0420000000621599e-0...</msg>
<status status="PASS" starttime="20201029 09:34:03.781" endtime="20201029 09:34:03.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.800" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0550000002496063e-06, 1.0560000003323466e-06, 9.860000007577696e-07, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0700000006025334e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:03.790" endtime="20201029 09:34:03.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.809" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.807" endtime="20201029 09:34:03.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.814" level="INFO">VALUE: [1.0550000002496063e-06, 1.0560000003323466e-06, 9.860000007577696e-07, 1.0550000002496063e-06, 1.0549999993614279e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.2910000002364086e-06, 1.0549999993614279e-06, 1.0980000002547285e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0970000001719882e-06, 1.0560000003323466e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.0830000007899798e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0700000006025334e-06, 1.0559999994441682e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.069999999714355e-06, 1.0140000004099647e-06, 1.0829999999018014e-06, 1.0409999999794195e-06, 1.0280000006801515e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.13900000009437e-06, 1.0140000004099647e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0420000000621599e-06]</msg>
<status status="PASS" starttime="20201029 09:34:03.811" endtime="20201029 09:34:03.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.802" endtime="20201029 09:34:03.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.387" endtime="20201029 09:34:03.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.387" endtime="20201029 09:34:03.818"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.826" endtime="20201029 09:34:03.836"></status>
</kw>
<msg timestamp="20201029 09:34:03.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.824" endtime="20201029 09:34:03.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.840" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.838" endtime="20201029 09:34:03.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.841" endtime="20201029 09:34:03.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.822" endtime="20201029 09:34:03.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.820" endtime="20201029 09:34:03.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.850" endtime="20201029 09:34:04.170"></status>
</kw>
<msg timestamp="20201029 09:34:04.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.634844028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.634845167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.849" endtime="20201029 09:34:04.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.634844028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.634845167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.175" endtime="20201029 09:34:04.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.185" endtime="20201029 09:34:04.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.846" endtime="20201029 09:34:04.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.844" endtime="20201029 09:34:04.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.192" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.0140000004099647e-06}, {'diff': 1.0559999994441682e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0420000000621599e-06...</msg>
<status status="PASS" starttime="20201029 09:34:04.188" endtime="20201029 09:34:04.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.197" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.13900000009437e-06, 1.0140000004099647e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:04.193" endtime="20201029 09:34:04.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.201" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.200" endtime="20201029 09:34:04.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.203" level="INFO">VALUE: [1.13900000009437e-06, 1.0140000004099647e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.2640000006669538e-06, 1.000000000139778e-06, 1.0689999996316146e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0979999993665501e-06, 1.041000000867598e-06, 1.0970000001719882e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.0689999996316146e-06, 1.069000000519793e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.000000000139778e-06, 1.069999999714355e-06, 1.0969999992838098e-06, 1.0550000002496063e-06, 1.0829999999018014e-06, 1.000000000139778e-06, 1.0549999993614279e-06, 9.999999992515995e-07, 1.0560000003323466e-06, 1.1249999998241833e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.000000000139778e-06, 1.0829999999018014e-06, 1.0280000006801515e-06, 1.0559999994441682e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0559999994441682e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.0550000002496063e-06]</msg>
<status status="PASS" starttime="20201029 09:34:04.202" endtime="20201029 09:34:04.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.197" endtime="20201029 09:34:04.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.819" endtime="20201029 09:34:04.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.819" endtime="20201029 09:34:04.205"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.215" endtime="20201029 09:34:04.225"></status>
</kw>
<msg timestamp="20201029 09:34:04.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.214" endtime="20201029 09:34:04.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.227" endtime="20201029 09:34:04.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.229" endtime="20201029 09:34:04.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.209" endtime="20201029 09:34:04.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.207" endtime="20201029 09:34:04.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.238" endtime="20201029 09:34:04.547"></status>
</kw>
<msg timestamp="20201029 09:34:04.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.056478375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.056479431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.237" endtime="20201029 09:34:04.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.056478375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.056479431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.552" endtime="20201029 09:34:04.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.562" endtime="20201029 09:34:04.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.234" endtime="20201029 09:34:04.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.232" endtime="20201029 09:34:04.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.571" level="INFO">${RESULT} = [{'diff': 1.0559999994441682e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.0550000002496063e-...</msg>
<status status="PASS" starttime="20201029 09:34:04.565" endtime="20201029 09:34:04.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.580" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0559999994441682e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.069999999714355e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:04.573" endtime="20201029 09:34:04.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.588" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.586" endtime="20201029 09:34:04.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.591" level="INFO">VALUE: [1.0559999994441682e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0559999994441682e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.0550000002496063e-06, 1.262999999696035e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.000000000139778e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0980000002547285e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.1120000005249153e-06, 1.1109999995539965e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 9.859999998695912e-07, 1.0559999994441682e-06, 1.069999999714355e-06, 1.041000000867598e-06, 1.0559999994441682e-06, 1.027999999791973e-06, 1.0559999994441682e-06, 1.0969999992838098e-06, 1.0550000002496063e-06, 1.0979999993665501e-06, 1.0420000000621599e-06, 1.0549999993614279e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.069999999714355e-06, 1.0549999993614279e-06, 1.027999999791973e-06, 1.0409999999794195e-06, 1.0980000002547285e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.111000000442175e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0829999999018014e-06]</msg>
<status status="PASS" starttime="20201029 09:34:04.589" endtime="20201029 09:34:04.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.581" endtime="20201029 09:34:04.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.206" endtime="20201029 09:34:04.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.205" endtime="20201029 09:34:04.596"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.604" endtime="20201029 09:34:04.615"></status>
</kw>
<msg timestamp="20201029 09:34:04.615" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.603" endtime="20201029 09:34:04.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.616" endtime="20201029 09:34:04.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.619" endtime="20201029 09:34:04.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.600" endtime="20201029 09:34:04.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.599" endtime="20201029 09:34:04.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.628" endtime="20201029 09:34:04.945"></status>
</kw>
<msg timestamp="20201029 09:34:04.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.434584889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.434585917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.626" endtime="20201029 09:34:04.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.434584889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.434585917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.950" endtime="20201029 09:34:04.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.960" endtime="20201029 09:34:04.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.623" endtime="20201029 09:34:04.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.622" endtime="20201029 09:34:04.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.967" level="INFO">${RESULT} = [{'diff': 1.027999999791973e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0409999999794195e-0...</msg>
<status status="PASS" starttime="20201029 09:34:04.963" endtime="20201029 09:34:04.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.973" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.027999999791973e-06, 1.0409999999794195e-06, 1.0980000002547285e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.069999999714355e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:04.969" endtime="20201029 09:34:04.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.978" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.977" endtime="20201029 09:34:04.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.980" level="INFO">VALUE: [1.027999999791973e-06, 1.0409999999794195e-06, 1.0980000002547285e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.111000000442175e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.2639999997787754e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.0560000003323466e-06, 1.0969999992838098e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.0839999999845418e-06, 1.0839999999845418e-06, 1.069000000519793e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0420000000621599e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 9.999999992515995e-07, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0409999999794195e-06, 1.069000000519793e-06, 1.0549999993614279e-06, 1.0409999999794195e-06, 1.0140000004099647e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0980000002547285e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0700000006025334e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0549999993614279e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0700000006025334e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0829999999018014e-06]</msg>
<status status="PASS" starttime="20201029 09:34:04.979" endtime="20201029 09:34:04.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.974" endtime="20201029 09:34:04.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.597" endtime="20201029 09:34:04.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.597" endtime="20201029 09:34:04.982"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.990" endtime="20201029 09:34:05.000"></status>
</kw>
<msg timestamp="20201029 09:34:05.000" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.988" endtime="20201029 09:34:05.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.003" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.001" endtime="20201029 09:34:05.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.004" endtime="20201029 09:34:05.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.985" endtime="20201029 09:34:05.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.984" endtime="20201029 09:34:05.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.013" endtime="20201029 09:34:05.351"></status>
</kw>
<msg timestamp="20201029 09:34:05.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.814930361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.814931458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.012" endtime="20201029 09:34:05.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.814930361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.814931458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.356" endtime="20201029 09:34:05.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.366" endtime="20201029 09:34:05.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.009" endtime="20201029 09:34:05.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.007" endtime="20201029 09:34:05.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.373" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0560000003323466e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.0689999996316146e-06}, {'diff': 1.0409999999794195e-...</msg>
<status status="PASS" starttime="20201029 09:34:05.369" endtime="20201029 09:34:05.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.377" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0549999993614279e-06, 1.0689999996316146e-06...</msg>
<status status="PASS" starttime="20201029 09:34:05.374" endtime="20201029 09:34:05.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.381" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.380" endtime="20201029 09:34:05.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.384" level="INFO">VALUE: [1.0970000001719882e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.0839999999845418e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0549999993614279e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0700000006025334e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0829999999018014e-06, 1.2499999995085886e-06, 1.0139999995217863e-06, 1.0140000004099647e-06, 1.0700000006025334e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0269999997092327e-06, 1.0829999999018014e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0700000006025334e-06, 1.0550000002496063e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.069000000519793e-06, 1.069000000519793e-06, 1.13900000009437e-06, 1.0689999996316146e-06, 1.0549999993614279e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.069000000519793e-06, 1.0559999994441682e-06, 1.027999999791973e-06, 1.0550000002496063e-06, 1.0700000006025334e-06, 1.0560000003323466e-06, 1.0829999999018014e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.027999999791973e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0550000002496063e-06]</msg>
<status status="PASS" starttime="20201029 09:34:05.382" endtime="20201029 09:34:05.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.378" endtime="20201029 09:34:05.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.983" endtime="20201029 09:34:05.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.982" endtime="20201029 09:34:05.385"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.394" endtime="20201029 09:34:05.404"></status>
</kw>
<msg timestamp="20201029 09:34:05.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.392" endtime="20201029 09:34:05.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.405" endtime="20201029 09:34:05.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.408" endtime="20201029 09:34:05.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.389" endtime="20201029 09:34:05.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.387" endtime="20201029 09:34:05.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.423" endtime="20201029 09:34:05.733"></status>
</kw>
<msg timestamp="20201029 09:34:05.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.188286056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.188287139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.421" endtime="20201029 09:34:05.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.188286056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.188287139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.738" endtime="20201029 09:34:05.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.747" endtime="20201029 09:34:05.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.419" endtime="20201029 09:34:05.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.411" endtime="20201029 09:34:05.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.754" level="INFO">${RESULT} = [{'diff': 1.0829999999018014e-06}, {'diff': 1.0549999993614279e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.069000000519793e-06}, {'diff': 1.027999999791973e-06}, {'diff': 1.069000000519793e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:05.751" endtime="20201029 09:34:05.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.760" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0829999999018014e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.027999999791973e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:34:05.755" endtime="20201029 09:34:05.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.764" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.763" endtime="20201029 09:34:05.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.766" level="INFO">VALUE: [1.0829999999018014e-06, 1.0549999993614279e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.027999999791973e-06, 1.069000000519793e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.250000000396767e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0550000002496063e-06, 1.027999999791973e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0830000007899798e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.000000000139778e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0549999993614279e-06, 1.027999999791973e-06, 1.0559999994441682e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0560000003323466e-06, 1.0700000006025334e-06, 1.0689999996316146e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.1249999998241833e-06, 1.069000000519793e-06, 1.069000000519793e-06]</msg>
<status status="PASS" starttime="20201029 09:34:05.765" endtime="20201029 09:34:05.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.761" endtime="20201029 09:34:05.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.386" endtime="20201029 09:34:05.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.386" endtime="20201029 09:34:05.768"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.775" endtime="20201029 09:34:05.786"></status>
</kw>
<msg timestamp="20201029 09:34:05.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.774" endtime="20201029 09:34:05.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.789" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.787" endtime="20201029 09:34:05.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.790" endtime="20201029 09:34:05.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.771" endtime="20201029 09:34:05.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.770" endtime="20201029 09:34:05.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.799" endtime="20201029 09:34:06.130"></status>
</kw>
<msg timestamp="20201029 09:34:06.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.581528778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.581529847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.797" endtime="20201029 09:34:06.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.581528778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.581529847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.141" endtime="20201029 09:34:06.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.155" endtime="20201029 09:34:06.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.795" endtime="20201029 09:34:06.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.793" endtime="20201029 09:34:06.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.162" level="INFO">${RESULT} = [{'diff': 1.0689999996316146e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.0420000000621599e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0559999994441682e-...</msg>
<status status="PASS" starttime="20201029 09:34:06.159" endtime="20201029 09:34:06.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.168" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0689999996316146e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0409999999794195e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:06.163" endtime="20201029 09:34:06.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.172" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.171" endtime="20201029 09:34:06.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.175" level="INFO">VALUE: [1.0689999996316146e-06, 1.0409999999794195e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0559999994441682e-06, 1.069999999714355e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.1249999998241833e-06, 1.069000000519793e-06, 1.069000000519793e-06, 1.2360000001265803e-06, 1.0280000006801515e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0560000003323466e-06, 1.0559999994441682e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.1120000005249153e-06, 1.0689999996316146e-06, 1.0549999993614279e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0839999999845418e-06, 1.0689999996316146e-06, 1.0700000006025334e-06, 1.0420000000621599e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.069000000519793e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.069000000519793e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.000000000139778e-06, 1.0689999996316146e-06, 1.0409999999794195e-06, 1.0700000006025334e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 9.859999998695912e-07, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.000000000139778e-06]</msg>
<status status="PASS" starttime="20201029 09:34:06.173" endtime="20201029 09:34:06.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.169" endtime="20201029 09:34:06.176"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.769" endtime="20201029 09:34:06.176"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.768" endtime="20201029 09:34:06.176"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.184" endtime="20201029 09:34:06.194"></status>
</kw>
<msg timestamp="20201029 09:34:06.195" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.182" endtime="20201029 09:34:06.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.197" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.196" endtime="20201029 09:34:06.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.198" endtime="20201029 09:34:06.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.180" endtime="20201029 09:34:06.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.178" endtime="20201029 09:34:06.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.208" endtime="20201029 09:34:06.527"></status>
</kw>
<msg timestamp="20201029 09:34:06.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.952352556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.952353597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.206" endtime="20201029 09:34:06.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.952352556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.952353597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.532" endtime="20201029 09:34:06.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.541" endtime="20201029 09:34:06.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.203" endtime="20201029 09:34:06.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.202" endtime="20201029 09:34:06.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.548" level="INFO">${RESULT} = [{'diff': 1.0409999999794195e-06}, {'diff': 1.0700000006025334e-06}, {'diff': 1.0409999999794195e-06}, {'diff': 1.069999999714355e-06}, {'diff': 9.859999998695912e-07}, {'diff': 1.0689999996316146e-06...</msg>
<status status="PASS" starttime="20201029 09:34:06.545" endtime="20201029 09:34:06.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.553" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0409999999794195e-06, 1.0700000006025334e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 9.859999998695912e-07, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:06.549" endtime="20201029 09:34:06.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.557" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.556" endtime="20201029 09:34:06.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.560" level="INFO">VALUE: [1.0409999999794195e-06, 1.0700000006025334e-06, 1.0409999999794195e-06, 1.069999999714355e-06, 9.859999998695912e-07, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0420000000621599e-06, 1.0560000003323466e-06, 1.000000000139778e-06, 1.2360000001265803e-06, 1.0409999999794195e-06, 1.0549999993614279e-06, 1.069000000519793e-06, 1.0409999999794195e-06, 1.0420000000621599e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.0980000002547285e-06, 1.0559999994441682e-06, 1.0419999991739815e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0560000003323466e-06, 1.0560000003323466e-06, 1.069999999714355e-06, 1.069999999714355e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.069000000519793e-06, 1.0560000003323466e-06, 1.0409999999794195e-06, 1.0549999993614279e-06, 1.0559999994441682e-06, 1.0559999994441682e-06, 1.0409999999794195e-06, 1.0550000002496063e-06, 1.0559999994441682e-06, 1.0560000003323466e-06, 1.0419999991739815e-06, 1.069999999714355e-06, 1.0550000002496063e-06, 1.069999999714355e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0420000000621599e-06, 1.0559999994441682e-06, 1.0829999999018014e-06, 1.0550000002496063e-06, 1.0689999996316146e-06, 1.0550000002496063e-06, 1.0550000002496063e-06, 1.0689999996316146e-06]</msg>
<status status="PASS" starttime="20201029 09:34:06.558" endtime="20201029 09:34:06.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.554" endtime="20201029 09:34:06.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.177" endtime="20201029 09:34:06.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.176" endtime="20201029 09:34:06.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.689" endtime="20201029 09:34:06.561"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:58.622" endtime="20201029 09:34:06.562" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:06.569" endtime="20201029 09:34:06.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.567" endtime="20201029 09:34:06.590"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.603" endtime="20201029 09:34:06.615"></status>
</kw>
<msg timestamp="20201029 09:34:06.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.601" endtime="20201029 09:34:06.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.618" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.616" endtime="20201029 09:34:06.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.621" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:06.619" endtime="20201029 09:34:06.621"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:06.599" endtime="20201029 09:34:06.622"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:06.596" endtime="20201029 09:34:06.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.595" endtime="20201029 09:34:06.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:06.626" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:06.626" endtime="20201029 09:34:06.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.624" endtime="20201029 09:34:06.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.594" endtime="20201029 09:34:06.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.593" endtime="20201029 09:34:06.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.628" endtime="20201029 09:34:06.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.592" endtime="20201029 09:34:06.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.590" endtime="20201029 09:34:06.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.566" endtime="20201029 09:34:06.631"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.639" endtime="20201029 09:34:06.651"></status>
</kw>
<msg timestamp="20201029 09:34:06.651" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.638" endtime="20201029 09:34:06.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.652" endtime="20201029 09:34:06.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.655" endtime="20201029 09:34:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.635" endtime="20201029 09:34:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.633" endtime="20201029 09:34:06.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.664" endtime="20201029 09:34:06.951"></status>
</kw>
<msg timestamp="20201029 09:34:06.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061454472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061464111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.662" endtime="20201029 09:34:06.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061454472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061464111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.955" endtime="20201029 09:34:06.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.963" endtime="20201029 09:34:06.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.660" endtime="20201029 09:34:06.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.658" endtime="20201029 09:34:06.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.970" level="INFO">${RESULT} = [{'diff': 9.638999999998787e-06}, {'diff': 9.208000000003602e-06}, {'diff': 9.181000000003936e-06}, {'diff': 9.235999999995803e-06}, {'diff': 9.207999999996663e-06}, {'diff': 9.167000000004366e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:06.967" endtime="20201029 09:34:06.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.975" level="INFO">${OVERHEAD} = {'diff': [9.638999999998787e-06, 9.208000000003602e-06, 9.181000000003936e-06, 9.235999999995803e-06, 9.207999999996663e-06, 9.167000000004366e-06, 9.207999999996663e-06, 9.166000000004892e-06, 9.2220...</msg>
<status status="PASS" starttime="20201029 09:34:06.971" endtime="20201029 09:34:06.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.979" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:06.978" endtime="20201029 09:34:06.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.981" level="INFO">VALUE: [9.638999999998787e-06, 9.208000000003602e-06, 9.181000000003936e-06, 9.235999999995803e-06, 9.207999999996663e-06, 9.167000000004366e-06, 9.207999999996663e-06, 9.166000000004892e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.209000000003076e-06, 9.207999999996663e-06, 9.249999999995373e-06, 9.194999999996567e-06, 9.250000000002312e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.193999999997093e-06, 9.237000000002216e-06, 9.209000000003076e-06, 9.208000000003602e-06, 9.194000000004032e-06, 9.194999999996567e-06, 9.221999999996233e-06, 9.237000000002216e-06, 9.208000000003602e-06, 9.194999999996567e-06, 9.277000000001978e-06, 9.207999999996663e-06, 9.208999999996137e-06, 9.194000000004032e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.195000000003506e-06, 9.207999999996663e-06, 9.236000000009681e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.209000000010015e-06, 9.208000000010541e-06, 9.235999999995803e-06, 9.166000000004892e-06, 9.208999999996137e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201029 09:34:06.980" endtime="20201029 09:34:06.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.975" endtime="20201029 09:34:06.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.632" endtime="20201029 09:34:06.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.632" endtime="20201029 09:34:06.983"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.991" endtime="20201029 09:34:07.002"></status>
</kw>
<msg timestamp="20201029 09:34:07.002" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.990" endtime="20201029 09:34:07.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.003" endtime="20201029 09:34:07.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.006" endtime="20201029 09:34:07.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.987" endtime="20201029 09:34:07.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.985" endtime="20201029 09:34:07.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.015" endtime="20201029 09:34:07.319"></status>
</kw>
<msg timestamp="20201029 09:34:07.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062553736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062562931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.013" endtime="20201029 09:34:07.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062553736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062562931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.324" endtime="20201029 09:34:07.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.334" endtime="20201029 09:34:07.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.011" endtime="20201029 09:34:07.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.009" endtime="20201029 09:34:07.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.341" level="INFO">${RESULT} = [{'diff': 9.195000000003506e-06}, {'diff': 9.207999999996663e-06}, {'diff': 9.236000000009681e-06}, {'diff': 9.222000000003172e-06}, {'diff': 9.207999999996663e-06}, {'diff': 9.194000000004032e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:07.338" endtime="20201029 09:34:07.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.347" level="INFO">${OVERHEAD} = {'diff': [9.195000000003506e-06, 9.207999999996663e-06, 9.236000000009681e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.2090...</msg>
<status status="PASS" starttime="20201029 09:34:07.342" endtime="20201029 09:34:07.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.351" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:07.350" endtime="20201029 09:34:07.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.353" level="INFO">VALUE: [9.195000000003506e-06, 9.207999999996663e-06, 9.236000000009681e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.194000000004032e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.209000000010015e-06, 9.208000000010541e-06, 9.235999999995803e-06, 9.166000000004892e-06, 9.208999999996137e-06, 9.222000000003172e-06, 9.666999999990988e-06, 9.221999999975417e-06, 9.167000000032122e-06, 9.13800000001963e-06, 9.291999999994083e-06, 9.221999999975417e-06, 9.236000000023559e-06, 9.26400000000882e-06, 9.209000000010015e-06, 9.249999999960679e-06, 9.207999999982786e-06, 9.209000000010015e-06, 9.222000000030928e-06, 9.249999999960679e-06, 9.221999999975417e-06, 9.222000000030928e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.138999999991348e-06, 9.221999999975417e-06, 9.278000000001452e-06, 9.207999999982786e-06, 9.221999999975417e-06, 9.15299999998398e-06, 9.222000000030928e-06, 9.209000000010015e-06, 9.207999999982786e-06, 9.235999999968048e-06, 9.207999999982786e-06, 9.222000000030928e-06, 9.236000000023559e-06, 9.166000000004892e-06, 9.223000000002646e-06, 9.263000000037103e-06, 9.209000000010015e-06, 9.209000000010015e-06, 9.222000000030928e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.222000000030928e-06, 9.209000000010015e-06, 9.16699999997661e-06, 9.179999999997523e-06, 9.194999999961873e-06, 9.221999999975417e-06, 9.181000000024753e-06, 9.222000000030928e-06, 9.222000000030928e-06, 9.179999999997523e-06, 9.208000000038297e-06]</msg>
<status status="PASS" starttime="20201029 09:34:07.352" endtime="20201029 09:34:07.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.348" endtime="20201029 09:34:07.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.984" endtime="20201029 09:34:07.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.984" endtime="20201029 09:34:07.355"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.363" endtime="20201029 09:34:07.373"></status>
</kw>
<msg timestamp="20201029 09:34:07.374" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.361" endtime="20201029 09:34:07.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.375" endtime="20201029 09:34:07.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.377" endtime="20201029 09:34:07.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.359" endtime="20201029 09:34:07.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.357" endtime="20201029 09:34:07.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.386" endtime="20201029 09:34:07.690"></status>
</kw>
<msg timestamp="20201029 09:34:07.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.402674222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:07.385" endtime="20201029 09:34:07.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.402674222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:07.695" endtime="20201029 09:34:07.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.705" endtime="20201029 09:34:07.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.382" endtime="20201029 09:34:07.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.381" endtime="20201029 09:34:07.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.712" level="INFO">${RESULT} = [{'diff': 9.222000000030928e-06}, {'diff': 9.207999999982786e-06}, {'diff': 9.207999999982786e-06}, {'diff': 9.222000000030928e-06}, {'diff': 9.209000000010015e-06}, {'diff': 9.16699999997661e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:07.709" endtime="20201029 09:34:07.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.717" level="INFO">${OVERHEAD} = {'diff': [9.222000000030928e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.222000000030928e-06, 9.209000000010015e-06, 9.16699999997661e-06, 9.179999999997523e-06, 9.194999999961873e-06, 9.22199...</msg>
<status status="PASS" starttime="20201029 09:34:07.713" endtime="20201029 09:34:07.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.721" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:07.720" endtime="20201029 09:34:07.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.723" level="INFO">VALUE: [9.222000000030928e-06, 9.207999999982786e-06, 9.207999999982786e-06, 9.222000000030928e-06, 9.209000000010015e-06, 9.16699999997661e-06, 9.179999999997523e-06, 9.194999999961873e-06, 9.221999999975417e-06, 9.181000000024753e-06, 9.222000000030928e-06, 9.222000000030928e-06, 9.179999999997523e-06, 9.208000000038297e-06, 9.638999999950215e-06, 9.236999999995277e-06, 9.221999999975417e-06, 9.221999999975417e-06, 9.223000000058157e-06, 9.223000000058157e-06, 9.221999999975417e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.209000000010015e-06, 9.236000000023559e-06, 9.278000000056963e-06, 9.221999999975417e-06, 9.221999999975417e-06, 9.222999999947135e-06, 9.208000000038297e-06, 9.166000000004892e-06, 9.194999999961873e-06, 9.194999999961873e-06, 9.236000000023559e-06, 9.221999999975417e-06, 9.222000000086439e-06, 9.207999999927274e-06, 9.26400000000882e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.194999999961873e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.221999999975417e-06, 9.223000000058157e-06, 9.16699999997661e-06, 9.194999999961873e-06, 9.221999999975417e-06, 9.208000000038297e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.194000000101177e-06, 9.236000000023559e-06, 9.222999999947135e-06, 9.18099999991373e-06, 9.209000000010015e-06, 9.250000000071701e-06, 9.26400000000882e-06, 9.208000000038297e-06, 9.236000000023559e-06, 9.209000000010015e-06, 9.138999999991348e-06, 9.194999999961873e-06]</msg>
<status status="PASS" starttime="20201029 09:34:07.722" endtime="20201029 09:34:07.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.718" endtime="20201029 09:34:07.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.356" endtime="20201029 09:34:07.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.355" endtime="20201029 09:34:07.725"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.733" endtime="20201029 09:34:07.745"></status>
</kw>
<msg timestamp="20201029 09:34:07.745" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.731" endtime="20201029 09:34:07.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.746" endtime="20201029 09:34:07.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.751" endtime="20201029 09:34:07.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.729" endtime="20201029 09:34:07.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.727" endtime="20201029 09:34:07.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.761" endtime="20201029 09:34:08.067"></status>
</kw>
<msg timestamp="20201029 09:34:08.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.764195042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.764204236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.759" endtime="20201029 09:34:08.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.764195042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.764204236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.072" endtime="20201029 09:34:08.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.082" endtime="20201029 09:34:08.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.756" endtime="20201029 09:34:08.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.754" endtime="20201029 09:34:08.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.091" level="INFO">${RESULT} = [{'diff': 9.193999999990154e-06}, {'diff': 9.208000000038297e-06}, {'diff': 9.194000000101177e-06}, {'diff': 9.236000000023559e-06}, {'diff': 9.222999999947135e-06}, {'diff': 9.18099999991373e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:08.087" endtime="20201029 09:34:08.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.098" level="INFO">${OVERHEAD} = {'diff': [9.193999999990154e-06, 9.208000000038297e-06, 9.194000000101177e-06, 9.236000000023559e-06, 9.222999999947135e-06, 9.18099999991373e-06, 9.209000000010015e-06, 9.250000000071701e-06, 9.26400...</msg>
<status status="PASS" starttime="20201029 09:34:08.092" endtime="20201029 09:34:08.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.104" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.103" endtime="20201029 09:34:08.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.108" level="INFO">VALUE: [9.193999999990154e-06, 9.208000000038297e-06, 9.194000000101177e-06, 9.236000000023559e-06, 9.222999999947135e-06, 9.18099999991373e-06, 9.209000000010015e-06, 9.250000000071701e-06, 9.26400000000882e-06, 9.208000000038297e-06, 9.236000000023559e-06, 9.209000000010015e-06, 9.138999999991348e-06, 9.194999999961873e-06, 9.723000000017024e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.236000000134581e-06, 9.235999999912536e-06, 9.181000000024753e-06, 9.16699999997661e-06, 9.221999999864394e-06, 9.209000000121037e-06, 9.193999999990154e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.208999999898992e-06, 9.209000000121037e-06, 9.26400000000882e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.209000000121037e-06, 9.208000000038297e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.221999999864394e-06, 9.221999999864394e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.209000000121037e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.305000000070507e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.249999999960679e-06, 9.222000000086439e-06, 9.221999999864394e-06, 9.249999999960679e-06]</msg>
<status status="PASS" starttime="20201029 09:34:08.106" endtime="20201029 09:34:08.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.099" endtime="20201029 09:34:08.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.726" endtime="20201029 09:34:08.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.725" endtime="20201029 09:34:08.111"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.120" endtime="20201029 09:34:08.131"></status>
</kw>
<msg timestamp="20201029 09:34:08.131" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.119" endtime="20201029 09:34:08.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.134" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.132" endtime="20201029 09:34:08.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.135" endtime="20201029 09:34:08.136"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.116" endtime="20201029 09:34:08.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.114" endtime="20201029 09:34:08.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.144" endtime="20201029 09:34:08.468"></status>
</kw>
<msg timestamp="20201029 09:34:08.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.125850153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.125859375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.142" endtime="20201029 09:34:08.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.125850153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.125859375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.473" endtime="20201029 09:34:08.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.484" endtime="20201029 09:34:08.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.140" endtime="20201029 09:34:08.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.138" endtime="20201029 09:34:08.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.492" level="INFO">${RESULT} = [{'diff': 9.222000000086439e-06}, {'diff': 9.222999999947135e-06}, {'diff': 9.209000000121037e-06}, {'diff': 9.235999999912536e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.305000000070507e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:08.488" endtime="20201029 09:34:08.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.498" level="INFO">${OVERHEAD} = {'diff': [9.222000000086439e-06, 9.222999999947135e-06, 9.209000000121037e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.305000000070507e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.2080...</msg>
<status status="PASS" starttime="20201029 09:34:08.493" endtime="20201029 09:34:08.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.502" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.501" endtime="20201029 09:34:08.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.505" level="INFO">VALUE: [9.222000000086439e-06, 9.222999999947135e-06, 9.209000000121037e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.305000000070507e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.249999999960679e-06, 9.222000000086439e-06, 9.221999999864394e-06, 9.249999999960679e-06, 9.666999999824455e-06, 9.221999999864394e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.250000000182723e-06, 9.221999999864394e-06, 9.208999999898992e-06, 9.221999999864394e-06, 9.207999999816252e-06, 9.221999999864394e-06, 9.208000000038297e-06, 9.195000000072895e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.193999999990154e-06, 9.193999999990154e-06, 9.193999999990154e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.208000000038297e-06, 9.249999999960679e-06, 9.209000000121037e-06, 9.152999999928468e-06, 9.208000000038297e-06, 9.235999999912536e-06, 9.193999999990154e-06, 9.19499999985085e-06, 9.235999999912536e-06, 9.19499999985085e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 09:34:08.504" endtime="20201029 09:34:08.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.499" endtime="20201029 09:34:08.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.112" endtime="20201029 09:34:08.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.111" endtime="20201029 09:34:08.508"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.518" endtime="20201029 09:34:08.529"></status>
</kw>
<msg timestamp="20201029 09:34:08.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.516" endtime="20201029 09:34:08.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.532" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.531" endtime="20201029 09:34:08.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.533" endtime="20201029 09:34:08.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.513" endtime="20201029 09:34:08.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.511" endtime="20201029 09:34:08.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.542" endtime="20201029 09:34:08.841"></status>
</kw>
<msg timestamp="20201029 09:34:08.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.502524444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.502533639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.540" endtime="20201029 09:34:08.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.502524444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.502533639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.847" endtime="20201029 09:34:08.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.856" endtime="20201029 09:34:08.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.538" endtime="20201029 09:34:08.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.536" endtime="20201029 09:34:08.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.863" level="INFO">${RESULT} = [{'diff': 9.19499999985085e-06}, {'diff': 9.222999999947135e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222999999947135e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:08.860" endtime="20201029 09:34:08.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.868" level="INFO">${OVERHEAD} = {'diff': [9.19499999985085e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.22200...</msg>
<status status="PASS" starttime="20201029 09:34:08.864" endtime="20201029 09:34:08.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.872" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:08.871" endtime="20201029 09:34:08.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.875" level="INFO">VALUE: [9.19499999985085e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.195000000072895e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.638999999950215e-06, 9.193999999990154e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.236999999995277e-06, 9.221999999864394e-06, 9.235999999912536e-06, 9.222999999947135e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.222999999947135e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.208000000038297e-06, 9.221999999864394e-06, 9.222999999947135e-06, 9.249999999960679e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.209000000121037e-06, 9.193999999990154e-06, 9.209000000121037e-06, 9.235999999912536e-06, 9.207999999816252e-06, 9.278000000056963e-06, 9.208000000038297e-06, 9.195000000072895e-06, 9.195000000072895e-06, 9.222000000086439e-06, 9.222999999947135e-06, 9.221999999864394e-06, 9.222000000086439e-06, 9.152999999928468e-06, 9.222000000086439e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.195000000072895e-06, 9.181000000024753e-06, 9.181000000024753e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.193999999990154e-06]</msg>
<status status="PASS" starttime="20201029 09:34:08.873" endtime="20201029 09:34:08.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.869" endtime="20201029 09:34:08.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.509" endtime="20201029 09:34:08.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.509" endtime="20201029 09:34:08.876"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.885" endtime="20201029 09:34:08.895"></status>
</kw>
<msg timestamp="20201029 09:34:08.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.883" endtime="20201029 09:34:08.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.897" endtime="20201029 09:34:08.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.899" endtime="20201029 09:34:08.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.880" endtime="20201029 09:34:08.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.878" endtime="20201029 09:34:08.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.909" endtime="20201029 09:34:09.215"></status>
</kw>
<msg timestamp="20201029 09:34:09.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.891626, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.891635208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:08.907" endtime="20201029 09:34:09.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.891626, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.891635208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:09.220" endtime="20201029 09:34:09.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.230" endtime="20201029 09:34:09.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.904" endtime="20201029 09:34:09.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.902" endtime="20201029 09:34:09.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.237" level="INFO">${RESULT} = [{'diff': 9.208000000038297e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.236999999995277e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.235999999912536e-06}, {'diff': 9.208000000038297e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:09.234" endtime="20201029 09:34:09.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.242" level="INFO">${OVERHEAD} = {'diff': [9.208000000038297e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.1950...</msg>
<status status="PASS" starttime="20201029 09:34:09.238" endtime="20201029 09:34:09.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.246" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:09.245" endtime="20201029 09:34:09.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.249" level="INFO">VALUE: [9.208000000038297e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.208000000038297e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.195000000072895e-06, 9.181000000024753e-06, 9.181000000024753e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.652999999776313e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.209000000343082e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.292000000105105e-06, 9.222000000086439e-06, 9.291000000022365e-06, 9.26400000000882e-06, 9.193999999990154e-06, 9.16699999997661e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.180000000164057e-06, 9.22199999964235e-06, 9.222000000086439e-06, 9.16599999989387e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.153000000150513e-06, 9.208000000260341e-06, 9.22299999972509e-06, 9.22299999972509e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.22199999964235e-06, 9.152000000067773e-06, 9.235999999912536e-06, 9.26400000000882e-06]</msg>
<status status="PASS" starttime="20201029 09:34:09.248" endtime="20201029 09:34:09.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.243" endtime="20201029 09:34:09.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.877" endtime="20201029 09:34:09.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.876" endtime="20201029 09:34:09.250"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.258" endtime="20201029 09:34:09.269"></status>
</kw>
<msg timestamp="20201029 09:34:09.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.257" endtime="20201029 09:34:09.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.271" endtime="20201029 09:34:09.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.273" endtime="20201029 09:34:09.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.254" endtime="20201029 09:34:09.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.252" endtime="20201029 09:34:09.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.282" endtime="20201029 09:34:09.590"></status>
</kw>
<msg timestamp="20201029 09:34:09.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.247054847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.247064, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:09.280" endtime="20201029 09:34:09.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.247054847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.247064, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:09.595" endtime="20201029 09:34:09.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.605" endtime="20201029 09:34:09.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.278" endtime="20201029 09:34:09.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.276" endtime="20201029 09:34:09.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.612" level="INFO">${RESULT} = [{'diff': 9.153000000150513e-06}, {'diff': 9.208000000260341e-06}, {'diff': 9.22299999972509e-06}, {'diff': 9.22299999972509e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.208000000260341e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:09.609" endtime="20201029 09:34:09.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.618" level="INFO">${OVERHEAD} = {'diff': [9.153000000150513e-06, 9.208000000260341e-06, 9.22299999972509e-06, 9.22299999972509e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222000...</msg>
<status status="PASS" starttime="20201029 09:34:09.613" endtime="20201029 09:34:09.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.622" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:09.621" endtime="20201029 09:34:09.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.624" level="INFO">VALUE: [9.153000000150513e-06, 9.208000000260341e-06, 9.22299999972509e-06, 9.22299999972509e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.22199999964235e-06, 9.152000000067773e-06, 9.235999999912536e-06, 9.26400000000882e-06, 9.638999999950215e-06, 9.235999999912536e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.22199999964235e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.22299999972509e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.22299999972509e-06, 9.195000000072895e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.208999999898992e-06, 9.26299999992608e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.235999999912536e-06, 9.195000000072895e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.179999999719968e-06, 9.209000000343082e-06, 9.193999999990154e-06, 9.193999999990154e-06, 9.22299999972509e-06]</msg>
<status status="PASS" starttime="20201029 09:34:09.623" endtime="20201029 09:34:09.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.619" endtime="20201029 09:34:09.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.251" endtime="20201029 09:34:09.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.251" endtime="20201029 09:34:09.626"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.634" endtime="20201029 09:34:09.644"></status>
</kw>
<msg timestamp="20201029 09:34:09.645" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.632" endtime="20201029 09:34:09.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.646" endtime="20201029 09:34:09.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.648" endtime="20201029 09:34:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.630" endtime="20201029 09:34:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.628" endtime="20201029 09:34:09.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.658" endtime="20201029 09:34:09.976"></status>
</kw>
<msg timestamp="20201029 09:34:09.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.611686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.61169575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:09.656" endtime="20201029 09:34:09.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.611686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.61169575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:09.981" endtime="20201029 09:34:09.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.991" endtime="20201029 09:34:09.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.653" endtime="20201029 09:34:09.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.652" endtime="20201029 09:34:09.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.998" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.235999999912536e-06}, {'diff': 9.195000000072895e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.208000000260341e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:09.995" endtime="20201029 09:34:09.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.003" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.235999999912536e-06, 9.195000000072895e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.2359...</msg>
<status status="PASS" starttime="20201029 09:34:09.999" endtime="20201029 09:34:10.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.007" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.006" endtime="20201029 09:34:10.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.010" level="INFO">VALUE: [9.207999999816252e-06, 9.235999999912536e-06, 9.195000000072895e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.179999999719968e-06, 9.209000000343082e-06, 9.193999999990154e-06, 9.193999999990154e-06, 9.22299999972509e-06, 9.638999999950215e-06, 9.22299999972509e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.139000000324415e-06, 9.222000000086439e-06, 9.26299999992608e-06, 9.208000000260341e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.16699999997661e-06, 9.22300000016918e-06, 9.152999999706424e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.250000000182723e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.304999999848462e-06, 9.222000000086439e-06, 9.195000000072895e-06, 9.236999999995277e-06, 9.236999999995277e-06, 9.152999999706424e-06, 9.208999999898992e-06, 9.291000000022365e-06, 9.305999999931203e-06, 9.236999999995277e-06, 9.22299999972509e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.16599999989387e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.208000000260341e-06, 9.209000000343082e-06, 9.222000000086439e-06, 9.22299999972509e-06]</msg>
<status status="PASS" starttime="20201029 09:34:10.008" endtime="20201029 09:34:10.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.004" endtime="20201029 09:34:10.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.627" endtime="20201029 09:34:10.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.626" endtime="20201029 09:34:10.011"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.020" endtime="20201029 09:34:10.030"></status>
</kw>
<msg timestamp="20201029 09:34:10.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.018" endtime="20201029 09:34:10.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.032" endtime="20201029 09:34:10.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.034" endtime="20201029 09:34:10.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.016" endtime="20201029 09:34:10.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.013" endtime="20201029 09:34:10.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.044" endtime="20201029 09:34:10.354"></status>
</kw>
<msg timestamp="20201029 09:34:10.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.976071722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.976081028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.042" endtime="20201029 09:34:10.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.976071722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.976081028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.359" endtime="20201029 09:34:10.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.375" endtime="20201029 09:34:10.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.039" endtime="20201029 09:34:10.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.038" endtime="20201029 09:34:10.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.404" level="INFO">${RESULT} = [{'diff': 9.305999999931203e-06}, {'diff': 9.236999999995277e-06}, {'diff': 9.22299999972509e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.236000000356626e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:10.393" endtime="20201029 09:34:10.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.416" level="INFO">${OVERHEAD} = {'diff': [9.305999999931203e-06, 9.236999999995277e-06, 9.22299999972509e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.16599999989387e-06, 9.208999...</msg>
<status status="PASS" starttime="20201029 09:34:10.407" endtime="20201029 09:34:10.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.425" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.423" endtime="20201029 09:34:10.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.431" level="INFO">VALUE: [9.305999999931203e-06, 9.236999999995277e-06, 9.22299999972509e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.16599999989387e-06, 9.208999999898992e-06, 9.193999999990154e-06, 9.208000000260341e-06, 9.209000000343082e-06, 9.222000000086439e-06, 9.22299999972509e-06, 9.638999999950215e-06, 9.209000000343082e-06, 9.195000000072895e-06, 9.180999999802708e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.22299999972509e-06, 9.181000000246797e-06, 9.236999999995277e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.22199999964235e-06, 9.235999999912536e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.195000000072895e-06, 9.208999999898992e-06, 9.22199999964235e-06, 9.22299999972509e-06, 9.194999999628806e-06, 9.22300000016918e-06, 9.194999999628806e-06, 9.222000000086439e-06, 9.263999999564732e-06, 9.222000000086439e-06, 9.22199999964235e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.22199999964235e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.138999999880326e-06, 9.250000000182723e-06, 9.249999999738634e-06, 9.235999999912536e-06, 9.236000000356626e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.276999999752178e-06, 9.291000000022365e-06, 9.193999999990154e-06, 9.26400000000882e-06, 9.193999999990154e-06]</msg>
<status status="PASS" starttime="20201029 09:34:10.428" endtime="20201029 09:34:10.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.418" endtime="20201029 09:34:10.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.012" endtime="20201029 09:34:10.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.011" endtime="20201029 09:34:10.436"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.452" endtime="20201029 09:34:10.463"></status>
</kw>
<msg timestamp="20201029 09:34:10.463" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.450" endtime="20201029 09:34:10.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.464" endtime="20201029 09:34:10.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.467" endtime="20201029 09:34:10.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.445" endtime="20201029 09:34:10.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.441" endtime="20201029 09:34:10.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.481" endtime="20201029 09:34:10.788"></status>
</kw>
<msg timestamp="20201029 09:34:10.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.352190917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.352200125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.479" endtime="20201029 09:34:10.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.352190917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.352200125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.793" endtime="20201029 09:34:10.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.803" endtime="20201029 09:34:10.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.472" endtime="20201029 09:34:10.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.470" endtime="20201029 09:34:10.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.811" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.138999999880326e-06}, {'diff': 9.250000000182723e-06}, {'diff': 9.249999999738634e-06}, {'diff': 9.235999999912536e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:10.806" endtime="20201029 09:34:10.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.815" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.208999999898992e-06, 9.138999999880326e-06, 9.250000000182723e-06, 9.249999999738634e-06, 9.235999999912536e-06, 9.236000000356626e-06, 9.208000000260341e-06, 9.2079...</msg>
<status status="PASS" starttime="20201029 09:34:10.812" endtime="20201029 09:34:10.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.820" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:10.819" endtime="20201029 09:34:10.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.822" level="INFO">VALUE: [9.207999999816252e-06, 9.208999999898992e-06, 9.138999999880326e-06, 9.250000000182723e-06, 9.249999999738634e-06, 9.235999999912536e-06, 9.236000000356626e-06, 9.208000000260341e-06, 9.207999999816252e-06, 9.276999999752178e-06, 9.291000000022365e-06, 9.193999999990154e-06, 9.26400000000882e-06, 9.193999999990154e-06, 9.583999999840387e-06, 9.22199999964235e-06, 9.152999999706424e-06, 9.208999999898992e-06, 9.208000000260341e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.236999999995277e-06, 9.235999999912536e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.222000000086439e-06, 9.208000000260341e-06, 9.208999999898992e-06, 9.179999999719968e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.193999999990154e-06, 9.208999999898992e-06, 9.235999999912536e-06, 9.236000000356626e-06, 9.193999999990154e-06, 9.208000000260341e-06, 9.208000000260341e-06, 9.209000000343082e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.222000000086439e-06, 9.235999999912536e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.193999999990154e-06, 9.209000000343082e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.152000000067773e-06, 9.235999999912536e-06, 9.236999999995277e-06, 9.209000000343082e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.16699999997661e-06, 9.26299999992608e-06, 9.236000000356626e-06, 9.181000000246797e-06, 9.180999999802708e-06, 9.153000000150513e-06, 9.208000000260341e-06]</msg>
<status status="PASS" starttime="20201029 09:34:10.821" endtime="20201029 09:34:10.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.816" endtime="20201029 09:34:10.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.438" endtime="20201029 09:34:10.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.436" endtime="20201029 09:34:10.824"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.831" endtime="20201029 09:34:10.842"></status>
</kw>
<msg timestamp="20201029 09:34:10.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.830" endtime="20201029 09:34:10.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.844" endtime="20201029 09:34:10.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.846" endtime="20201029 09:34:10.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.827" endtime="20201029 09:34:10.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.826" endtime="20201029 09:34:10.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.858" endtime="20201029 09:34:11.180"></status>
</kw>
<msg timestamp="20201029 09:34:11.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.774245417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.774254569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.857" endtime="20201029 09:34:11.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.774245417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.774254569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.186" endtime="20201029 09:34:11.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.196" endtime="20201029 09:34:11.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.852" endtime="20201029 09:34:11.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.849" endtime="20201029 09:34:11.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.203" level="INFO">${RESULT} = [{'diff': 9.152000000067773e-06}, {'diff': 9.235999999912536e-06}, {'diff': 9.236999999995277e-06}, {'diff': 9.209000000343082e-06}, {'diff': 9.235999999912536e-06}, {'diff': 9.208999999898992e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:11.199" endtime="20201029 09:34:11.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.207" level="INFO">${OVERHEAD} = {'diff': [9.152000000067773e-06, 9.235999999912536e-06, 9.236999999995277e-06, 9.209000000343082e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.16699999997661e-06, 9.26299...</msg>
<status status="PASS" starttime="20201029 09:34:11.204" endtime="20201029 09:34:11.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.212" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.210" endtime="20201029 09:34:11.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.215" level="INFO">VALUE: [9.152000000067773e-06, 9.235999999912536e-06, 9.236999999995277e-06, 9.209000000343082e-06, 9.235999999912536e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.16699999997661e-06, 9.26299999992608e-06, 9.236000000356626e-06, 9.181000000246797e-06, 9.180999999802708e-06, 9.153000000150513e-06, 9.208000000260341e-06, 9.653000000220402e-06, 9.16699999997661e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.20800000070443e-06, 9.20800000070443e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.22199999919826e-06, 9.194999999628806e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.179999999275879e-06, 9.152999999706424e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.20800000070443e-06, 9.194999999628806e-06, 9.195000000516984e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.277999999390829e-06, 9.16699999997661e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.250000000626812e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.213" endtime="20201029 09:34:11.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.208" endtime="20201029 09:34:11.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.824" endtime="20201029 09:34:11.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.824" endtime="20201029 09:34:11.216"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.224" endtime="20201029 09:34:11.234"></status>
</kw>
<msg timestamp="20201029 09:34:11.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.222" endtime="20201029 09:34:11.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.236" endtime="20201029 09:34:11.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.238" endtime="20201029 09:34:11.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.220" endtime="20201029 09:34:11.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.218" endtime="20201029 09:34:11.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.248" endtime="20201029 09:34:11.566"></status>
</kw>
<msg timestamp="20201029 09:34:11.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.144030083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.144039278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.246" endtime="20201029 09:34:11.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.144030083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.144039278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.571" endtime="20201029 09:34:11.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.581" endtime="20201029 09:34:11.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.244" endtime="20201029 09:34:11.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.242" endtime="20201029 09:34:11.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.588" level="INFO">${RESULT} = [{'diff': 9.195000000516984e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:11.585" endtime="20201029 09:34:11.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.594" level="INFO">${OVERHEAD} = {'diff': [9.195000000516984e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.2079...</msg>
<status status="PASS" starttime="20201029 09:34:11.589" endtime="20201029 09:34:11.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.598" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.597" endtime="20201029 09:34:11.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.600" level="INFO">VALUE: [9.195000000516984e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.277999999390829e-06, 9.16699999997661e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.250000000626812e-06, 9.653000000220402e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.250000000626812e-06, 9.193999999546065e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.236999999551188e-06, 9.181000000246797e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.250000000626812e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.181000000246797e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.194000000434244e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.193999999546065e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.250000000626812e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.26400000000882e-06, 9.194000000434244e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.125000000054229e-06, 9.181000000246797e-06, 9.194999999628806e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.209000000787171e-06, 9.236000000356626e-06, 9.207999999816252e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.599" endtime="20201029 09:34:11.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.594" endtime="20201029 09:34:11.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.217" endtime="20201029 09:34:11.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.216" endtime="20201029 09:34:11.602"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.609" endtime="20201029 09:34:11.620"></status>
</kw>
<msg timestamp="20201029 09:34:11.621" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.608" endtime="20201029 09:34:11.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.623" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.622" endtime="20201029 09:34:11.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.624" endtime="20201029 09:34:11.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.605" endtime="20201029 09:34:11.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.604" endtime="20201029 09:34:11.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.634" endtime="20201029 09:34:11.937"></status>
</kw>
<msg timestamp="20201029 09:34:11.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.525328708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.525337931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.632" endtime="20201029 09:34:11.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.525328708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.525337931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.942" endtime="20201029 09:34:11.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.952" endtime="20201029 09:34:11.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.629" endtime="20201029 09:34:11.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.628" endtime="20201029 09:34:11.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.960" level="INFO">${RESULT} = [{'diff': 9.22300000016918e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.194000000434244e-06}, {'diff': 9.194000000434244e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.22300000016918e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 09:34:11.956" endtime="20201029 09:34:11.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.965" level="INFO">${OVERHEAD} = {'diff': [9.22300000016918e-06, 9.26400000000882e-06, 9.194000000434244e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.125000000054229e-06, 9.181000000246797e-06, 9.1949999...</msg>
<status status="PASS" starttime="20201029 09:34:11.961" endtime="20201029 09:34:11.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.969" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.968" endtime="20201029 09:34:11.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.972" level="INFO">VALUE: [9.22300000016918e-06, 9.26400000000882e-06, 9.194000000434244e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.125000000054229e-06, 9.181000000246797e-06, 9.194999999628806e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.209000000787171e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.653000000220402e-06, 9.20800000070443e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.235999999468447e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.22199999919826e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.249999999738634e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.277000000196267e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.152000000511862e-06, 9.194999999628806e-06, 9.208999999898992e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222999999281e-06, 9.181000000246797e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.153000000594602e-06, 9.180000000164057e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.970" endtime="20201029 09:34:11.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.966" endtime="20201029 09:34:11.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.602" endtime="20201029 09:34:11.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.602" endtime="20201029 09:34:11.973"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.982" endtime="20201029 09:34:11.992"></status>
</kw>
<msg timestamp="20201029 09:34:11.993" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.979" endtime="20201029 09:34:11.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.995" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.994" endtime="20201029 09:34:11.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.997" endtime="20201029 09:34:11.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.977" endtime="20201029 09:34:11.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.975" endtime="20201029 09:34:11.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.006" endtime="20201029 09:34:12.321"></status>
</kw>
<msg timestamp="20201029 09:34:12.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.900252042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.900261236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.004" endtime="20201029 09:34:12.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.900252042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.900261236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.326" endtime="20201029 09:34:12.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.336" endtime="20201029 09:34:12.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.002" endtime="20201029 09:34:12.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.000" endtime="20201029 09:34:12.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.343" level="INFO">${RESULT} = [{'diff': 9.194000000434244e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.194999999628806e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:12.339" endtime="20201029 09:34:12.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.348" level="INFO">${OVERHEAD} = {'diff': [9.194000000434244e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.2229...</msg>
<status status="PASS" starttime="20201029 09:34:12.344" endtime="20201029 09:34:12.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.352" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.351" endtime="20201029 09:34:12.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.355" level="INFO">VALUE: [9.194000000434244e-06, 9.222000000086439e-06, 9.193999999546065e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222999999281e-06, 9.181000000246797e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.153000000594602e-06, 9.180000000164057e-06, 9.653000000220402e-06, 9.22199999919826e-06, 9.20800000070443e-06, 9.236999999551188e-06, 9.195000000516984e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.195000000516984e-06, 9.208999999898992e-06, 9.20800000070443e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.235999999468447e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.26400000000882e-06, 9.22300000016918e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.22300000016918e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.22300000016918e-06, 9.236000000356626e-06, 9.152999999706424e-06, 9.208999999898992e-06, 9.194000000434244e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.195000000516984e-06, 9.16699999997661e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.208999999898992e-06, 9.22199999919826e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.353" endtime="20201029 09:34:12.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.349" endtime="20201029 09:34:12.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.974" endtime="20201029 09:34:12.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.973" endtime="20201029 09:34:12.356"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.364" endtime="20201029 09:34:12.375"></status>
</kw>
<msg timestamp="20201029 09:34:12.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.363" endtime="20201029 09:34:12.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.377" endtime="20201029 09:34:12.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.380" endtime="20201029 09:34:12.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.360" endtime="20201029 09:34:12.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.359" endtime="20201029 09:34:12.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.389" endtime="20201029 09:34:12.698"></status>
</kw>
<msg timestamp="20201029 09:34:12.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.263368889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.263378083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.387" endtime="20201029 09:34:12.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.263368889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.263378083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.703" endtime="20201029 09:34:12.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.713" endtime="20201029 09:34:12.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.384" endtime="20201029 09:34:12.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.383" endtime="20201029 09:34:12.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.719" level="INFO">${RESULT} = [{'diff': 9.194000000434244e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.235999999468447e-06}, {'diff': 9.195000000516984e-06}, {'diff': 9.16699999997661e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:12.716" endtime="20201029 09:34:12.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.725" level="INFO">${OVERHEAD} = {'diff': [9.194000000434244e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.195000000516984e-06, 9.16699999997661e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.236000...</msg>
<status status="PASS" starttime="20201029 09:34:12.720" endtime="20201029 09:34:12.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.729" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.728" endtime="20201029 09:34:12.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.732" level="INFO">VALUE: [9.194000000434244e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.235999999468447e-06, 9.195000000516984e-06, 9.16699999997661e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.208999999898992e-06, 9.22199999919826e-06, 9.222000000086439e-06, 9.653000000220402e-06, 9.180999999358619e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.222999999281e-06, 9.207999999816252e-06, 9.194999999628806e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.193999999546065e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.22199999919826e-06, 9.26299999992608e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.235999999468447e-06, 9.180000000164057e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.194999999628806e-06, 9.138999999436237e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.179999999275879e-06, 9.181000000246797e-06, 9.207999999816252e-06, 9.209000000787171e-06, 9.207999999816252e-06, 9.16599999989387e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.152000000511862e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.730" endtime="20201029 09:34:12.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.726" endtime="20201029 09:34:12.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.357" endtime="20201029 09:34:12.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.357" endtime="20201029 09:34:12.733"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.741" endtime="20201029 09:34:12.752"></status>
</kw>
<msg timestamp="20201029 09:34:12.752" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.740" endtime="20201029 09:34:12.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.755" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.753" endtime="20201029 09:34:12.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.756" endtime="20201029 09:34:12.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.737" endtime="20201029 09:34:12.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.735" endtime="20201029 09:34:12.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.765" endtime="20201029 09:34:13.082"></status>
</kw>
<msg timestamp="20201029 09:34:13.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.635185292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.6351945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:12.764" endtime="20201029 09:34:13.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.635185292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.6351945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:13.087" endtime="20201029 09:34:13.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.097" endtime="20201029 09:34:13.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.761" endtime="20201029 09:34:13.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.759" endtime="20201029 09:34:13.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.103" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.179999999275879e-06}, {'diff': 9.181000000246797e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:13.100" endtime="20201029 09:34:13.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.108" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.179999999275879e-06, 9.181000000246797e-06, 9.207999999816252e-06, 9.209000000787171e-06, 9.2079...</msg>
<status status="PASS" starttime="20201029 09:34:13.104" endtime="20201029 09:34:13.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.112" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.111" endtime="20201029 09:34:13.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.115" level="INFO">VALUE: [9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.179999999275879e-06, 9.181000000246797e-06, 9.207999999816252e-06, 9.209000000787171e-06, 9.207999999816252e-06, 9.16599999989387e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.152000000511862e-06, 9.667000000490589e-06, 9.236000000356626e-06, 9.179999999275879e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.152999999706424e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.16699999997661e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.153000000594602e-06, 9.236000000356626e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.16699999997661e-06, 9.181000000246797e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222999999281e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.222999999281e-06, 9.20800000070443e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.194999999628806e-06, 9.22300000016918e-06, 9.179999999275879e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.152000000511862e-06, 9.236000000356626e-06, 9.195000000516984e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.113" endtime="20201029 09:34:13.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.109" endtime="20201029 09:34:13.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.734" endtime="20201029 09:34:13.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.734" endtime="20201029 09:34:13.116"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.125" endtime="20201029 09:34:13.136"></status>
</kw>
<msg timestamp="20201029 09:34:13.136" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.123" endtime="20201029 09:34:13.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.139" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.137" endtime="20201029 09:34:13.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.140" endtime="20201029 09:34:13.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.120" endtime="20201029 09:34:13.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.118" endtime="20201029 09:34:13.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.149" endtime="20201029 09:34:13.458"></status>
</kw>
<msg timestamp="20201029 09:34:13.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.002908958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.002918181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.147" endtime="20201029 09:34:13.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.002908958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.002918181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.463" endtime="20201029 09:34:13.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.473" endtime="20201029 09:34:13.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.145" endtime="20201029 09:34:13.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.143" endtime="20201029 09:34:13.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.480" level="INFO">${RESULT} = [{'diff': 9.22300000016918e-06}, {'diff': 9.179999999275879e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.207999999816252e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:13.476" endtime="20201029 09:34:13.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.485" level="INFO">${OVERHEAD} = {'diff': [9.22300000016918e-06, 9.179999999275879e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.152000000511862e-06, 9.236000...</msg>
<status status="PASS" starttime="20201029 09:34:13.481" endtime="20201029 09:34:13.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.489" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.488" endtime="20201029 09:34:13.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.492" level="INFO">VALUE: [9.22300000016918e-06, 9.179999999275879e-06, 9.26400000000882e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.152000000511862e-06, 9.236000000356626e-06, 9.195000000516984e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.637999999867475e-06, 9.222000000086439e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.20800000070443e-06, 9.222000000086439e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.222999999281e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.207999999816252e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.26299999992608e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.249999999738634e-06, 9.236000000356626e-06, 9.207999999816252e-06, 9.208999999898992e-06, 9.236000000356626e-06, 9.26400000000882e-06, 9.235999999468447e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.193999999546065e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.490" endtime="20201029 09:34:13.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.486" endtime="20201029 09:34:13.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.117" endtime="20201029 09:34:13.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.117" endtime="20201029 09:34:13.493"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.501" endtime="20201029 09:34:13.512"></status>
</kw>
<msg timestamp="20201029 09:34:13.513" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.500" endtime="20201029 09:34:13.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.515" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.514" endtime="20201029 09:34:13.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.516" endtime="20201029 09:34:13.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.497" endtime="20201029 09:34:13.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.495" endtime="20201029 09:34:13.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.525" endtime="20201029 09:34:13.842"></status>
</kw>
<msg timestamp="20201029 09:34:13.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.3765395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.376548708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:13.524" endtime="20201029 09:34:13.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.3765395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.376548708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:13.846" endtime="20201029 09:34:13.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.856" endtime="20201029 09:34:13.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.521" endtime="20201029 09:34:13.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.519" endtime="20201029 09:34:13.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.863" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.222000000086439e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.194000000434244e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:13.860" endtime="20201029 09:34:13.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.869" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.193999999546065e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.1800...</msg>
<status status="PASS" starttime="20201029 09:34:13.864" endtime="20201029 09:34:13.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.873" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.872" endtime="20201029 09:34:13.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.876" level="INFO">VALUE: [9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.194999999628806e-06, 9.193999999546065e-06, 9.194000000434244e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.207999999816252e-06, 9.22300000016918e-06, 9.26400000000882e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.637999999867475e-06, 9.222000000086439e-06, 9.152999999706424e-06, 9.22300000016918e-06, 9.207999999816252e-06, 9.277000000196267e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.249999999738634e-06, 9.195000000516984e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.305999999931203e-06, 9.180000000164057e-06, 9.222000000086439e-06, 9.237000000439366e-06, 9.193999999546065e-06, 9.235999999468447e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.250000000626812e-06, 9.222000000086439e-06, 9.16699999997661e-06, 9.304999999848462e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.26400000000882e-06, 9.22300000016918e-06, 9.194000000434244e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.195000000516984e-06, 9.235999999468447e-06, 9.26400000000882e-06, 9.249999999738634e-06, 9.26400000000882e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.874" endtime="20201029 09:34:13.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.870" endtime="20201029 09:34:13.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.494" endtime="20201029 09:34:13.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.494" endtime="20201029 09:34:13.877"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.885" endtime="20201029 09:34:13.896"></status>
</kw>
<msg timestamp="20201029 09:34:13.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.883" endtime="20201029 09:34:13.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.899" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.897" endtime="20201029 09:34:13.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.900" endtime="20201029 09:34:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.881" endtime="20201029 09:34:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.879" endtime="20201029 09:34:13.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.910" endtime="20201029 09:34:14.226"></status>
</kw>
<msg timestamp="20201029 09:34:14.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.741926681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.741935889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.908" endtime="20201029 09:34:14.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.741926681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.741935889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.231" endtime="20201029 09:34:14.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.241" endtime="20201029 09:34:14.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.905" endtime="20201029 09:34:14.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.903" endtime="20201029 09:34:14.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.248" level="INFO">${RESULT} = [{'diff': 9.207999999816252e-06}, {'diff': 9.22199999919826e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.207999999816252e-06}, {'diff': 9.193999999546065e-06}, {'diff': 9.22199999919826e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:14.244" endtime="20201029 09:34:14.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.253" level="INFO">${OVERHEAD} = {'diff': [9.207999999816252e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.195000000516984e-06, 9.235999999468447e-06, 9.264000...</msg>
<status status="PASS" starttime="20201029 09:34:14.249" endtime="20201029 09:34:14.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.257" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:14.256" endtime="20201029 09:34:14.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.262" level="INFO">VALUE: [9.207999999816252e-06, 9.22199999919826e-06, 9.207999999816252e-06, 9.207999999816252e-06, 9.193999999546065e-06, 9.22199999919826e-06, 9.195000000516984e-06, 9.235999999468447e-06, 9.26400000000882e-06, 9.249999999738634e-06, 9.26400000000882e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.653000000220402e-06, 9.249999999738634e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.236000000356626e-06, 9.16699999997661e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.207999999816252e-06, 9.236000000356626e-06, 9.22300000016918e-06, 9.235999999468447e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.194999999628806e-06, 9.207999999816252e-06, 9.26400000000882e-06, 9.208999999898992e-06, 9.16599999989387e-06, 9.236000000356626e-06, 9.193999999546065e-06, 9.208999999898992e-06, 9.22300000016918e-06, 9.222000000086439e-06, 9.236000000356626e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.152999999706424e-06, 9.20800000070443e-06, 9.195000000516984e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.222000000086439e-06, 9.208999999898992e-06, 9.208999999898992e-06, 9.222000000086439e-06, 9.20800000070443e-06, 9.222000000086439e-06, 9.125000000054229e-06, 9.208999999898992e-06, 9.207999999816252e-06, 9.180000000164057e-06, 9.235999999468447e-06, 9.194000000434244e-06, 9.22300000016918e-06, 9.22300000016918e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.258" endtime="20201029 09:34:14.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.254" endtime="20201029 09:34:14.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.878" endtime="20201029 09:34:14.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.877" endtime="20201029 09:34:14.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.631" endtime="20201029 09:34:14.264"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:06.563" endtime="20201029 09:34:14.264" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:14.271" endtime="20201029 09:34:14.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.270" endtime="20201029 09:34:14.291"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.304" endtime="20201029 09:34:14.316"></status>
</kw>
<msg timestamp="20201029 09:34:14.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.302" endtime="20201029 09:34:14.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.318" endtime="20201029 09:34:14.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:14.320" endtime="20201029 09:34:14.322"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.300" endtime="20201029 09:34:14.323"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.298" endtime="20201029 09:34:14.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.296" endtime="20201029 09:34:14.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:14.330" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:14.329" endtime="20201029 09:34:14.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.326" endtime="20201029 09:34:14.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.295" endtime="20201029 09:34:14.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.295" endtime="20201029 09:34:14.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.332" endtime="20201029 09:34:14.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.293" endtime="20201029 09:34:14.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.292" endtime="20201029 09:34:14.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.268" endtime="20201029 09:34:14.338"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.351" endtime="20201029 09:34:14.372"></status>
</kw>
<msg timestamp="20201029 09:34:14.373" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.349" endtime="20201029 09:34:14.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.375" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.374" endtime="20201029 09:34:14.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.376" endtime="20201029 09:34:14.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.342" endtime="20201029 09:34:14.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.340" endtime="20201029 09:34:14.379"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.381" endtime="20201029 09:34:14.383"></status>
</kw>
<msg timestamp="20201029 09:34:14.383" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:14.380" endtime="20201029 09:34:14.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.388" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:14.386" endtime="20201029 09:34:14.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.390" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:14.389" endtime="20201029 09:34:14.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.384" endtime="20201029 09:34:14.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.394" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:14.393" endtime="20201029 09:34:14.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.396" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:14.395" endtime="20201029 09:34:14.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.391" endtime="20201029 09:34:14.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.403" endtime="20201029 09:34:14.690"></status>
</kw>
<msg timestamp="20201029 09:34:14.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0734755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073509236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:14.402" endtime="20201029 09:34:14.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0734755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073509236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:14.694" endtime="20201029 09:34:14.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.702" endtime="20201029 09:34:14.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.399" endtime="20201029 09:34:14.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.398" endtime="20201029 09:34:14.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.709" level="INFO">${RESULT} = [{'diff': 3.373600000000643e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.833400000000098e-05}, {'diff': 3.836099999998677e-05}, {'diff': 3.8333000000001505e-05}, {'diff': 3.8361000000000645e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:14.706" endtime="20201029 09:34:14.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.714" level="INFO">${OVERHEAD} = {'diff': [3.373600000000643e-05, 3.8597000000001325e-05, 3.833400000000098e-05, 3.836099999998677e-05, 3.8333000000001505e-05, 3.8361000000000645e-05, 3.8333000000001505e-05, 3.8375000000007153e-05, 3...</msg>
<status status="PASS" starttime="20201029 09:34:14.710" endtime="20201029 09:34:14.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.719" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:14.718" endtime="20201029 09:34:14.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.721" level="INFO">VALUE: [3.373600000000643e-05, 3.8597000000001325e-05, 3.833400000000098e-05, 3.836099999998677e-05, 3.8333000000001505e-05, 3.8361000000000645e-05, 3.8333000000001505e-05, 3.8375000000007153e-05, 3.8346999999994136e-05, 3.8374999999993276e-05, 3.8347000000008014e-05, 3.8361000000000645e-05, 3.833400000000098e-05, 3.8346999999994136e-05, 3.8346999999994136e-05, 3.8346999999994136e-05, 3.8361000000000645e-05, 3.8347000000008014e-05, 3.8346999999994136e-05, 3.8347000000008014e-05, 3.8346999999994136e-05, 3.8333000000001505e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8347000000008014e-05, 3.8375000000007153e-05, 3.836200000000012e-05, 3.8333000000001505e-05, 3.8346999999994136e-05, 3.8402999999992415e-05, 3.8333000000001505e-05, 3.834800000000749e-05, 3.8346999999994136e-05, 3.8375000000007153e-05, 3.8346999999994136e-05, 3.833299999998763e-05, 3.8333000000001505e-05, 3.843100000000543e-05, 3.8361000000000645e-05, 3.8374999999993276e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.836200000000012e-05, 3.8333000000001505e-05, 3.833299999998763e-05, 3.8346999999994136e-05, 3.8346999999994136e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8374999999993276e-05]</msg>
<status status="PASS" starttime="20201029 09:34:14.720" endtime="20201029 09:34:14.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.715" endtime="20201029 09:34:14.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.338" endtime="20201029 09:34:14.722"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:14.266" endtime="20201029 09:34:14.723" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:14.730" endtime="20201029 09:34:14.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.728" endtime="20201029 09:34:14.750"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.763" endtime="20201029 09:34:14.775"></status>
</kw>
<msg timestamp="20201029 09:34:14.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.761" endtime="20201029 09:34:14.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.777" endtime="20201029 09:34:14.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.783" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:14.780" endtime="20201029 09:34:14.783"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.759" endtime="20201029 09:34:14.783"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.756" endtime="20201029 09:34:14.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.755" endtime="20201029 09:34:14.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:14.789" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:14.788" endtime="20201029 09:34:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.785" endtime="20201029 09:34:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.754" endtime="20201029 09:34:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.754" endtime="20201029 09:34:14.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.791" endtime="20201029 09:34:14.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.752" endtime="20201029 09:34:14.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.751" endtime="20201029 09:34:14.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.727" endtime="20201029 09:34:14.794"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.803" endtime="20201029 09:34:14.945"></status>
</kw>
<msg timestamp="20201029 09:34:14.946" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.801" endtime="20201029 09:34:14.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.949" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.947" endtime="20201029 09:34:14.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.951" endtime="20201029 09:34:14.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.798" endtime="20201029 09:34:14.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.796" endtime="20201029 09:34:14.954"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.957" endtime="20201029 09:34:14.959"></status>
</kw>
<msg timestamp="20201029 09:34:14.959" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:14.955" endtime="20201029 09:34:14.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.967" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:14.964" endtime="20201029 09:34:14.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.970" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:14.968" endtime="20201029 09:34:14.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.961" endtime="20201029 09:34:14.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.977" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:14.976" endtime="20201029 09:34:14.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.979" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:14.978" endtime="20201029 09:34:14.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.972" endtime="20201029 09:34:14.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.986" endtime="20201029 09:34:15.280"></status>
</kw>
<msg timestamp="20201029 09:34:15.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066706083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066759361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.984" endtime="20201029 09:34:15.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066706083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066759361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.284" endtime="20201029 09:34:15.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.292" endtime="20201029 09:34:15.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.982" endtime="20201029 09:34:15.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.980" endtime="20201029 09:34:15.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.299" level="INFO">${RESULT} = [{'diff': 5.327800000000382e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.67360000000078e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.673599999999392e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:15.295" endtime="20201029 09:34:15.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.304" level="INFO">${OVERHEAD} = {'diff': [5.327800000000382e-05, 7.677799999999957e-05, 7.675000000000043e-05, 7.67360000000078e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.67360...</msg>
<status status="PASS" starttime="20201029 09:34:15.300" endtime="20201029 09:34:15.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.308" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:15.307" endtime="20201029 09:34:15.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.311" level="INFO">VALUE: [5.327800000000382e-05, 7.677799999999957e-05, 7.675000000000043e-05, 7.67360000000078e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.67360000000078e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.681900000000574e-05, 7.677799999999957e-05, 7.669500000000162e-05, 7.672200000000129e-05, 7.675000000000043e-05, 7.673599999999392e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.676400000000694e-05, 7.673599999999392e-05, 7.669399999998827e-05, 7.676299999999359e-05, 7.673700000000727e-05, 7.677799999999957e-05, 7.676400000000694e-05, 7.675000000001431e-05, 7.680500000001311e-05, 7.676399999997918e-05, 7.676399999997918e-05, 7.675000000001431e-05, 7.674999999998655e-05, 7.673600000002168e-05, 7.674999999998655e-05, 7.675000000001431e-05, 7.676400000000694e-05, 7.672200000000129e-05, 7.674999999998655e-05, 7.669399999998827e-05, 7.669399999998827e-05, 7.674999999998655e-05, 7.676299999997971e-05, 7.675000000001431e-05, 7.674999999998655e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.673599999999392e-05, 7.676400000000694e-05, 7.673599999999392e-05, 7.672200000000129e-05]</msg>
<status status="PASS" starttime="20201029 09:34:15.309" endtime="20201029 09:34:15.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.304" endtime="20201029 09:34:15.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.794" endtime="20201029 09:34:15.312"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:14.724" endtime="20201029 09:34:15.313" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:15.319" endtime="20201029 09:34:15.339"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.318" endtime="20201029 09:34:15.339"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.354" endtime="20201029 09:34:15.366"></status>
</kw>
<msg timestamp="20201029 09:34:15.366" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.352" endtime="20201029 09:34:15.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.367" endtime="20201029 09:34:15.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.372" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:15.370" endtime="20201029 09:34:15.372"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.349" endtime="20201029 09:34:15.373"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:15.346" endtime="20201029 09:34:15.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.345" endtime="20201029 09:34:15.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:15.377" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:15.377" endtime="20201029 09:34:15.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.374" endtime="20201029 09:34:15.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.344" endtime="20201029 09:34:15.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.344" endtime="20201029 09:34:15.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.379" endtime="20201029 09:34:15.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.342" endtime="20201029 09:34:15.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.341" endtime="20201029 09:34:15.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.317" endtime="20201029 09:34:15.382"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.390" endtime="20201029 09:34:15.813"></status>
</kw>
<msg timestamp="20201029 09:34:15.814" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.388" endtime="20201029 09:34:15.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.819" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.816" endtime="20201029 09:34:15.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.821" endtime="20201029 09:34:15.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.386" endtime="20201029 09:34:15.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.384" endtime="20201029 09:34:15.827"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.831" endtime="20201029 09:34:15.834"></status>
</kw>
<msg timestamp="20201029 09:34:15.835" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:15.829" endtime="20201029 09:34:15.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.844" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:15.842" endtime="20201029 09:34:15.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.853" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:15.851" endtime="20201029 09:34:15.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.837" endtime="20201029 09:34:15.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.867" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:15.864" endtime="20201029 09:34:15.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.873" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:15.871" endtime="20201029 09:34:15.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.858" endtime="20201029 09:34:15.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.884" endtime="20201029 09:34:16.177"></status>
</kw>
<msg timestamp="20201029 09:34:16.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068079611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068170222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.883" endtime="20201029 09:34:16.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068079611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068170222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.181" endtime="20201029 09:34:16.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.189" endtime="20201029 09:34:16.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.877" endtime="20201029 09:34:16.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.875" endtime="20201029 09:34:16.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.195" level="INFO">${RESULT} = [{'diff': 9.061100000000433e-05}, {'diff': 0.00013372300000000226}, {'diff': 0.00013370900000000963}, {'diff': 0.00013369400000000364}, {'diff': 0.0001337360000000093}, {'diff': 0.00013370799999999627...</msg>
<status status="PASS" starttime="20201029 09:34:16.192" endtime="20201029 09:34:16.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.200" level="INFO">${OVERHEAD} = {'diff': [9.061100000000433e-05, 0.00013372300000000226, 0.00013370900000000963, 0.00013369400000000364, 0.0001337360000000093, 0.00013370799999999627, 0.00013373599999999541, 0.00013372200000000278, ...</msg>
<status status="PASS" starttime="20201029 09:34:16.196" endtime="20201029 09:34:16.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.204" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:16.203" endtime="20201029 09:34:16.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.206" level="INFO">VALUE: [9.061100000000433e-05, 0.00013372300000000226, 0.00013370900000000963, 0.00013369400000000364, 0.0001337360000000093, 0.00013370799999999627, 0.00013373599999999541, 0.00013372200000000278, 0.00013373599999999541, 0.00013370800000001015, 0.00013369399999998977, 0.0001336809999999966, 0.00013372199999997503, 0.00013366700000000398, 0.0001336660000000045, 0.00013372200000000278, 0.00013374999999998805, 0.0001337079999999824, 0.00013369399999998977, 0.00013372200000000278, 0.00013372200000000278, 0.00013369399999998977, 0.00013370900000000963, 0.00013374999999998805, 0.000133693999999962, 0.00013370800000001015, 0.00013370800000001015, 0.00013365300000001135, 0.00013370800000001015, 0.00013369499999998924, 0.00013369499999998924, 0.00013373599999999541, 0.00013370800000001015, 0.00013369400000001752, 0.00013370899999998187, 0.00013370900000003738, 0.00013369500000004475, 0.00013369400000001752, 0.000133693999999962, 0.00013372200000000278, 0.00013370800000001015, 0.00013369499999998924, 0.000133693999999962, 0.00013370800000001015, 0.0001336800000000249, 0.00013370899999998187, 0.00013369499999998924, 0.00013370800000001015, 0.00013370800000001015, 0.00013369499999998924]</msg>
<status status="PASS" starttime="20201029 09:34:16.205" endtime="20201029 09:34:16.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.200" endtime="20201029 09:34:16.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.382" endtime="20201029 09:34:16.208"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:15.314" endtime="20201029 09:34:16.208" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:16.216" endtime="20201029 09:34:16.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.214" endtime="20201029 09:34:16.238"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.254" endtime="20201029 09:34:16.266"></status>
</kw>
<msg timestamp="20201029 09:34:16.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.253" endtime="20201029 09:34:16.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.268" endtime="20201029 09:34:16.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.272" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:16.271" endtime="20201029 09:34:16.273"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.250" endtime="20201029 09:34:16.273"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.248" endtime="20201029 09:34:16.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.246" endtime="20201029 09:34:16.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:16.278" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:16.277" endtime="20201029 09:34:16.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.275" endtime="20201029 09:34:16.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.246" endtime="20201029 09:34:16.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.245" endtime="20201029 09:34:16.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.280" endtime="20201029 09:34:16.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.243" endtime="20201029 09:34:16.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.239" endtime="20201029 09:34:16.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.212" endtime="20201029 09:34:16.282"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.291" endtime="20201029 09:34:16.312"></status>
</kw>
<msg timestamp="20201029 09:34:16.313" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.289" endtime="20201029 09:34:16.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.315" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.314" endtime="20201029 09:34:16.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.316" endtime="20201029 09:34:16.318"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.287" endtime="20201029 09:34:16.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.285" endtime="20201029 09:34:16.319"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.321" endtime="20201029 09:34:16.324"></status>
</kw>
<msg timestamp="20201029 09:34:16.324" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:16.320" endtime="20201029 09:34:16.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.328" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:16.327" endtime="20201029 09:34:16.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.331" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:16.329" endtime="20201029 09:34:16.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.325" endtime="20201029 09:34:16.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.335" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:16.335" endtime="20201029 09:34:16.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.338" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:16.337" endtime="20201029 09:34:16.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.332" endtime="20201029 09:34:16.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.345" endtime="20201029 09:34:16.633"></status>
</kw>
<msg timestamp="20201029 09:34:16.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066919208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066942431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.343" endtime="20201029 09:34:16.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066919208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066942431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.637" endtime="20201029 09:34:16.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.645" endtime="20201029 09:34:16.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.341" endtime="20201029 09:34:16.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.339" endtime="20201029 09:34:16.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.656" level="INFO">${RESULT} = [{'diff': 2.322300000000277e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.2943999999996967e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.2915999999997827e-05}, {'diff': 2.295900000000295e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:16.648" endtime="20201029 09:34:16.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.666" level="INFO">${OVERHEAD} = {'diff': [2.322300000000277e-05, 2.288899999999816e-05, 2.2943999999996967e-05, 2.288899999999816e-05, 2.2915999999997827e-05, 2.295900000000295e-05, 2.2943999999996967e-05, 2.291700000001118e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 09:34:16.658" endtime="20201029 09:34:16.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.676" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:16.674" endtime="20201029 09:34:16.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.682" level="INFO">VALUE: [2.322300000000277e-05, 2.288899999999816e-05, 2.2943999999996967e-05, 2.288899999999816e-05, 2.2915999999997827e-05, 2.295900000000295e-05, 2.2943999999996967e-05, 2.291700000001118e-05, 2.290300000000467e-05, 2.2929999999990458e-05, 2.2902999999990792e-05, 2.290300000000467e-05, 2.293099999998993e-05, 2.290300000000467e-05, 2.2902999999990792e-05, 2.2902999999990792e-05, 2.29169999999973e-05, 2.2902000000005196e-05, 2.2943999999996967e-05, 2.2874999999991652e-05, 2.2902999999990792e-05, 2.2901999999991318e-05, 2.29169999999973e-05, 2.2972000000009984e-05, 2.2902000000005196e-05, 2.290300000000467e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.290300000000467e-05, 2.290300000000467e-05, 2.2971999999996107e-05, 2.288899999999816e-05, 2.286099999999902e-05, 2.2902000000005196e-05, 2.29169999999973e-05, 2.2930000000004336e-05, 2.2986000000002615e-05, 2.290300000000467e-05, 2.29169999999973e-05, 2.287500000000553e-05, 2.290300000000467e-05, 2.2902999999990792e-05, 2.290300000000467e-05, 2.290300000000467e-05, 2.288899999999816e-05, 2.2957999999989598e-05, 2.290300000000467e-05, 2.2915999999997827e-05, 2.2930000000004336e-05, 2.2915999999997827e-05]</msg>
<status status="PASS" starttime="20201029 09:34:16.679" endtime="20201029 09:34:16.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.668" endtime="20201029 09:34:16.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.283" endtime="20201029 09:34:16.686"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:16.210" endtime="20201029 09:34:16.687" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:16.701" endtime="20201029 09:34:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.698" endtime="20201029 09:34:16.723"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.749" endtime="20201029 09:34:16.762"></status>
</kw>
<msg timestamp="20201029 09:34:16.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.748" endtime="20201029 09:34:16.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.763" endtime="20201029 09:34:16.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:16.766" endtime="20201029 09:34:16.769"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.743" endtime="20201029 09:34:16.769"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:16.738" endtime="20201029 09:34:16.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.735" endtime="20201029 09:34:16.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:16.774" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:16.773" endtime="20201029 09:34:16.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.771" endtime="20201029 09:34:16.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.734" endtime="20201029 09:34:16.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.732" endtime="20201029 09:34:16.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.776" endtime="20201029 09:34:16.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.729" endtime="20201029 09:34:16.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.725" endtime="20201029 09:34:16.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.695" endtime="20201029 09:34:16.779"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.789" endtime="20201029 09:34:16.934"></status>
</kw>
<msg timestamp="20201029 09:34:16.935" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.787" endtime="20201029 09:34:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.938" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.936" endtime="20201029 09:34:16.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.939" endtime="20201029 09:34:16.940"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.784" endtime="20201029 09:34:16.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.781" endtime="20201029 09:34:16.941"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.943" endtime="20201029 09:34:16.945"></status>
</kw>
<msg timestamp="20201029 09:34:16.945" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:16.942" endtime="20201029 09:34:16.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.949" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:16.948" endtime="20201029 09:34:16.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.951" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:16.950" endtime="20201029 09:34:16.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.946" endtime="20201029 09:34:16.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.956" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:16.955" endtime="20201029 09:34:16.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.959" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:16.958" endtime="20201029 09:34:16.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.953" endtime="20201029 09:34:16.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.966" endtime="20201029 09:34:17.259"></status>
</kw>
<msg timestamp="20201029 09:34:17.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081285681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.08134175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:16.964" endtime="20201029 09:34:17.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081285681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.08134175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:17.263" endtime="20201029 09:34:17.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.271" endtime="20201029 09:34:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.962" endtime="20201029 09:34:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.960" endtime="20201029 09:34:17.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.278" level="INFO">${RESULT} = [{'diff': 5.606900000000581e-05}, {'diff': 5.595899999999432e-05}, {'diff': 5.5805999999991585e-05}, {'diff': 5.590300000000992e-05}, {'diff': 5.586100000000427e-05}, {'diff': 5.590300000000992e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:17.274" endtime="20201029 09:34:17.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.283" level="INFO">${OVERHEAD} = {'diff': [5.606900000000581e-05, 5.595899999999432e-05, 5.5805999999991585e-05, 5.590300000000992e-05, 5.586100000000427e-05, 5.590300000000992e-05, 5.586100000000427e-05, 5.588900000000341e-05, 5.588...</msg>
<status status="PASS" starttime="20201029 09:34:17.279" endtime="20201029 09:34:17.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.287" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:17.286" endtime="20201029 09:34:17.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.290" level="INFO">VALUE: [5.606900000000581e-05, 5.595899999999432e-05, 5.5805999999991585e-05, 5.590300000000992e-05, 5.586100000000427e-05, 5.590300000000992e-05, 5.586100000000427e-05, 5.588900000000341e-05, 5.588900000000341e-05, 5.590299999999604e-05, 5.590299999999604e-05, 5.591699999998867e-05, 5.590299999999604e-05, 5.58749999999969e-05, 5.590300000000992e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.591700000000255e-05, 5.588900000000341e-05, 5.590299999999604e-05, 5.5917000000016426e-05, 5.5901999999996566e-05, 5.588900000000341e-05, 5.588900000000341e-05, 5.59309999999813e-05, 5.588900000000341e-05, 5.588900000000341e-05, 5.588899999997565e-05, 5.586099999999039e-05, 5.5944000000002214e-05, 5.593100000000906e-05, 5.590299999999604e-05, 5.5917000000016426e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.590200000002432e-05, 5.588899999997565e-05, 5.593100000000906e-05, 5.59309999999813e-05, 5.5971999999987476e-05, 5.590200000002432e-05, 5.590299999999604e-05, 5.588900000000341e-05, 5.593000000000958e-05, 5.590299999999604e-05, 5.5917000000016426e-05, 5.590299999999604e-05, 5.5917000000016426e-05, 5.5915999999989197e-05, 5.598600000000786e-05]</msg>
<status status="PASS" starttime="20201029 09:34:17.288" endtime="20201029 09:34:17.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.283" endtime="20201029 09:34:17.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.779" endtime="20201029 09:34:17.291"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:16.690" endtime="20201029 09:34:17.291" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:17.298" endtime="20201029 09:34:17.318"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.297" endtime="20201029 09:34:17.318"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.332" endtime="20201029 09:34:17.344"></status>
</kw>
<msg timestamp="20201029 09:34:17.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.330" endtime="20201029 09:34:17.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.345" endtime="20201029 09:34:17.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.353" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:17.348" endtime="20201029 09:34:17.353"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.328" endtime="20201029 09:34:17.354"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.325" endtime="20201029 09:34:17.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.323" endtime="20201029 09:34:17.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:17.358" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:17.358" endtime="20201029 09:34:17.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.356" endtime="20201029 09:34:17.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.323" endtime="20201029 09:34:17.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.322" endtime="20201029 09:34:17.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.360" endtime="20201029 09:34:17.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.321" endtime="20201029 09:34:17.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.319" endtime="20201029 09:34:17.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.295" endtime="20201029 09:34:17.363"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.371" endtime="20201029 09:34:17.795"></status>
</kw>
<msg timestamp="20201029 09:34:17.796" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.369" endtime="20201029 09:34:17.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.798" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.797" endtime="20201029 09:34:17.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.799" endtime="20201029 09:34:17.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.367" endtime="20201029 09:34:17.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.365" endtime="20201029 09:34:17.802"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.804" endtime="20201029 09:34:17.806"></status>
</kw>
<msg timestamp="20201029 09:34:17.806" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:17.803" endtime="20201029 09:34:17.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.810" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:17.809" endtime="20201029 09:34:17.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.812" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:17.811" endtime="20201029 09:34:17.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.807" endtime="20201029 09:34:17.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.817" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:17.816" endtime="20201029 09:34:17.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.819" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:17.818" endtime="20201029 09:34:17.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.813" endtime="20201029 09:34:17.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.827" endtime="20201029 09:34:18.139"></status>
</kw>
<msg timestamp="20201029 09:34:18.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070725653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070803556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.825" endtime="20201029 09:34:18.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070725653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070803556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.143" endtime="20201029 09:34:18.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.151" endtime="20201029 09:34:18.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.822" endtime="20201029 09:34:18.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.821" endtime="20201029 09:34:18.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.158" level="INFO">${RESULT} = [{'diff': 7.790300000000416e-05}, {'diff': 7.769500000000262e-05}, {'diff': 7.766700000000348e-05}, {'diff': 7.769500000000262e-05}, {'diff': 7.769499999998875e-05}, {'diff': 7.769399999998927e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:18.155" endtime="20201029 09:34:18.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:18.163" level="INFO">${OVERHEAD} = {'diff': [7.790300000000416e-05, 7.769500000000262e-05, 7.766700000000348e-05, 7.769500000000262e-05, 7.769499999998875e-05, 7.769399999998927e-05, 7.775000000000143e-05, 7.772200000000229e-05, 7.7694...</msg>
<status status="PASS" starttime="20201029 09:34:18.159" endtime="20201029 09:34:18.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.167" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:18.166" endtime="20201029 09:34:18.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.170" level="INFO">VALUE: [7.790300000000416e-05, 7.769500000000262e-05, 7.766700000000348e-05, 7.769500000000262e-05, 7.769499999998875e-05, 7.769399999998927e-05, 7.775000000000143e-05, 7.772200000000229e-05, 7.769499999998875e-05, 7.76950000000165e-05, 7.77079999999819e-05, 7.77079999999819e-05, 7.769499999998875e-05, 7.765300000001085e-05, 7.769499999998875e-05, 7.770800000000966e-05, 7.76110000000052e-05, 7.768099999999611e-05, 7.769400000001703e-05, 7.769499999998875e-05, 7.766700000000348e-05, 7.766600000000401e-05, 7.768100000002387e-05, 7.769499999998875e-05, 7.766700000000348e-05, 7.76800000000244e-05, 7.769499999998875e-05, 7.768099999999611e-05, 7.763900000001822e-05, 7.772200000000229e-05, 7.770800000000966e-05, 7.770899999998138e-05, 7.770899999998138e-05, 7.769499999998875e-05, 7.765299999995534e-05, 7.772200000000229e-05, 7.761099999997745e-05, 7.769399999996152e-05, 7.769499999998875e-05, 7.76800000000244e-05, 7.766599999997625e-05, 7.769499999998875e-05, 7.769500000004426e-05, 7.769400000001703e-05, 7.765300000001085e-05, 7.766600000003177e-05, 7.76800000000244e-05, 7.769499999998875e-05, 7.768099999999611e-05, 7.769499999998875e-05]</msg>
<status status="PASS" starttime="20201029 09:34:18.168" endtime="20201029 09:34:18.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.163" endtime="20201029 09:34:18.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.363" endtime="20201029 09:34:18.171"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:17.293" endtime="20201029 09:34:18.171" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:18.178" endtime="20201029 09:34:18.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.176" endtime="20201029 09:34:18.198"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.212" endtime="20201029 09:34:18.224"></status>
</kw>
<msg timestamp="20201029 09:34:18.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.210" endtime="20201029 09:34:18.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.226" endtime="20201029 09:34:18.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.230" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:18.228" endtime="20201029 09:34:18.230"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.208" endtime="20201029 09:34:18.231"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:18.204" endtime="20201029 09:34:18.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.203" endtime="20201029 09:34:18.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:18.236" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:18.235" endtime="20201029 09:34:18.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.233" endtime="20201029 09:34:18.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.202" endtime="20201029 09:34:18.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.202" endtime="20201029 09:34:18.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.237" endtime="20201029 09:34:18.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.200" endtime="20201029 09:34:18.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.199" endtime="20201029 09:34:18.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.175" endtime="20201029 09:34:18.240"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.243" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:18.252" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:19.456" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:18.242" endtime="20201029 09:34:19.456"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.459" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:19.458" endtime="20201029 09:34:19.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.241" endtime="20201029 09:34:19.460"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.463" endtime="20201029 09:34:19.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.462" endtime="20201029 09:34:19.483"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.492" endtime="20201029 09:34:19.500"></status>
</kw>
<msg timestamp="20201029 09:34:19.501" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.490" endtime="20201029 09:34:19.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.503" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.502" endtime="20201029 09:34:19.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.504" endtime="20201029 09:34:19.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.487" endtime="20201029 09:34:19.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.485" endtime="20201029 09:34:19.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.515" endtime="20201029 09:34:19.813"></status>
</kw>
<msg timestamp="20201029 09:34:19.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017937083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.513" endtime="20201029 09:34:19.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017937083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.817" endtime="20201029 09:34:19.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.825" endtime="20201029 09:34:19.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.509" endtime="20201029 09:34:19.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.508" endtime="20201029 09:34:19.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:19.832" level="INFO">${PHILIP_RES} = [{'diff': 3.523600000000099e-05}, {'diff': 3.365299999999807e-05}, {'diff': 3.366699999999764e-05}, {'diff': 3.367999999999774e-05}, {'diff': 3.368100000000068e-05}, {'diff': 3.368000000000121e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:19.829" endtime="20201029 09:34:19.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.836" level="INFO">${RESULT} = {'diff': [3.523600000000099e-05, 3.365299999999807e-05, 3.366699999999764e-05, 3.367999999999774e-05, 3.368100000000068e-05, 3.368000000000121e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.3666...</msg>
<status status="PASS" starttime="20201029 09:34:19.833" endtime="20201029 09:34:19.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.840" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:19.839" endtime="20201029 09:34:19.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.843" level="INFO">VALUE: [3.523600000000099e-05, 3.365299999999807e-05, 3.366699999999764e-05, 3.367999999999774e-05, 3.368100000000068e-05, 3.368000000000121e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.366600000000164e-05, 3.366699999999764e-05, 3.369500000000025e-05, 3.366700000000111e-05, 3.369400000000078e-05, 3.368100000000068e-05, 3.368000000000121e-05, 3.366599999999817e-05, 3.368099999999721e-05, 3.368100000000068e-05, 3.363900000000197e-05, 3.373599999999949e-05, 3.370899999999982e-05, 3.37640000000021e-05, 3.368099999999721e-05, 3.366700000000111e-05, 3.369400000000078e-05, 3.368000000000121e-05, 3.369500000000025e-05, 3.369500000000025e-05, 3.3638999999998503e-05, 3.361100000000283e-05, 3.3624999999998934e-05, 3.366600000000164e-05, 3.368100000000068e-05, 3.368100000000068e-05, 3.366599999999817e-05, 3.369399999999731e-05, 3.368100000000068e-05, 3.363900000000197e-05, 3.368000000000121e-05, 3.369500000000025e-05, 3.368099999999721e-05, 3.367999999999774e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.369400000000078e-05, 3.373600000000296e-05, 3.368099999999721e-05, 3.369400000000078e-05, 3.369400000000078e-05, 3.368100000000068e-05]</msg>
<status status="PASS" starttime="20201029 09:34:19.841" endtime="20201029 09:34:19.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.837" endtime="20201029 09:34:19.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.484" endtime="20201029 09:34:19.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.461" endtime="20201029 09:34:19.844"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.847" endtime="20201029 09:34:19.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.845" endtime="20201029 09:34:19.867"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.875" endtime="20201029 09:34:19.886"></status>
</kw>
<msg timestamp="20201029 09:34:19.887" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.874" endtime="20201029 09:34:19.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.889" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.888" endtime="20201029 09:34:19.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.890" endtime="20201029 09:34:19.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.871" endtime="20201029 09:34:19.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.869" endtime="20201029 09:34:19.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.900" endtime="20201029 09:34:20.186"></status>
</kw>
<msg timestamp="20201029 09:34:20.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018173778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01822675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:19.898" endtime="20201029 09:34:20.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018173778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01822675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:20.190" endtime="20201029 09:34:20.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.199" endtime="20201029 09:34:20.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.895" endtime="20201029 09:34:20.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.893" endtime="20201029 09:34:20.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:20.205" level="INFO">${PHILIP_RES} = [{'diff': 5.2971999999998354e-05}, {'diff': 5.1415999999998574e-05}, {'diff': 5.144400000000118e-05}, {'diff': 5.1415999999998574e-05}, {'diff': 5.1415999999998574e-05}, {'diff': 5.1429999999998144e-0...</msg>
<status status="PASS" starttime="20201029 09:34:20.202" endtime="20201029 09:34:20.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.210" level="INFO">${RESULT} = {'diff': [5.2971999999998354e-05, 5.1415999999998574e-05, 5.144400000000118e-05, 5.1415999999998574e-05, 5.1415999999998574e-05, 5.1429999999998144e-05, 5.1443999999997714e-05, 5.1429999999998144e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:20.206" endtime="20201029 09:34:20.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.214" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:20.213" endtime="20201029 09:34:20.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.217" level="INFO">VALUE: [5.2971999999998354e-05, 5.1415999999998574e-05, 5.144400000000118e-05, 5.1415999999998574e-05, 5.1415999999998574e-05, 5.1429999999998144e-05, 5.1443999999997714e-05, 5.1429999999998144e-05, 5.140299999999848e-05, 5.138899999999891e-05, 5.143099999999762e-05, 5.141700000000152e-05, 5.144500000000066e-05, 5.140300000000195e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.143100000000109e-05, 5.141699999999805e-05, 5.143099999999762e-05, 5.140299999999848e-05, 5.141700000000152e-05, 5.140299999999848e-05, 5.143100000000109e-05, 5.14729999999998e-05, 5.143000000000161e-05, 5.140299999999848e-05, 5.1415999999998574e-05, 5.140299999999848e-05, 5.1416000000002043e-05, 5.1416000000002043e-05, 5.149999999999946e-05, 5.149999999999946e-05, 5.13470000000002e-05, 5.1415999999998574e-05, 5.1415999999998574e-05, 5.1415999999998574e-05, 5.1415999999998574e-05, 5.140299999999848e-05, 5.144500000000066e-05, 5.1415999999998574e-05, 5.143000000000161e-05, 5.144500000000066e-05, 5.14729999999998e-05, 5.144500000000066e-05, 5.141700000000152e-05, 5.140300000000195e-05, 5.143100000000109e-05, 5.144500000000066e-05, 5.143099999999762e-05, 5.140299999999848e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.215" endtime="20201029 09:34:20.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.211" endtime="20201029 09:34:20.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.867" endtime="20201029 09:34:20.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.845" endtime="20201029 09:34:20.218"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.220" endtime="20201029 09:34:20.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.219" endtime="20201029 09:34:20.240"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.248" endtime="20201029 09:34:20.262"></status>
</kw>
<msg timestamp="20201029 09:34:20.262" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.247" endtime="20201029 09:34:20.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.265" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.263" endtime="20201029 09:34:20.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.266" endtime="20201029 09:34:20.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.244" endtime="20201029 09:34:20.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.242" endtime="20201029 09:34:20.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.275" endtime="20201029 09:34:20.578"></status>
</kw>
<msg timestamp="20201029 09:34:20.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017307056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017377764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.273" endtime="20201029 09:34:20.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017307056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017377764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.585" endtime="20201029 09:34:20.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.595" endtime="20201029 09:34:20.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.271" endtime="20201029 09:34:20.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.269" endtime="20201029 09:34:20.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:20.605" level="INFO">${PHILIP_RES} = [{'diff': 7.070799999999919e-05}, {'diff': 6.913899999999931e-05}, {'diff': 6.916599999999898e-05}, {'diff': 6.916599999999898e-05}, {'diff': 6.918100000000149e-05}, {'diff': 6.919500000000106e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:20.601" endtime="20201029 09:34:20.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.612" level="INFO">${RESULT} = {'diff': [7.070799999999919e-05, 6.913899999999931e-05, 6.916599999999898e-05, 6.916599999999898e-05, 6.918100000000149e-05, 6.919500000000106e-05, 6.916699999999845e-05, 6.918100000000149e-05, 6.9166...</msg>
<status status="PASS" starttime="20201029 09:34:20.607" endtime="20201029 09:34:20.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.617" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:20.616" endtime="20201029 09:34:20.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.619" level="INFO">VALUE: [7.070799999999919e-05, 6.913899999999931e-05, 6.916599999999898e-05, 6.916599999999898e-05, 6.918100000000149e-05, 6.919500000000106e-05, 6.916699999999845e-05, 6.918100000000149e-05, 6.916699999999845e-05, 6.918100000000149e-05, 6.916699999999845e-05, 6.916700000000192e-05, 6.918099999999802e-05, 6.918100000000149e-05, 6.915299999999888e-05, 6.918100000000149e-05, 6.913899999999931e-05, 6.919399999999812e-05, 6.916699999999845e-05, 6.913899999999931e-05, 6.916699999999845e-05, 6.911100000000017e-05, 6.916700000000192e-05, 6.915299999999888e-05, 6.91109999999967e-05, 6.90970000000006e-05, 6.918100000000149e-05, 6.916699999999845e-05, 6.916700000000192e-05, 6.916699999999845e-05, 6.917999999999855e-05, 6.918000000000202e-05, 6.916599999999898e-05, 6.918000000000202e-05, 6.917999999999855e-05, 6.915200000000288e-05, 6.919399999999812e-05, 6.916599999999898e-05, 6.916599999999898e-05, 6.916600000000245e-05, 6.915199999999941e-05, 6.916700000000192e-05, 6.916599999999898e-05, 6.920799999999769e-05, 6.916599999999898e-05, 6.915199999999941e-05, 6.916599999999898e-05, 6.915199999999941e-05, 6.915199999999941e-05, 6.915299999999888e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.618" endtime="20201029 09:34:20.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.613" endtime="20201029 09:34:20.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.241" endtime="20201029 09:34:20.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.218" endtime="20201029 09:34:20.621"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.623" endtime="20201029 09:34:20.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.622" endtime="20201029 09:34:20.643"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.651" endtime="20201029 09:34:20.667"></status>
</kw>
<msg timestamp="20201029 09:34:20.667" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.650" endtime="20201029 09:34:20.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.670" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.669" endtime="20201029 09:34:20.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.671" endtime="20201029 09:34:20.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.647" endtime="20201029 09:34:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.645" endtime="20201029 09:34:20.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.680" endtime="20201029 09:34:20.967"></status>
</kw>
<msg timestamp="20201029 09:34:20.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017456208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.679" endtime="20201029 09:34:20.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017456208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.971" endtime="20201029 09:34:20.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.979" endtime="20201029 09:34:20.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.676" endtime="20201029 09:34:20.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.674" endtime="20201029 09:34:20.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:20.986" level="INFO">${PHILIP_RES} = [{'diff': 8.918100000000068e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.758299999999872e-05}, {'diff': 8.763900000000047e-05}, {'diff': 8.763900000000047e-05}, {'diff': 8.76669999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:20.983" endtime="20201029 09:34:20.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.990" level="INFO">${RESULT} = {'diff': [8.918100000000068e-05, 8.76250000000009e-05, 8.758299999999872e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.766600...</msg>
<status status="PASS" starttime="20201029 09:34:20.987" endtime="20201029 09:34:20.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.994" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:20.993" endtime="20201029 09:34:20.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.996" level="INFO">VALUE: [8.918100000000068e-05, 8.76250000000009e-05, 8.758299999999872e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.766600000000013e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.766600000000013e-05, 8.766600000000013e-05, 8.76669999999996e-05, 8.765300000000004e-05, 8.7638999999997e-05, 8.765300000000004e-05, 8.759699999999829e-05, 8.763800000000099e-05, 8.765200000000056e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.759699999999829e-05, 8.763900000000047e-05, 8.76519999999971e-05, 8.763900000000047e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.7638999999997e-05, 8.76250000000009e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.765300000000004e-05, 8.766600000000013e-05, 8.765200000000056e-05, 8.765300000000004e-05, 8.7638999999997e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.761100000000133e-05, 8.769499999999875e-05, 8.765300000000004e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.7638999999997e-05, 8.766600000000013e-05, 8.766600000000013e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.995" endtime="20201029 09:34:20.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.991" endtime="20201029 09:34:20.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.644" endtime="20201029 09:34:20.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.621" endtime="20201029 09:34:20.998"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.000" endtime="20201029 09:34:21.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.999" endtime="20201029 09:34:21.020"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.028" endtime="20201029 09:34:21.048"></status>
</kw>
<msg timestamp="20201029 09:34:21.048" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.027" endtime="20201029 09:34:21.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.051" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.049" endtime="20201029 09:34:21.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.052" endtime="20201029 09:34:21.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.024" endtime="20201029 09:34:21.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.022" endtime="20201029 09:34:21.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.061" endtime="20201029 09:34:21.351"></status>
</kw>
<msg timestamp="20201029 09:34:21.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018340625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.060" endtime="20201029 09:34:21.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018340625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.356" endtime="20201029 09:34:21.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.366" endtime="20201029 09:34:21.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.057" endtime="20201029 09:34:21.370"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.055" endtime="20201029 09:34:21.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:21.376" level="INFO">${PHILIP_RES} = [{'diff': 0.00010844399999999921}, {'diff': 0.0001068750000000028}, {'diff': 0.0001068880000000029}, {'diff': 0.00010688900000000237}, {'diff': 0.00010688900000000237}, {'diff': 0.0001068889999999989}...</msg>
<status status="PASS" starttime="20201029 09:34:21.372" endtime="20201029 09:34:21.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.382" level="INFO">${RESULT} = {'diff': [0.00010844399999999921, 0.0001068750000000028, 0.0001068880000000029, 0.00010688900000000237, 0.00010688900000000237, 0.0001068889999999989, 0.00010688799999999943, 0.0001068889999999989, 0....</msg>
<status status="PASS" starttime="20201029 09:34:21.377" endtime="20201029 09:34:21.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.389" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:21.387" endtime="20201029 09:34:21.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.393" level="INFO">VALUE: [0.00010844399999999921, 0.0001068750000000028, 0.0001068880000000029, 0.00010688900000000237, 0.00010688900000000237, 0.0001068889999999989, 0.00010688799999999943, 0.0001068889999999989, 0.0001068889999999989, 0.00010690300000000194, 0.00010690299999999847, 0.00010694499999999718, 0.00010690299999999847, 0.00010687499999999933, 0.00010688900000000237, 0.000106901999999999, 0.00010687499999999933, 0.0001068889999999989, 0.0001068889999999989, 0.00010687499999999933, 0.00010688799999999943, 0.00010687499999999933, 0.0001068889999999989, 0.0001068340000000001, 0.0001068889999999989, 0.00010690299999999847, 0.000106901999999999, 0.00010684799999999967, 0.0001068889999999989, 0.00010690299999999847, 0.00010690299999999847, 0.00010690300000000194, 0.00010691599999999857, 0.00010688900000000237, 0.00010691700000000151, 0.0001068889999999989, 0.0001068889999999989, 0.00010687499999999933, 0.00010693000000000161, 0.00010683300000000062, 0.00010686199999999924, 0.00010688900000000237, 0.00010693100000000108, 0.0001068889999999989, 0.00010690299999999847, 0.0001068889999999989, 0.0001068889999999989, 0.00010688900000000237, 0.00010687499999999933, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201029 09:34:21.391" endtime="20201029 09:34:21.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.383" endtime="20201029 09:34:21.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.021" endtime="20201029 09:34:21.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.998" endtime="20201029 09:34:21.398"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.402" endtime="20201029 09:34:21.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.399" endtime="20201029 09:34:21.423"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.437" endtime="20201029 09:34:21.459"></status>
</kw>
<msg timestamp="20201029 09:34:21.460" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.434" endtime="20201029 09:34:21.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.462" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.461" endtime="20201029 09:34:21.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.464" endtime="20201029 09:34:21.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.430" endtime="20201029 09:34:21.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.427" endtime="20201029 09:34:21.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.473" endtime="20201029 09:34:21.759"></status>
</kw>
<msg timestamp="20201029 09:34:21.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.471" endtime="20201029 09:34:21.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.763" endtime="20201029 09:34:21.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.770" endtime="20201029 09:34:21.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.469" endtime="20201029 09:34:21.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.467" endtime="20201029 09:34:21.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:21.777" level="INFO">${PHILIP_RES} = [{'diff': 0.00012843100000000177}, {'diff': 0.0001269170000000007}, {'diff': 0.0001268889999999981}, {'diff': 0.00012690300000000113}, {'diff': 0.00012687499999999852}, {'diff': 0.00012687499999999852...</msg>
<status status="PASS" starttime="20201029 09:34:21.774" endtime="20201029 09:34:21.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.782" level="INFO">${RESULT} = {'diff': [0.00012843100000000177, 0.0001269170000000007, 0.0001268889999999981, 0.00012690300000000113, 0.00012687499999999852, 0.00012687499999999852, 0.00012688900000000156, 0.00012686100000000242, ...</msg>
<status status="PASS" starttime="20201029 09:34:21.778" endtime="20201029 09:34:21.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.786" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:21.785" endtime="20201029 09:34:21.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.788" level="INFO">VALUE: [0.00012843100000000177, 0.0001269170000000007, 0.0001268889999999981, 0.00012690300000000113, 0.00012687499999999852, 0.00012687499999999852, 0.00012688900000000156, 0.00012686100000000242, 0.00012680500000000067, 0.00012691600000000122, 0.00012686099999999895, 0.00012687499999999852, 0.00012686099999999895, 0.0001268889999999981, 0.00012686099999999895, 0.0001268329999999998, 0.00012687499999999852, 0.0001269309999999968, 0.00012686100000000242, 0.00012690300000000113, 0.00012686099999999895, 0.00012686099999999895, 0.00012688900000000503, 0.00012690199999999818, 0.0001269030000000046, 0.00012686099999999895, 0.00012684799999999885, 0.00012687499999999852, 0.0001268889999999981, 0.00012688900000000503, 0.00012684799999999885, 0.0001268329999999998, 0.00012686199999999842, 0.0001268889999999981, 0.00012688900000000503, 0.00012686099999999895, 0.00012687499999999852, 0.0001268889999999981, 0.00012687499999999852, 0.00012687500000000546, 0.00012691699999999723, 0.00012686099999999895, 0.00012686099999999895, 0.00012686099999999895, 0.00012686099999999895, 0.0001268480000000058, 0.00012686099999999895, 0.0001268889999999981, 0.00012687500000000546, 0.00012679200000000057]</msg>
<status status="PASS" starttime="20201029 09:34:21.787" endtime="20201029 09:34:21.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.783" endtime="20201029 09:34:21.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.424" endtime="20201029 09:34:21.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.398" endtime="20201029 09:34:21.790"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.792" endtime="20201029 09:34:21.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.791" endtime="20201029 09:34:21.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.820" endtime="20201029 09:34:21.844"></status>
</kw>
<msg timestamp="20201029 09:34:21.844" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.818" endtime="20201029 09:34:21.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.847" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.845" endtime="20201029 09:34:21.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.848" endtime="20201029 09:34:21.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.816" endtime="20201029 09:34:21.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.814" endtime="20201029 09:34:21.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.857" endtime="20201029 09:34:22.155"></status>
</kw>
<msg timestamp="20201029 09:34:22.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017245042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017394222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.856" endtime="20201029 09:34:22.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017245042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017394222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.159" endtime="20201029 09:34:22.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.166" endtime="20201029 09:34:22.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.853" endtime="20201029 09:34:22.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.851" endtime="20201029 09:34:22.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.174" level="INFO">${PHILIP_RES} = [{'diff': 0.00014918000000000223}, {'diff': 0.00014761099999999888}, {'diff': 0.00014761199999999836}, {'diff': 0.0001476390000000015}, {'diff': 0.00014759800000000226}, {'diff': 0.0001476249999999984...</msg>
<status status="PASS" starttime="20201029 09:34:22.171" endtime="20201029 09:34:22.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.178" level="INFO">${RESULT} = {'diff': [0.00014918000000000223, 0.00014761099999999888, 0.00014761199999999836, 0.0001476390000000015, 0.00014759800000000226, 0.00014762499999999845, 0.00014762500000000192, 0.00014758399999999922,...</msg>
<status status="PASS" starttime="20201029 09:34:22.175" endtime="20201029 09:34:22.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.182" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.181" endtime="20201029 09:34:22.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.185" level="INFO">VALUE: [0.00014918000000000223, 0.00014761099999999888, 0.00014761199999999836, 0.0001476390000000015, 0.00014759800000000226, 0.00014762499999999845, 0.00014762500000000192, 0.00014758399999999922, 0.00014761099999999888, 0.00014759700000000278, 0.00014761199999999836, 0.00014759700000000278, 0.0001475969999999993, 0.00014761099999999888, 0.0001475550000000006, 0.00014762499999999845, 0.00014761100000000235, 0.00014759799999999879, 0.00014761100000000235, 0.00014762500000000192, 0.00014763899999999802, 0.00014762500000000192, 0.0001475969999999993, 0.00014766700000000063, 0.00014758299999999974, 0.0001475969999999993, 0.00014755600000000008, 0.0001475420000000005, 0.0001475969999999993, 0.00014761099999999888, 0.0001475969999999993, 0.00014758299999999974, 0.00014762499999999845, 0.00014762499999999845, 0.00014761100000000235, 0.00014761099999999888, 0.00014761100000000235, 0.0001475969999999993, 0.00014759700000000278, 0.00014762499999999845, 0.00014762499999999845, 0.00014762499999999845, 0.00014762499999999845, 0.0001475420000000005, 0.00014765300000000453, 0.00014761099999999888, 0.0001476529999999976, 0.00014762499999999845, 0.00014761100000000582, 0.0001475969999999993]</msg>
<status status="PASS" starttime="20201029 09:34:22.183" endtime="20201029 09:34:22.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.179" endtime="20201029 09:34:22.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.813" endtime="20201029 09:34:22.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.790" endtime="20201029 09:34:22.186"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.188" endtime="20201029 09:34:22.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.187" endtime="20201029 09:34:22.208"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.216" endtime="20201029 09:34:22.243"></status>
</kw>
<msg timestamp="20201029 09:34:22.244" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.215" endtime="20201029 09:34:22.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.246" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.245" endtime="20201029 09:34:22.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.247" endtime="20201029 09:34:22.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.212" endtime="20201029 09:34:22.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.210" endtime="20201029 09:34:22.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.260" endtime="20201029 09:34:22.546"></status>
</kw>
<msg timestamp="20201029 09:34:22.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017241222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.259" endtime="20201029 09:34:22.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017241222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.550" endtime="20201029 09:34:22.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.558" endtime="20201029 09:34:22.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.256" endtime="20201029 09:34:22.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.254" endtime="20201029 09:34:22.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.564" level="INFO">${PHILIP_RES} = [{'diff': 0.00017066699999999935}, {'diff': 0.00016908299999999696}, {'diff': 0.00016908300000000043}, {'diff': 0.00016911099999999957}, {'diff': 0.0001690689999999974}, {'diff': 0.0001690699999999968...</msg>
<status status="PASS" starttime="20201029 09:34:22.561" endtime="20201029 09:34:22.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.568" level="INFO">${RESULT} = {'diff': [0.00017066699999999935, 0.00016908299999999696, 0.00016908300000000043, 0.00016911099999999957, 0.0001690689999999974, 0.00016906999999999686, 0.000169097, 0.00016912499999999914, 0.00016908...</msg>
<status status="PASS" starttime="20201029 09:34:22.565" endtime="20201029 09:34:22.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.572" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.571" endtime="20201029 09:34:22.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.574" level="INFO">VALUE: [0.00017066699999999935, 0.00016908299999999696, 0.00016908300000000043, 0.00016911099999999957, 0.0001690689999999974, 0.00016906999999999686, 0.000169097, 0.00016912499999999914, 0.00016908300000000043, 0.00016912499999999914, 0.0001691250000000026, 0.0001690559999999973, 0.00016911100000000304, 0.00016911099999999957, 0.00016911100000000304, 0.000169097, 0.00016908300000000043, 0.00016908300000000043, 0.00016911099999999957, 0.00016906900000000086, 0.000169097, 0.00016905499999999782, 0.00016908299999999696, 0.00016912499999999914, 0.0001691519999999988, 0.00016908300000000043, 0.000169097, 0.00016911099999999957, 0.00016912499999999914, 0.000169097, 0.000169097, 0.00016912499999999914, 0.0001691120000000025, 0.000169097, 0.000169097, 0.00016911099999999957, 0.000169097, 0.00016905499999999435, 0.0001690829999999935, 0.0001691389999999987, 0.00016912499999999914, 0.00016911099999999957, 0.00016911199999999904, 0.00016911099999999957, 0.0001690829999999935, 0.0001690829999999935, 0.00016911200000000598, 0.00016912499999999914, 0.00016912499999999914, 0.00016907000000000033]</msg>
<status status="PASS" starttime="20201029 09:34:22.573" endtime="20201029 09:34:22.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.569" endtime="20201029 09:34:22.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.209" endtime="20201029 09:34:22.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.186" endtime="20201029 09:34:22.577"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.579" endtime="20201029 09:34:22.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.578" endtime="20201029 09:34:22.599"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.607" endtime="20201029 09:34:22.637"></status>
</kw>
<msg timestamp="20201029 09:34:22.637" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.605" endtime="20201029 09:34:22.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.640" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.638" endtime="20201029 09:34:22.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.641" endtime="20201029 09:34:22.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.603" endtime="20201029 09:34:22.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.601" endtime="20201029 09:34:22.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.649" endtime="20201029 09:34:22.946"></status>
</kw>
<msg timestamp="20201029 09:34:22.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017879542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.648" endtime="20201029 09:34:22.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017879542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.950" endtime="20201029 09:34:22.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.958" endtime="20201029 09:34:22.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.645" endtime="20201029 09:34:22.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.644" endtime="20201029 09:34:22.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:22.964" level="INFO">${PHILIP_RES} = [{'diff': 0.0001928749999999986}, {'diff': 0.000191361000000001}, {'diff': 0.00019131899999999882}, {'diff': 0.000191361000000001}, {'diff': 0.00019134700000000143}, {'diff': 0.00019134699999999796}, ...</msg>
<status status="PASS" starttime="20201029 09:34:22.961" endtime="20201029 09:34:22.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.969" level="INFO">${RESULT} = {'diff': [0.0001928749999999986, 0.000191361000000001, 0.00019131899999999882, 0.000191361000000001, 0.00019134700000000143, 0.00019134699999999796, 0.00019133400000000134, 0.000191361000000001, 0.000...</msg>
<status status="PASS" starttime="20201029 09:34:22.965" endtime="20201029 09:34:22.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.973" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:22.972" endtime="20201029 09:34:22.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.975" level="INFO">VALUE: [0.0001928749999999986, 0.000191361000000001, 0.00019131899999999882, 0.000191361000000001, 0.00019134700000000143, 0.00019134699999999796, 0.00019133400000000134, 0.000191361000000001, 0.00019134700000000143, 0.00019133399999999787, 0.00019133400000000134, 0.0001913329999999984, 0.00019133300000000186, 0.0001913329999999984, 0.00019134700000000143, 0.00019134700000000143, 0.00019138900000000014, 0.00019137500000000057, 0.00019134700000000143, 0.000191361000000001, 0.00019137500000000057, 0.0001913329999999984, 0.000191361000000001, 0.00019138900000000014, 0.00019138900000000014, 0.00019132000000000177, 0.00019137500000000057, 0.00019134699999999796, 0.0001913480000000009, 0.00019132000000000177, 0.00019137500000000057, 0.00019133300000000186, 0.00019129200000000263, 0.000191361000000001, 0.00019134700000000143, 0.00019137500000000057, 0.00019133299999999492, 0.0001913480000000009, 0.0001913480000000009, 0.00019137500000000057, 0.00019134700000000143, 0.00019133400000000134, 0.0001913469999999945, 0.00019129099999999621, 0.0001913480000000009, 0.00019133400000000134, 0.0001913339999999944, 0.00019133300000000186, 0.000191361000000001, 0.0001913480000000009]</msg>
<status status="PASS" starttime="20201029 09:34:22.974" endtime="20201029 09:34:22.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.970" endtime="20201029 09:34:22.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.600" endtime="20201029 09:34:22.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.577" endtime="20201029 09:34:22.977"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.979" endtime="20201029 09:34:22.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.978" endtime="20201029 09:34:23.000"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.012" endtime="20201029 09:34:23.045"></status>
</kw>
<msg timestamp="20201029 09:34:23.045" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.009" endtime="20201029 09:34:23.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.048" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.046" endtime="20201029 09:34:23.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.049" endtime="20201029 09:34:23.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.005" endtime="20201029 09:34:23.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.003" endtime="20201029 09:34:23.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.059" endtime="20201029 09:34:23.345"></status>
</kw>
<msg timestamp="20201029 09:34:23.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.057" endtime="20201029 09:34:23.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.349" endtime="20201029 09:34:23.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.357" endtime="20201029 09:34:23.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.055" endtime="20201029 09:34:23.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.052" endtime="20201029 09:34:23.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:23.364" level="INFO">${PHILIP_RES} = [{'diff': 0.00021584699999999818}, {'diff': 0.0002143060000000009}, {'diff': 0.000214319000000001}, {'diff': 0.00021434799999999962}, {'diff': 0.00021429200000000134}, {'diff': 0.00021426399999999873}...</msg>
<status status="PASS" starttime="20201029 09:34:23.361" endtime="20201029 09:34:23.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.368" level="INFO">${RESULT} = {'diff': [0.00021584699999999818, 0.0002143060000000009, 0.000214319000000001, 0.00021434799999999962, 0.00021429200000000134, 0.00021426399999999873, 0.00021432000000000048, 0.00021426399999999873, 0...</msg>
<status status="PASS" starttime="20201029 09:34:23.365" endtime="20201029 09:34:23.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.373" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:23.372" endtime="20201029 09:34:23.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.375" level="INFO">VALUE: [0.00021584699999999818, 0.0002143060000000009, 0.000214319000000001, 0.00021434799999999962, 0.00021429200000000134, 0.00021426399999999873, 0.00021432000000000048, 0.00021426399999999873, 0.0002142779999999983, 0.0002142909999999984, 0.0002142640000000022, 0.0002142779999999983, 0.00021426399999999873, 0.00021429199999999787, 0.00021423699999999907, 0.0002142640000000022, 0.0002142779999999983, 0.0002143050000000049, 0.00021430499999999797, 0.00021437500000000276, 0.0002142920000000048, 0.0002143610000000032, 0.00021426400000000567, 0.00021429199999999787, 0.00021431899999999754, 0.0002143480000000031, 0.00021422200000000002, 0.00021426400000000567, 0.00021437500000000276, 0.00021434700000000362, 0.0002142779999999983, 0.0002142909999999984, 0.00021431900000000448, 0.00021426400000000567, 0.00021426399999999873, 0.0002142779999999983, 0.00021424999999999916, 0.00021426399999999873, 0.0002142359999999996, 0.0002142779999999983, 0.00021427800000000524, 0.00021426399999999873, 0.00021426399999999873, 0.00021427699999999883, 0.0002142920000000048, 0.00021429199999999787, 0.00021432000000000395, 0.00021426299999999926, 0.0002142779999999983, 0.00021437500000000276]</msg>
<status status="PASS" starttime="20201029 09:34:23.374" endtime="20201029 09:34:23.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.369" endtime="20201029 09:34:23.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.001" endtime="20201029 09:34:23.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.977" endtime="20201029 09:34:23.376"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:23.379" endtime="20201029 09:34:23.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.377" endtime="20201029 09:34:23.399"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.407" endtime="20201029 09:34:23.442"></status>
</kw>
<msg timestamp="20201029 09:34:23.443" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.406" endtime="20201029 09:34:23.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.445" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.444" endtime="20201029 09:34:23.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.446" endtime="20201029 09:34:23.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.403" endtime="20201029 09:34:23.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.401" endtime="20201029 09:34:23.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.457" endtime="20201029 09:34:23.743"></status>
</kw>
<msg timestamp="20201029 09:34:23.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017989722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.455" endtime="20201029 09:34:23.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017989722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.747" endtime="20201029 09:34:23.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.755" endtime="20201029 09:34:23.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.452" endtime="20201029 09:34:23.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.450" endtime="20201029 09:34:23.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:23.761" level="INFO">${PHILIP_RES} = [{'diff': 0.00023955600000000188}, {'diff': 0.0002380139999999982}, {'diff': 0.00023795799999999992}, {'diff': 0.00023801299999999873}, {'diff': 0.00023804100000000133}, {'diff': 0.0002380000000000021...</msg>
<status status="PASS" starttime="20201029 09:34:23.758" endtime="20201029 09:34:23.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.765" level="INFO">${RESULT} = {'diff': [0.00023955600000000188, 0.0002380139999999982, 0.00023795799999999992, 0.00023801299999999873, 0.00023804100000000133, 0.0002380000000000021, 0.0002380269999999983, 0.00023799999999999863, 0...</msg>
<status status="PASS" starttime="20201029 09:34:23.762" endtime="20201029 09:34:23.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.769" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:23.768" endtime="20201029 09:34:23.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.771" level="INFO">VALUE: [0.00023955600000000188, 0.0002380139999999982, 0.00023795799999999992, 0.00023801299999999873, 0.00023804100000000133, 0.0002380000000000021, 0.0002380269999999983, 0.00023799999999999863, 0.00023799999999999863, 0.0002380000000000021, 0.00023795799999999992, 0.00023795799999999992, 0.00023798600000000253, 0.00023801400000000167, 0.00023795799999999992, 0.00023797299999999896, 0.00023798599999999906, 0.0002380269999999983, 0.00023799999999999863, 0.00023802799999999777, 0.00023799999999999863, 0.00023799999999999863, 0.0002380139999999982, 0.00023802700000000176, 0.00023806999999999995, 0.0002379450000000033, 0.0002379859999999956, 0.00023802699999999483, 0.0002379580000000034, 0.0002380000000000021, 0.00023798600000000253, 0.00023801400000000167, 0.00023802699999999483, 0.0002380000000000021, 0.00023802800000000124, 0.00023794399999999688, 0.00023802800000000124, 0.00023801400000000167, 0.0002380000000000021, 0.0002380000000000021, 0.00023802700000000176, 0.00023801400000000167, 0.00023801400000000167, 0.00023801399999999473, 0.00023802800000000124, 0.00023801400000000167, 0.00023802800000000124, 0.0002380000000000021, 0.0002379859999999956, 0.00023802800000000124]</msg>
<status status="PASS" starttime="20201029 09:34:23.770" endtime="20201029 09:34:23.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.766" endtime="20201029 09:34:23.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.399" endtime="20201029 09:34:23.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.377" endtime="20201029 09:34:23.774"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:23.776" endtime="20201029 09:34:23.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.775" endtime="20201029 09:34:23.796"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.804" endtime="20201029 09:34:23.842"></status>
</kw>
<msg timestamp="20201029 09:34:23.843" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.803" endtime="20201029 09:34:23.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.845" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.844" endtime="20201029 09:34:23.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.846" endtime="20201029 09:34:23.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.800" endtime="20201029 09:34:23.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.798" endtime="20201029 09:34:23.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.858" endtime="20201029 09:34:24.146"></status>
</kw>
<msg timestamp="20201029 09:34:24.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018077181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.856" endtime="20201029 09:34:24.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017813194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018077181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.151" endtime="20201029 09:34:24.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.159" endtime="20201029 09:34:24.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.854" endtime="20201029 09:34:24.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.851" endtime="20201029 09:34:24.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.165" level="INFO">${PHILIP_RES} = [{'diff': 0.00026398700000000025}, {'diff': 0.00026252800000000145}, {'diff': 0.0002625140000000019}, {'diff': 0.00026245800000000014}, {'diff': 0.0002624019999999984}, {'diff': 0.0002624719999999997}...</msg>
<status status="PASS" starttime="20201029 09:34:24.162" endtime="20201029 09:34:24.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.170" level="INFO">${RESULT} = {'diff': [0.00026398700000000025, 0.00026252800000000145, 0.0002625140000000019, 0.00026245800000000014, 0.0002624019999999984, 0.0002624719999999997, 0.00026249999999999885, 0.00026244500000000004, 0...</msg>
<status status="PASS" starttime="20201029 09:34:24.166" endtime="20201029 09:34:24.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.174" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.173" endtime="20201029 09:34:24.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.177" level="INFO">VALUE: [0.00026398700000000025, 0.00026252800000000145, 0.0002625140000000019, 0.00026245800000000014, 0.0002624019999999984, 0.0002624719999999997, 0.00026249999999999885, 0.00026244500000000004, 0.00026243100000000047, 0.00026244400000000057, 0.00026244500000000004, 0.0002624589999999996, 0.00026241599999999796, 0.00026244500000000004, 0.00026243100000000047, 0.00026244400000000057, 0.00026243100000000047, 0.00026241699999999743, 0.0002624859999999993, 0.00026244500000000004, 0.00026240300000000133, 0.00026243100000000047, 0.00026244500000000004, 0.00026244500000000004, 0.00026244400000000057, 0.00026244500000000004, 0.00026244500000000004, 0.00026244400000000057, 0.0002623889999999948, 0.0002624719999999997, 0.00026244400000000057, 0.00026245800000000014, 0.000262430000000001, 0.0002624160000000014, 0.00026245800000000014, 0.000262430000000001, 0.00026244500000000004, 0.0002624719999999997, 0.0002624589999999996, 0.00026240300000000133, 0.00026254199999999756, 0.00026249999999999885, 0.00026243100000000047, 0.0002624589999999996, 0.00026244500000000004, 0.00026243100000000047, 0.0002624719999999997, 0.0002624719999999997, 0.00026244500000000004, 0.00026245800000000014]</msg>
<status status="PASS" starttime="20201029 09:34:24.175" endtime="20201029 09:34:24.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.171" endtime="20201029 09:34:24.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.797" endtime="20201029 09:34:24.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.774" endtime="20201029 09:34:24.178"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.181" endtime="20201029 09:34:24.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.179" endtime="20201029 09:34:24.201"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.209" endtime="20201029 09:34:24.250"></status>
</kw>
<msg timestamp="20201029 09:34:24.250" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.208" endtime="20201029 09:34:24.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.254" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.251" endtime="20201029 09:34:24.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.255" endtime="20201029 09:34:24.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.205" endtime="20201029 09:34:24.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.203" endtime="20201029 09:34:24.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.264" endtime="20201029 09:34:24.549"></status>
</kw>
<msg timestamp="20201029 09:34:24.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017609903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017899083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.262" endtime="20201029 09:34:24.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017609903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017899083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.553" endtime="20201029 09:34:24.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.561" endtime="20201029 09:34:24.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.260" endtime="20201029 09:34:24.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.258" endtime="20201029 09:34:24.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.568" level="INFO">${PHILIP_RES} = [{'diff': 0.00028918}, {'diff': 0.00028768099999999797}, {'diff': 0.00028768099999999797}, {'diff': 0.0002876249999999997}, {'diff': 0.00028768000000000196}, {'diff': 0.0002877080000000011}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 09:34:24.565" endtime="20201029 09:34:24.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.572" level="INFO">${RESULT} = {'diff': [0.00028918, 0.00028768099999999797, 0.00028768099999999797, 0.0002876249999999997, 0.00028768000000000196, 0.0002877080000000011, 0.0002876660000000024, 0.0002876530000000023, 0.000287693999...</msg>
<status status="PASS" starttime="20201029 09:34:24.569" endtime="20201029 09:34:24.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.577" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.576" endtime="20201029 09:34:24.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.579" level="INFO">VALUE: [0.00028918, 0.00028768099999999797, 0.00028768099999999797, 0.0002876249999999997, 0.00028768000000000196, 0.0002877080000000011, 0.0002876660000000024, 0.0002876530000000023, 0.00028769399999999806, 0.0002876110000000001, 0.0002877080000000011, 0.0002877499999999998, 0.0002877639999999994, 0.0002876799999999985, 0.000287695000000001, 0.0002876529999999988, 0.0002876530000000023, 0.00028768000000000196, 0.0002877090000000006, 0.0002876669999999984, 0.0002876799999999985, 0.00028769399999999806, 0.00028770900000000404, 0.0002876659999999989, 0.0002876110000000001, 0.0002876669999999984, 0.00028768099999999797, 0.000287694000000005, 0.0002876799999999985, 0.00028768099999999797, 0.0002876520000000063, 0.0002876529999999988, 0.00028772200000000414, 0.0002877229999999967, 0.00028773599999999677, 0.00028769399999999806, 0.00028763899999999926, 0.0002876950000000045, 0.0002876110000000001, 0.0002876659999999989, 0.0002876659999999989, 0.0002876799999999985, 0.00028763899999999926, 0.0002877219999999972, 0.0002876669999999984, 0.00028766600000000586, 0.0002876659999999989, 0.000287694000000005, 0.0002876110000000001, 0.0002876529999999988]</msg>
<status status="PASS" starttime="20201029 09:34:24.578" endtime="20201029 09:34:24.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.573" endtime="20201029 09:34:24.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.202" endtime="20201029 09:34:24.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.179" endtime="20201029 09:34:24.581"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.583" endtime="20201029 09:34:24.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.582" endtime="20201029 09:34:24.603"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.611" endtime="20201029 09:34:24.655"></status>
</kw>
<msg timestamp="20201029 09:34:24.655" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.610" endtime="20201029 09:34:24.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.658" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.656" endtime="20201029 09:34:24.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.659" endtime="20201029 09:34:24.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.607" endtime="20201029 09:34:24.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.605" endtime="20201029 09:34:24.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.669" endtime="20201029 09:34:24.954"></status>
</kw>
<msg timestamp="20201029 09:34:24.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017497958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017813125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.667" endtime="20201029 09:34:24.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017497958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017813125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.958" endtime="20201029 09:34:24.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.966" endtime="20201029 09:34:24.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.664" endtime="20201029 09:34:24.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.663" endtime="20201029 09:34:24.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.972" level="INFO">${PHILIP_RES} = [{'diff': 0.00031516699999999814}, {'diff': 0.00031362499999999793}, {'diff': 0.00031361100000000183}, {'diff': 0.00031362499999999793}, {'diff': 0.0003136529999999971}, {'diff': 0.0003136390000000009...</msg>
<status status="PASS" starttime="20201029 09:34:24.969" endtime="20201029 09:34:24.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.976" level="INFO">${RESULT} = {'diff': [0.00031516699999999814, 0.00031362499999999793, 0.00031361100000000183, 0.00031362499999999793, 0.0003136529999999971, 0.00031363900000000097, 0.0003136670000000001, 0.00031361100000000183, ...</msg>
<status status="PASS" starttime="20201029 09:34:24.973" endtime="20201029 09:34:24.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.980" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.979" endtime="20201029 09:34:24.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.982" level="INFO">VALUE: [0.00031516699999999814, 0.00031362499999999793, 0.00031361100000000183, 0.00031362499999999793, 0.0003136529999999971, 0.00031363900000000097, 0.0003136670000000001, 0.00031361100000000183, 0.00031362499999999793, 0.0003136800000000002, 0.00031359800000000174, 0.0003136389999999975, 0.00031359700000000226, 0.00031361100000000183, 0.00031361099999999836, 0.00031358400000000217, 0.00031362499999999793, 0.00031359700000000226, 0.0003136250000000014, 0.00031361099999999836, 0.0003135969999999988, 0.00031361099999999836, 0.0003136110000000053, 0.0003136800000000037, 0.00031361099999999836, 0.00031366599999999717, 0.0003135829999999992, 0.00031361099999999836, 0.0003135550000000001, 0.00031361099999999836, 0.00031361099999999836, 0.0003136389999999975, 0.00031361199999999784, 0.0003135969999999988, 0.00031362500000000487, 0.0003135829999999992, 0.00031355599999999956, 0.000313542, 0.00031355599999999956, 0.00031358400000000564, 0.00031359700000000573, 0.00031358400000000564, 0.00031362500000000487, 0.00031356999999999913, 0.0003135969999999988, 0.0003135829999999992, 0.00031359799999999827, 0.00031359799999999827, 0.0003135829999999992, 0.0003135969999999988]</msg>
<status status="PASS" starttime="20201029 09:34:24.981" endtime="20201029 09:34:24.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.977" endtime="20201029 09:34:24.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.604" endtime="20201029 09:34:24.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.581" endtime="20201029 09:34:24.985"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.988" endtime="20201029 09:34:25.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.986" endtime="20201029 09:34:25.008"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.016" endtime="20201029 09:34:25.062"></status>
</kw>
<msg timestamp="20201029 09:34:25.063" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.014" endtime="20201029 09:34:25.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.065" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.064" endtime="20201029 09:34:25.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.066" endtime="20201029 09:34:25.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.012" endtime="20201029 09:34:25.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.010" endtime="20201029 09:34:25.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.075" endtime="20201029 09:34:25.361"></status>
</kw>
<msg timestamp="20201029 09:34:25.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017873083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.073" endtime="20201029 09:34:25.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017873083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.365" endtime="20201029 09:34:25.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.372" endtime="20201029 09:34:25.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.071" endtime="20201029 09:34:25.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.069" endtime="20201029 09:34:25.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.379" level="INFO">${PHILIP_RES} = [{'diff': 0.0003418750000000019}, {'diff': 0.0003403339999999977}, {'diff': 0.00034036100000000083}, {'diff': 0.0003403329999999982}, {'diff': 0.0003403330000000017}, {'diff': 0.0003403750000000004}, ...</msg>
<status status="PASS" starttime="20201029 09:34:25.375" endtime="20201029 09:34:25.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.383" level="INFO">${RESULT} = {'diff': [0.0003418750000000019, 0.0003403339999999977, 0.00034036100000000083, 0.0003403329999999982, 0.0003403330000000017, 0.0003403750000000004, 0.0003403750000000004, 0.00034040200000000007, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:25.380" endtime="20201029 09:34:25.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.388" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.387" endtime="20201029 09:34:25.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.390" level="INFO">VALUE: [0.0003418750000000019, 0.0003403339999999977, 0.00034036100000000083, 0.0003403329999999982, 0.0003403330000000017, 0.0003403750000000004, 0.0003403750000000004, 0.00034040200000000007, 0.0003403199999999981, 0.00034034700000000126, 0.0003403750000000004, 0.0003403750000000004, 0.0003403190000000021, 0.00034036099999999736, 0.00034038899999999997, 0.00034031899999999865, 0.00034034800000000073, 0.00034034799999999726, 0.00034036099999999736, 0.0003403610000000043, 0.00034031899999999865, 0.00034036099999999736, 0.0003402909999999995, 0.0003403199999999981, 0.000340291999999999, 0.00034031899999999865, 0.00034031899999999865, 0.00034030599999999855, 0.00034030599999999855, 0.0003403329999999982, 0.0003403199999999981, 0.00034031899999999865, 0.00034031899999999865, 0.0003403049999999991, 0.0003403190000000056, 0.00034033300000000516, 0.0003403049999999991, 0.0003402779999999994, 0.000340305000000006, 0.00034027699999999994, 0.00034033400000000463, 0.00034033300000000516, 0.0003402909999999995, 0.00034032000000000506, 0.00034033300000000516, 0.000340291999999999, 0.00034026399999999984, 0.0003402360000000007, 0.00034033400000000463, 0.0003402360000000007]</msg>
<status status="PASS" starttime="20201029 09:34:25.389" endtime="20201029 09:34:25.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.384" endtime="20201029 09:34:25.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.008" endtime="20201029 09:34:25.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.985" endtime="20201029 09:34:25.392"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.394" endtime="20201029 09:34:25.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.393" endtime="20201029 09:34:25.414"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.422" endtime="20201029 09:34:25.472"></status>
</kw>
<msg timestamp="20201029 09:34:25.472" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.421" endtime="20201029 09:34:25.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.475" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.473" endtime="20201029 09:34:25.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.476" endtime="20201029 09:34:25.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.418" endtime="20201029 09:34:25.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.416" endtime="20201029 09:34:25.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.484" endtime="20201029 09:34:25.789"></status>
</kw>
<msg timestamp="20201029 09:34:25.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017445556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017814889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.483" endtime="20201029 09:34:25.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017445556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017814889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.793" endtime="20201029 09:34:25.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.801" endtime="20201029 09:34:25.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.480" endtime="20201029 09:34:25.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.479" endtime="20201029 09:34:25.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.807" level="INFO">${PHILIP_RES} = [{'diff': 0.00036933299999999947}, {'diff': 0.00036777799999999916}, {'diff': 0.00036782000000000134}, {'diff': 0.00036777799999999916}, {'diff': 0.0003678059999999983}, {'diff': 0.0003677909999999992...</msg>
<status status="PASS" starttime="20201029 09:34:25.804" endtime="20201029 09:34:25.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.811" level="INFO">${RESULT} = {'diff': [0.00036933299999999947, 0.00036777799999999916, 0.00036782000000000134, 0.00036777799999999916, 0.0003678059999999983, 0.00036779099999999926, 0.00036775, 0.00036780600000000177, 0.000367777...</msg>
<status status="PASS" starttime="20201029 09:34:25.808" endtime="20201029 09:34:25.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.816" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.815" endtime="20201029 09:34:25.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.818" level="INFO">VALUE: [0.00036933299999999947, 0.00036777799999999916, 0.00036782000000000134, 0.00036777799999999916, 0.0003678059999999983, 0.00036779099999999926, 0.00036775, 0.00036780600000000177, 0.00036777799999999916, 0.00036777799999999916, 0.00036775, 0.0003677639999999996, 0.0003677630000000001, 0.0003677369999999999, 0.00036775, 0.00036773600000000045, 0.00036777799999999916, 0.0003677780000000061, 0.0003677220000000009, 0.0003677639999999996, 0.00036776400000000653, 0.0003677220000000009, 0.00036777799999999916, 0.00036775, 0.00036775, 0.00036773600000000045, 0.00036777799999999916, 0.00036773600000000045, 0.00036780600000000524, 0.0003677630000000001, 0.0003676949999999943, 0.0003677769999999997, 0.0003677639999999996, 0.00036777799999999916, 0.00036779199999999873, 0.00036786100000000405, 0.0003677639999999996, 0.0003677639999999996, 0.0003677630000000001, 0.00036783299999999797, 0.00036780499999999883, 0.0003678189999999984, 0.00036780600000000524, 0.0003677780000000061, 0.0003677639999999996, 0.00036779199999999873, 0.0003677639999999996, 0.0003678189999999984, 0.00036779099999999926, 0.00036783299999999797]</msg>
<status status="PASS" starttime="20201029 09:34:25.817" endtime="20201029 09:34:25.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.812" endtime="20201029 09:34:25.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.415" endtime="20201029 09:34:25.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.392" endtime="20201029 09:34:25.820"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.822" endtime="20201029 09:34:25.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.821" endtime="20201029 09:34:25.842"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.850" endtime="20201029 09:34:25.903"></status>
</kw>
<msg timestamp="20201029 09:34:25.903" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.849" endtime="20201029 09:34:25.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.905" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.904" endtime="20201029 09:34:25.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.906" endtime="20201029 09:34:25.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.846" endtime="20201029 09:34:25.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.844" endtime="20201029 09:34:25.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.918" endtime="20201029 09:34:26.204"></status>
</kw>
<msg timestamp="20201029 09:34:26.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017538931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017936458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.917" endtime="20201029 09:34:26.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017538931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017936458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.208" endtime="20201029 09:34:26.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.216" endtime="20201029 09:34:26.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.914" endtime="20201029 09:34:26.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.913" endtime="20201029 09:34:26.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.222" level="INFO">${PHILIP_RES} = [{'diff': 0.0003975269999999982}, {'diff': 0.0003959450000000017}, {'diff': 0.0003960000000000005}, {'diff': 0.00039608299999999846}, {'diff': 0.00039597300000000085}, {'diff': 0.00039595799999999834}...</msg>
<status status="PASS" starttime="20201029 09:34:26.219" endtime="20201029 09:34:26.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.226" level="INFO">${RESULT} = {'diff': [0.0003975269999999982, 0.0003959450000000017, 0.0003960000000000005, 0.00039608299999999846, 0.00039597300000000085, 0.00039595799999999834, 0.0003960000000000005, 0.0003960140000000001, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:26.223" endtime="20201029 09:34:26.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.230" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.229" endtime="20201029 09:34:26.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.233" level="INFO">VALUE: [0.0003975269999999982, 0.0003959450000000017, 0.0003960000000000005, 0.00039608299999999846, 0.00039597300000000085, 0.00039595799999999834, 0.0003960000000000005, 0.0003960140000000001, 0.00039597300000000085, 0.00039598600000000095, 0.0003960140000000001, 0.0003960000000000005, 0.0003959870000000004, 0.0003959719999999979, 0.0003959859999999975, 0.00039602799999999966, 0.0003960140000000001, 0.00039598600000000095, 0.0003960000000000005, 0.0003960000000000005, 0.0003960000000000005, 0.00039598600000000095, 0.0003959720000000014, 0.0003959720000000014, 0.00039598600000000095, 0.0003960140000000001, 0.00039590200000000353, 0.0003960140000000001, 0.00039602799999999966, 0.0003960140000000001, 0.00039604199999999923, 0.00039598600000000095, 0.00039598600000000095, 0.000395903000000003, 0.00039597300000000085, 0.00039597300000000085, 0.0003959450000000017, 0.00039598600000000095, 0.0003960000000000005, 0.00039598600000000095, 0.0003960000000000005, 0.00039597199999999444, 0.0003959580000000018, 0.0003959720000000014, 0.0003960130000000006, 0.0003959309999999952, 0.0003959870000000004, 0.0003960000000000005, 0.0003960000000000005, 0.0003959999999999936]</msg>
<status status="PASS" starttime="20201029 09:34:26.231" endtime="20201029 09:34:26.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.227" endtime="20201029 09:34:26.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.843" endtime="20201029 09:34:26.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.820" endtime="20201029 09:34:26.240"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.242" endtime="20201029 09:34:26.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.241" endtime="20201029 09:34:26.262"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.270" endtime="20201029 09:34:26.326"></status>
</kw>
<msg timestamp="20201029 09:34:26.326" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.269" endtime="20201029 09:34:26.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.329" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.327" endtime="20201029 09:34:26.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.330" endtime="20201029 09:34:26.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.266" endtime="20201029 09:34:26.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.264" endtime="20201029 09:34:26.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.338" endtime="20201029 09:34:26.642"></status>
</kw>
<msg timestamp="20201029 09:34:26.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017578986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018005444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.337" endtime="20201029 09:34:26.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017578986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018005444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.646" endtime="20201029 09:34:26.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.654" endtime="20201029 09:34:26.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.334" endtime="20201029 09:34:26.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.333" endtime="20201029 09:34:26.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.661" level="INFO">${PHILIP_RES} = [{'diff': 0.0004264579999999976}, {'diff': 0.00042491700000000035}, {'diff': 0.0004249579999999996}, {'diff': 0.0004249309999999999}, {'diff': 0.000424944}, {'diff': 0.000424944}, {'diff': 0.000424986...</msg>
<status status="PASS" starttime="20201029 09:34:26.658" endtime="20201029 09:34:26.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.665" level="INFO">${RESULT} = {'diff': [0.0004264579999999976, 0.00042491700000000035, 0.0004249579999999996, 0.0004249309999999999, 0.000424944, 0.000424944, 0.0004249860000000022, 0.0004249859999999987, 0.0004249859999999987, 0....</msg>
<status status="PASS" starttime="20201029 09:34:26.662" endtime="20201029 09:34:26.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.670" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.669" endtime="20201029 09:34:26.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.672" level="INFO">VALUE: [0.0004264579999999976, 0.00042491700000000035, 0.0004249579999999996, 0.0004249309999999999, 0.000424944, 0.000424944, 0.0004249860000000022, 0.0004249859999999987, 0.0004249859999999987, 0.00042491700000000035, 0.00042488899999999774, 0.00042500000000000177, 0.00042491700000000035, 0.00042491700000000035, 0.00042500000000000177, 0.0004249300000000039, 0.0004249300000000039, 0.0004249730000000021, 0.0004249589999999956, 0.0004249720000000026, 0.00042495900000000253, 0.00042500000000000177, 0.00042498599999999526, 0.00042491600000000435, 0.0004249730000000021, 0.00042498599999999526, 0.0004249589999999956, 0.0004249860000000022, 0.0004248750000000051, 0.0004249720000000026, 0.0004249720000000026, 0.00042494399999999655, 0.00042493099999999645, 0.0004249719999999957, 0.00042495800000000306, 0.0004249440000000035, 0.00042495800000000306, 0.00042495800000000306, 0.00042494399999999655, 0.0004249589999999956, 0.0004249860000000022, 0.0004249720000000026, 0.0004249860000000022, 0.0004249579999999961, 0.0004250280000000009, 0.00042500000000000177, 0.0004249860000000022, 0.0004249310000000034, 0.0004249719999999957, 0.000424944999999996]</msg>
<status status="PASS" starttime="20201029 09:34:26.671" endtime="20201029 09:34:26.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.666" endtime="20201029 09:34:26.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.263" endtime="20201029 09:34:26.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.240" endtime="20201029 09:34:26.674"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.676" endtime="20201029 09:34:26.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.675" endtime="20201029 09:34:26.696"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.704" endtime="20201029 09:34:26.763"></status>
</kw>
<msg timestamp="20201029 09:34:26.763" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.703" endtime="20201029 09:34:26.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.766" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.764" endtime="20201029 09:34:26.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.767" endtime="20201029 09:34:26.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.700" endtime="20201029 09:34:26.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.698" endtime="20201029 09:34:26.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.776" endtime="20201029 09:34:27.063"></status>
</kw>
<msg timestamp="20201029 09:34:27.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017425931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017882083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.774" endtime="20201029 09:34:27.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017425931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017882083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.067" endtime="20201029 09:34:27.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.075" endtime="20201029 09:34:27.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.772" endtime="20201029 09:34:27.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.770" endtime="20201029 09:34:27.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.081" level="INFO">${PHILIP_RES} = [{'diff': 0.00045615200000000133}, {'diff': 0.0004546110000000006}, {'diff': 0.00045454199999999875}, {'diff': 0.00045459700000000103}, {'diff': 0.00045462500000000017}, {'diff': 0.0004546389999999997...</msg>
<status status="PASS" starttime="20201029 09:34:27.078" endtime="20201029 09:34:27.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.085" level="INFO">${RESULT} = {'diff': [0.00045615200000000133, 0.0004546110000000006, 0.00045454199999999875, 0.00045459700000000103, 0.00045462500000000017, 0.00045463899999999974, 0.0004546119999999966, 0.00045462500000000017, ...</msg>
<status status="PASS" starttime="20201029 09:34:27.082" endtime="20201029 09:34:27.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.090" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.089" endtime="20201029 09:34:27.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.092" level="INFO">VALUE: [0.00045615200000000133, 0.0004546110000000006, 0.00045454199999999875, 0.00045459700000000103, 0.00045462500000000017, 0.00045463899999999974, 0.0004546119999999966, 0.00045462500000000017, 0.00045459700000000103, 0.00045462500000000017, 0.0004546110000000006, 0.00045462500000000017, 0.0004545560000000018, 0.00045459700000000103, 0.00045457000000000136, 0.00045461200000000007, 0.0004545690000000019, 0.00045463899999999974, 0.00045462500000000017, 0.0004545419999999953, 0.0004545829999999945, 0.0004546529999999993, 0.0004546110000000006, 0.0004545690000000019, 0.00045458300000000146, 0.0004545980000000005, 0.00045459700000000103, 0.0004545420000000022, 0.00045458300000000146, 0.0004546110000000006, 0.00045462500000000017, 0.00045462500000000017, 0.00045465300000000625, 0.0004546669999999989, 0.00045463899999999974, 0.00045463899999999974, 0.00045462500000000017, 0.0004546110000000006, 0.00045463899999999974, 0.0004545549999999954, 0.00045461099999999366, 0.00045458300000000146, 0.00045463899999999974, 0.000454583999999994, 0.00045461099999999366, 0.0004545830000000084, 0.0004546390000000067, 0.0004546529999999993, 0.000454583999999994, 0.00045462500000000017]</msg>
<status status="PASS" starttime="20201029 09:34:27.091" endtime="20201029 09:34:27.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.086" endtime="20201029 09:34:27.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.697" endtime="20201029 09:34:27.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.674" endtime="20201029 09:34:27.094"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.096" endtime="20201029 09:34:27.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.095" endtime="20201029 09:34:27.116"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.124" endtime="20201029 09:34:27.186"></status>
</kw>
<msg timestamp="20201029 09:34:27.187" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.123" endtime="20201029 09:34:27.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.189" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.188" endtime="20201029 09:34:27.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.190" endtime="20201029 09:34:27.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.120" endtime="20201029 09:34:27.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.118" endtime="20201029 09:34:27.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.201" endtime="20201029 09:34:27.497"></status>
</kw>
<msg timestamp="20201029 09:34:27.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017932556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.199" endtime="20201029 09:34:27.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017932556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.501" endtime="20201029 09:34:27.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.509" endtime="20201029 09:34:27.510"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.197" endtime="20201029 09:34:27.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.195" endtime="20201029 09:34:27.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.515" level="INFO">${PHILIP_RES} = [{'diff': 0.00048666699999999966}, {'diff': 0.0004851529999999986}, {'diff': 0.0004851109999999999}, {'diff': 0.00048508300000000074}, {'diff': 0.0004851659999999987}, {'diff': 0.00048508300000000074}...</msg>
<status status="PASS" starttime="20201029 09:34:27.512" endtime="20201029 09:34:27.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.519" level="INFO">${RESULT} = {'diff': [0.00048666699999999966, 0.0004851529999999986, 0.0004851109999999999, 0.00048508300000000074, 0.0004851659999999987, 0.00048508300000000074, 0.00048508300000000074, 0.00048504199999999803, 0...</msg>
<status status="PASS" starttime="20201029 09:34:27.516" endtime="20201029 09:34:27.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.523" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.522" endtime="20201029 09:34:27.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.526" level="INFO">VALUE: [0.00048666699999999966, 0.0004851529999999986, 0.0004851109999999999, 0.00048508300000000074, 0.0004851659999999987, 0.00048508300000000074, 0.00048508300000000074, 0.00048504199999999803, 0.0004851109999999999, 0.0004850970000000003, 0.0004850840000000002, 0.00048502800000000193, 0.00048506900000000464, 0.00048508399999999674, 0.0004851800000000017, 0.000485124999999996, 0.00048506999999999717, 0.00048511100000000335, 0.0004851250000000029, 0.00048505600000000454, 0.0004851109999999964, 0.00048506900000000464, 0.00048511100000000335, 0.0004850689999999977, 0.0004850689999999977, 0.00048508399999999674, 0.0004850840000000037, 0.00048504199999999803, 0.00048504199999999803, 0.0004850549999999981, 0.00048504099999999856, 0.0004850410000000055, 0.00048506999999999717, 0.00048501400000000583, 0.0004850549999999981, 0.00048506999999999717, 0.0004850549999999981, 0.00048502799999999846, 0.0004850830000000042, 0.00048502799999999846, 0.00048506999999999717, 0.00048508299999999727, 0.00048506900000000464, 0.0004850419999999911, 0.0004850419999999911, 0.00048506899999999076, 0.0004850700000000041, 0.00048513800000000995, 0.00048508300000001114, 0.0004851250000000029]</msg>
<status status="PASS" starttime="20201029 09:34:27.524" endtime="20201029 09:34:27.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.520" endtime="20201029 09:34:27.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.117" endtime="20201029 09:34:27.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.094" endtime="20201029 09:34:27.528"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.531" endtime="20201029 09:34:27.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.529" endtime="20201029 09:34:27.551"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.559" endtime="20201029 09:34:27.624"></status>
</kw>
<msg timestamp="20201029 09:34:27.624" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.557" endtime="20201029 09:34:27.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.626" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.625" endtime="20201029 09:34:27.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.628" endtime="20201029 09:34:27.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.555" endtime="20201029 09:34:27.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.553" endtime="20201029 09:34:27.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.636" endtime="20201029 09:34:27.922"></status>
</kw>
<msg timestamp="20201029 09:34:27.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017441389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017959181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.635" endtime="20201029 09:34:27.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017441389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017959181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.926" endtime="20201029 09:34:27.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.934" endtime="20201029 09:34:27.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.632" endtime="20201029 09:34:27.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.631" endtime="20201029 09:34:27.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.940" level="INFO">${PHILIP_RES} = [{'diff': 0.0005177919999999996}, {'diff': 0.000516278000000002}, {'diff': 0.0005163330000000008}, {'diff': 0.0005162499999999993}, {'diff': 0.0005163059999999976}, {'diff': 0.000516278000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:27.937" endtime="20201029 09:34:27.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.945" level="INFO">${RESULT} = {'diff': [0.0005177919999999996, 0.000516278000000002, 0.0005163330000000008, 0.0005162499999999993, 0.0005163059999999976, 0.000516278000000002, 0.0005162090000000001, 0.0005162779999999985, 0.000516...</msg>
<status status="PASS" starttime="20201029 09:34:27.941" endtime="20201029 09:34:27.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.949" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.948" endtime="20201029 09:34:27.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.952" level="INFO">VALUE: [0.0005177919999999996, 0.000516278000000002, 0.0005163330000000008, 0.0005162499999999993, 0.0005163059999999976, 0.000516278000000002, 0.0005162090000000001, 0.0005162779999999985, 0.0005163060000000011, 0.000516291000000002, 0.0005162220000000002, 0.0005162909999999986, 0.000516291000000002, 0.0005162500000000028, 0.0005162360000000032, 0.0005162219999999967, 0.000516277999999995, 0.000516278000000002, 0.000516278000000002, 0.0005164029999999986, 0.0005163340000000002, 0.0005163609999999999, 0.0005163340000000002, 0.0005163750000000064, 0.000516278000000002, 0.000516278000000002, 0.000516277999999995, 0.000516277999999995, 0.0005163049999999947, 0.0005162360000000032, 0.0005162640000000024, 0.0005163060000000011, 0.0005162920000000015, 0.0005162500000000028, 0.0005162639999999954, 0.0005163059999999942, 0.0005162920000000015, 0.0005162500000000028, 0.0005163050000000016, 0.000516291000000002, 0.0005162499999999959, 0.0005163190000000012, 0.0005163200000000007, 0.0005163470000000003, 0.0005163189999999873, 0.000516306000000008, 0.0005163610000000068, 0.000516360999999993, 0.0005163470000000003, 0.0005163049999999947]</msg>
<status status="PASS" starttime="20201029 09:34:27.951" endtime="20201029 09:34:27.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.946" endtime="20201029 09:34:27.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.551" endtime="20201029 09:34:27.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.529" endtime="20201029 09:34:27.954"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.956" endtime="20201029 09:34:27.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.955" endtime="20201029 09:34:27.976"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.984" endtime="20201029 09:34:28.052"></status>
</kw>
<msg timestamp="20201029 09:34:28.054" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.982" endtime="20201029 09:34:28.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.056" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.055" endtime="20201029 09:34:28.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.057" endtime="20201029 09:34:28.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.980" endtime="20201029 09:34:28.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.978" endtime="20201029 09:34:28.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.066" endtime="20201029 09:34:28.371"></status>
</kw>
<msg timestamp="20201029 09:34:28.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017986361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.064" endtime="20201029 09:34:28.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017986361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.374" endtime="20201029 09:34:28.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.382" endtime="20201029 09:34:28.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.062" endtime="20201029 09:34:28.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.060" endtime="20201029 09:34:28.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.389" level="INFO">${PHILIP_RES} = [{'diff': 0.0005497639999999977}, {'diff': 0.0005482089999999974}, {'diff': 0.0005482500000000001}, {'diff': 0.0005482080000000014}, {'diff': 0.0005482219999999975}, {'diff': 0.0005481530000000026}, {...</msg>
<status status="PASS" starttime="20201029 09:34:28.385" endtime="20201029 09:34:28.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.392" level="INFO">${RESULT} = {'diff': [0.0005497639999999977, 0.0005482089999999974, 0.0005482500000000001, 0.0005482080000000014, 0.0005482219999999975, 0.0005481530000000026, 0.0005480689999999983, 0.0005482080000000014, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:34:28.389" endtime="20201029 09:34:28.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.397" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.396" endtime="20201029 09:34:28.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.399" level="INFO">VALUE: [0.0005497639999999977, 0.0005482089999999974, 0.0005482500000000001, 0.0005482080000000014, 0.0005482219999999975, 0.0005481530000000026, 0.0005480689999999983, 0.0005482080000000014, 0.0005481659999999992, 0.0005481660000000027, 0.0005481950000000013, 0.0005481529999999957, 0.0005481809999999948, 0.0005482360000000006, 0.0005481940000000018, 0.0005481799999999953, 0.0005481810000000018, 0.0005482079999999945, 0.0005481950000000013, 0.0005482079999999945, 0.0005481519999999962, 0.0005482090000000009, 0.000548139000000003, 0.0005480969999999974, 0.0005481670000000022, 0.0005481670000000022, 0.0005481250000000035, 0.0005481530000000026, 0.0005481529999999957, 0.000548139000000003, 0.0005481800000000023, 0.0005481809999999948, 0.0005481110000000039, 0.0005481250000000035, 0.0005481520000000031, 0.0005481389999999961, 0.0005481950000000013, 0.0005481529999999957, 0.0005481940000000018, 0.0005481669999999883, 0.0005481940000000018, 0.0005481799999999953, 0.0005481529999999957, 0.0005481809999999948, 0.0005481940000000018, 0.000548222000000001, 0.0005482769999999998, 0.0005481249999999965, 0.0005481660000000027, 0.0005481249999999965]</msg>
<status status="PASS" starttime="20201029 09:34:28.398" endtime="20201029 09:34:28.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.393" endtime="20201029 09:34:28.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.976" endtime="20201029 09:34:28.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.954" endtime="20201029 09:34:28.401"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.404" endtime="20201029 09:34:28.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.402" endtime="20201029 09:34:28.423"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.431" endtime="20201029 09:34:28.503"></status>
</kw>
<msg timestamp="20201029 09:34:28.503" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.430" endtime="20201029 09:34:28.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.506" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.504" endtime="20201029 09:34:28.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.507" endtime="20201029 09:34:28.509"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.427" endtime="20201029 09:34:28.510"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.425" endtime="20201029 09:34:28.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.517" endtime="20201029 09:34:28.802"></status>
</kw>
<msg timestamp="20201029 09:34:28.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.515" endtime="20201029 09:34:28.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.806" endtime="20201029 09:34:28.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.813" endtime="20201029 09:34:28.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.513" endtime="20201029 09:34:28.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.511" endtime="20201029 09:34:28.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.820" level="INFO">${PHILIP_RES} = [{'diff': 0.0005824450000000009}, {'diff': 0.0005808750000000015}, {'diff': 0.0005808749999999981}, {'diff': 0.0005808189999999998}, {'diff': 0.0005809170000000002}, {'diff': 0.0005807920000000001}, {...</msg>
<status status="PASS" starttime="20201029 09:34:28.817" endtime="20201029 09:34:28.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.824" level="INFO">${RESULT} = {'diff': [0.0005824450000000009, 0.0005808750000000015, 0.0005808749999999981, 0.0005808189999999998, 0.0005809170000000002, 0.0005807920000000001, 0.0005808329999999993, 0.0005808189999999998, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:34:28.821" endtime="20201029 09:34:28.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.828" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.827" endtime="20201029 09:34:28.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.830" level="INFO">VALUE: [0.0005824450000000009, 0.0005808750000000015, 0.0005808749999999981, 0.0005808189999999998, 0.0005809170000000002, 0.0005807920000000001, 0.0005808329999999993, 0.0005808189999999998, 0.0005808059999999997, 0.0005807910000000006, 0.0005808480000000019, 0.0005808050000000037, 0.0005807920000000036, 0.0005808480000000019, 0.0005808620000000014, 0.0005808750000000015, 0.0005808189999999963, 0.0005808340000000023, 0.0005807920000000036, 0.0005808750000000015, 0.000580861000000002, 0.000580861000000002, 0.0005808750000000015, 0.0005809019999999943, 0.0005809030000000007, 0.0005809170000000002, 0.0005807909999999972, 0.0005808330000000028, 0.0005808750000000015, 0.0005808750000000015, 0.0005808619999999945, 0.0005808190000000032, 0.0005808750000000015, 0.0005808469999999955, 0.0005808749999999946, 0.0005808330000000028, 0.0005809300000000073, 0.0005808749999999946, 0.000580861000000002, 0.0005808199999999958, 0.0005809029999999937, 0.0005809170000000002, 0.0005808330000000028, 0.0005808189999999963, 0.0005808199999999958, 0.0005808050000000037, 0.0005808340000000023, 0.0005808470000000093, 0.0005808330000000028, 0.0005808749999999946]</msg>
<status status="PASS" starttime="20201029 09:34:28.829" endtime="20201029 09:34:28.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.825" endtime="20201029 09:34:28.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.424" endtime="20201029 09:34:28.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.402" endtime="20201029 09:34:28.833"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.835" endtime="20201029 09:34:28.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.834" endtime="20201029 09:34:28.855"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.863" endtime="20201029 09:34:28.941"></status>
</kw>
<msg timestamp="20201029 09:34:28.942" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.862" endtime="20201029 09:34:28.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.952" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.944" endtime="20201029 09:34:28.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.955" endtime="20201029 09:34:28.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.859" endtime="20201029 09:34:28.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.857" endtime="20201029 09:34:28.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.973" endtime="20201029 09:34:29.263"></status>
</kw>
<msg timestamp="20201029 09:34:29.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017565972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018181806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.970" endtime="20201029 09:34:29.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017565972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018181806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.267" endtime="20201029 09:34:29.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.275" endtime="20201029 09:34:29.276"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.965" endtime="20201029 09:34:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.961" endtime="20201029 09:34:29.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.281" level="INFO">${PHILIP_RES} = [{'diff': 0.0006158339999999991}, {'diff': 0.0006143189999999986}, {'diff': 0.0006143189999999986}, {'diff': 0.0006142779999999994}, {'diff': 0.0006143469999999977}, {'diff': 0.0006143050000000025}, {...</msg>
<status status="PASS" starttime="20201029 09:34:29.278" endtime="20201029 09:34:29.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.286" level="INFO">${RESULT} = {'diff': [0.0006158339999999991, 0.0006143189999999986, 0.0006143189999999986, 0.0006142779999999994, 0.0006143469999999977, 0.0006143050000000025, 0.0006142220000000011, 0.0006142639999999998, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:34:29.282" endtime="20201029 09:34:29.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.290" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.289" endtime="20201029 09:34:29.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.292" level="INFO">VALUE: [0.0006158339999999991, 0.0006143189999999986, 0.0006143189999999986, 0.0006142779999999994, 0.0006143469999999977, 0.0006143050000000025, 0.0006142220000000011, 0.0006142639999999998, 0.0006143470000000012, 0.0006142639999999998, 0.0006142640000000033, 0.0006142499999999967, 0.0006141939999999985, 0.000614305999999995, 0.0006142089999999975, 0.000614207999999998, 0.0006142089999999975, 0.0006142220000000045, 0.0006142359999999972, 0.0006142499999999967, 0.0006142219999999976, 0.0006142500000000037, 0.0006141799999999989, 0.0006141939999999985, 0.0006142639999999963, 0.0006142779999999959, 0.0006141939999999985, 0.000614223000000004, 0.0006142500000000037, 0.0006142360000000041, 0.0006142770000000033, 0.0006143480000000007, 0.0006143200000000015, 0.0006142640000000033, 0.0006142370000000036, 0.0006143049999999955, 0.0006142779999999959, 0.0006142780000000098, 0.0006142220000000115, 0.0006142359999999902, 0.0006142499999999967, 0.0006142639999999894, 0.000614208000000005, 0.0006142640000000033, 0.0006142920000000024, 0.0006143609999999938, 0.0006143190000000021, 0.0006143750000000003, 0.0006142920000000024, 0.0006143330000000086]</msg>
<status status="PASS" starttime="20201029 09:34:29.291" endtime="20201029 09:34:29.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.287" endtime="20201029 09:34:29.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.856" endtime="20201029 09:34:29.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.833" endtime="20201029 09:34:29.294"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.297" endtime="20201029 09:34:29.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.295" endtime="20201029 09:34:29.317"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.325" endtime="20201029 09:34:29.403"></status>
</kw>
<msg timestamp="20201029 09:34:29.403" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.323" endtime="20201029 09:34:29.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.406" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.404" endtime="20201029 09:34:29.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.407" endtime="20201029 09:34:29.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.321" endtime="20201029 09:34:29.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.319" endtime="20201029 09:34:29.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.416" endtime="20201029 09:34:29.703"></status>
</kw>
<msg timestamp="20201029 09:34:29.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018046639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.414" endtime="20201029 09:34:29.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018046639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.707" endtime="20201029 09:34:29.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.723" endtime="20201029 09:34:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.412" endtime="20201029 09:34:29.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.410" endtime="20201029 09:34:29.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.736" level="INFO">${PHILIP_RES} = [{'diff': 0.0006500829999999992}, {'diff': 0.0006484310000000014}, {'diff': 0.0006484170000000018}, {'diff': 0.0006483610000000001}, {'diff': 0.0006484170000000018}, {'diff': 0.0006483889999999992}, {...</msg>
<status status="PASS" starttime="20201029 09:34:29.730" endtime="20201029 09:34:29.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.745" level="INFO">${RESULT} = {'diff': [0.0006500829999999992, 0.0006484310000000014, 0.0006484170000000018, 0.0006483610000000001, 0.0006484170000000018, 0.0006483889999999992, 0.0006483889999999992, 0.000648362000000003, 0.00064...</msg>
<status status="PASS" starttime="20201029 09:34:29.738" endtime="20201029 09:34:29.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.753" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.751" endtime="20201029 09:34:29.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.758" level="INFO">VALUE: [0.0006500829999999992, 0.0006484310000000014, 0.0006484170000000018, 0.0006483610000000001, 0.0006484170000000018, 0.0006483889999999992, 0.0006483889999999992, 0.000648362000000003, 0.0006484860000000002, 0.0006484170000000018, 0.0006483619999999995, 0.0006484300000000054, 0.0006484159999999989, 0.0006484719999999972, 0.0006483889999999992, 0.000648348, 0.0006484169999999984, 0.0006484589999999971, 0.0006484300000000054, 0.0006485139999999959, 0.0006484029999999988, 0.0006484170000000053, 0.0006484159999999989, 0.0006483610000000001, 0.0006484169999999984, 0.000648444000000005, 0.0006484169999999984, 0.0006483889999999992, 0.0006484720000000041, 0.0006484719999999972, 0.0006483470000000005, 0.0006484720000000041, 0.000648430999999991, 0.0006483750000000066, 0.0006484300000000054, 0.0006484310000000049, 0.0006484310000000049, 0.0006484169999999984, 0.0006485140000000028, 0.0006484719999999972, 0.0006484580000000045, 0.000648443999999998, 0.000648430999999991, 0.0006484299999999915, 0.0006484299999999915, 0.0006484030000000057, 0.0006484719999999972, 0.0006484449999999975, 0.0006484300000000054, 0.0006483889999999992]</msg>
<status status="PASS" starttime="20201029 09:34:29.756" endtime="20201029 09:34:29.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.746" endtime="20201029 09:34:29.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.317" endtime="20201029 09:34:29.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.295" endtime="20201029 09:34:29.762"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.767" endtime="20201029 09:34:29.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.764" endtime="20201029 09:34:29.790"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.807" endtime="20201029 09:34:29.890"></status>
</kw>
<msg timestamp="20201029 09:34:29.890" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.804" endtime="20201029 09:34:29.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.892" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.891" endtime="20201029 09:34:29.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.893" endtime="20201029 09:34:29.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.798" endtime="20201029 09:34:29.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.794" endtime="20201029 09:34:29.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.906" endtime="20201029 09:34:30.193"></status>
</kw>
<msg timestamp="20201029 09:34:30.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029733, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030417833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:29.904" endtime="20201029 09:34:30.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029733, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030417833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:30.197" endtime="20201029 09:34:30.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.204" endtime="20201029 09:34:30.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.902" endtime="20201029 09:34:30.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.900" endtime="20201029 09:34:30.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.211" level="INFO">${PHILIP_RES} = [{'diff': 0.0006848329999999993}, {'diff': 0.0006833049999999986}, {'diff': 0.000683292000000002}, {'diff': 0.0006832220000000042}, {'diff': 0.0006831669999999984}, {'diff': 0.0006833049999999952}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:30.208" endtime="20201029 09:34:30.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.215" level="INFO">${RESULT} = {'diff': [0.0006848329999999993, 0.0006833049999999986, 0.000683292000000002, 0.0006832220000000042, 0.0006831669999999984, 0.0006833049999999952, 0.0006832500000000033, 0.0006832499999999964, 0.00068...</msg>
<status status="PASS" starttime="20201029 09:34:30.212" endtime="20201029 09:34:30.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.219" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.218" endtime="20201029 09:34:30.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.221" level="INFO">VALUE: [0.0006848329999999993, 0.0006833049999999986, 0.000683292000000002, 0.0006832220000000042, 0.0006831669999999984, 0.0006833049999999952, 0.0006832500000000033, 0.0006832499999999964, 0.0006833330000000012, 0.000683277000000003, 0.0006833190000000017, 0.0006832359999999968, 0.0006833200000000011, 0.0006833470000000008, 0.0006832229999999967, 0.0006832910000000025, 0.0006833050000000021, 0.0006833200000000011, 0.0006833050000000021, 0.0006833470000000008, 0.0006833610000000004, 0.000683292000000002, 0.0006833060000000085, 0.0006833190000000017, 0.000683276999999996, 0.0006832640000000029, 0.0006832229999999967, 0.0006833059999999946, 0.000683305000000009, 0.0006832779999999955, 0.0006832499999999964, 0.0006833470000000008, 0.0006832640000000029, 0.0006832499999999964, 0.0006832910000000025, 0.0006833190000000017, 0.000683305000000009, 0.0006833049999999952, 0.0006833889999999926, 0.0006833329999999943, 0.0006833609999999934, 0.0006832219999999972, 0.000683375, 0.0006832910000000025, 0.0006832909999999887, 0.000683276999999996, 0.0006832919999999881, 0.0006832780000000094, 0.0006833059999999946, 0.0006833340000000077]</msg>
<status status="PASS" starttime="20201029 09:34:30.220" endtime="20201029 09:34:30.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.216" endtime="20201029 09:34:30.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.791" endtime="20201029 09:34:30.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.763" endtime="20201029 09:34:30.224"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.226" endtime="20201029 09:34:30.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.225" endtime="20201029 09:34:30.247"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.256" endtime="20201029 09:34:30.341"></status>
</kw>
<msg timestamp="20201029 09:34:30.341" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.254" endtime="20201029 09:34:30.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.344" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.342" endtime="20201029 09:34:30.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.345" endtime="20201029 09:34:30.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.251" endtime="20201029 09:34:30.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.249" endtime="20201029 09:34:30.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.354" endtime="20201029 09:34:30.658"></status>
</kw>
<msg timestamp="20201029 09:34:30.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018978361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.352" endtime="20201029 09:34:30.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018978361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.662" endtime="20201029 09:34:30.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.669" endtime="20201029 09:34:30.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.350" endtime="20201029 09:34:30.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.348" endtime="20201029 09:34:30.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.675" level="INFO">${PHILIP_RES} = [{'diff': 0.0007205280000000015}, {'diff': 0.0007189860000000013}, {'diff': 0.0007189439999999991}, {'diff': 0.0007189720000000017}, {'diff': 0.000718930000000003}, {'diff': 0.0007189299999999996}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:30.672" endtime="20201029 09:34:30.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.680" level="INFO">${RESULT} = {'diff': [0.0007205280000000015, 0.0007189860000000013, 0.0007189439999999991, 0.0007189720000000017, 0.000718930000000003, 0.0007189299999999996, 0.0007188750000000008, 0.0007189869999999973, 0.00071...</msg>
<status status="PASS" starttime="20201029 09:34:30.676" endtime="20201029 09:34:30.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.684" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.683" endtime="20201029 09:34:30.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.687" level="INFO">VALUE: [0.0007205280000000015, 0.0007189860000000013, 0.0007189439999999991, 0.0007189720000000017, 0.000718930000000003, 0.0007189299999999996, 0.0007188750000000008, 0.0007189869999999973, 0.0007189720000000052, 0.000718931000000006, 0.0007189299999999996, 0.000718916, 0.0007189579999999987, 0.0007189859999999978, 0.0007189999999999974, 0.0007190280000000035, 0.0007189590000000051, 0.0007189720000000052, 0.0007189439999999991, 0.0007190140000000039, 0.0007190279999999966, 0.000718916, 0.000718930999999999, 0.0007190839999999948, 0.0007189859999999978, 0.0007190140000000039, 0.0007189999999999974, 0.0007189169999999995, 0.0007189860000000048, 0.0007189729999999978, 0.0007190560000000096, 0.0007190279999999966, 0.0007189580000000056, 0.0007190410000000036, 0.0007189719999999983, 0.0007189719999999983, 0.0007189579999999918, 0.0007189719999999983, 0.0007189999999999974, 0.0007190559999999957, 0.0007190419999999892, 0.0007189589999999912, 0.000719125000000001, 0.0007189439999999991, 0.0007190279999999966, 0.0007190279999999966, 0.0007190279999999966, 0.0007189580000000056, 0.0007189309999999921, 0.0007189580000000056]</msg>
<status status="PASS" starttime="20201029 09:34:30.686" endtime="20201029 09:34:30.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.681" endtime="20201029 09:34:30.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.247" endtime="20201029 09:34:30.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.224" endtime="20201029 09:34:30.689"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.691" endtime="20201029 09:34:30.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.690" endtime="20201029 09:34:30.711"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.719" endtime="20201029 09:34:30.807"></status>
</kw>
<msg timestamp="20201029 09:34:30.808" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.717" endtime="20201029 09:34:30.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.810" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.809" endtime="20201029 09:34:30.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.811" endtime="20201029 09:34:30.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.715" endtime="20201029 09:34:30.813"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.713" endtime="20201029 09:34:30.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.820" endtime="20201029 09:34:31.107"></status>
</kw>
<msg timestamp="20201029 09:34:31.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017429097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018186056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.818" endtime="20201029 09:34:31.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017429097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018186056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.111" endtime="20201029 09:34:31.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.118" endtime="20201029 09:34:31.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.816" endtime="20201029 09:34:31.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.814" endtime="20201029 09:34:31.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.125" level="INFO">${PHILIP_RES} = [{'diff': 0.000756958999999998}, {'diff': 0.0007554309999999974}, {'diff': 0.0007555139999999988}, {'diff': 0.0007554720000000001}, {'diff': 0.0007554439999999975}, {'diff': 0.0007554580000000005}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:31.122" endtime="20201029 09:34:31.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.129" level="INFO">${RESULT} = {'diff': [0.000756958999999998, 0.0007554309999999974, 0.0007555139999999988, 0.0007554720000000001, 0.0007554439999999975, 0.0007554580000000005, 0.0007554169999999978, 0.0007553609999999995, 0.00075...</msg>
<status status="PASS" starttime="20201029 09:34:31.126" endtime="20201029 09:34:31.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.133" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.132" endtime="20201029 09:34:31.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.135" level="INFO">VALUE: [0.000756958999999998, 0.0007554309999999974, 0.0007555139999999988, 0.0007554720000000001, 0.0007554439999999975, 0.0007554580000000005, 0.0007554169999999978, 0.0007553609999999995, 0.0007554580000000005, 0.0007554310000000009, 0.000755459, 0.0007554310000000009, 0.0007554580000000005, 0.0007554729999999996, 0.0007554580000000005, 0.0007553890000000021, 0.0007554720000000001, 0.0007555279999999984, 0.000755444000000001, 0.0007554999999999992, 0.0007554310000000009, 0.0007554300000000014, 0.0007554450000000004, 0.0007554580000000005, 0.0007554030000000017, 0.000755444000000001, 0.000755361000000003, 0.0007554580000000075, 0.0007553200000000038, 0.0007553619999999955, 0.0007554160000000087, 0.0007553890000000091, 0.0007554859999999997, 0.0007553890000000091, 0.0007553889999999952, 0.0007553749999999887, 0.0007553750000000026, 0.0007554030000000017, 0.0007553050000000117, 0.0007552920000000046, 0.0007553470000000034, 0.0007553750000000026, 0.0007553890000000091, 0.0007553750000000026, 0.0007554030000000017, 0.0007554580000000005, 0.0007554159999999949, 0.0007554160000000087, 0.0007553889999999952, 0.0007554719999999931]</msg>
<status status="PASS" starttime="20201029 09:34:31.134" endtime="20201029 09:34:31.136"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.129" endtime="20201029 09:34:31.136"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.712" endtime="20201029 09:34:31.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.689" endtime="20201029 09:34:31.137"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.139" endtime="20201029 09:34:31.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.138" endtime="20201029 09:34:31.159"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.167" endtime="20201029 09:34:31.259"></status>
</kw>
<msg timestamp="20201029 09:34:31.260" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.166" endtime="20201029 09:34:31.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.262" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.261" endtime="20201029 09:34:31.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.263" endtime="20201029 09:34:31.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.163" endtime="20201029 09:34:31.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.161" endtime="20201029 09:34:31.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.273" endtime="20201029 09:34:31.591"></status>
</kw>
<msg timestamp="20201029 09:34:31.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017663139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.271" endtime="20201029 09:34:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017663139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.595" endtime="20201029 09:34:31.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.603" endtime="20201029 09:34:31.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.269" endtime="20201029 09:34:31.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.267" endtime="20201029 09:34:31.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.609" level="INFO">${PHILIP_RES} = [{'diff': 0.0007941939999999981}, {'diff': 0.000792583999999999}, {'diff': 0.0007925279999999972}, {'diff': 0.0007925420000000002}, {'diff': 0.000792583000000003}, {'diff': 0.000792583000000003}, {'di...</msg>
<status status="PASS" starttime="20201029 09:34:31.606" endtime="20201029 09:34:31.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.613" level="INFO">${RESULT} = {'diff': [0.0007941939999999981, 0.000792583999999999, 0.0007925279999999972, 0.0007925420000000002, 0.000792583000000003, 0.000792583000000003, 0.0007926669999999969, 0.0007924999999999981, 0.0007925...</msg>
<status status="PASS" starttime="20201029 09:34:31.610" endtime="20201029 09:34:31.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.618" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.617" endtime="20201029 09:34:31.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.620" level="INFO">VALUE: [0.0007941939999999981, 0.000792583999999999, 0.0007925279999999972, 0.0007925420000000002, 0.000792583000000003, 0.000792583000000003, 0.0007926669999999969, 0.0007924999999999981, 0.0007925559999999998, 0.0007925270000000012, 0.0007925280000000007, 0.0007925410000000008, 0.000792583999999999, 0.0007925410000000008, 0.0007925699999999994, 0.000792596999999999, 0.0007925420000000002, 0.0007924720000000024, 0.0007925410000000008, 0.0007925699999999994, 0.0007925689999999999, 0.0007925420000000002, 0.0007925410000000008, 0.0007925280000000007, 0.0007924450000000027, 0.0007924309999999962, 0.0007924999999999946, 0.0007925000000000015, 0.0007925139999999942, 0.0007925000000000015, 0.0007925139999999942, 0.0007924450000000027, 0.0007925139999999942, 0.0007925550000000003, 0.000792612000000012, 0.0007925969999999921, 0.0007925270000000012, 0.0007925280000000007, 0.0007925550000000003, 0.0007925000000000015, 0.0007925559999999998, 0.0007924579999999959, 0.0007925139999999942, 0.0007925139999999942, 0.000792514000000008, 0.000792514000000008, 0.0007925699999999924, 0.0007925270000000012, 0.0007925270000000012, 0.000792514000000008]</msg>
<status status="PASS" starttime="20201029 09:34:31.619" endtime="20201029 09:34:31.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.614" endtime="20201029 09:34:31.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.160" endtime="20201029 09:34:31.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.137" endtime="20201029 09:34:31.623"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.625" endtime="20201029 09:34:31.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.624" endtime="20201029 09:34:31.645"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.653" endtime="20201029 09:34:31.748"></status>
</kw>
<msg timestamp="20201029 09:34:31.749" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.651" endtime="20201029 09:34:31.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.751" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.750" endtime="20201029 09:34:31.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.752" endtime="20201029 09:34:31.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.649" endtime="20201029 09:34:31.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.647" endtime="20201029 09:34:31.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.761" endtime="20201029 09:34:32.048"></status>
</kw>
<msg timestamp="20201029 09:34:32.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018485292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.760" endtime="20201029 09:34:32.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018485292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.052" endtime="20201029 09:34:32.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.059" endtime="20201029 09:34:32.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.757" endtime="20201029 09:34:32.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.755" endtime="20201029 09:34:32.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.066" level="INFO">${PHILIP_RES} = [{'diff': 0.0008320979999999999}, {'diff': 0.0008304030000000004}, {'diff': 0.0008304999999999979}, {'diff': 0.0008305280000000005}, {'diff': 0.0008305689999999998}, {'diff': 0.0008304860000000018}, {...</msg>
<status status="PASS" starttime="20201029 09:34:32.063" endtime="20201029 09:34:32.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.071" level="INFO">${RESULT} = {'diff': [0.0008320979999999999, 0.0008304030000000004, 0.0008304999999999979, 0.0008305280000000005, 0.0008305689999999998, 0.0008304860000000018, 0.0008304579999999992, 0.0008304579999999992, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:34:32.067" endtime="20201029 09:34:32.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.075" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.074" endtime="20201029 09:34:32.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.077" level="INFO">VALUE: [0.0008320979999999999, 0.0008304030000000004, 0.0008304999999999979, 0.0008305280000000005, 0.0008305689999999998, 0.0008304860000000018, 0.0008304579999999992, 0.0008304579999999992, 0.0008304999999999979, 0.0008304449999999991, 0.000830417, 0.0008304999999999979, 0.0008304309999999995, 0.0008304869999999978, 0.0008304449999999991, 0.0008304579999999992, 0.0008304859999999983, 0.0008304859999999983, 0.0008304309999999995, 0.0008304579999999992, 0.0008303749999999943, 0.0008305409999999971, 0.0008305420000000036, 0.0008304719999999988, 0.000830512999999998, 0.0008304859999999983, 0.0008305420000000036, 0.0008304299999999931, 0.0008304439999999996, 0.0008304719999999988, 0.0008304999999999979, 0.0008305140000000044, 0.0008305420000000036, 0.0008305280000000109, 0.0008305140000000044, 0.0008305700000000027, 0.0008304999999999979, 0.0008305420000000036, 0.0008304999999999979, 0.0008305690000000032, 0.000830527999999997, 0.0008304999999999979, 0.0008304439999999996, 0.0008304719999999988, 0.0008304860000000053, 0.0008304310000000065, 0.0008304449999999991, 0.0008303749999999943, 0.0008304580000000061, 0.0008304860000000053]</msg>
<status status="PASS" starttime="20201029 09:34:32.076" endtime="20201029 09:34:32.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.072" endtime="20201029 09:34:32.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.645" endtime="20201029 09:34:32.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.623" endtime="20201029 09:34:32.079"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.082" endtime="20201029 09:34:32.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.080" endtime="20201029 09:34:32.102"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.110" endtime="20201029 09:34:32.209"></status>
</kw>
<msg timestamp="20201029 09:34:32.210" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.108" endtime="20201029 09:34:32.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.215" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.212" endtime="20201029 09:34:32.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.218" endtime="20201029 09:34:32.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.105" endtime="20201029 09:34:32.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.104" endtime="20201029 09:34:32.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.236" endtime="20201029 09:34:32.536"></status>
</kw>
<msg timestamp="20201029 09:34:32.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017589861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018460417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.233" endtime="20201029 09:34:32.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017589861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018460417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.540" endtime="20201029 09:34:32.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.547" endtime="20201029 09:34:32.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.228" endtime="20201029 09:34:32.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.224" endtime="20201029 09:34:32.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.554" level="INFO">${PHILIP_RES} = [{'diff': 0.0008705560000000015}, {'diff': 0.0008691250000000018}, {'diff': 0.0008690690000000001}, {'diff': 0.0008691249999999984}, {'diff': 0.0008690829999999997}, {'diff': 0.0008691390000000014}, {...</msg>
<status status="PASS" starttime="20201029 09:34:32.551" endtime="20201029 09:34:32.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.558" level="INFO">${RESULT} = {'diff': [0.0008705560000000015, 0.0008691250000000018, 0.0008690690000000001, 0.0008691249999999984, 0.0008690829999999997, 0.0008691390000000014, 0.0008691669999999971, 0.0008690979999999987, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:34:32.555" endtime="20201029 09:34:32.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.562" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.561" endtime="20201029 09:34:32.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.564" level="INFO">VALUE: [0.0008705560000000015, 0.0008691250000000018, 0.0008690690000000001, 0.0008691249999999984, 0.0008690829999999997, 0.0008691390000000014, 0.0008691669999999971, 0.0008690979999999987, 0.0008691250000000053, 0.0008692219999999959, 0.0008691389999999979, 0.000869250000000002, 0.000869167000000004, 0.000869056, 0.0008691940000000037, 0.0008691940000000037, 0.000869152000000005, 0.0008691529999999975, 0.0008691529999999975, 0.0008692360000000024, 0.0008691800000000041, 0.0008692079999999963, 0.0008692230000000023, 0.0008692360000000024, 0.0008692219999999959, 0.0008692780000000011, 0.0008692359999999955, 0.0008692909999999943, 0.0008691110000000057, 0.0008691390000000049, 0.0008691390000000049, 0.0008691529999999975, 0.0008691390000000049, 0.0008691110000000057, 0.0008691950000000032, 0.0008692359999999955, 0.0008691660000000045, 0.0008691529999999975, 0.0008690690000000001, 0.0008690690000000001, 0.0008692090000000097, 0.0008691809999999967, 0.000869250000000002, 0.0008691529999999975, 0.000869250000000002, 0.0008691950000000032, 0.0008691809999999967, 0.0008691799999999972, 0.0008691390000000049, 0.000869167000000004]</msg>
<status status="PASS" starttime="20201029 09:34:32.563" endtime="20201029 09:34:32.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.559" endtime="20201029 09:34:32.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.102" endtime="20201029 09:34:32.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.080" endtime="20201029 09:34:32.566"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.569" endtime="20201029 09:34:32.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.567" endtime="20201029 09:34:32.589"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.597" endtime="20201029 09:34:32.699"></status>
</kw>
<msg timestamp="20201029 09:34:32.699" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.595" endtime="20201029 09:34:32.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.702" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.700" endtime="20201029 09:34:32.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.703" endtime="20201029 09:34:32.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.593" endtime="20201029 09:34:32.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.591" endtime="20201029 09:34:32.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.713" endtime="20201029 09:34:33.001"></status>
</kw>
<msg timestamp="20201029 09:34:33.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017489444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.711" endtime="20201029 09:34:33.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017489444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018399444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.005" endtime="20201029 09:34:33.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.012" endtime="20201029 09:34:33.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.709" endtime="20201029 09:34:33.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.707" endtime="20201029 09:34:33.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.019" level="INFO">${PHILIP_RES} = [{'diff': 0.0009100000000000011}, {'diff': 0.0009084170000000016}, {'diff': 0.0009083890000000025}, {'diff': 0.0009084580000000009}, {'diff': 0.0009084720000000004}, {'diff': 0.0009084589999999969}, {...</msg>
<status status="PASS" starttime="20201029 09:34:33.015" endtime="20201029 09:34:33.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.022" level="INFO">${RESULT} = {'diff': [0.0009100000000000011, 0.0009084170000000016, 0.0009083890000000025, 0.0009084580000000009, 0.0009084720000000004, 0.0009084589999999969, 0.0009084309999999977, 0.0009085409999999954, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:34:33.019" endtime="20201029 09:34:33.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.027" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.026" endtime="20201029 09:34:33.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.029" level="INFO">VALUE: [0.0009100000000000011, 0.0009084170000000016, 0.0009083890000000025, 0.0009084580000000009, 0.0009084720000000004, 0.0009084589999999969, 0.0009084309999999977, 0.0009085409999999954, 0.000908486, 0.0009084580000000009, 0.0009084870000000064, 0.0009085000000000065, 0.0009085140000000061, 0.0009084999999999996, 0.0009085700000000044, 0.0009084439999999944, 0.0009084310000000012, 0.000908486, 0.0009085139999999992, 0.0009084720000000004, 0.0009084999999999996, 0.0009084580000000009, 0.0009084720000000004, 0.0009084720000000074, 0.0009084310000000012, 0.0009084720000000074, 0.0009084300000000017, 0.000908486, 0.0009085000000000065, 0.0009085419999999983, 0.0009085560000000048, 0.0009085830000000045, 0.0009085550000000053, 0.0009084720000000074, 0.000908568999999998, 0.0009085000000000065, 0.0009085280000000057, 0.0009085139999999992, 0.0009085420000000122, 0.0009084439999999944, 0.000908472999999993, 0.0009084169999999947, 0.0009084719999999935, 0.0009084720000000074, 0.0009085280000000057, 0.0009084719999999935, 0.0009084590000000003, 0.0009085279999999918, 0.0009085139999999992, 0.0009085139999999992]</msg>
<status status="PASS" starttime="20201029 09:34:33.028" endtime="20201029 09:34:33.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.023" endtime="20201029 09:34:33.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.589" endtime="20201029 09:34:33.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.567" endtime="20201029 09:34:33.032"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.034" endtime="20201029 09:34:33.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.033" endtime="20201029 09:34:33.056"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.073" endtime="20201029 09:34:33.181"></status>
</kw>
<msg timestamp="20201029 09:34:33.182" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.069" endtime="20201029 09:34:33.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.187" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.184" endtime="20201029 09:34:33.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.189" endtime="20201029 09:34:33.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.064" endtime="20201029 09:34:33.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.060" endtime="20201029 09:34:33.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.208" endtime="20201029 09:34:33.504"></status>
</kw>
<msg timestamp="20201029 09:34:33.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029591736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030541917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.205" endtime="20201029 09:34:33.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029591736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030541917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.508" endtime="20201029 09:34:33.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.516" endtime="20201029 09:34:33.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.199" endtime="20201029 09:34:33.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.196" endtime="20201029 09:34:33.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.522" level="INFO">${PHILIP_RES} = [{'diff': 0.0009501809999999979}, {'diff': 0.0009487360000000056}, {'diff': 0.0009487499999999982}, {'diff': 0.0009486390000000011}, {'diff': 0.0009487079999999995}, {'diff': 0.0009487219999999991}, {...</msg>
<status status="PASS" starttime="20201029 09:34:33.519" endtime="20201029 09:34:33.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.527" level="INFO">${RESULT} = {'diff': [0.0009501809999999979, 0.0009487360000000056, 0.0009487499999999982, 0.0009486390000000011, 0.0009487079999999995, 0.0009487219999999991, 0.0009487499999999982, 0.0009487219999999991, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:34:33.523" endtime="20201029 09:34:33.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.531" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.530" endtime="20201029 09:34:33.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.533" level="INFO">VALUE: [0.0009501809999999979, 0.0009487360000000056, 0.0009487499999999982, 0.0009486390000000011, 0.0009487079999999995, 0.0009487219999999991, 0.0009487499999999982, 0.0009487219999999991, 0.0009488059999999965, 0.0009486670000000003, 0.0009487219999999991, 0.0009486670000000003, 0.0009486530000000007, 0.0009486800000000004, 0.0009486800000000004, 0.0009486530000000007, 0.0009486250000000016, 0.0009486810000000068, 0.0009486939999999999, 0.0009486250000000085, 0.0009486529999999938, 0.0009486249999999946, 0.0009486390000000011, 0.0009486799999999934, 0.0009486530000000076, 0.0009485840000000023, 0.0009486390000000011, 0.0009486660000000008, 0.0009486800000000073, 0.0009487090000000059, 0.0009487080000000064, 0.0009486939999999999, 0.0009486519999999943, 0.0009487360000000056, 0.0009486939999999999, 0.0009487779999999973, 0.0009487229999999985, 0.0009487640000000047, 0.0009487499999999982, 0.0009486939999999999, 0.0009487630000000052, 0.0009487219999999991, 0.0009486519999999943, 0.0009487219999999991, 0.0009486660000000008, 0.0009486809999999929, 0.0009486529999999938, 0.0009487219999999991, 0.0009487220000000129, 0.00094883300000001]</msg>
<status status="PASS" starttime="20201029 09:34:33.532" endtime="20201029 09:34:33.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.528" endtime="20201029 09:34:33.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.057" endtime="20201029 09:34:33.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.032" endtime="20201029 09:34:33.535"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.538" endtime="20201029 09:34:33.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.536" endtime="20201029 09:34:33.558"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.565" endtime="20201029 09:34:33.675"></status>
</kw>
<msg timestamp="20201029 09:34:33.675" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.564" endtime="20201029 09:34:33.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.678" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.676" endtime="20201029 09:34:33.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.679" endtime="20201029 09:34:33.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.561" endtime="20201029 09:34:33.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.560" endtime="20201029 09:34:33.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.688" endtime="20201029 09:34:33.981"></status>
</kw>
<msg timestamp="20201029 09:34:33.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017374861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.686" endtime="20201029 09:34:33.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017374861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.989" endtime="20201029 09:34:34.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.006" endtime="20201029 09:34:34.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.684" endtime="20201029 09:34:34.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.682" endtime="20201029 09:34:34.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.020" level="INFO">${PHILIP_RES} = [{'diff': 0.0009911250000000024}, {'diff': 0.0009895690000000026}, {'diff': 0.0009896109999999979}, {'diff': 0.0009895980000000013}, {'diff': 0.0009897640000000006}, {'diff': 0.0009896390000000005}, {...</msg>
<status status="PASS" starttime="20201029 09:34:34.013" endtime="20201029 09:34:34.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.028" level="INFO">${RESULT} = {'diff': [0.0009911250000000024, 0.0009895690000000026, 0.0009896109999999979, 0.0009895980000000013, 0.0009897640000000006, 0.0009896390000000005, 0.0009894860000000012, 0.0009895970000000018, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:34:34.022" endtime="20201029 09:34:34.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.037" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.035" endtime="20201029 09:34:34.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.042" level="INFO">VALUE: [0.0009911250000000024, 0.0009895690000000026, 0.0009896109999999979, 0.0009895980000000013, 0.0009897640000000006, 0.0009896390000000005, 0.0009894860000000012, 0.0009895970000000018, 0.000989653, 0.0009895560000000025, 0.0009896390000000005, 0.0009896389999999936, 0.000989653, 0.0009897629999999977, 0.000989625000000001, 0.0009895699999999952, 0.0009896110000000014, 0.0009896110000000014, 0.0009895700000000021, 0.0009895830000000022, 0.0009895840000000017, 0.0009895410000000035, 0.000989527000000004, 0.0009895689999999957, 0.0009895830000000022, 0.0009894450000000055, 0.0009896110000000014, 0.0009895560000000025, 0.0009895969999999948, 0.0009895830000000022, 0.0009896390000000005, 0.0009895829999999883, 0.00098954200000001, 0.0009895830000000022, 0.0009896110000000014, 0.0009895830000000022, 0.0009895969999999948, 0.0009895280000000034, 0.0009895830000000022, 0.0009896109999999875, 0.0009896250000000079, 0.0009895689999999957, 0.0009894720000000051, 0.000989541999999996, 0.0009895140000000108, 0.0009895140000000108, 0.000989555000000003, 0.0009895280000000034, 0.0009896109999999875, 0.0009895280000000034]</msg>
<status status="PASS" starttime="20201029 09:34:34.039" endtime="20201029 09:34:34.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.030" endtime="20201029 09:34:34.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.558" endtime="20201029 09:34:34.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.535" endtime="20201029 09:34:34.046"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.051" endtime="20201029 09:34:34.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.048" endtime="20201029 09:34:34.071"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.079" endtime="20201029 09:34:34.192"></status>
</kw>
<msg timestamp="20201029 09:34:34.193" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.078" endtime="20201029 09:34:34.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.195" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.194" endtime="20201029 09:34:34.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.196" endtime="20201029 09:34:34.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.075" endtime="20201029 09:34:34.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.073" endtime="20201029 09:34:34.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.208" endtime="20201029 09:34:34.498"></status>
</kw>
<msg timestamp="20201029 09:34:34.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017534986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.207" endtime="20201029 09:34:34.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017534986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.502" endtime="20201029 09:34:34.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.509" endtime="20201029 09:34:34.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.204" endtime="20201029 09:34:34.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.203" endtime="20201029 09:34:34.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.516" level="INFO">${PHILIP_RES} = [{'diff': 0.0010327080000000002}, {'diff': 0.0010312359999999979}, {'diff': 0.0010312219999999983}, {'diff': 0.0010311250000000008}, {'diff': 0.0010311110000000012}, {'diff': 0.001031166}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:34:34.513" endtime="20201029 09:34:34.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.520" level="INFO">${RESULT} = {'diff': [0.0010327080000000002, 0.0010312359999999979, 0.0010312219999999983, 0.0010311250000000008, 0.0010311110000000012, 0.001031166, 0.0010311529999999965, 0.0010311800000000065, 0.00103116699999...</msg>
<status status="PASS" starttime="20201029 09:34:34.517" endtime="20201029 09:34:34.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.524" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.523" endtime="20201029 09:34:34.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.526" level="INFO">VALUE: [0.0010327080000000002, 0.0010312359999999979, 0.0010312219999999983, 0.0010311250000000008, 0.0010311110000000012, 0.001031166, 0.0010311529999999965, 0.0010311800000000065, 0.0010311669999999995, 0.0010311520000000005, 0.0010311250000000008, 0.001031153, 0.001031083000000002, 0.0010311390000000004, 0.001031166, 0.0010311250000000008, 0.001031153, 0.0010311250000000008, 0.0010311799999999996, 0.0010312219999999983, 0.0010311390000000004, 0.001031083000000002, 0.0010312219999999983, 0.0010311249999999939, 0.0010311949999999986, 0.0010312079999999918, 0.00103126399999999, 0.0010311669999999995, 0.001031181000000006, 0.0010311939999999992, 0.0010311669999999995, 0.0010311949999999986, 0.0010312089999999913, 0.0010312360000000048, 0.0010312360000000048, 0.0010311939999999992, 0.0010312499999999974, 0.0010312499999999974, 0.0010311390000000004, 0.0010312499999999974, 0.0010311939999999992, 0.0010311250000000077, 0.0010312080000000057, 0.001031264000000004, 0.0010312499999999974, 0.0010311390000000004, 0.0010311530000000069, 0.0010311250000000077, 0.0010311669999999995, 0.0010311520000000074]</msg>
<status status="PASS" starttime="20201029 09:34:34.525" endtime="20201029 09:34:34.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.521" endtime="20201029 09:34:34.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.072" endtime="20201029 09:34:34.529"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.046" endtime="20201029 09:34:34.529"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.531" endtime="20201029 09:34:34.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.530" endtime="20201029 09:34:34.551"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.559" endtime="20201029 09:34:34.676"></status>
</kw>
<msg timestamp="20201029 09:34:34.676" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.557" endtime="20201029 09:34:34.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.679" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.678" endtime="20201029 09:34:34.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.680" endtime="20201029 09:34:34.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.555" endtime="20201029 09:34:34.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.553" endtime="20201029 09:34:34.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.689" endtime="20201029 09:34:34.990"></status>
</kw>
<msg timestamp="20201029 09:34:34.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.687" endtime="20201029 09:34:34.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.994" endtime="20201029 09:34:35.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.001" endtime="20201029 09:34:35.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.685" endtime="20201029 09:34:35.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.683" endtime="20201029 09:34:35.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.008" level="INFO">${PHILIP_RES} = [{'diff': 0.0010750840000000005}, {'diff': 0.001073596999999999}, {'diff': 0.001073681}, {'diff': 0.0010736670000000004}, {'diff': 0.001073569}, {'diff': 0.0010737500000000018}, {'diff': 0.00107365300...</msg>
<status status="PASS" starttime="20201029 09:34:35.005" endtime="20201029 09:34:35.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.013" level="INFO">${RESULT} = {'diff': [0.0010750840000000005, 0.001073596999999999, 0.001073681, 0.0010736670000000004, 0.001073569, 0.0010737500000000018, 0.0010736530000000008, 0.0010736109999999952, 0.0010735690000000034, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:35.009" endtime="20201029 09:34:35.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.017" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.016" endtime="20201029 09:34:35.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.019" level="INFO">VALUE: [0.0010750840000000005, 0.001073596999999999, 0.001073681, 0.0010736670000000004, 0.001073569, 0.0010737500000000018, 0.0010736530000000008, 0.0010736109999999952, 0.0010735690000000034, 0.0010735550000000038, 0.001073500000000005, 0.001073471999999999, 0.0010735280000000041, 0.001073583000000003, 0.001073499999999998, 0.001073500000000005, 0.0010735689999999964, 0.0010735420000000037, 0.001073583000000003, 0.001073499999999998, 0.001073499999999998, 0.0010734440000000067, 0.001073500000000005, 0.0010734439999999928, 0.0010735560000000033, 0.001073583000000003, 0.001073583000000003, 0.0010734589999999988, 0.0010735410000000112, 0.0010736249999999947, 0.001073583000000003, 0.0010735420000000107, 0.001073582999999989, 0.001073583000000003, 0.0010735689999999964, 0.0010735279999999903, 0.0010736390000000012, 0.0010735969999999956, 0.0010735560000000033, 0.001073583000000003, 0.0010735279999999903, 0.001073569999999996, 0.0010736529999999939, 0.0010735969999999956, 0.0010736390000000012, 0.001073583000000003, 0.0010735689999999964, 0.0010737219999999992, 0.0010735140000000115, 0.001073528000000018]</msg>
<status status="PASS" starttime="20201029 09:34:35.018" endtime="20201029 09:34:35.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.013" endtime="20201029 09:34:35.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.552" endtime="20201029 09:34:35.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.529" endtime="20201029 09:34:35.021"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.023" endtime="20201029 09:34:35.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.022" endtime="20201029 09:34:35.043"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.051" endtime="20201029 09:34:35.173"></status>
</kw>
<msg timestamp="20201029 09:34:35.173" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.050" endtime="20201029 09:34:35.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.176" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.174" endtime="20201029 09:34:35.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.177" endtime="20201029 09:34:35.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.047" endtime="20201029 09:34:35.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.045" endtime="20201029 09:34:35.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.186" endtime="20201029 09:34:35.476"></status>
</kw>
<msg timestamp="20201029 09:34:35.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018282792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.184" endtime="20201029 09:34:35.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018282792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.480" endtime="20201029 09:34:35.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.488" endtime="20201029 09:34:35.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.182" endtime="20201029 09:34:35.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.180" endtime="20201029 09:34:35.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.494" level="INFO">${PHILIP_RES} = [{'diff': 0.0011183890000000009}, {'diff': 0.0011169160000000025}, {'diff': 0.0011168889999999994}, {'diff': 0.0011168470000000007}, {'diff': 0.001116833000000001}, {'diff': 0.001116805000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:35.491" endtime="20201029 09:34:35.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.498" level="INFO">${RESULT} = {'diff': [0.0011183890000000009, 0.0011169160000000025, 0.0011168889999999994, 0.0011168470000000007, 0.001116833000000001, 0.001116805000000002, 0.0011167639999999993, 0.0011168469999999972, 0.001116...</msg>
<status status="PASS" starttime="20201029 09:34:35.495" endtime="20201029 09:34:35.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.502" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.501" endtime="20201029 09:34:35.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.505" level="INFO">VALUE: [0.0011183890000000009, 0.0011169160000000025, 0.0011168889999999994, 0.0011168470000000007, 0.001116833000000001, 0.001116805000000002, 0.0011167639999999993, 0.0011168469999999972, 0.001116818999999998, 0.001116901999999996, 0.0011167360000000001, 0.001116805999999998, 0.0011168749999999963, 0.0011168469999999972, 0.0011168880000000034, 0.0011169030000000024, 0.001116818999999998, 0.0011168610000000037, 0.001116834000000004, 0.001116888999999996, 0.0011166950000000009, 0.0011168330000000115, 0.0011167780000000127, 0.0011168890000000098, 0.001116888999999996, 0.0011168329999999976, 0.0011169310000000016, 0.0011167919999999915, 0.0011168610000000107, 0.001116916999999995, 0.0011168609999999968, 0.0011169860000000004, 0.0011169030000000024, 0.001116916999999995, 0.001116902000000003, 0.0011168329999999976, 0.0011168330000000115, 0.001116805999999998, 0.001116888999999996, 0.0011168049999999985, 0.0011167779999999988, 0.0011169310000000016, 0.0011169030000000024, 0.0011167919999999915, 0.0011167779999999988, 0.0011167779999999988, 0.0011168610000000107, 0.0011167639999999923, 0.001116888999999982, 0.0011169299999999882]</msg>
<status status="PASS" starttime="20201029 09:34:35.503" endtime="20201029 09:34:35.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.499" endtime="20201029 09:34:35.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.044" endtime="20201029 09:34:35.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.021" endtime="20201029 09:34:35.507"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.509" endtime="20201029 09:34:35.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.508" endtime="20201029 09:34:35.529"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.537" endtime="20201029 09:34:35.663"></status>
</kw>
<msg timestamp="20201029 09:34:35.664" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.535" endtime="20201029 09:34:35.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.669" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.666" endtime="20201029 09:34:35.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.671" endtime="20201029 09:34:35.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.533" endtime="20201029 09:34:35.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.531" endtime="20201029 09:34:35.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.692" endtime="20201029 09:34:36.000"></status>
</kw>
<msg timestamp="20201029 09:34:36.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017584486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018746639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.689" endtime="20201029 09:34:36.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017584486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018746639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.004" endtime="20201029 09:34:36.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.012" endtime="20201029 09:34:36.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.683" endtime="20201029 09:34:36.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.680" endtime="20201029 09:34:36.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.018" level="INFO">${PHILIP_RES} = [{'diff': 0.001162152999999999}, {'diff': 0.001160556}, {'diff': 0.001160610999999999}, {'diff': 0.0011605979999999988}, {'diff': 0.0011606659999999977}, {'diff': 0.001160610999999999}, {'diff': 0.001...</msg>
<status status="PASS" starttime="20201029 09:34:36.015" endtime="20201029 09:34:36.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.022" level="INFO">${RESULT} = {'diff': [0.001162152999999999, 0.001160556, 0.001160610999999999, 0.0011605979999999988, 0.0011606659999999977, 0.001160610999999999, 0.001160610999999999, 0.0011605000000000018, 0.001160610999999999...</msg>
<status status="PASS" starttime="20201029 09:34:36.019" endtime="20201029 09:34:36.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.027" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.026" endtime="20201029 09:34:36.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.029" level="INFO">VALUE: [0.001162152999999999, 0.001160556, 0.001160610999999999, 0.0011605979999999988, 0.0011606659999999977, 0.001160610999999999, 0.001160610999999999, 0.0011605000000000018, 0.001160610999999999, 0.001160610999999999, 0.001160638999999998, 0.0011606249999999985, 0.0011607360000000025, 0.0011607359999999955, 0.001160722000000003, 0.0011606529999999976, 0.001160638999999998, 0.001160610999999999, 0.0011605980000000057, 0.0011606529999999976, 0.0011606529999999976, 0.0011607079999999964, 0.0011606110000000058, 0.0011605969999999993, 0.001160638999999991, 0.0011605830000000067, 0.0011606799999999973, 0.0011605969999999993, 0.0011607090000000098, 0.0011606110000000058, 0.0011605140000000014, 0.0011606249999999985, 0.0011606669999999902, 0.0011606530000000115, 0.0011607080000000103, 0.0011606670000000041, 0.0011606809999999967, 0.001160722000000003, 0.001160639000000005, 0.0011606249999999985, 0.0011605699999999997, 0.0011606800000000111, 0.0011606249999999985, 0.0011605830000000067, 0.0011606110000000058, 0.0011604720000000096, 0.0011605419999999866, 0.0011604869999999878, 0.0011605140000000014, 0.001160638999999991]</msg>
<status status="PASS" starttime="20201029 09:34:36.028" endtime="20201029 09:34:36.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.023" endtime="20201029 09:34:36.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.530" endtime="20201029 09:34:36.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.507" endtime="20201029 09:34:36.032"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.034" endtime="20201029 09:34:36.053"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.033" endtime="20201029 09:34:36.054"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.062" endtime="20201029 09:34:36.190"></status>
</kw>
<msg timestamp="20201029 09:34:36.191" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.060" endtime="20201029 09:34:36.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.193" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.192" endtime="20201029 09:34:36.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.194" endtime="20201029 09:34:36.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.058" endtime="20201029 09:34:36.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.056" endtime="20201029 09:34:36.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.203" endtime="20201029 09:34:36.492"></status>
</kw>
<msg timestamp="20201029 09:34:36.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.202" endtime="20201029 09:34:36.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.496" endtime="20201029 09:34:36.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.503" endtime="20201029 09:34:36.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.199" endtime="20201029 09:34:36.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.197" endtime="20201029 09:34:36.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.513" level="INFO">${PHILIP_RES} = [{'diff': 0.0012069440000000015}, {'diff': 0.0012054300000000004}, {'diff': 0.0012053749999999981}, {'diff': 0.001205346999999999}, {'diff': 0.001205361000000002}, {'diff': 0.0012053889999999977}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:36.507" endtime="20201029 09:34:36.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.523" level="INFO">${RESULT} = {'diff': [0.0012069440000000015, 0.0012054300000000004, 0.0012053749999999981, 0.001205346999999999, 0.001205361000000002, 0.0012053889999999977, 0.0012054170000000003, 0.0012053750000000016, 0.001205...</msg>
<status status="PASS" starttime="20201029 09:34:36.515" endtime="20201029 09:34:36.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.532" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.530" endtime="20201029 09:34:36.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.537" level="INFO">VALUE: [0.0012069440000000015, 0.0012054300000000004, 0.0012053749999999981, 0.001205346999999999, 0.001205361000000002, 0.0012053889999999977, 0.0012054170000000003, 0.0012053750000000016, 0.0012053049999999968, 0.0012053330000000029, 0.0012053189999999964, 0.0012052079999999993, 0.0012052920000000036, 0.0012052229999999983, 0.0012052359999999984, 0.001205361000000002, 0.0012054579999999995, 0.0012054030000000007, 0.0012054169999999934, 0.001205361000000002, 0.0012053049999999899, 0.0012053750000000085, 0.0012054170000000003, 0.001205361000000002, 0.0012053890000000012, 0.001205471999999999, 0.0012054160000000008, 0.0012053469999999955, 0.0012053469999999955, 0.001205361000000002, 0.001205361000000002, 0.001205361000000002, 0.0012052909999999972, 0.0012053749999999946, 0.0012053749999999946, 0.0012053330000000029, 0.0012053889999999873, 0.0012054029999999938, 0.0012053330000000029, 0.0012053469999999955, 0.0012053749999999946, 0.0012053330000000029, 0.001205361000000002, 0.001205361000000002, 0.0012054029999999938, 0.0012053609999999881, 0.0012053749999999808, 0.0012053469999999955, 0.0012053189999999825, 0.0012052220000000058]</msg>
<status status="PASS" starttime="20201029 09:34:36.534" endtime="20201029 09:34:36.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.525" endtime="20201029 09:34:36.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.054" endtime="20201029 09:34:36.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.032" endtime="20201029 09:34:36.546"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.551" endtime="20201029 09:34:36.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.548" endtime="20201029 09:34:36.574"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.591" endtime="20201029 09:34:36.724"></status>
</kw>
<msg timestamp="20201029 09:34:36.725" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.587" endtime="20201029 09:34:36.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.727" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.726" endtime="20201029 09:34:36.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.728" endtime="20201029 09:34:36.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.582" endtime="20201029 09:34:36.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.578" endtime="20201029 09:34:36.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.737" endtime="20201029 09:34:37.028"></status>
</kw>
<msg timestamp="20201029 09:34:37.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030168264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031420583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.736" endtime="20201029 09:34:37.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030168264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031420583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.032" endtime="20201029 09:34:37.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.040" endtime="20201029 09:34:37.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.733" endtime="20201029 09:34:37.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.731" endtime="20201029 09:34:37.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.046" level="INFO">${PHILIP_RES} = [{'diff': 0.0012523190000000017}, {'diff': 0.001250667000000004}, {'diff': 0.0012507360000000023}, {'diff': 0.001250778000000001}, {'diff': 0.0012507079999999962}, {'diff': 0.0012506949999999961}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:37.043" endtime="20201029 09:34:37.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.050" level="INFO">${RESULT} = {'diff': [0.0012523190000000017, 0.001250667000000004, 0.0012507360000000023, 0.001250778000000001, 0.0012507079999999962, 0.0012506949999999961, 0.001250695000000003, 0.001250680000000004, 0.00125063...</msg>
<status status="PASS" starttime="20201029 09:34:37.047" endtime="20201029 09:34:37.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.055" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.054" endtime="20201029 09:34:37.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.057" level="INFO">VALUE: [0.0012523190000000017, 0.001250667000000004, 0.0012507360000000023, 0.001250778000000001, 0.0012507079999999962, 0.0012506949999999961, 0.001250695000000003, 0.001250680000000004, 0.0012506389999999978, 0.0012506389999999978, 0.0012506390000000048, 0.0012507089999999957, 0.0012506249999999983, 0.0012505410000000078, 0.0012506529999999905, 0.0012506530000000043, 0.001250651999999991, 0.0012507219999999958, 0.001250806000000007, 0.0012507220000000097, 0.0012506939999999966, 0.001250791000000001, 0.0012508189999999864, 0.0012508889999999911, 0.0012507219999999958, 0.0012507640000000014, 0.0012507359999999884, 0.001250749999999995, 0.0012507370000000018, 0.0012507090000000026, 0.0012506659999999975, 0.0012505830000000134, 0.0012506530000000043, 0.0012506809999999896, 0.0012505969999999922, 0.0012506380000000122, 0.0012506939999999966, 0.001250597000000006, 0.0012506670000000109, 0.0012506530000000182, 0.0012507360000000023, 0.001250583999999999, 0.0012506119999999843, 0.0012506379999999984, 0.0012506379999999984, 0.0012505829999999996, 0.0012504720000000025, 0.0012506670000000109, 0.0012506660000000114, 0.0012507220000000097]</msg>
<status status="PASS" starttime="20201029 09:34:37.056" endtime="20201029 09:34:37.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.051" endtime="20201029 09:34:37.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.575" endtime="20201029 09:34:37.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.547" endtime="20201029 09:34:37.059"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.061" endtime="20201029 09:34:37.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.060" endtime="20201029 09:34:37.081"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.090" endtime="20201029 09:34:37.226"></status>
</kw>
<msg timestamp="20201029 09:34:37.226" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.088" endtime="20201029 09:34:37.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.229" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.227" endtime="20201029 09:34:37.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.230" endtime="20201029 09:34:37.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.085" endtime="20201029 09:34:37.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.083" endtime="20201029 09:34:37.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.239" endtime="20201029 09:34:37.545"></status>
</kw>
<msg timestamp="20201029 09:34:37.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017695097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.238" endtime="20201029 09:34:37.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017695097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.552" endtime="20201029 09:34:37.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.560" endtime="20201029 09:34:37.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.235" endtime="20201029 09:34:37.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.234" endtime="20201029 09:34:37.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.566" level="INFO">${PHILIP_RES} = [{'diff': 0.0012981390000000002}, {'diff': 0.0012966389999999987}, {'diff': 0.001296597}, {'diff': 0.0012967640000000023}, {'diff': 0.0012966530000000018}, {'diff': 0.0012966109999999996}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:34:37.563" endtime="20201029 09:34:37.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.571" level="INFO">${RESULT} = {'diff': [0.0012981390000000002, 0.0012966389999999987, 0.001296597, 0.0012967640000000023, 0.0012966530000000018, 0.0012966109999999996, 0.0012965700000000038, 0.0012966109999999961, 0.00129661200000...</msg>
<status status="PASS" starttime="20201029 09:34:37.567" endtime="20201029 09:34:37.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.575" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.574" endtime="20201029 09:34:37.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.577" level="INFO">VALUE: [0.0012981390000000002, 0.0012966389999999987, 0.001296597, 0.0012967640000000023, 0.0012966530000000018, 0.0012966109999999996, 0.0012965700000000038, 0.0012966109999999961, 0.0012966120000000025, 0.0012965409999999983, 0.0012965840000000034, 0.0012967080000000006, 0.0012966530000000018, 0.0012967229999999996, 0.0012967500000000062, 0.0012967779999999984, 0.0012967080000000006, 0.0012967500000000062, 0.001296694000000001, 0.0012967499999999993, 0.0012967360000000067, 0.0012967499999999993, 0.0012967499999999993, 0.001296569999999997, 0.0012966250000000096, 0.0012966390000000022, 0.0012966120000000025, 0.0012967360000000067, 0.0012967220000000002, 0.001296709000000007, 0.0012967220000000002, 0.0012966799999999945, 0.001296680999999994, 0.001296611000000003, 0.0012967080000000075, 0.0012966800000000084, 0.001296694000000001, 0.0012966250000000096, 0.0012966519999999954, 0.001296694000000001, 0.0012967079999999936, 0.0012966119999999887, 0.0012967640000000058, 0.0012967499999999854, 0.0012966530000000087, 0.0012967229999999996, 0.0012967359999999928, 0.001296680999999994, 0.0012967229999999996, 0.0012966520000000092]</msg>
<status status="PASS" starttime="20201029 09:34:37.576" endtime="20201029 09:34:37.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.571" endtime="20201029 09:34:37.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.082" endtime="20201029 09:34:37.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.059" endtime="20201029 09:34:37.580"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.582" endtime="20201029 09:34:37.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.581" endtime="20201029 09:34:37.602"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.610" endtime="20201029 09:34:37.750"></status>
</kw>
<msg timestamp="20201029 09:34:37.751" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.609" endtime="20201029 09:34:37.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.753" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.752" endtime="20201029 09:34:37.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.754" endtime="20201029 09:34:37.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.606" endtime="20201029 09:34:37.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.604" endtime="20201029 09:34:37.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.763" endtime="20201029 09:34:38.053"></status>
</kw>
<msg timestamp="20201029 09:34:38.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017683694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01902875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:37.762" endtime="20201029 09:34:38.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017683694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01902875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:38.057" endtime="20201029 09:34:38.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.065" endtime="20201029 09:34:38.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.759" endtime="20201029 09:34:38.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.757" endtime="20201029 09:34:38.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.071" level="INFO">${PHILIP_RES} = [{'diff': 0.0013450560000000007}, {'diff': 0.001343528}, {'diff': 0.0013435549999999997}, {'diff': 0.0013434860000000014}, {'diff': 0.0013436530000000002}, {'diff': 0.0013435700000000023}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:34:38.068" endtime="20201029 09:34:38.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.076" level="INFO">${RESULT} = {'diff': [0.0013450560000000007, 0.001343528, 0.0013435549999999997, 0.0013434860000000014, 0.0013436530000000002, 0.0013435700000000023, 0.001343485999999998, 0.0013435420000000031, 0.001343513999999...</msg>
<status status="PASS" starttime="20201029 09:34:38.072" endtime="20201029 09:34:38.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.080" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.079" endtime="20201029 09:34:38.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.083" level="INFO">VALUE: [0.0013450560000000007, 0.001343528, 0.0013435549999999997, 0.0013434860000000014, 0.0013436530000000002, 0.0013435700000000023, 0.001343485999999998, 0.0013435420000000031, 0.001343513999999997, 0.0013435410000000036, 0.0013434999999999975, 0.0013435279999999966, 0.001343597000000002, 0.0013436390000000006, 0.0013436109999999946, 0.001343596999999995, 0.0013436530000000002, 0.0013436530000000002, 0.0013436530000000002, 0.0013437220000000055, 0.0013436670000000067, 0.001343625000000001, 0.001343708000000013, 0.0013435409999999898, 0.0013435410000000036, 0.0013435549999999963, 0.001343583999999995, 0.0013435559999999958, 0.0013436389999999937, 0.0013436939999999925, 0.0013435700000000023, 0.0013435690000000028, 0.001343514000000004, 0.0013435130000000045, 0.0013435419999999892, 0.0013435830000000093, 0.001343597000000002, 0.0013436110000000084, 0.0013436109999999946, 0.0013435980000000014, 0.0013435699999999884, 0.001343625000000015, 0.00134351399999999, 0.00134351399999999, 0.0013435420000000031, 0.001343597000000002, 0.0013434860000000048, 0.0013436390000000076, 0.0013434589999999913, 0.0013434719999999845]</msg>
<status status="PASS" starttime="20201029 09:34:38.081" endtime="20201029 09:34:38.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.077" endtime="20201029 09:34:38.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.603" endtime="20201029 09:34:38.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.580" endtime="20201029 09:34:38.085"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.087" endtime="20201029 09:34:38.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.085" endtime="20201029 09:34:38.107"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.115" endtime="20201029 09:34:38.261"></status>
</kw>
<msg timestamp="20201029 09:34:38.262" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.113" endtime="20201029 09:34:38.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.267" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.264" endtime="20201029 09:34:38.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.269" endtime="20201029 09:34:38.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.111" endtime="20201029 09:34:38.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.109" endtime="20201029 09:34:38.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.287" endtime="20201029 09:34:38.586"></status>
</kw>
<msg timestamp="20201029 09:34:38.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019033722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.284" endtime="20201029 09:34:38.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019033722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.589" endtime="20201029 09:34:38.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.597" endtime="20201029 09:34:38.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.279" endtime="20201029 09:34:38.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.275" endtime="20201029 09:34:38.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.603" level="INFO">${PHILIP_RES} = [{'diff': 0.0013927639999999977}, {'diff': 0.0013913469999999976}, {'diff': 0.001391222000000001}, {'diff': 0.0013911669999999987}, {'diff': 0.0013912500000000001}, {'diff': 0.0013913060000000019}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:38.601" endtime="20201029 09:34:38.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.608" level="INFO">${RESULT} = {'diff': [0.0013927639999999977, 0.0013913469999999976, 0.001391222000000001, 0.0013911669999999987, 0.0013912500000000001, 0.0013913060000000019, 0.0013913610000000007, 0.001391319000000002, 0.001391...</msg>
<status status="PASS" starttime="20201029 09:34:38.604" endtime="20201029 09:34:38.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.612" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.611" endtime="20201029 09:34:38.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.614" level="INFO">VALUE: [0.0013927639999999977, 0.0013913469999999976, 0.001391222000000001, 0.0013911669999999987, 0.0013912500000000001, 0.0013913060000000019, 0.0013913610000000007, 0.001391319000000002, 0.0013913750000000003, 0.0013913200000000014, 0.001391290999999996, 0.0013913889999999998, 0.0013913610000000007, 0.0013914719999999978, 0.0013913330000000015, 0.0013913880000000003, 0.0013913470000000011, 0.0013913200000000014, 0.0013912499999999967, 0.0013911799999999919, 0.0013912080000000049, 0.0013912920000000023, 0.0013911389999999996, 0.0013913200000000014, 0.0013912499999999967, 0.0013913049999999955, 0.0013912639999999893, 0.0013912779999999958, 0.0013913480000000006, 0.0013912219999999975, 0.0013912499999999967, 0.0013911519999999927, 0.0013912779999999958, 0.0013913329999999946, 0.0013912219999999975, 0.0013912639999999893, 0.001391334000000008, 0.0013911669999999987, 0.0013912080000000049, 0.001391236000000018, 0.0013913889999999929, 0.0013914160000000064, 0.0013912640000000032, 0.0013912769999999963, 0.0013912499999999828, 0.0013913469999999872, 0.0013912920000000162, 0.0013912779999999958, 0.0013910829999999874, 0.0013911800000000196]</msg>
<status status="PASS" starttime="20201029 09:34:38.613" endtime="20201029 09:34:38.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.608" endtime="20201029 09:34:38.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.108" endtime="20201029 09:34:38.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.085" endtime="20201029 09:34:38.616"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.618" endtime="20201029 09:34:38.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.617" endtime="20201029 09:34:38.638"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.646" endtime="20201029 09:34:38.794"></status>
</kw>
<msg timestamp="20201029 09:34:38.795" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.645" endtime="20201029 09:34:38.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.797" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.796" endtime="20201029 09:34:38.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.798" endtime="20201029 09:34:38.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.642" endtime="20201029 09:34:38.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.640" endtime="20201029 09:34:38.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.810" endtime="20201029 09:34:39.106"></status>
</kw>
<msg timestamp="20201029 09:34:39.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017522556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018963625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.809" endtime="20201029 09:34:39.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017522556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018963625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.115" endtime="20201029 09:34:39.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.132" endtime="20201029 09:34:39.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.806" endtime="20201029 09:34:39.136"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.805" endtime="20201029 09:34:39.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.145" level="INFO">${PHILIP_RES} = [{'diff': 0.0014410689999999997}, {'diff': 0.001439542000000002}, {'diff': 0.0014397090000000008}, {'diff': 0.0014396669999999986}, {'diff': 0.00143975}, {'diff': 0.0014396389999999995}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:39.139" endtime="20201029 09:34:39.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.154" level="INFO">${RESULT} = {'diff': [0.0014410689999999997, 0.001439542000000002, 0.0014397090000000008, 0.0014396669999999986, 0.00143975, 0.0014396389999999995, 0.001439736000000004, 0.0014396810000000052, 0.00143965299999999...</msg>
<status status="PASS" starttime="20201029 09:34:39.147" endtime="20201029 09:34:39.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.163" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.161" endtime="20201029 09:34:39.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.168" level="INFO">VALUE: [0.0014410689999999997, 0.001439542000000002, 0.0014397090000000008, 0.0014396669999999986, 0.00143975, 0.0014396389999999995, 0.001439736000000004, 0.0014396810000000052, 0.001439652999999999, 0.0014397639999999962, 0.0014396809999999982, 0.0014397220000000044, 0.0014395970000000008, 0.0014395700000000011, 0.0014395970000000008, 0.0014396939999999983, 0.001439735999999997, 0.0014396800000000126, 0.0014398330000000015, 0.0014397499999999896, 0.0014397220000000044, 0.001439735999999997, 0.0014397499999999896, 0.0014396519999999996, 0.001439834000000001, 0.0014397079999999979, 0.0014397639999999962, 0.0014396389999999926, 0.0014395559999999946, 0.0014396389999999926, 0.0014396669999999917, 0.0014395700000000011, 0.0014397079999999979, 0.0014396519999999996, 0.0014395970000000008, 0.0014396950000000047, 0.0014395980000000003, 0.0014397370000000104, 0.0014396670000000056, 0.0014395839999999938, 0.0014395279999999955, 0.001439555000000009, 0.001439513999999975, 0.0014396109999999795, 0.0014396809999999982, 0.0014395420000000159, 0.0014396110000000073, 0.001439735999999997, 0.0014396670000000056, 0.0014395559999999807]</msg>
<status status="PASS" starttime="20201029 09:34:39.165" endtime="20201029 09:34:39.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.156" endtime="20201029 09:34:39.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.639" endtime="20201029 09:34:39.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.616" endtime="20201029 09:34:39.173"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.178" endtime="20201029 09:34:39.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.175" endtime="20201029 09:34:39.198"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.206" endtime="20201029 09:34:39.358"></status>
</kw>
<msg timestamp="20201029 09:34:39.359" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.205" endtime="20201029 09:34:39.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.361" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.360" endtime="20201029 09:34:39.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.362" endtime="20201029 09:34:39.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.202" endtime="20201029 09:34:39.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.200" endtime="20201029 09:34:39.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.371" endtime="20201029 09:34:39.662"></status>
</kw>
<msg timestamp="20201029 09:34:39.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017426667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018916917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.370" endtime="20201029 09:34:39.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017426667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018916917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.666" endtime="20201029 09:34:39.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.674" endtime="20201029 09:34:39.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.367" endtime="20201029 09:34:39.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.365" endtime="20201029 09:34:39.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.680" level="INFO">${PHILIP_RES} = [{'diff': 0.0014902499999999985}, {'diff': 0.0014887359999999975}, {'diff': 0.0014886110000000008}, {'diff': 0.0014886110000000008}, {'diff': 0.001488639}, {'diff': 0.0014887080000000052}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:34:39.677" endtime="20201029 09:34:39.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.685" level="INFO">${RESULT} = {'diff': [0.0014902499999999985, 0.0014887359999999975, 0.0014886110000000008, 0.0014886110000000008, 0.001488639, 0.0014887080000000052, 0.0014885970000000012, 0.0014886250000000004, 0.00148862500000...</msg>
<status status="PASS" starttime="20201029 09:34:39.681" endtime="20201029 09:34:39.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.689" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.688" endtime="20201029 09:34:39.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.691" level="INFO">VALUE: [0.0014902499999999985, 0.0014887359999999975, 0.0014886110000000008, 0.0014886110000000008, 0.001488639, 0.0014887080000000052, 0.0014885970000000012, 0.0014886250000000004, 0.0014886250000000004, 0.0014886799999999992, 0.0014887920000000027, 0.0014886529999999995, 0.0014886940000000057, 0.0014887219999999979, 0.0014887920000000027, 0.0014888060000000092, 0.0014886939999999987, 0.0014887080000000052, 0.0014887230000000112, 0.001488652000000007, 0.0014887360000000044, 0.0014887779999999962, 0.0014887639999999897, 0.001488749999999997, 0.0014887090000000047, 0.0014887359999999905, 0.0014886939999999987, 0.0014887219999999979, 0.0014887089999999908, 0.0014886949999999982, 0.001488667000000013, 0.001488666999999999, 0.0014886810000000056, 0.001488749999999997, 0.0014887360000000044, 0.0014886529999999926, 0.0014886659999999996, 0.0014886799999999922, 0.0014886799999999922, 0.001488638999999986, 0.0014886249999999934, 0.0014887499999999831, 0.0014887219999999979, 0.0014887920000000165, 0.0014886249999999934, 0.0014886519999999792, 0.001488638999999986, 0.0014886390000000138, 0.0014885970000000082, 0.0014887920000000165]</msg>
<status status="PASS" starttime="20201029 09:34:39.690" endtime="20201029 09:34:39.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.686" endtime="20201029 09:34:39.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.199" endtime="20201029 09:34:39.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.174" endtime="20201029 09:34:39.693"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.696" endtime="20201029 09:34:39.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.694" endtime="20201029 09:34:39.716"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.724" endtime="20201029 09:34:39.880"></status>
</kw>
<msg timestamp="20201029 09:34:39.880" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.722" endtime="20201029 09:34:39.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.883" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.881" endtime="20201029 09:34:39.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.884" endtime="20201029 09:34:39.885"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.720" endtime="20201029 09:34:39.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.718" endtime="20201029 09:34:39.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.899" endtime="20201029 09:34:40.201"></status>
</kw>
<msg timestamp="20201029 09:34:40.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017552833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019093028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.896" endtime="20201029 09:34:40.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017552833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019093028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.205" endtime="20201029 09:34:40.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.212" endtime="20201029 09:34:40.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.890" endtime="20201029 09:34:40.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.887" endtime="20201029 09:34:40.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.219" level="INFO">${PHILIP_RES} = [{'diff': 0.0015401950000000011}, {'diff': 0.0015386520000000015}, {'diff': 0.0015386940000000002}, {'diff': 0.001538681}, {'diff': 0.0015386109999999988}, {'diff': 0.001538471999999999}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:40.216" endtime="20201029 09:34:40.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.223" level="INFO">${RESULT} = {'diff': [0.0015401950000000011, 0.0015386520000000015, 0.0015386940000000002, 0.001538681, 0.0015386109999999988, 0.001538471999999999, 0.0015386389999999944, 0.0015385840000000026, 0.001538611000000...</msg>
<status status="PASS" starttime="20201029 09:34:40.220" endtime="20201029 09:34:40.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.227" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.226" endtime="20201029 09:34:40.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.229" level="INFO">VALUE: [0.0015401950000000011, 0.0015386520000000015, 0.0015386940000000002, 0.001538681, 0.0015386109999999988, 0.001538471999999999, 0.0015386389999999944, 0.0015385840000000026, 0.0015386110000000022, 0.0015387909999999977, 0.0015385839999999956, 0.001538653000000001, 0.0015385970000000027, 0.001538653000000001, 0.0015385839999999956, 0.0015385829999999961, 0.0015387359999999989, 0.0015386669999999936, 0.0015385839999999956, 0.0015385560000000104, 0.0015386390000000083, 0.001538624999999988, 0.001538652999999987, 0.001538570000000003, 0.0015385690000000035, 0.0015385970000000027, 0.001538666000000008, 0.0015387089999999992, 0.0015386250000000018, 0.0015385829999999961, 0.0015385690000000035, 0.0015386119999999948, 0.001538472000000013, 0.0015385420000000039, 0.0015386109999999953, 0.0015385420000000039, 0.0015384579999999926, 0.0015385279999999835, 0.0015385139999999908, 0.0015385139999999908, 0.0015386119999999948, 0.0015385420000000039, 0.0015384999999999982, 0.0015385980000000021, 0.0015385140000000186, 0.0015385410000000044, 0.0015386800000000145, 0.0015385689999999896, 0.0015385559999999965, 0.0015384719999999852]</msg>
<status status="PASS" starttime="20201029 09:34:40.228" endtime="20201029 09:34:40.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.224" endtime="20201029 09:34:40.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.716" endtime="20201029 09:34:40.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.694" endtime="20201029 09:34:40.231"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.234" endtime="20201029 09:34:40.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.232" endtime="20201029 09:34:40.254"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.262" endtime="20201029 09:34:40.423"></status>
</kw>
<msg timestamp="20201029 09:34:40.423" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.261" endtime="20201029 09:34:40.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.426" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.424" endtime="20201029 09:34:40.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.427" endtime="20201029 09:34:40.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.258" endtime="20201029 09:34:40.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.256" endtime="20201029 09:34:40.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.436" endtime="20201029 09:34:40.735"></status>
</kw>
<msg timestamp="20201029 09:34:40.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018059139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.435" endtime="20201029 09:34:40.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018059139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.743" endtime="20201029 09:34:40.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.761" endtime="20201029 09:34:40.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.432" endtime="20201029 09:34:40.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.431" endtime="20201029 09:34:40.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.774" level="INFO">${PHILIP_RES} = [{'diff': 0.001590583000000003}, {'diff': 0.0015891809999999985}, {'diff': 0.0015891250000000003}, {'diff': 0.0015889439999999984}, {'diff': 0.001589069000000002}, {'diff': 0.0015890279999999993}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:40.768" endtime="20201029 09:34:40.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.783" level="INFO">${RESULT} = {'diff': [0.001590583000000003, 0.0015891809999999985, 0.0015891250000000003, 0.0015889439999999984, 0.001589069000000002, 0.0015890279999999993, 0.0015890419999999988, 0.0015892230000000007, 0.001589...</msg>
<status status="PASS" starttime="20201029 09:34:40.776" endtime="20201029 09:34:40.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.792" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.790" endtime="20201029 09:34:40.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.797" level="INFO">VALUE: [0.001590583000000003, 0.0015891809999999985, 0.0015891250000000003, 0.0015889439999999984, 0.001589069000000002, 0.0015890279999999993, 0.0015890419999999988, 0.0015892230000000007, 0.001589152999999996, 0.0015890689999999985, 0.001589083000000005, 0.0015891110000000042, 0.0015892369999999933, 0.0015892090000000011, 0.0015891390000000033, 0.0015890689999999985, 0.0015891530000000098, 0.001589180999999995, 0.0015892220000000012, 0.0015892079999999947, 0.0015891250000000107, 0.001589181000000009, 0.001589180999999995, 0.0015890689999999985, 0.001589000000000007, 0.0015891110000000042, 0.0015890139999999997, 0.0015890970000000115, 0.0015891530000000098, 0.001589166000000003, 0.0015891950000000016, 0.0015892779999999995, 0.0015891519999999965, 0.0015891670000000024, 0.0015892220000000012, 0.0015891390000000172, 0.001589166000000003, 0.0015891390000000172, 0.0015892500000000143, 0.001589166000000003, 0.0015891659999999752, 0.0015890829999999911, 0.001589069999999998, 0.0015891110000000042, 0.0015891249999999968, 0.0015891110000000042, 0.0015891530000000098, 0.00158913799999999, 0.0015891799999999956, 0.00158902800000002]</msg>
<status status="PASS" starttime="20201029 09:34:40.794" endtime="20201029 09:34:40.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.785" endtime="20201029 09:34:40.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.255" endtime="20201029 09:34:40.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.232" endtime="20201029 09:34:40.801"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.803" endtime="20201029 09:34:40.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.801" endtime="20201029 09:34:40.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.831" endtime="20201029 09:34:40.995"></status>
</kw>
<msg timestamp="20201029 09:34:40.996" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.829" endtime="20201029 09:34:40.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.998" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.997" endtime="20201029 09:34:40.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.999" endtime="20201029 09:34:41.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.827" endtime="20201029 09:34:41.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.825" endtime="20201029 09:34:41.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.008" endtime="20201029 09:34:41.298"></status>
</kw>
<msg timestamp="20201029 09:34:41.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019253167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.007" endtime="20201029 09:34:41.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019253167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.302" endtime="20201029 09:34:41.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.311" endtime="20201029 09:34:41.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.004" endtime="20201029 09:34:41.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.003" endtime="20201029 09:34:41.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.317" level="INFO">${PHILIP_RES} = [{'diff': 0.0016420700000000024}, {'diff': 0.0016405140000000026}, {'diff': 0.0016406530000000023}, {'diff': 0.0016405549999999984}, {'diff': 0.0016405690000000014}, {'diff': 0.001640500000000003}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:41.314" endtime="20201029 09:34:41.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.322" level="INFO">${RESULT} = {'diff': [0.0016420700000000024, 0.0016405140000000026, 0.0016406530000000023, 0.0016405549999999984, 0.0016405690000000014, 0.001640500000000003, 0.0016405270000000027, 0.0016405269999999958, 0.00164...</msg>
<status status="PASS" starttime="20201029 09:34:41.318" endtime="20201029 09:34:41.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.326" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.325" endtime="20201029 09:34:41.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.329" level="INFO">VALUE: [0.0016420700000000024, 0.0016405140000000026, 0.0016406530000000023, 0.0016405549999999984, 0.0016405690000000014, 0.001640500000000003, 0.0016405270000000027, 0.0016405269999999958, 0.0016405279999999953, 0.0016405970000000006, 0.0016405419999999948, 0.0016405140000000026, 0.0016405840000000005, 0.0016405269999999958, 0.0016404859999999966, 0.001640500000000003, 0.0016405139999999957, 0.0016404859999999966, 0.0016405269999999889, 0.0016407500000000103, 0.001640472000000004, 0.0016405829999999871, 0.0016405560000000013, 0.001640583000000001, 0.0016405140000000096, 0.0016405560000000013, 0.0016405419999999948, 0.0016405270000000027, 0.0016406669999999984, 0.0016406669999999984, 0.0016405140000000096, 0.0016406119999999996, 0.0016406389999999993, 0.0016405970000000075, 0.001640665999999985, 0.0016406800000000055, 0.001640554999999988, 0.001640472000000004, 0.0016405280000000022, 0.0016405840000000005, 0.001640472000000004, 0.001640443999999991, 0.0016405690000000084, 0.0016404999999999892, 0.0016406250000000067, 0.0016405700000000079, 0.0016405409999999954, 0.0016404999999999892, 0.001640583000000001, 0.0016406660000000128]</msg>
<status status="PASS" starttime="20201029 09:34:41.327" endtime="20201029 09:34:41.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.323" endtime="20201029 09:34:41.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.823" endtime="20201029 09:34:41.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.801" endtime="20201029 09:34:41.331"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.333" endtime="20201029 09:34:41.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.332" endtime="20201029 09:34:41.353"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.361" endtime="20201029 09:34:41.531"></status>
</kw>
<msg timestamp="20201029 09:34:41.532" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.359" endtime="20201029 09:34:41.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.537" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.535" endtime="20201029 09:34:41.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.540" endtime="20201029 09:34:41.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.357" endtime="20201029 09:34:41.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.355" endtime="20201029 09:34:41.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.559" endtime="20201029 09:34:41.858"></status>
</kw>
<msg timestamp="20201029 09:34:41.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017494347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019188472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.555" endtime="20201029 09:34:41.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017494347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019188472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.862" endtime="20201029 09:34:41.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.869" endtime="20201029 09:34:41.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.550" endtime="20201029 09:34:41.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.546" endtime="20201029 09:34:41.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.876" level="INFO">${PHILIP_RES} = [{'diff': 0.0016941250000000012}, {'diff': 0.0016926529999999988}, {'diff': 0.001692680999999998}, {'diff': 0.0016926389999999993}, {'diff': 0.0016925140000000026}, {'diff': 0.0016925549999999984}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:41.873" endtime="20201029 09:34:41.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.881" level="INFO">${RESULT} = {'diff': [0.0016941250000000012, 0.0016926529999999988, 0.001692680999999998, 0.0016926389999999993, 0.0016925140000000026, 0.0016925549999999984, 0.001692666999999995, 0.0016925139999999991, 0.001692...</msg>
<status status="PASS" starttime="20201029 09:34:41.877" endtime="20201029 09:34:41.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.886" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.885" endtime="20201029 09:34:41.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.889" level="INFO">VALUE: [0.0016941250000000012, 0.0016926529999999988, 0.001692680999999998, 0.0016926389999999993, 0.0016925140000000026, 0.0016925549999999984, 0.001692666999999995, 0.0016925139999999991, 0.0016926249999999962, 0.001692596999999997, 0.0016924719999999935, 0.0016926530000000023, 0.0016926530000000023, 0.0016925139999999991, 0.001692457999999994, 0.0016926250000000032, 0.0016926250000000032, 0.0016927639999999994, 0.0016926110000000105, 0.0016926530000000023, 0.001692666999999995, 0.0016925279999999987, 0.0016926530000000023, 0.0016926939999999946, 0.0016926530000000023, 0.001692763, 0.001692568999999991, 0.0016926670000000088, 0.0016926389999999958, 0.0016926109999999966, 0.0016926250000000032, 0.0016925279999999987, 0.0016925699999999905, 0.0016926249999999754, 0.001692708000000015, 0.0016925699999999766, 0.0016926660000000093, 0.0016926109999999828, 0.0016926530000000162, 0.0016925980000000174, 0.0016924170000000016, 0.0016924309999999942, 0.0016924170000000016, 0.0016925000000000134, 0.0016925269999999992, 0.001692473, 0.0016925269999999992, 0.0016925269999999992, 0.001692514000000006, 0.001692583999999997]</msg>
<status status="PASS" starttime="20201029 09:34:41.888" endtime="20201029 09:34:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.882" endtime="20201029 09:34:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.353" endtime="20201029 09:34:41.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.331" endtime="20201029 09:34:41.891"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.893" endtime="20201029 09:34:41.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.892" endtime="20201029 09:34:41.913"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.922" endtime="20201029 09:34:42.095"></status>
</kw>
<msg timestamp="20201029 09:34:42.095" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.920" endtime="20201029 09:34:42.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.098" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.096" endtime="20201029 09:34:42.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.099" endtime="20201029 09:34:42.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.917" endtime="20201029 09:34:42.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.915" endtime="20201029 09:34:42.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.109" endtime="20201029 09:34:42.415"></status>
</kw>
<msg timestamp="20201029 09:34:42.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017806514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019553458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.107" endtime="20201029 09:34:42.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017806514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019553458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.419" endtime="20201029 09:34:42.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.427" endtime="20201029 09:34:42.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.104" endtime="20201029 09:34:42.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.103" endtime="20201029 09:34:42.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:42.433" level="INFO">${PHILIP_RES} = [{'diff': 0.0017469440000000003}, {'diff': 0.0017455000000000005}, {'diff': 0.0017453610000000008}, {'diff': 0.001745486000000001}, {'diff': 0.001745583000000002}, {'diff': 0.0017455280000000031}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:42.430" endtime="20201029 09:34:42.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.438" level="INFO">${RESULT} = {'diff': [0.0017469440000000003, 0.0017455000000000005, 0.0017453610000000008, 0.001745486000000001, 0.001745583000000002, 0.0017455280000000031, 0.0017455560000000023, 0.0017454579999999983, 0.001745...</msg>
<status status="PASS" starttime="20201029 09:34:42.434" endtime="20201029 09:34:42.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.442" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:42.441" endtime="20201029 09:34:42.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.445" level="INFO">VALUE: [0.0017469440000000003, 0.0017455000000000005, 0.0017453610000000008, 0.001745486000000001, 0.001745583000000002, 0.0017455280000000031, 0.0017455560000000023, 0.0017454579999999983, 0.0017455700000000018, 0.0017455560000000023, 0.0017454299999999992, 0.0017455560000000023, 0.0017456529999999998, 0.0017455550000000028, 0.0017454859999999905, 0.0017454030000000065, 0.0017455420000000027, 0.00174552800000001, 0.0017455560000000092, 0.0017454030000000065, 0.0017456109999999941, 0.0017454159999999996, 0.0017454729999999974, 0.0017453340000000012, 0.0017454580000000053, 0.0017453610000000008, 0.0017453330000000017, 0.0017454030000000065, 0.0017454440000000127, 0.0017454860000000044, 0.001745471999999998, 0.0017454860000000044, 0.0017454160000000135, 0.0017455559999999815, 0.0017454449999999844, 0.001745416999999999, 0.0017454580000000053, 0.0017455279999999962, 0.0017454299999999923, 0.0017455559999999815, 0.001745582999999995, 0.0017455700000000018, 0.0017455409999999894, 0.0017454450000000121, 0.0017455419999999888, 0.0017453610000000008, 0.001745528000000024, 0.001745611000000008, 0.0017454590000000048, 0.0017453470000000082]</msg>
<status status="PASS" starttime="20201029 09:34:42.443" endtime="20201029 09:34:42.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.439" endtime="20201029 09:34:42.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.914" endtime="20201029 09:34:42.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.891" endtime="20201029 09:34:42.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.460" endtime="20201029 09:34:42.448"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:18.173" endtime="20201029 09:34:42.449" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:57.095" endtime="20201029 09:34:42.458"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:54.940" endtime="20201029 09:34:42.490"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
