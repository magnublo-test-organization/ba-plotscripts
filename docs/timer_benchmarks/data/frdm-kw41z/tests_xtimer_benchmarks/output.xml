<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:14:48.185" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.773" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:48.781" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:49.971" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:48.771" endtime="20201029 18:14:49.971"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.974" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:49.973" endtime="20201029 18:14:49.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.770" endtime="20201029 18:14:49.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.977" endtime="20201029 18:14:50.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.976" endtime="20201029 18:14:50.218"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.231" endtime="20201029 18:14:50.252"></status>
</kw>
<msg timestamp="20201029 18:14:50.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:14:50.230" endtime="20201029 18:14:50.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.255" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:14:50.253" endtime="20201029 18:14:50.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.258" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:50.256" endtime="20201029 18:14:50.258"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.227" endtime="20201029 18:14:50.259"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.225" endtime="20201029 18:14:50.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.223" endtime="20201029 18:14:50.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:50.264" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:50.263" endtime="20201029 18:14:50.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.261" endtime="20201029 18:14:50.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.222" endtime="20201029 18:14:50.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.222" endtime="20201029 18:14:50.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.265" endtime="20201029 18:14:50.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.220" endtime="20201029 18:14:50.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.268" endtime="20201029 18:14:50.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.219" endtime="20201029 18:14:50.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.768" endtime="20201029 18:14:50.270"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.276" endtime="20201029 18:14:50.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.275" endtime="20201029 18:14:50.297"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.311" endtime="20201029 18:14:50.328"></status>
</kw>
<msg timestamp="20201029 18:14:50.329" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.309" endtime="20201029 18:14:50.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.330" endtime="20201029 18:14:50.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.334" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:50.332" endtime="20201029 18:14:50.335"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.307" endtime="20201029 18:14:50.335"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:50.304" endtime="20201029 18:14:50.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.303" endtime="20201029 18:14:50.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:50.340" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:50.339" endtime="20201029 18:14:50.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.337" endtime="20201029 18:14:50.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.302" endtime="20201029 18:14:50.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.301" endtime="20201029 18:14:50.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.341" endtime="20201029 18:14:50.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.300" endtime="20201029 18:14:50.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.297" endtime="20201029 18:14:50.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.274" endtime="20201029 18:14:50.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.351" endtime="20201029 18:14:50.367"></status>
</kw>
<msg timestamp="20201029 18:14:50.368" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.349" endtime="20201029 18:14:50.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.370" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.369" endtime="20201029 18:14:50.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.371" endtime="20201029 18:14:50.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.347" endtime="20201029 18:14:50.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.345" endtime="20201029 18:14:50.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.378" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:14:50.377" endtime="20201029 18:14:50.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.380" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:14:50.379" endtime="20201029 18:14:50.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.374" endtime="20201029 18:14:50.380"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:50.271" endtime="20201029 18:14:50.381" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:48.308" endtime="20201029 18:14:50.383"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.435" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:50.444" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:51.630" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:50.433" endtime="20201029 18:14:51.632"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.637" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:51.634" endtime="20201029 18:14:51.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.432" endtime="20201029 18:14:51.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.643" endtime="20201029 18:14:51.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.640" endtime="20201029 18:14:51.935"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.948" endtime="20201029 18:14:51.967"></status>
</kw>
<msg timestamp="20201029 18:14:51.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.946" endtime="20201029 18:14:51.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['T! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.969" endtime="20201029 18:14:51.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.974" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:51.971" endtime="20201029 18:14:51.975"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:51.944" endtime="20201029 18:14:51.976"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:51.941" endtime="20201029 18:14:51.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.940" endtime="20201029 18:14:51.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:51.986" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:51.984" endtime="20201029 18:14:51.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.980" endtime="20201029 18:14:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.939" endtime="20201029 18:14:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.939" endtime="20201029 18:14:51.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.988" endtime="20201029 18:14:51.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.938" endtime="20201029 18:14:51.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.991" endtime="20201029 18:14:51.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.936" endtime="20201029 18:14:51.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.431" endtime="20201029 18:14:51.997"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.006" endtime="20201029 18:14:52.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.004" endtime="20201029 18:14:52.026"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.039" endtime="20201029 18:14:52.057"></status>
</kw>
<msg timestamp="20201029 18:14:52.057" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.038" endtime="20201029 18:14:52.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.058" endtime="20201029 18:14:52.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.063" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:52.061" endtime="20201029 18:14:52.063"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:52.035" endtime="20201029 18:14:52.064"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:52.033" endtime="20201029 18:14:52.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.031" endtime="20201029 18:14:52.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:52.069" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:52.068" endtime="20201029 18:14:52.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.066" endtime="20201029 18:14:52.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.031" endtime="20201029 18:14:52.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.030" endtime="20201029 18:14:52.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.070" endtime="20201029 18:14:52.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.029" endtime="20201029 18:14:52.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.027" endtime="20201029 18:14:52.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.000" endtime="20201029 18:14:52.073"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.082" endtime="20201029 18:14:52.096"></status>
</kw>
<msg timestamp="20201029 18:14:52.096" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.080" endtime="20201029 18:14:52.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.099" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.097" endtime="20201029 18:14:52.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.100" endtime="20201029 18:14:52.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.078" endtime="20201029 18:14:52.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.076" endtime="20201029 18:14:52.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.109" endtime="20201029 18:14:52.400"></status>
</kw>
<msg timestamp="20201029 18:14:52.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065929125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065929597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.107" endtime="20201029 18:14:52.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065929125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065929597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.405" endtime="20201029 18:14:52.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.413" endtime="20201029 18:14:52.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.105" endtime="20201029 18:14:52.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.103" endtime="20201029 18:14:52.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.419" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.870000000073427e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:52.416" endtime="20201029 18:14:52.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:52.425" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859...</msg>
<status status="PASS" starttime="20201029 18:14:52.421" endtime="20201029 18:14:52.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.429" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:52.428" endtime="20201029 18:14:52.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.431" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07]</msg>
<status status="PASS" starttime="20201029 18:14:52.430" endtime="20201029 18:14:52.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.426" endtime="20201029 18:14:52.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.075" endtime="20201029 18:14:52.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.074" endtime="20201029 18:14:52.433"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.441" endtime="20201029 18:14:52.457"></status>
</kw>
<msg timestamp="20201029 18:14:52.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.439" endtime="20201029 18:14:52.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.460" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.459" endtime="20201029 18:14:52.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.461" endtime="20201029 18:14:52.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.437" endtime="20201029 18:14:52.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.435" endtime="20201029 18:14:52.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.471" endtime="20201029 18:14:52.807"></status>
</kw>
<msg timestamp="20201029 18:14:52.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066456153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.469" endtime="20201029 18:14:52.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066456153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.812" endtime="20201029 18:14:52.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.822" endtime="20201029 18:14:52.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.466" endtime="20201029 18:14:52.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.465" endtime="20201029 18:14:52.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.833" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:52.826" endtime="20201029 18:14:52.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:52.842" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.72...</msg>
<status status="PASS" starttime="20201029 18:14:52.835" endtime="20201029 18:14:52.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.849" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:52.848" endtime="20201029 18:14:52.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.855" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.859999999662357e-07]</msg>
<status status="PASS" starttime="20201029 18:14:52.853" endtime="20201029 18:14:52.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.844" endtime="20201029 18:14:52.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.434" endtime="20201029 18:14:52.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.433" endtime="20201029 18:14:52.857"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.866" endtime="20201029 18:14:52.880"></status>
</kw>
<msg timestamp="20201029 18:14:52.881" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.865" endtime="20201029 18:14:52.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.882" endtime="20201029 18:14:52.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.884" endtime="20201029 18:14:52.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.861" endtime="20201029 18:14:52.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.859" endtime="20201029 18:14:52.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.894" endtime="20201029 18:14:53.203"></status>
</kw>
<msg timestamp="20201029 18:14:53.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.419132292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.419132764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.892" endtime="20201029 18:14:53.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.419132292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.419132764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.208" endtime="20201029 18:14:53.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.219" endtime="20201029 18:14:53.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.889" endtime="20201029 18:14:53.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.888" endtime="20201029 18:14:53.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.226" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.720000000291158e-07...</msg>
<status status="PASS" starttime="20201029 18:14:53.222" endtime="20201029 18:14:53.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:53.232" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:14:53.227" endtime="20201029 18:14:53.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.236" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:53.235" endtime="20201029 18:14:53.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.239" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.729999999453227e-07]</msg>
<status status="PASS" starttime="20201029 18:14:53.238" endtime="20201029 18:14:53.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.233" endtime="20201029 18:14:53.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.858" endtime="20201029 18:14:53.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.858" endtime="20201029 18:14:53.241"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.249" endtime="20201029 18:14:53.267"></status>
</kw>
<msg timestamp="20201029 18:14:53.267" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.247" endtime="20201029 18:14:53.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.268" endtime="20201029 18:14:53.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.271" endtime="20201029 18:14:53.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.245" endtime="20201029 18:14:53.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.243" endtime="20201029 18:14:53.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.280" endtime="20201029 18:14:53.578"></status>
</kw>
<msg timestamp="20201029 18:14:53.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.8302435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.830243972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:53.279" endtime="20201029 18:14:53.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.8302435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.830243972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:53.583" endtime="20201029 18:14:53.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.593" endtime="20201029 18:14:53.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.276" endtime="20201029 18:14:53.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.274" endtime="20201029 18:14:53.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.600" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.729999999453227e-07}...</msg>
<status status="PASS" starttime="20201029 18:14:53.597" endtime="20201029 18:14:53.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:53.606" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:14:53.602" endtime="20201029 18:14:53.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.611" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:53.610" endtime="20201029 18:14:53.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.614" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:53.612" endtime="20201029 18:14:53.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.607" endtime="20201029 18:14:53.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.241" endtime="20201029 18:14:53.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.241" endtime="20201029 18:14:53.615"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.624" endtime="20201029 18:14:53.638"></status>
</kw>
<msg timestamp="20201029 18:14:53.639" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.622" endtime="20201029 18:14:53.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.641" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.640" endtime="20201029 18:14:53.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.642" endtime="20201029 18:14:53.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.619" endtime="20201029 18:14:53.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.617" endtime="20201029 18:14:53.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.653" endtime="20201029 18:14:53.959"></status>
</kw>
<msg timestamp="20201029 18:14:53.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.205319306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.205319778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.651" endtime="20201029 18:14:53.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.205319306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.205319778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.964" endtime="20201029 18:14:53.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.974" endtime="20201029 18:14:53.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.648" endtime="20201029 18:14:53.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.646" endtime="20201029 18:14:53.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.982" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07...</msg>
<status status="PASS" starttime="20201029 18:14:53.978" endtime="20201029 18:14:53.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:53.987" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:14:53.983" endtime="20201029 18:14:53.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.991" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:53.990" endtime="20201029 18:14:53.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.994" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:53.992" endtime="20201029 18:14:53.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.988" endtime="20201029 18:14:53.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.616" endtime="20201029 18:14:53.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.616" endtime="20201029 18:14:53.996"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.004" endtime="20201029 18:14:54.020"></status>
</kw>
<msg timestamp="20201029 18:14:54.021" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.003" endtime="20201029 18:14:54.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.025" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.022" endtime="20201029 18:14:54.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.027" endtime="20201029 18:14:54.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.000" endtime="20201029 18:14:54.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.998" endtime="20201029 18:14:54.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.041" endtime="20201029 18:14:54.341"></status>
</kw>
<msg timestamp="20201029 18:14:54.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.567109403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.567109875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.039" endtime="20201029 18:14:54.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.567109403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.567109875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.346" endtime="20201029 18:14:54.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.356" endtime="20201029 18:14:54.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.036" endtime="20201029 18:14:54.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.033" endtime="20201029 18:14:54.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.364" level="INFO">${RESULT} = [{'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-...</msg>
<status status="PASS" starttime="20201029 18:14:54.360" endtime="20201029 18:14:54.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:54.372" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:14:54.365" endtime="20201029 18:14:54.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.376" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:54.375" endtime="20201029 18:14:54.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.379" level="INFO">VALUE: [4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07]</msg>
<status status="PASS" starttime="20201029 18:14:54.377" endtime="20201029 18:14:54.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.373" endtime="20201029 18:14:54.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.997" endtime="20201029 18:14:54.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.996" endtime="20201029 18:14:54.381"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.389" endtime="20201029 18:14:54.403"></status>
</kw>
<msg timestamp="20201029 18:14:54.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.387" endtime="20201029 18:14:54.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.406" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.404" endtime="20201029 18:14:54.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.407" endtime="20201029 18:14:54.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.384" endtime="20201029 18:14:54.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.383" endtime="20201029 18:14:54.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.416" endtime="20201029 18:14:54.723"></status>
</kw>
<msg timestamp="20201029 18:14:54.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.938074181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.938074653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.415" endtime="20201029 18:14:54.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.938074181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.938074653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.728" endtime="20201029 18:14:54.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.739" endtime="20201029 18:14:54.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.412" endtime="20201029 18:14:54.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.410" endtime="20201029 18:14:54.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.746" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 18:14:54.743" endtime="20201029 18:14:54.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:54.751" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07,...</msg>
<status status="PASS" starttime="20201029 18:14:54.747" endtime="20201029 18:14:54.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.756" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:54.755" endtime="20201029 18:14:54.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.758" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:14:54.757" endtime="20201029 18:14:54.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.752" endtime="20201029 18:14:54.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.381" endtime="20201029 18:14:54.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.381" endtime="20201029 18:14:54.760"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.769" endtime="20201029 18:14:54.784"></status>
</kw>
<msg timestamp="20201029 18:14:54.785" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.766" endtime="20201029 18:14:54.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.787" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.786" endtime="20201029 18:14:54.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.788" endtime="20201029 18:14:54.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.764" endtime="20201029 18:14:54.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.762" endtime="20201029 18:14:54.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.798" endtime="20201029 18:14:55.114"></status>
</kw>
<msg timestamp="20201029 18:14:55.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.309944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.309945194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.796" endtime="20201029 18:14:55.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.309944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.309945194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.120" endtime="20201029 18:14:55.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.130" endtime="20201029 18:14:55.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.793" endtime="20201029 18:14:55.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.791" endtime="20201029 18:14:55.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.137" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.870000003265318e-07},...</msg>
<status status="PASS" starttime="20201029 18:14:55.134" endtime="20201029 18:14:55.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:55.143" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869...</msg>
<status status="PASS" starttime="20201029 18:14:55.138" endtime="20201029 18:14:55.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.147" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:55.146" endtime="20201029 18:14:55.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.150" level="INFO">VALUE: [4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 18:14:55.149" endtime="20201029 18:14:55.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.144" endtime="20201029 18:14:55.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.761" endtime="20201029 18:14:55.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.760" endtime="20201029 18:14:55.152"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.160" endtime="20201029 18:14:55.175"></status>
</kw>
<msg timestamp="20201029 18:14:55.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.158" endtime="20201029 18:14:55.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.177" endtime="20201029 18:14:55.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.180" endtime="20201029 18:14:55.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.155" endtime="20201029 18:14:55.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.154" endtime="20201029 18:14:55.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.189" endtime="20201029 18:14:55.502"></status>
</kw>
<msg timestamp="20201029 18:14:55.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.680868694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.680869167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.188" endtime="20201029 18:14:55.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.680868694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.680869167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.507" endtime="20201029 18:14:55.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.517" endtime="20201029 18:14:55.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.185" endtime="20201029 18:14:55.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.183" endtime="20201029 18:14:55.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.525" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:55.521" endtime="20201029 18:14:55.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:55.530" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 18:14:55.526" endtime="20201029 18:14:55.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.535" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:55.534" endtime="20201029 18:14:55.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.538" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:14:55.536" endtime="20201029 18:14:55.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.531" endtime="20201029 18:14:55.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.152" endtime="20201029 18:14:55.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.152" endtime="20201029 18:14:55.539"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.547" endtime="20201029 18:14:55.562"></status>
</kw>
<msg timestamp="20201029 18:14:55.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.546" endtime="20201029 18:14:55.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.565" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.564" endtime="20201029 18:14:55.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.566" endtime="20201029 18:14:55.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.543" endtime="20201029 18:14:55.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.541" endtime="20201029 18:14:55.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.575" endtime="20201029 18:14:55.894"></status>
</kw>
<msg timestamp="20201029 18:14:55.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.062777028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.0627775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:55.574" endtime="20201029 18:14:55.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.062777028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.0627775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:55.900" endtime="20201029 18:14:55.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.919" endtime="20201029 18:14:55.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.571" endtime="20201029 18:14:55.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.569" endtime="20201029 18:14:55.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.927" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 18:14:55.923" endtime="20201029 18:14:55.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:55.932" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:14:55.928" endtime="20201029 18:14:55.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.936" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:55.935" endtime="20201029 18:14:55.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.939" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:55.938" endtime="20201029 18:14:55.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.933" endtime="20201029 18:14:55.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.540" endtime="20201029 18:14:55.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.540" endtime="20201029 18:14:55.941"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.950" endtime="20201029 18:14:55.966"></status>
</kw>
<msg timestamp="20201029 18:14:55.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.948" endtime="20201029 18:14:55.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.968" endtime="20201029 18:14:55.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.970" endtime="20201029 18:14:55.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.945" endtime="20201029 18:14:55.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.943" endtime="20201029 18:14:55.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.980" endtime="20201029 18:14:56.299"></status>
</kw>
<msg timestamp="20201029 18:14:56.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.440570625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.440571097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.978" endtime="20201029 18:14:56.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.440570625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.440571097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.304" endtime="20201029 18:14:56.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.314" endtime="20201029 18:14:56.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.975" endtime="20201029 18:14:56.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.974" endtime="20201029 18:14:56.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.322" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 18:14:56.318" endtime="20201029 18:14:56.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:56.327" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:14:56.323" endtime="20201029 18:14:56.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.332" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:56.331" endtime="20201029 18:14:56.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.335" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:14:56.333" endtime="20201029 18:14:56.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.328" endtime="20201029 18:14:56.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.941" endtime="20201029 18:14:56.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.941" endtime="20201029 18:14:56.336"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.344" endtime="20201029 18:14:56.361"></status>
</kw>
<msg timestamp="20201029 18:14:56.362" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.343" endtime="20201029 18:14:56.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.364" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.363" endtime="20201029 18:14:56.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.365" endtime="20201029 18:14:56.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.340" endtime="20201029 18:14:56.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.338" endtime="20201029 18:14:56.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.375" endtime="20201029 18:14:56.687"></status>
</kw>
<msg timestamp="20201029 18:14:56.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.831604597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.831605069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.373" endtime="20201029 18:14:56.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.831604597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.831605069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.692" endtime="20201029 18:14:56.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.703" endtime="20201029 18:14:56.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.371" endtime="20201029 18:14:56.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.369" endtime="20201029 18:14:56.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.710" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999996122558e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:56.706" endtime="20201029 18:14:56.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:56.716" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.85...</msg>
<status status="PASS" starttime="20201029 18:14:56.711" endtime="20201029 18:14:56.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.720" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:56.719" endtime="20201029 18:14:56.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.723" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:56.721" endtime="20201029 18:14:56.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.717" endtime="20201029 18:14:56.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.337" endtime="20201029 18:14:56.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.336" endtime="20201029 18:14:56.724"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.732" endtime="20201029 18:14:56.748"></status>
</kw>
<msg timestamp="20201029 18:14:56.748" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.731" endtime="20201029 18:14:56.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.751" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.749" endtime="20201029 18:14:56.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.752" endtime="20201029 18:14:56.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.728" endtime="20201029 18:14:56.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.726" endtime="20201029 18:14:56.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.762" endtime="20201029 18:14:57.081"></status>
</kw>
<msg timestamp="20201029 18:14:57.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.217632083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.217632556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.760" endtime="20201029 18:14:57.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.217632083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.217632556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.086" endtime="20201029 18:14:57.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.097" endtime="20201029 18:14:57.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.757" endtime="20201029 18:14:57.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.755" endtime="20201029 18:14:57.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.104" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:14:57.100" endtime="20201029 18:14:57.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:57.109" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 18:14:57.105" endtime="20201029 18:14:57.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.113" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:57.112" endtime="20201029 18:14:57.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.116" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:57.114" endtime="20201029 18:14:57.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.109" endtime="20201029 18:14:57.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.725" endtime="20201029 18:14:57.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.725" endtime="20201029 18:14:57.117"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.126" endtime="20201029 18:14:57.140"></status>
</kw>
<msg timestamp="20201029 18:14:57.141" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.125" endtime="20201029 18:14:57.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.142" endtime="20201029 18:14:57.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.145" endtime="20201029 18:14:57.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.122" endtime="20201029 18:14:57.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.119" endtime="20201029 18:14:57.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.154" endtime="20201029 18:14:57.465"></status>
</kw>
<msg timestamp="20201029 18:14:57.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.595442486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.595442958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.153" endtime="20201029 18:14:57.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.595442486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.595442958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.470" endtime="20201029 18:14:57.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.480" endtime="20201029 18:14:57.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.150" endtime="20201029 18:14:57.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.148" endtime="20201029 18:14:57.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.488" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:14:57.484" endtime="20201029 18:14:57.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:57.494" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:14:57.489" endtime="20201029 18:14:57.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.498" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:57.497" endtime="20201029 18:14:57.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.501" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:57.499" endtime="20201029 18:14:57.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.494" endtime="20201029 18:14:57.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.118" endtime="20201029 18:14:57.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.118" endtime="20201029 18:14:57.502"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.510" endtime="20201029 18:14:57.528"></status>
</kw>
<msg timestamp="20201029 18:14:57.528" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.509" endtime="20201029 18:14:57.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.531" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.529" endtime="20201029 18:14:57.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.532" endtime="20201029 18:14:57.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.506" endtime="20201029 18:14:57.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.504" endtime="20201029 18:14:57.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.542" endtime="20201029 18:14:57.857"></status>
</kw>
<msg timestamp="20201029 18:14:57.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.977323708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.977324181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.540" endtime="20201029 18:14:57.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.977323708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.977324181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.862" endtime="20201029 18:14:57.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.872" endtime="20201029 18:14:57.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.537" endtime="20201029 18:14:57.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.535" endtime="20201029 18:14:57.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.882" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:14:57.876" endtime="20201029 18:14:57.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:57.887" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 18:14:57.883" endtime="20201029 18:14:57.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.892" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:57.891" endtime="20201029 18:14:57.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.894" level="INFO">VALUE: [4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:57.893" endtime="20201029 18:14:57.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.888" endtime="20201029 18:14:57.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.503" endtime="20201029 18:14:57.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.503" endtime="20201029 18:14:57.896"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.904" endtime="20201029 18:14:57.918"></status>
</kw>
<msg timestamp="20201029 18:14:57.919" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.903" endtime="20201029 18:14:57.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.921" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.920" endtime="20201029 18:14:57.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.923" endtime="20201029 18:14:57.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.900" endtime="20201029 18:14:57.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.898" endtime="20201029 18:14:57.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.933" endtime="20201029 18:14:58.254"></status>
</kw>
<msg timestamp="20201029 18:14:58.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.353278056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.353278542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.932" endtime="20201029 18:14:58.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.353278056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.353278542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.259" endtime="20201029 18:14:58.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.269" endtime="20201029 18:14:58.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.928" endtime="20201029 18:14:58.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.926" endtime="20201029 18:14:58.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.276" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 18:14:58.273" endtime="20201029 18:14:58.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:58.281" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85...</msg>
<status status="PASS" starttime="20201029 18:14:58.277" endtime="20201029 18:14:58.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.290" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:58.286" endtime="20201029 18:14:58.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.295" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:14:58.292" endtime="20201029 18:14:58.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.282" endtime="20201029 18:14:58.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.897" endtime="20201029 18:14:58.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.896" endtime="20201029 18:14:58.299"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.315" endtime="20201029 18:14:58.332"></status>
</kw>
<msg timestamp="20201029 18:14:58.333" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.312" endtime="20201029 18:14:58.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.338" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.336" endtime="20201029 18:14:58.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.341" endtime="20201029 18:14:58.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.306" endtime="20201029 18:14:58.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.303" endtime="20201029 18:14:58.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.361" endtime="20201029 18:14:58.676"></status>
</kw>
<msg timestamp="20201029 18:14:58.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.736131694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.736132181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.357" endtime="20201029 18:14:58.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.736131694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.736132181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.681" endtime="20201029 18:14:58.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.691" endtime="20201029 18:14:58.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.352" endtime="20201029 18:14:58.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.348" endtime="20201029 18:14:58.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.698" level="INFO">${RESULT} = [{'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 18:14:58.694" endtime="20201029 18:14:58.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:58.703" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 18:14:58.699" endtime="20201029 18:14:58.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.707" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:58.706" endtime="20201029 18:14:58.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.710" level="INFO">VALUE: [4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:58.708" endtime="20201029 18:14:58.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.704" endtime="20201029 18:14:58.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.300" endtime="20201029 18:14:58.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.299" endtime="20201029 18:14:58.711"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.719" endtime="20201029 18:14:58.733"></status>
</kw>
<msg timestamp="20201029 18:14:58.733" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.718" endtime="20201029 18:14:58.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.734" endtime="20201029 18:14:58.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.737" endtime="20201029 18:14:58.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.715" endtime="20201029 18:14:58.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.714" endtime="20201029 18:14:58.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.746" endtime="20201029 18:14:59.046"></status>
</kw>
<msg timestamp="20201029 18:14:59.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.138113472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.138113944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.745" endtime="20201029 18:14:59.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.138113472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.138113944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.051" endtime="20201029 18:14:59.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.061" endtime="20201029 18:14:59.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.742" endtime="20201029 18:14:59.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.740" endtime="20201029 18:14:59.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.068" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:14:59.065" endtime="20201029 18:14:59.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:59.073" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:14:59.069" endtime="20201029 18:14:59.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.077" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:59.076" endtime="20201029 18:14:59.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.080" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:59.078" endtime="20201029 18:14:59.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.074" endtime="20201029 18:14:59.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.712" endtime="20201029 18:14:59.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.712" endtime="20201029 18:14:59.081"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.090" endtime="20201029 18:14:59.109"></status>
</kw>
<msg timestamp="20201029 18:14:59.110" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.087" endtime="20201029 18:14:59.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.112" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.111" endtime="20201029 18:14:59.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.113" endtime="20201029 18:14:59.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.085" endtime="20201029 18:14:59.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.083" endtime="20201029 18:14:59.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.123" endtime="20201029 18:14:59.438"></status>
</kw>
<msg timestamp="20201029 18:14:59.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.530058972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.530059444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.121" endtime="20201029 18:14:59.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.530058972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.530059444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.443" endtime="20201029 18:14:59.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.453" endtime="20201029 18:14:59.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.119" endtime="20201029 18:14:59.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.117" endtime="20201029 18:14:59.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.460" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:59.456" endtime="20201029 18:14:59.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:59.465" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.719999...</msg>
<status status="PASS" starttime="20201029 18:14:59.461" endtime="20201029 18:14:59.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.469" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:59.468" endtime="20201029 18:14:59.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.472" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 18:14:59.470" endtime="20201029 18:14:59.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.466" endtime="20201029 18:14:59.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.082" endtime="20201029 18:14:59.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.081" endtime="20201029 18:14:59.473"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.481" endtime="20201029 18:14:59.496"></status>
</kw>
<msg timestamp="20201029 18:14:59.496" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.479" endtime="20201029 18:14:59.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.497" endtime="20201029 18:14:59.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.500" endtime="20201029 18:14:59.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.477" endtime="20201029 18:14:59.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.475" endtime="20201029 18:14:59.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.509" endtime="20201029 18:14:59.827"></status>
</kw>
<msg timestamp="20201029 18:14:59.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.891879236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.891879708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.508" endtime="20201029 18:14:59.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.891879236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.891879708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.839" endtime="20201029 18:14:59.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.861" endtime="20201029 18:14:59.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.505" endtime="20201029 18:14:59.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.503" endtime="20201029 18:14:59.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.876" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:14:59.868" endtime="20201029 18:14:59.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:59.888" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 18:14:59.878" endtime="20201029 18:14:59.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.897" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:59.894" endtime="20201029 18:14:59.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.902" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:14:59.899" endtime="20201029 18:14:59.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.890" endtime="20201029 18:14:59.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.474" endtime="20201029 18:14:59.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.473" endtime="20201029 18:14:59.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.074" endtime="20201029 18:14:59.904"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:51.998" endtime="20201029 18:14:59.905" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.912" endtime="20201029 18:14:59.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.910" endtime="20201029 18:14:59.932"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.945" endtime="20201029 18:14:59.965"></status>
</kw>
<msg timestamp="20201029 18:14:59.965" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.944" endtime="20201029 18:14:59.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.966" endtime="20201029 18:14:59.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.971" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:59.969" endtime="20201029 18:14:59.971"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:59.941" endtime="20201029 18:14:59.972"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:59.939" endtime="20201029 18:14:59.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.937" endtime="20201029 18:14:59.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:59.976" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:59.976" endtime="20201029 18:14:59.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.974" endtime="20201029 18:14:59.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.936" endtime="20201029 18:14:59.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.935" endtime="20201029 18:14:59.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.978" endtime="20201029 18:14:59.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.934" endtime="20201029 18:14:59.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.932" endtime="20201029 18:14:59.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.909" endtime="20201029 18:14:59.981"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.989" endtime="20201029 18:15:00.004"></status>
</kw>
<msg timestamp="20201029 18:15:00.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.988" endtime="20201029 18:15:00.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.007" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.006" endtime="20201029 18:15:00.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.008" endtime="20201029 18:15:00.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.985" endtime="20201029 18:15:00.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.984" endtime="20201029 18:15:00.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.017" endtime="20201029 18:15:00.306"></status>
</kw>
<msg timestamp="20201029 18:15:00.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068645778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068649986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.016" endtime="20201029 18:15:00.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068645778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068649986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.310" endtime="20201029 18:15:00.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.324" endtime="20201029 18:15:00.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.013" endtime="20201029 18:15:00.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.011" endtime="20201029 18:15:00.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:00.331" level="INFO">${RESULT} = [{'diff': 4.207999999991663e-06}, {'diff': 4.222999999997645e-06}, {'diff': 4.237000000004154e-06}, {'diff': 4.236999999990276e-06}, {'diff': 4.165999999999892e-06}, {'diff': 4.193999999999032e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:00.328" endtime="20201029 18:15:00.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:00.336" level="INFO">${OVERHEAD} = {'diff': [4.207999999991663e-06, 4.222999999997645e-06, 4.237000000004154e-06, 4.236999999990276e-06, 4.165999999999892e-06, 4.193999999999032e-06, 4.2499999999973115e-06, 4.26400000000382e-06, 4.2219...</msg>
<status status="PASS" starttime="20201029 18:15:00.332" endtime="20201029 18:15:00.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:00.339" endtime="20201029 18:15:00.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.343" level="INFO">VALUE: [4.207999999991663e-06, 4.222999999997645e-06, 4.237000000004154e-06, 4.236999999990276e-06, 4.165999999999892e-06, 4.193999999999032e-06, 4.2499999999973115e-06, 4.26400000000382e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.180000000006401e-06, 4.2360000000046805e-06, 4.2360000000046805e-06, 4.222999999997645e-06, 4.2360000000046805e-06, 4.235999999990803e-06, 4.222999999997645e-06, 4.222999999997645e-06, 4.250000000011189e-06, 4.26400000000382e-06, 4.2220000000120494e-06, 4.2360000000046805e-06, 4.180000000006401e-06, 4.2639999999899425e-06, 4.221999999998172e-06, 4.223000000011523e-06, 4.250000000011189e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.179999999992523e-06, 4.277999999996451e-06, 4.2089999999911365e-06, 4.208000000005541e-06, 4.222999999997645e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.237000000004154e-06, 4.208000000005541e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.277999999996451e-06, 4.209000000005014e-06, 4.208000000005541e-06]</msg>
<status status="PASS" starttime="20201029 18:15:00.342" endtime="20201029 18:15:00.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.337" endtime="20201029 18:15:00.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.982" endtime="20201029 18:15:00.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.982" endtime="20201029 18:15:00.345"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.353" endtime="20201029 18:15:00.373"></status>
</kw>
<msg timestamp="20201029 18:15:00.373" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.351" endtime="20201029 18:15:00.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.375" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.374" endtime="20201029 18:15:00.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.376" endtime="20201029 18:15:00.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.349" endtime="20201029 18:15:00.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.347" endtime="20201029 18:15:00.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.386" endtime="20201029 18:15:00.695"></status>
</kw>
<msg timestamp="20201029 18:15:00.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069052819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069057069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.384" endtime="20201029 18:15:00.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069052819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069057069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.700" endtime="20201029 18:15:00.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.710" endtime="20201029 18:15:00.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.381" endtime="20201029 18:15:00.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.380" endtime="20201029 18:15:00.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:00.717" level="INFO">${RESULT} = [{'diff': 4.2499999999973115e-06}, {'diff': 4.2360000000046805e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.237000000004154e-06}, {'diff': 4.208000000005541e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:00.713" endtime="20201029 18:15:00.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:00.722" level="INFO">${OVERHEAD} = {'diff': [4.2499999999973115e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.237000000004154e-06, 4.208000000005541e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4....</msg>
<status status="PASS" starttime="20201029 18:15:00.718" endtime="20201029 18:15:00.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.726" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:00.725" endtime="20201029 18:15:00.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.728" level="INFO">VALUE: [4.2499999999973115e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.237000000004154e-06, 4.208000000005541e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.277999999996451e-06, 4.209000000005014e-06, 4.208000000005541e-06, 4.139000000014104e-06, 4.223000000025401e-06, 4.22299999996989e-06, 4.263999999976065e-06, 4.264000000031576e-06, 4.236000000046314e-06, 4.208000000005541e-06, 4.194999999984628e-06, 4.235999999990803e-06, 4.223000000025401e-06, 4.208000000005541e-06, 4.221999999998172e-06, 4.1939999999573985e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.22299999996989e-06, 4.194999999984628e-06, 4.194999999984628e-06, 4.2079999999500295e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.22299999996989e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.19400000001291e-06, 4.235999999990803e-06, 4.264000000031576e-06, 4.237000000018032e-06, 4.22299999996989e-06, 4.278000000024207e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.2079999999500295e-06, 4.235999999990803e-06, 4.236000000046314e-06, 4.153000000006735e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.20900000003277e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.249999999983434e-06, 4.264000000031576e-06, 4.249999999983434e-06, 4.235999999990803e-06]</msg>
<status status="PASS" starttime="20201029 18:15:00.727" endtime="20201029 18:15:00.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.723" endtime="20201029 18:15:00.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.346" endtime="20201029 18:15:00.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.345" endtime="20201029 18:15:00.730"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.739" endtime="20201029 18:15:00.752"></status>
</kw>
<msg timestamp="20201029 18:15:00.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.737" endtime="20201029 18:15:00.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.755" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.754" endtime="20201029 18:15:00.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.756" endtime="20201029 18:15:00.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.734" endtime="20201029 18:15:00.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.732" endtime="20201029 18:15:00.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.768" endtime="20201029 18:15:01.076"></status>
</kw>
<msg timestamp="20201029 18:15:01.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.424954889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.424959125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.766" endtime="20201029 18:15:01.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.424954889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.424959125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.081" endtime="20201029 18:15:01.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.098" endtime="20201029 18:15:01.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.762" endtime="20201029 18:15:01.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.760" endtime="20201029 18:15:01.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.105" level="INFO">${RESULT} = [{'diff': 4.235999999990803e-06}, {'diff': 4.2079999999500295e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.236000000046314e-06}, {'diff': 4.153000000006735e-06}, {'diff': 4.235999999990803e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:01.101" endtime="20201029 18:15:01.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:01.113" level="INFO">${OVERHEAD} = {'diff': [4.235999999990803e-06, 4.2079999999500295e-06, 4.235999999990803e-06, 4.236000000046314e-06, 4.153000000006735e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.20900000003277e-06, 4.2219...</msg>
<status status="PASS" starttime="20201029 18:15:01.106" endtime="20201029 18:15:01.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.117" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:01.116" endtime="20201029 18:15:01.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.119" level="INFO">VALUE: [4.235999999990803e-06, 4.2079999999500295e-06, 4.235999999990803e-06, 4.236000000046314e-06, 4.153000000006735e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.20900000003277e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.249999999983434e-06, 4.264000000031576e-06, 4.249999999983434e-06, 4.235999999990803e-06, 4.1939999999573985e-06, 4.222000000053683e-06, 4.223000000025401e-06, 4.250000000038945e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.3049999999267285e-06, 4.208000000005541e-06, 4.223000000025401e-06, 4.194000000068421e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.264000000087087e-06, 4.2219999999426605e-06, 4.236999999962521e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.194000000068421e-06, 4.208000000005541e-06, 4.250000000038945e-06, 4.250000000038945e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.237000000073543e-06, 4.263999999976065e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.223000000025401e-06, 4.236999999962521e-06, 4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.2219999999426605e-06, 4.236000000101825e-06, 4.195000000040139e-06, 4.223000000025401e-06, 4.306000000009469e-06, 4.1659999999721364e-06, 4.235999999990803e-06]</msg>
<status status="PASS" starttime="20201029 18:15:01.118" endtime="20201029 18:15:01.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.114" endtime="20201029 18:15:01.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.731" endtime="20201029 18:15:01.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.730" endtime="20201029 18:15:01.121"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.129" endtime="20201029 18:15:01.145"></status>
</kw>
<msg timestamp="20201029 18:15:01.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.127" endtime="20201029 18:15:01.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.146" endtime="20201029 18:15:01.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.149" endtime="20201029 18:15:01.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.125" endtime="20201029 18:15:01.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.123" endtime="20201029 18:15:01.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.158" endtime="20201029 18:15:01.488"></status>
</kw>
<msg timestamp="20201029 18:15:01.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.796773833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.796778069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.156" endtime="20201029 18:15:01.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.796773833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.796778069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.494" endtime="20201029 18:15:01.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.504" endtime="20201029 18:15:01.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.154" endtime="20201029 18:15:01.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.152" endtime="20201029 18:15:01.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.511" level="INFO">${RESULT} = [{'diff': 4.235999999990803e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.235999999990803e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:01.508" endtime="20201029 18:15:01.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:01.517" level="INFO">${OVERHEAD} = {'diff': [4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.2219999999426605e-06, 4.236...</msg>
<status status="PASS" starttime="20201029 18:15:01.512" endtime="20201029 18:15:01.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.522" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:01.521" endtime="20201029 18:15:01.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.525" level="INFO">VALUE: [4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.2219999999426605e-06, 4.236000000101825e-06, 4.195000000040139e-06, 4.223000000025401e-06, 4.306000000009469e-06, 4.1659999999721364e-06, 4.235999999990803e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.236999999962521e-06, 4.208999999866236e-06, 4.1939999999573985e-06, 4.250000000149967e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.250000000149967e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.236999999962521e-06, 4.221999999831638e-06, 4.1669999999438545e-06, 4.222999999914379e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.263999999976065e-06, 4.209000000088281e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.222000000053683e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.23599999987978e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.1939999999573985e-06, 4.208999999866236e-06, 4.222999999914379e-06, 4.209000000088281e-06, 4.221999999831638e-06]</msg>
<status status="PASS" starttime="20201029 18:15:01.523" endtime="20201029 18:15:01.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.518" endtime="20201029 18:15:01.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.122" endtime="20201029 18:15:01.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.121" endtime="20201029 18:15:01.526"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.534" endtime="20201029 18:15:01.552"></status>
</kw>
<msg timestamp="20201029 18:15:01.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.533" endtime="20201029 18:15:01.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.555" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.553" endtime="20201029 18:15:01.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.556" endtime="20201029 18:15:01.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.530" endtime="20201029 18:15:01.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.528" endtime="20201029 18:15:01.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.565" endtime="20201029 18:15:01.869"></status>
</kw>
<msg timestamp="20201029 18:15:01.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177801125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177805333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.564" endtime="20201029 18:15:01.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177801125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177805333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.875" endtime="20201029 18:15:01.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.886" endtime="20201029 18:15:01.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.561" endtime="20201029 18:15:01.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.559" endtime="20201029 18:15:01.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.895" level="INFO">${RESULT} = [{'diff': 4.208000000005541e-06}, {'diff': 4.23599999987978e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.222000000053683e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:01.891" endtime="20201029 18:15:01.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:01.901" level="INFO">${OVERHEAD} = {'diff': [4.208000000005541e-06, 4.23599999987978e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.209000000088281e-06, 4.2360...</msg>
<status status="PASS" starttime="20201029 18:15:01.896" endtime="20201029 18:15:01.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.906" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:01.905" endtime="20201029 18:15:01.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.910" level="INFO">VALUE: [4.208000000005541e-06, 4.23599999987978e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.1939999999573985e-06, 4.208999999866236e-06, 4.222999999914379e-06, 4.209000000088281e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.209000000088281e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.221999999831638e-06, 4.23599999987978e-06, 4.236999999962521e-06, 4.23599999987978e-06, 4.2769999999414665e-06, 4.221999999831638e-06, 4.23599999987978e-06, 4.222999999914379e-06, 4.208000000005541e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.1939999999573985e-06, 4.236000000101825e-06, 4.263999999976065e-06, 4.166000000083159e-06, 4.209000000088281e-06, 4.223000000136423e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.263999999976065e-06, 4.250000000149967e-06, 4.209000000088281e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.263999999976065e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.305000000037751e-06]</msg>
<status status="PASS" starttime="20201029 18:15:01.908" endtime="20201029 18:15:01.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.902" endtime="20201029 18:15:01.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.527" endtime="20201029 18:15:01.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.526" endtime="20201029 18:15:01.913"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.926" endtime="20201029 18:15:01.943"></status>
</kw>
<msg timestamp="20201029 18:15:01.944" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.924" endtime="20201029 18:15:01.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.947" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.945" endtime="20201029 18:15:01.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.948" endtime="20201029 18:15:01.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.920" endtime="20201029 18:15:01.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.917" endtime="20201029 18:15:01.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.958" endtime="20201029 18:15:02.265"></status>
</kw>
<msg timestamp="20201029 18:15:02.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.574781611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.574785847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.956" endtime="20201029 18:15:02.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.574781611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.574785847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.270" endtime="20201029 18:15:02.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.280" endtime="20201029 18:15:02.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.954" endtime="20201029 18:15:02.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.952" endtime="20201029 18:15:02.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.287" level="INFO">${RESULT} = [{'diff': 4.236000000101825e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.236000000101825e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:02.284" endtime="20201029 18:15:02.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:02.293" level="INFO">${OVERHEAD} = {'diff': [4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.235...</msg>
<status status="PASS" starttime="20201029 18:15:02.288" endtime="20201029 18:15:02.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.297" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:02.296" endtime="20201029 18:15:02.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.300" level="INFO">VALUE: [4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.263999999976065e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.305000000037751e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.208000000005541e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.278000000024207e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.263000000115369e-06, 4.221999999831638e-06, 4.222000000053683e-06, 4.1939999999573985e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.208999999866236e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.194000000179443e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.263999999976065e-06, 4.278000000024207e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.208999999866236e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.264000000198109e-06, 4.1939999999573985e-06, 4.194000000179443e-06, 4.236999999962521e-06, 4.1939999999573985e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.179999999909256e-06, 4.290999999989609e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208999999866236e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 18:15:02.298" endtime="20201029 18:15:02.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.294" endtime="20201029 18:15:02.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.914" endtime="20201029 18:15:02.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.913" endtime="20201029 18:15:02.301"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.309" endtime="20201029 18:15:02.326"></status>
</kw>
<msg timestamp="20201029 18:15:02.326" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.307" endtime="20201029 18:15:02.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.327" endtime="20201029 18:15:02.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.330" endtime="20201029 18:15:02.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.305" endtime="20201029 18:15:02.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.303" endtime="20201029 18:15:02.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.339" endtime="20201029 18:15:02.645"></status>
</kw>
<msg timestamp="20201029 18:15:02.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.95666925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.956673444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:02.337" endtime="20201029 18:15:02.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.95666925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.956673444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:02.650" endtime="20201029 18:15:02.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.660" endtime="20201029 18:15:02.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.335" endtime="20201029 18:15:02.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.333" endtime="20201029 18:15:02.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.667" level="INFO">${RESULT} = [{'diff': 4.1939999999573985e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.263999999976065e-06}, {'diff': 4.179999999909256e-06}, {'diff': 4.290999999989609e-06}, {'diff': 4.236000000101825e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:02.663" endtime="20201029 18:15:02.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:02.673" level="INFO">${OVERHEAD} = {'diff': [4.1939999999573985e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.179999999909256e-06, 4.290999999989609e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208999999866236e-06, 4.221...</msg>
<status status="PASS" starttime="20201029 18:15:02.668" endtime="20201029 18:15:02.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.677" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:02.676" endtime="20201029 18:15:02.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.679" level="INFO">VALUE: [4.1939999999573985e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.179999999909256e-06, 4.290999999989609e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208999999866236e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.2499999999279225e-06, 4.2769999999414665e-06, 4.194999999818094e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.236999999740476e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.222999999914379e-06, 4.209000000088281e-06, 4.194999999818094e-06, 4.167000000165899e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2769999999414665e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.181000000436086e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.194999999818094e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.221999999831638e-06]</msg>
<status status="PASS" starttime="20201029 18:15:02.678" endtime="20201029 18:15:02.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.674" endtime="20201029 18:15:02.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.302" endtime="20201029 18:15:02.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.301" endtime="20201029 18:15:02.681"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.689" endtime="20201029 18:15:02.707"></status>
</kw>
<msg timestamp="20201029 18:15:02.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.688" endtime="20201029 18:15:02.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.709" endtime="20201029 18:15:02.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.711" endtime="20201029 18:15:02.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.685" endtime="20201029 18:15:02.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.683" endtime="20201029 18:15:02.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.721" endtime="20201029 18:15:03.039"></status>
</kw>
<msg timestamp="20201029 18:15:03.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.329427375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.329431611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.720" endtime="20201029 18:15:03.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.329427375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.329431611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.045" endtime="20201029 18:15:03.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.056" endtime="20201029 18:15:03.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.716" endtime="20201029 18:15:03.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.715" endtime="20201029 18:15:03.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.064" level="INFO">${RESULT} = [{'diff': 4.236000000101825e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.181000000436086e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:03.060" endtime="20201029 18:15:03.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:03.069" level="INFO">${OVERHEAD} = {'diff': [4.236000000101825e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.181000000436086e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.2...</msg>
<status status="PASS" starttime="20201029 18:15:03.065" endtime="20201029 18:15:03.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.073" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:03.072" endtime="20201029 18:15:03.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.076" level="INFO">VALUE: [4.236000000101825e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.181000000436086e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.194999999818094e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.237000000184565e-06, 4.236000000101825e-06, 4.16699999972181e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.250000000372012e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.1530000003398015e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.179999999909256e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.222999999914379e-06, 4.222000000275727e-06, 4.194999999818094e-06, 4.2499999999279225e-06, 4.179999999909256e-06, 4.194999999818094e-06, 4.222000000275727e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.074" endtime="20201029 18:15:03.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.070" endtime="20201029 18:15:03.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.682" endtime="20201029 18:15:03.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.681" endtime="20201029 18:15:03.077"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.086" endtime="20201029 18:15:03.104"></status>
</kw>
<msg timestamp="20201029 18:15:03.104" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.084" endtime="20201029 18:15:03.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.107" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.105" endtime="20201029 18:15:03.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.108" endtime="20201029 18:15:03.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.082" endtime="20201029 18:15:03.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.080" endtime="20201029 18:15:03.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.118" endtime="20201029 18:15:03.432"></status>
</kw>
<msg timestamp="20201029 18:15:03.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.702203792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.702208014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.116" endtime="20201029 18:15:03.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.702203792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.702208014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.437" endtime="20201029 18:15:03.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.447" endtime="20201029 18:15:03.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.113" endtime="20201029 18:15:03.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.111" endtime="20201029 18:15:03.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.454" level="INFO">${RESULT} = [{'diff': 4.221999999831638e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.221999999831638e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:03.450" endtime="20201029 18:15:03.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:03.459" level="INFO">${OVERHEAD} = {'diff': [4.221999999831638e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.2360...</msg>
<status status="PASS" starttime="20201029 18:15:03.455" endtime="20201029 18:15:03.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.463" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:03.462" endtime="20201029 18:15:03.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.466" level="INFO">VALUE: [4.221999999831638e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.2919999998503044e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.194999999818094e-06, 4.139000000069615e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.193999999735354e-06, 4.194999999818094e-06, 4.278000000024207e-06, 4.2499999999279225e-06, 4.250000000372012e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.179999999909256e-06, 4.26299999967128e-06, 4.208999999644192e-06, 4.236000000101825e-06, 4.263000000115369e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.179999999909256e-06, 4.222999999914379e-06, 4.236999999740476e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.1950000002621834e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.208000000005541e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.464" endtime="20201029 18:15:03.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.460" endtime="20201029 18:15:03.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.078" endtime="20201029 18:15:03.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.077" endtime="20201029 18:15:03.467"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.475" endtime="20201029 18:15:03.490"></status>
</kw>
<msg timestamp="20201029 18:15:03.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.474" endtime="20201029 18:15:03.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.492" endtime="20201029 18:15:03.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.494" endtime="20201029 18:15:03.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.471" endtime="20201029 18:15:03.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.469" endtime="20201029 18:15:03.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.504" endtime="20201029 18:15:03.824"></status>
</kw>
<msg timestamp="20201029 18:15:03.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.089147417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.089151653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.502" endtime="20201029 18:15:03.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.089147417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.089151653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.829" endtime="20201029 18:15:03.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.839" endtime="20201029 18:15:03.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.499" endtime="20201029 18:15:03.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.498" endtime="20201029 18:15:03.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.847" level="INFO">${RESULT} = [{'diff': 4.236000000101825e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.167000000165899e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.236000000101825e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:03.843" endtime="20201029 18:15:03.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:03.852" level="INFO">${OVERHEAD} = {'diff': [4.236000000101825e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.1950000002621834e-06, 4.249...</msg>
<status status="PASS" starttime="20201029 18:15:03.848" endtime="20201029 18:15:03.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.856" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:03.855" endtime="20201029 18:15:03.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.858" level="INFO">VALUE: [4.236000000101825e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.1950000002621834e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.180999999991997e-06, 4.291000000211653e-06, 4.236000000101825e-06, 4.180999999991997e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2769999999414665e-06, 4.222999999914379e-06, 4.209000000088281e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.194999999818094e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.1950000002621834e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.2769999999414665e-06, 4.264000000198109e-06, 4.194000000179443e-06, 4.2499999999279225e-06, 4.1800000003533455e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.2079999995614514e-06, 4.180999999991997e-06, 4.264000000198109e-06, 4.208000000005541e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.223000000358468e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.857" endtime="20201029 18:15:03.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.853" endtime="20201029 18:15:03.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.468" endtime="20201029 18:15:03.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.468" endtime="20201029 18:15:03.860"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.868" endtime="20201029 18:15:03.883"></status>
</kw>
<msg timestamp="20201029 18:15:03.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.866" endtime="20201029 18:15:03.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.885" endtime="20201029 18:15:03.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.887" endtime="20201029 18:15:03.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.864" endtime="20201029 18:15:03.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.862" endtime="20201029 18:15:03.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.897" endtime="20201029 18:15:04.213"></status>
</kw>
<msg timestamp="20201029 18:15:04.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.466928236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.466932444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.895" endtime="20201029 18:15:04.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.466928236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.466932444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.218" endtime="20201029 18:15:04.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.228" endtime="20201029 18:15:04.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.893" endtime="20201029 18:15:04.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.890" endtime="20201029 18:15:04.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.235" level="INFO">${RESULT} = [{'diff': 4.2079999995614514e-06}, {'diff': 4.180999999991997e-06}, {'diff': 4.264000000198109e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.278000000024207e-06}, {'diff': 4.236000000101825e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:04.232" endtime="20201029 18:15:04.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:04.241" level="INFO">${OVERHEAD} = {'diff': [4.2079999995614514e-06, 4.180999999991997e-06, 4.264000000198109e-06, 4.208000000005541e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.236...</msg>
<status status="PASS" starttime="20201029 18:15:04.236" endtime="20201029 18:15:04.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:04.244" endtime="20201029 18:15:04.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.247" level="INFO">VALUE: [4.2079999995614514e-06, 4.180999999991997e-06, 4.264000000198109e-06, 4.208000000005541e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.223000000358468e-06, 4.1950000002621834e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.223000000358468e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.250000000372012e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.16699999972181e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.1800000003533455e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.1950000002621834e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.179999999909256e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.236000000101825e-06, 4.194999999818094e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.167000000165899e-06, 4.2499999999279225e-06, 4.194000000179443e-06, 4.2499999999279225e-06, 4.236000000101825e-06]</msg>
<status status="PASS" starttime="20201029 18:15:04.246" endtime="20201029 18:15:04.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.241" endtime="20201029 18:15:04.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.861" endtime="20201029 18:15:04.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.860" endtime="20201029 18:15:04.249"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.257" endtime="20201029 18:15:04.275"></status>
</kw>
<msg timestamp="20201029 18:15:04.275" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.255" endtime="20201029 18:15:04.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.276" endtime="20201029 18:15:04.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.279" endtime="20201029 18:15:04.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.253" endtime="20201029 18:15:04.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.251" endtime="20201029 18:15:04.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.288" endtime="20201029 18:15:04.599"></status>
</kw>
<msg timestamp="20201029 18:15:04.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.847922333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.847926528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.287" endtime="20201029 18:15:04.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.847922333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.847926528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.604" endtime="20201029 18:15:04.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.614" endtime="20201029 18:15:04.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.284" endtime="20201029 18:15:04.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.282" endtime="20201029 18:15:04.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.621" level="INFO">${RESULT} = [{'diff': 4.194999999818094e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.209000000088281e-06}, {'diff': 4.222999999914379e-06}, {'diff': 4.236000000101825e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:04.617" endtime="20201029 18:15:04.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:04.628" level="INFO">${OVERHEAD} = {'diff': [4.194999999818094e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222...</msg>
<status status="PASS" starttime="20201029 18:15:04.622" endtime="20201029 18:15:04.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.633" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:04.632" endtime="20201029 18:15:04.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.635" level="INFO">VALUE: [4.194999999818094e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.167000000165899e-06, 4.2499999999279225e-06, 4.194000000179443e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.181000000436086e-06, 4.2499999999279225e-06, 4.152999999895712e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.276999999497377e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.209000000088281e-06, 4.318999999419759e-06, 4.208000000005541e-06, 4.194000000623532e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.222999999470289e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.193999999735354e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.2370000006286546e-06, 4.277999999580118e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.194000000623532e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.290999999767564e-06, 4.222000000275727e-06, 4.263999999309931e-06]</msg>
<status status="PASS" starttime="20201029 18:15:04.634" endtime="20201029 18:15:04.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.629" endtime="20201029 18:15:04.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.250" endtime="20201029 18:15:04.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.249" endtime="20201029 18:15:04.637"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.645" endtime="20201029 18:15:04.662"></status>
</kw>
<msg timestamp="20201029 18:15:04.663" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.643" endtime="20201029 18:15:04.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.664" endtime="20201029 18:15:04.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.666" endtime="20201029 18:15:04.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.640" endtime="20201029 18:15:04.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.639" endtime="20201029 18:15:04.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.676" endtime="20201029 18:15:04.992"></status>
</kw>
<msg timestamp="20201029 18:15:04.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.230746167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.230750417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.674" endtime="20201029 18:15:04.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.230746167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.230750417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.997" endtime="20201029 18:15:05.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.007" endtime="20201029 18:15:05.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.671" endtime="20201029 18:15:05.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.670" endtime="20201029 18:15:05.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.014" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.194999999818094e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.208000000005541e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:05.010" endtime="20201029 18:15:05.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:05.018" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.19...</msg>
<status status="PASS" starttime="20201029 18:15:05.015" endtime="20201029 18:15:05.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.023" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:05.022" endtime="20201029 18:15:05.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.025" level="INFO">VALUE: [4.2499999999279225e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.194000000623532e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.290999999767564e-06, 4.222000000275727e-06, 4.263999999309931e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.277999999580118e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.193999999735354e-06, 4.236000000545914e-06, 4.1809999995479075e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.195000000706273e-06, 4.222000000275727e-06, 4.222999999470289e-06, 4.222999999470289e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.236999999740476e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06]</msg>
<status status="PASS" starttime="20201029 18:15:05.024" endtime="20201029 18:15:05.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.019" endtime="20201029 18:15:05.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.638" endtime="20201029 18:15:05.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.637" endtime="20201029 18:15:05.027"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.035" endtime="20201029 18:15:05.054"></status>
</kw>
<msg timestamp="20201029 18:15:05.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.034" endtime="20201029 18:15:05.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.055" endtime="20201029 18:15:05.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.058" endtime="20201029 18:15:05.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.030" endtime="20201029 18:15:05.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.029" endtime="20201029 18:15:05.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.067" endtime="20201029 18:15:05.385"></status>
</kw>
<msg timestamp="20201029 18:15:05.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.606688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.606692819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.066" endtime="20201029 18:15:05.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.606688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.606692819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.390" endtime="20201029 18:15:05.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.400" endtime="20201029 18:15:05.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.063" endtime="20201029 18:15:05.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.061" endtime="20201029 18:15:05.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.409" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.277999999580118e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:05.404" endtime="20201029 18:15:05.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:05.415" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.235...</msg>
<status status="PASS" starttime="20201029 18:15:05.410" endtime="20201029 18:15:05.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.420" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:05.419" endtime="20201029 18:15:05.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.424" level="INFO">VALUE: [4.2499999999279225e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.139000000513704e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.195000000706273e-06, 4.193999999735354e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.167000000165899e-06, 4.236000000545914e-06, 4.306000000120491e-06, 4.277999999580118e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.194000000623532e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.278000000468296e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.209000000088281e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.193999999735354e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.209000000088281e-06, 4.2499999999279225e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 18:15:05.422" endtime="20201029 18:15:05.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.416" endtime="20201029 18:15:05.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.027" endtime="20201029 18:15:05.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.027" endtime="20201029 18:15:05.426"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.436" endtime="20201029 18:15:05.450"></status>
</kw>
<msg timestamp="20201029 18:15:05.451" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.434" endtime="20201029 18:15:05.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.454" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.452" endtime="20201029 18:15:05.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.455" endtime="20201029 18:15:05.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.431" endtime="20201029 18:15:05.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.429" endtime="20201029 18:15:05.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.464" endtime="20201029 18:15:05.777"></status>
</kw>
<msg timestamp="20201029 18:15:05.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.989528625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.989532847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.462" endtime="20201029 18:15:05.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.989528625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.989532847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.782" endtime="20201029 18:15:05.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.792" endtime="20201029 18:15:05.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.460" endtime="20201029 18:15:05.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.458" endtime="20201029 18:15:05.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.799" level="INFO">${RESULT} = [{'diff': 4.222000000275727e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.209000000088281e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.2499999999279225e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:05.796" endtime="20201029 18:15:05.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:05.805" level="INFO">${OVERHEAD} = {'diff': [4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.209000000088281e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.19...</msg>
<status status="PASS" starttime="20201029 18:15:05.800" endtime="20201029 18:15:05.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.809" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:05.808" endtime="20201029 18:15:05.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.812" level="INFO">VALUE: [4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.209000000088281e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.193999999735354e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.209000000088281e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.2919999998503044e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.193999999735354e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.208999999200103e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.1800000003533455e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.277999999580118e-06, 4.2499999999279225e-06, 4.235999999657736e-06]</msg>
<status status="PASS" starttime="20201029 18:15:05.810" endtime="20201029 18:15:05.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.806" endtime="20201029 18:15:05.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.427" endtime="20201029 18:15:05.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.426" endtime="20201029 18:15:05.813"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.821" endtime="20201029 18:15:05.837"></status>
</kw>
<msg timestamp="20201029 18:15:05.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.819" endtime="20201029 18:15:05.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.840" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.839" endtime="20201029 18:15:05.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.841" endtime="20201029 18:15:05.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.817" endtime="20201029 18:15:05.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.815" endtime="20201029 18:15:05.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.851" endtime="20201029 18:15:06.172"></status>
</kw>
<msg timestamp="20201029 18:15:06.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.375523889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.375528111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.849" endtime="20201029 18:15:06.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.375523889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.375528111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.177" endtime="20201029 18:15:06.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.187" endtime="20201029 18:15:06.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.846" endtime="20201029 18:15:06.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.845" endtime="20201029 18:15:06.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.194" level="INFO">${RESULT} = [{'diff': 4.222000000275727e-06}, {'diff': 4.208999999200103e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.236000000545914e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:06.190" endtime="20201029 18:15:06.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:06.199" level="INFO">${OVERHEAD} = {'diff': [4.222000000275727e-06, 4.208999999200103e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.180...</msg>
<status status="PASS" starttime="20201029 18:15:06.195" endtime="20201029 18:15:06.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.203" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:06.202" endtime="20201029 18:15:06.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.205" level="INFO">VALUE: [4.222000000275727e-06, 4.208999999200103e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.1800000003533455e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.277999999580118e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.194999999818094e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.1800000003533455e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.2919999998503044e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.277999999580118e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.222999999470289e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.264000000198109e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.306000000120491e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.1389999996255256e-06, 4.2919999998503044e-06, 4.209000000088281e-06, 4.15200000070115e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 18:15:06.204" endtime="20201029 18:15:06.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.199" endtime="20201029 18:15:06.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.814" endtime="20201029 18:15:06.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.814" endtime="20201029 18:15:06.207"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.216" endtime="20201029 18:15:06.240"></status>
</kw>
<msg timestamp="20201029 18:15:06.240" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.214" endtime="20201029 18:15:06.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.241" endtime="20201029 18:15:06.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.244" endtime="20201029 18:15:06.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.211" endtime="20201029 18:15:06.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.209" endtime="20201029 18:15:06.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.253" endtime="20201029 18:15:06.563"></status>
</kw>
<msg timestamp="20201029 18:15:06.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.752429097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.752433306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.251" endtime="20201029 18:15:06.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.752429097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.752433306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.567" endtime="20201029 18:15:06.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.577" endtime="20201029 18:15:06.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.249" endtime="20201029 18:15:06.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.247" endtime="20201029 18:15:06.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.584" level="INFO">${RESULT} = [{'diff': 4.209000000088281e-06}, {'diff': 4.264000000198109e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.306000000120491e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:06.581" endtime="20201029 18:15:06.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:06.590" level="INFO">${OVERHEAD} = {'diff': [4.209000000088281e-06, 4.264000000198109e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.306000000120491e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.221...</msg>
<status status="PASS" starttime="20201029 18:15:06.585" endtime="20201029 18:15:06.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.594" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:06.593" endtime="20201029 18:15:06.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.597" level="INFO">VALUE: [4.209000000088281e-06, 4.264000000198109e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.306000000120491e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.1389999996255256e-06, 4.2919999998503044e-06, 4.209000000088281e-06, 4.15200000070115e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.208000000005541e-06, 4.263999999309931e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.167000000165899e-06, 4.236999999740476e-06, 4.221999999387549e-06, 4.208000000005541e-06, 4.2370000006286546e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.222000000275727e-06, 4.222999999470289e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.193999999735354e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.264000000198109e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.236999999740476e-06, 4.263000000115369e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.208999999200103e-06, 4.223000000358468e-06]</msg>
<status status="PASS" starttime="20201029 18:15:06.595" endtime="20201029 18:15:06.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.591" endtime="20201029 18:15:06.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.208" endtime="20201029 18:15:06.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.207" endtime="20201029 18:15:06.598"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.606" endtime="20201029 18:15:06.621"></status>
</kw>
<msg timestamp="20201029 18:15:06.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.604" endtime="20201029 18:15:06.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.623" endtime="20201029 18:15:06.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.625" endtime="20201029 18:15:06.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.602" endtime="20201029 18:15:06.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.600" endtime="20201029 18:15:06.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.634" endtime="20201029 18:15:06.954"></status>
</kw>
<msg timestamp="20201029 18:15:06.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.144400083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.144404319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.633" endtime="20201029 18:15:06.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.144400083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.144404319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.958" endtime="20201029 18:15:06.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.968" endtime="20201029 18:15:06.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.630" endtime="20201029 18:15:06.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.628" endtime="20201029 18:15:06.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.976" level="INFO">${RESULT} = [{'diff': 4.236000000545914e-06}, {'diff': 4.236999999740476e-06}, {'diff': 4.223000000358468e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.236999999740476e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:06.972" endtime="20201029 18:15:06.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:06.981" level="INFO">${OVERHEAD} = {'diff': [4.236000000545914e-06, 4.236999999740476e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.236999999740476e-06, 4.263000000115369e-06, 4.236000000545914e-06, 4.2359...</msg>
<status status="PASS" starttime="20201029 18:15:06.977" endtime="20201029 18:15:06.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.985" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:06.984" endtime="20201029 18:15:06.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.988" level="INFO">VALUE: [4.236000000545914e-06, 4.236999999740476e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.236999999740476e-06, 4.263000000115369e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.208999999200103e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.250000000816101e-06, 4.235999999657736e-06, 4.222999999470289e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.181000000436086e-06, 4.222999999470289e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.194000000623532e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.151999999812972e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.305000000037751e-06, 4.290999999767564e-06, 4.2370000006286546e-06, 4.194000000623532e-06, 4.235999999657736e-06, 4.152999999895712e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.277999999580118e-06, 4.236000000545914e-06, 4.194000000623532e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.222000000275727e-06]</msg>
<status status="PASS" starttime="20201029 18:15:06.986" endtime="20201029 18:15:06.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.982" endtime="20201029 18:15:06.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.599" endtime="20201029 18:15:06.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.598" endtime="20201029 18:15:06.989"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.998" endtime="20201029 18:15:07.013"></status>
</kw>
<msg timestamp="20201029 18:15:07.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.996" endtime="20201029 18:15:07.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.016" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.014" endtime="20201029 18:15:07.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.017" endtime="20201029 18:15:07.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.993" endtime="20201029 18:15:07.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.991" endtime="20201029 18:15:07.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.027" endtime="20201029 18:15:07.344"></status>
</kw>
<msg timestamp="20201029 18:15:07.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.517140667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.517144903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.025" endtime="20201029 18:15:07.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.517140667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.517144903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.349" endtime="20201029 18:15:07.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.358" endtime="20201029 18:15:07.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.022" endtime="20201029 18:15:07.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.020" endtime="20201029 18:15:07.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.365" level="INFO">${RESULT} = [{'diff': 4.236000000545914e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.223000000358468e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.277999999580118e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:07.362" endtime="20201029 18:15:07.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:07.370" level="INFO">${OVERHEAD} = {'diff': [4.236000000545914e-06, 4.221999999387549e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.277999999580118e-06, 4.236000000545914e-06, 4.194000000623532e-06, 4.2360...</msg>
<status status="PASS" starttime="20201029 18:15:07.366" endtime="20201029 18:15:07.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.375" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:07.373" endtime="20201029 18:15:07.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.378" level="INFO">VALUE: [4.236000000545914e-06, 4.221999999387549e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.277999999580118e-06, 4.236000000545914e-06, 4.194000000623532e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.276999999497377e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.167000000165899e-06, 4.166000000083159e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.193999999735354e-06, 4.2919999998503044e-06, 4.194999999818094e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.193999999735354e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.263999999309931e-06, 4.222000000275727e-06, 4.250000000816101e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.1809999995479075e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.277999999580118e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.236000000545914e-06]</msg>
<status status="PASS" starttime="20201029 18:15:07.376" endtime="20201029 18:15:07.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.371" endtime="20201029 18:15:07.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.990" endtime="20201029 18:15:07.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.989" endtime="20201029 18:15:07.379"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.387" endtime="20201029 18:15:07.404"></status>
</kw>
<msg timestamp="20201029 18:15:07.405" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.386" endtime="20201029 18:15:07.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.407" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.406" endtime="20201029 18:15:07.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.408" endtime="20201029 18:15:07.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.383" endtime="20201029 18:15:07.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.381" endtime="20201029 18:15:07.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.417" endtime="20201029 18:15:07.728"></status>
</kw>
<msg timestamp="20201029 18:15:07.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.899043833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.899048042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.416" endtime="20201029 18:15:07.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.899043833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.899048042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.732" endtime="20201029 18:15:07.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.742" endtime="20201029 18:15:07.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.413" endtime="20201029 18:15:07.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.411" endtime="20201029 18:15:07.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.749" level="INFO">${RESULT} = [{'diff': 4.209000000088281e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.193999999735354e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.236000000545914e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:07.746" endtime="20201029 18:15:07.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:07.755" level="INFO">${OVERHEAD} = {'diff': [4.209000000088281e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.2080...</msg>
<status status="PASS" starttime="20201029 18:15:07.750" endtime="20201029 18:15:07.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.759" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:07.758" endtime="20201029 18:15:07.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.761" level="INFO">VALUE: [4.209000000088281e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.278000000468296e-06, 4.152999999895712e-06, 4.208000000005541e-06, 4.167000000165899e-06, 4.277999999580118e-06, 4.2499999999279225e-06, 4.1809999995479075e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.264000000198109e-06, 4.152999999895712e-06, 4.181000000436086e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.179999999465167e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.167000000165899e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.193999999735354e-06, 4.235999999657736e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.223000000358468e-06]</msg>
<status status="PASS" starttime="20201029 18:15:07.760" endtime="20201029 18:15:07.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.755" endtime="20201029 18:15:07.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.380" endtime="20201029 18:15:07.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.379" endtime="20201029 18:15:07.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.981" endtime="20201029 18:15:07.764"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:59.906" endtime="20201029 18:15:07.764" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.772" endtime="20201029 18:15:07.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.770" endtime="20201029 18:15:07.792"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.805" endtime="20201029 18:15:07.828"></status>
</kw>
<msg timestamp="20201029 18:15:07.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.803" endtime="20201029 18:15:07.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.831" endtime="20201029 18:15:07.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.836" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:07.833" endtime="20201029 18:15:07.836"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:07.801" endtime="20201029 18:15:07.837"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:07.798" endtime="20201029 18:15:07.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.797" endtime="20201029 18:15:07.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:07.843" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:07.842" endtime="20201029 18:15:07.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.840" endtime="20201029 18:15:07.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.796" endtime="20201029 18:15:07.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.796" endtime="20201029 18:15:07.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.845" endtime="20201029 18:15:07.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.794" endtime="20201029 18:15:07.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.793" endtime="20201029 18:15:07.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.769" endtime="20201029 18:15:07.849"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.860" endtime="20201029 18:15:07.886"></status>
</kw>
<msg timestamp="20201029 18:15:07.887" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.858" endtime="20201029 18:15:07.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.889" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.888" endtime="20201029 18:15:07.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.891" endtime="20201029 18:15:07.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.854" endtime="20201029 18:15:07.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.852" endtime="20201029 18:15:07.893"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.896" endtime="20201029 18:15:07.897"></status>
</kw>
<msg timestamp="20201029 18:15:07.898" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:15:07.894" endtime="20201029 18:15:07.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.902" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:07.901" endtime="20201029 18:15:07.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.904" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:07.903" endtime="20201029 18:15:07.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.899" endtime="20201029 18:15:07.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.909" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:07.908" endtime="20201029 18:15:07.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.911" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:07.910" endtime="20201029 18:15:07.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.906" endtime="20201029 18:15:07.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.918" endtime="20201029 18:15:08.207"></status>
</kw>
<msg timestamp="20201029 18:15:08.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.082037833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.082046403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.917" endtime="20201029 18:15:08.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.082037833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.082046403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.211" endtime="20201029 18:15:08.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.219" endtime="20201029 18:15:08.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.914" endtime="20201029 18:15:08.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.912" endtime="20201029 18:15:08.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.226" level="INFO">${RESULT} = [{'diff': 8.569999999999411e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.652999999997357e-06}, {'diff': 8.694000000003532e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.707999999996163e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:08.223" endtime="20201029 18:15:08.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:08.230" level="INFO">${OVERHEAD} = {'diff': [8.569999999999411e-06, 8.750000000001812e-06, 8.652999999997357e-06, 8.694000000003532e-06, 8.723000000002146e-06, 8.707999999996163e-06, 8.722999999988268e-06, 8.723000000002146e-06, 8.7079...</msg>
<status status="PASS" starttime="20201029 18:15:08.227" endtime="20201029 18:15:08.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.234" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:15:08.233" endtime="20201029 18:15:08.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.237" level="INFO">VALUE: [8.569999999999411e-06, 8.750000000001812e-06, 8.652999999997357e-06, 8.694000000003532e-06, 8.723000000002146e-06, 8.707999999996163e-06, 8.722999999988268e-06, 8.723000000002146e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.667000000003866e-06, 8.666000000004392e-06, 8.695000000003006e-06, 8.666000000004392e-06, 8.709000000009515e-06, 8.652999999997357e-06, 8.695000000003006e-06, 8.709000000009515e-06, 8.694999999989128e-06, 8.679999999997023e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.694000000003532e-06, 8.681000000010375e-06, 8.694999999989128e-06, 8.637999999991375e-06, 8.723000000002146e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.708999999995637e-06, 8.694999999989128e-06, 8.708999999995637e-06, 8.680999999996497e-06, 8.695000000003006e-06, 8.666000000004392e-06, 8.694000000003532e-06, 8.708000000010041e-06, 8.695000000003006e-06, 8.709000000009515e-06, 8.695000000003006e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.681000000010375e-06, 8.611000000005586e-06, 8.708000000010041e-06, 8.723000000002146e-06]</msg>
<status status="PASS" starttime="20201029 18:15:08.235" endtime="20201029 18:15:08.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.231" endtime="20201029 18:15:08.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.850" endtime="20201029 18:15:08.238"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:07.766" endtime="20201029 18:15:08.239" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.246" endtime="20201029 18:15:08.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.244" endtime="20201029 18:15:08.266"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.280" endtime="20201029 18:15:08.300"></status>
</kw>
<msg timestamp="20201029 18:15:08.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.278" endtime="20201029 18:15:08.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.301" endtime="20201029 18:15:08.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.306" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:08.304" endtime="20201029 18:15:08.306"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:08.276" endtime="20201029 18:15:08.307"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:08.273" endtime="20201029 18:15:08.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.271" endtime="20201029 18:15:08.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:08.311" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:08.311" endtime="20201029 18:15:08.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.308" endtime="20201029 18:15:08.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.270" endtime="20201029 18:15:08.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.270" endtime="20201029 18:15:08.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.313" endtime="20201029 18:15:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.268" endtime="20201029 18:15:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.267" endtime="20201029 18:15:08.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.243" endtime="20201029 18:15:08.316"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.324" endtime="20201029 18:15:08.420"></status>
</kw>
<msg timestamp="20201029 18:15:08.420" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.323" endtime="20201029 18:15:08.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.423" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.421" endtime="20201029 18:15:08.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.424" endtime="20201029 18:15:08.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.320" endtime="20201029 18:15:08.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.318" endtime="20201029 18:15:08.427"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.429" endtime="20201029 18:15:08.431"></status>
</kw>
<msg timestamp="20201029 18:15:08.431" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:15:08.427" endtime="20201029 18:15:08.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.435" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:08.434" endtime="20201029 18:15:08.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.437" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:08.436" endtime="20201029 18:15:08.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.432" endtime="20201029 18:15:08.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.443" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:08.441" endtime="20201029 18:15:08.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.446" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:08.445" endtime="20201029 18:15:08.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.439" endtime="20201029 18:15:08.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.456" endtime="20201029 18:15:08.748"></status>
</kw>
<msg timestamp="20201029 18:15:08.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071672958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071723292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.454" endtime="20201029 18:15:08.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071672958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071723292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.753" endtime="20201029 18:15:08.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.761" endtime="20201029 18:15:08.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.450" endtime="20201029 18:15:08.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.448" endtime="20201029 18:15:08.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.768" level="INFO">${RESULT} = [{'diff': 5.03339999999991e-05}, {'diff': 5.022200000000254e-05}, {'diff': 5.0235999999995173e-05}, {'diff': 5.029100000000786e-05}, {'diff': 5.0209000000009385e-05}, {'diff': 5.026399999999431e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:08.765" endtime="20201029 18:15:08.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:08.772" level="INFO">${OVERHEAD} = {'diff': [5.03339999999991e-05, 5.022200000000254e-05, 5.0235999999995173e-05, 5.029100000000786e-05, 5.0209000000009385e-05, 5.026399999999431e-05, 5.030599999999996e-05, 5.031899999999312e-05, 5.027...</msg>
<status status="PASS" starttime="20201029 18:15:08.769" endtime="20201029 18:15:08.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.777" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:15:08.776" endtime="20201029 18:15:08.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.780" level="INFO">VALUE: [5.03339999999991e-05, 5.022200000000254e-05, 5.0235999999995173e-05, 5.029100000000786e-05, 5.0209000000009385e-05, 5.026399999999431e-05, 5.030599999999996e-05, 5.031899999999312e-05, 5.027800000000082e-05, 5.027800000000082e-05, 5.022200000000254e-05, 5.030599999999996e-05, 5.023600000000905e-05, 5.029099999999398e-05, 5.0209000000009385e-05, 5.0387999999998434e-05, 5.023600000000905e-05, 5.0277999999986944e-05, 5.033299999999963e-05, 5.022200000000254e-05, 5.030599999999996e-05, 5.0235999999995173e-05, 5.026399999999431e-05, 5.0235999999995173e-05, 5.034700000000614e-05, 5.031999999999259e-05, 5.026399999999431e-05, 5.031899999999312e-05, 5.029199999999345e-05, 5.022200000000254e-05, 5.026399999999431e-05, 5.023600000000905e-05, 5.023600000000905e-05, 5.029200000000733e-05, 5.022200000000254e-05, 5.025000000000168e-05, 5.023600000000905e-05, 5.023600000000905e-05, 5.023600000000905e-05, 5.026299999999484e-05, 5.030599999999996e-05, 5.031999999999259e-05, 5.023600000000905e-05, 5.0207999999996034e-05, 5.022200000001642e-05, 5.0333000000013506e-05, 5.022299999998814e-05, 5.031899999999312e-05, 5.0277000000015226e-05, 5.023600000000905e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.778" endtime="20201029 18:15:08.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.773" endtime="20201029 18:15:08.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.317" endtime="20201029 18:15:08.782"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:08.240" endtime="20201029 18:15:08.783" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.790" endtime="20201029 18:15:08.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.789" endtime="20201029 18:15:08.810"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.824" endtime="20201029 18:15:08.845"></status>
</kw>
<msg timestamp="20201029 18:15:08.845" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.822" endtime="20201029 18:15:08.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.848" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.846" endtime="20201029 18:15:08.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.851" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:08.849" endtime="20201029 18:15:08.851"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:08.819" endtime="20201029 18:15:08.852"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:08.817" endtime="20201029 18:15:08.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.816" endtime="20201029 18:15:08.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:08.856" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:08.856" endtime="20201029 18:15:08.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.853" endtime="20201029 18:15:08.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.815" endtime="20201029 18:15:08.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.814" endtime="20201029 18:15:08.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.858" endtime="20201029 18:15:08.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.813" endtime="20201029 18:15:08.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.811" endtime="20201029 18:15:08.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.787" endtime="20201029 18:15:08.861"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.870" endtime="20201029 18:15:09.162"></status>
</kw>
<msg timestamp="20201029 18:15:09.163" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.868" endtime="20201029 18:15:09.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.168" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.165" endtime="20201029 18:15:09.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.170" endtime="20201029 18:15:09.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.865" endtime="20201029 18:15:09.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.863" endtime="20201029 18:15:09.176"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.180" endtime="20201029 18:15:09.184"></status>
</kw>
<msg timestamp="20201029 18:15:09.185" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:15:09.178" endtime="20201029 18:15:09.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.194" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:09.192" endtime="20201029 18:15:09.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.198" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:09.196" endtime="20201029 18:15:09.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.187" endtime="20201029 18:15:09.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.208" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:09.206" endtime="20201029 18:15:09.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.213" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:09.210" endtime="20201029 18:15:09.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.201" endtime="20201029 18:15:09.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.228" endtime="20201029 18:15:09.528"></status>
</kw>
<msg timestamp="20201029 18:15:09.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078113069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078207056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.225" endtime="20201029 18:15:09.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078113069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078207056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.533" endtime="20201029 18:15:09.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.542" endtime="20201029 18:15:09.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.219" endtime="20201029 18:15:09.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.216" endtime="20201029 18:15:09.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.552" level="INFO">${RESULT} = [{'diff': 9.39870000000037e-05}, {'diff': 9.327700000000272e-05}, {'diff': 9.3333000000001e-05}, {'diff': 9.331899999999449e-05}, {'diff': 9.332000000000784e-05}, {'diff': 9.331999999999396e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:09.548" endtime="20201029 18:15:09.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:09.559" level="INFO">${OVERHEAD} = {'diff': [9.39870000000037e-05, 9.327700000000272e-05, 9.3333000000001e-05, 9.331899999999449e-05, 9.332000000000784e-05, 9.331999999999396e-05, 9.327800000000219e-05, 9.327700000000272e-05, 9.3235999...</msg>
<status status="PASS" starttime="20201029 18:15:09.553" endtime="20201029 18:15:09.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.565" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:15:09.564" endtime="20201029 18:15:09.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.569" level="INFO">VALUE: [9.39870000000037e-05, 9.327700000000272e-05, 9.3333000000001e-05, 9.331899999999449e-05, 9.332000000000784e-05, 9.331999999999396e-05, 9.327800000000219e-05, 9.327700000000272e-05, 9.323599999999654e-05, 9.326400000000956e-05, 9.31939999999909e-05, 9.325000000001693e-05, 9.323599999999654e-05, 9.326400000000956e-05, 9.329199999999482e-05, 9.3333000000001e-05, 9.329099999999535e-05, 9.320799999998353e-05, 9.331900000000837e-05, 9.338899999999928e-05, 9.326400000000956e-05, 9.326300000001009e-05, 9.334699999999363e-05, 9.323599999999654e-05, 9.343000000000545e-05, 9.330500000001574e-05, 9.323599999999654e-05, 9.330600000001521e-05, 9.330600000001521e-05, 9.331900000000837e-05, 9.331999999998009e-05, 9.3333000000001e-05, 9.330600000001521e-05, 9.332000000000784e-05, 9.327800000002995e-05, 9.329200000002258e-05, 9.330500000004349e-05, 9.333299999997324e-05, 9.327800000002995e-05, 9.32639999999818e-05, 9.320799999995577e-05, 9.329199999996707e-05, 9.331899999998061e-05, 9.336100000001402e-05, 9.337500000000665e-05, 9.334699999996587e-05, 9.329099999999535e-05, 9.330600000001521e-05, 9.327700000000272e-05, 9.324999999998917e-05]</msg>
<status status="PASS" starttime="20201029 18:15:09.567" endtime="20201029 18:15:09.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.560" endtime="20201029 18:15:09.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.861" endtime="20201029 18:15:09.571"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:08.785" endtime="20201029 18:15:09.572" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.582" endtime="20201029 18:15:09.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.580" endtime="20201029 18:15:09.603"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.622" endtime="20201029 18:15:09.642"></status>
</kw>
<msg timestamp="20201029 18:15:09.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.620" endtime="20201029 18:15:09.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.646" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.644" endtime="20201029 18:15:09.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.649" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:09.647" endtime="20201029 18:15:09.649"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:09.616" endtime="20201029 18:15:09.650"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:09.613" endtime="20201029 18:15:09.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.611" endtime="20201029 18:15:09.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:09.655" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:09.654" endtime="20201029 18:15:09.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.652" endtime="20201029 18:15:09.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.610" endtime="20201029 18:15:09.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.609" endtime="20201029 18:15:09.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.657" endtime="20201029 18:15:09.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.607" endtime="20201029 18:15:09.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.604" endtime="20201029 18:15:09.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.578" endtime="20201029 18:15:09.660"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.669" endtime="20201029 18:15:09.693"></status>
</kw>
<msg timestamp="20201029 18:15:09.693" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.667" endtime="20201029 18:15:09.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.698" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.695" endtime="20201029 18:15:09.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.701" endtime="20201029 18:15:09.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.665" endtime="20201029 18:15:09.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.663" endtime="20201029 18:15:09.704"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.707" endtime="20201029 18:15:09.709"></status>
</kw>
<msg timestamp="20201029 18:15:09.710" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:15:09.705" endtime="20201029 18:15:09.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.716" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:09.715" endtime="20201029 18:15:09.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.718" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:09.717" endtime="20201029 18:15:09.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.712" endtime="20201029 18:15:09.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.722" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:09.721" endtime="20201029 18:15:09.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.724" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:09.723" endtime="20201029 18:15:09.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.719" endtime="20201029 18:15:09.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.731" endtime="20201029 18:15:10.026"></status>
</kw>
<msg timestamp="20201029 18:15:10.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080028625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080030611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.730" endtime="20201029 18:15:10.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080028625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080030611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.036" endtime="20201029 18:15:10.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.054" endtime="20201029 18:15:10.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.727" endtime="20201029 18:15:10.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.726" endtime="20201029 18:15:10.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.069" level="INFO">${RESULT} = [{'diff': 1.9859999999954914e-06}, {'diff': 1.9859999999954914e-06}, {'diff': 1.9859999999954914e-06}, {'diff': 1.987000000008843e-06}, {'diff': 1.9859999999954914e-06}, {'diff': 1.9999999999881224e-0...</msg>
<status status="PASS" starttime="20201029 18:15:10.061" endtime="20201029 18:15:10.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:10.078" level="INFO">${OVERHEAD} = {'diff': [1.9859999999954914e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 1.987000000008843e-06, 1.9859999999954914e-06, 1.9999999999881224e-06, 1.958999999995825e-06, 2.013999999994631e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:15:10.071" endtime="20201029 18:15:10.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.087" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:15:10.085" endtime="20201029 18:15:10.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.093" level="INFO">VALUE: [1.9859999999954914e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 1.987000000008843e-06, 1.9859999999954914e-06, 1.9999999999881224e-06, 1.958999999995825e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.9160000000045807e-06, 2.000000000002e-06, 1.973000000002334e-06, 1.987000000008843e-06, 1.9440000000037205e-06, 1.9859999999954914e-06, 1.9999999999881224e-06, 1.9579999999963515e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 1.9719999999889826e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 2.000000000002e-06, 2.000000000002e-06, 2.013999999994631e-06, 1.9720000000028604e-06, 2.02800000000114e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 1.986000000009369e-06, 2.000000000002e-06, 1.9999999999881224e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.013999999994631e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.013999999994631e-06, 1.9859999999954914e-06, 1.9719999999889826e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.014000000008509e-06, 2.000000000002e-06, 1.9579999999963515e-06]</msg>
<status status="PASS" starttime="20201029 18:15:10.090" endtime="20201029 18:15:10.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.080" endtime="20201029 18:15:10.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.661" endtime="20201029 18:15:10.095"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:09.574" endtime="20201029 18:15:10.095" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.102" endtime="20201029 18:15:10.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.100" endtime="20201029 18:15:10.123"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.136" endtime="20201029 18:15:10.153"></status>
</kw>
<msg timestamp="20201029 18:15:10.154" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.135" endtime="20201029 18:15:10.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.156" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.155" endtime="20201029 18:15:10.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.159" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:10.157" endtime="20201029 18:15:10.159"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:10.131" endtime="20201029 18:15:10.160"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:10.129" endtime="20201029 18:15:10.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.128" endtime="20201029 18:15:10.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:10.165" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:10.164" endtime="20201029 18:15:10.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.162" endtime="20201029 18:15:10.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.127" endtime="20201029 18:15:10.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.126" endtime="20201029 18:15:10.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.166" endtime="20201029 18:15:10.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.125" endtime="20201029 18:15:10.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.123" endtime="20201029 18:15:10.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.099" endtime="20201029 18:15:10.169"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.177" endtime="20201029 18:15:10.274"></status>
</kw>
<msg timestamp="20201029 18:15:10.274" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.176" endtime="20201029 18:15:10.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.277" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.275" endtime="20201029 18:15:10.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.278" endtime="20201029 18:15:10.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.173" endtime="20201029 18:15:10.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.171" endtime="20201029 18:15:10.280"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.283" endtime="20201029 18:15:10.284"></status>
</kw>
<msg timestamp="20201029 18:15:10.285" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:15:10.281" endtime="20201029 18:15:10.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.289" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:10.288" endtime="20201029 18:15:10.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.291" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:10.290" endtime="20201029 18:15:10.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.285" endtime="20201029 18:15:10.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.297" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:10.295" endtime="20201029 18:15:10.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.300" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:10.298" endtime="20201029 18:15:10.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.292" endtime="20201029 18:15:10.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.314" endtime="20201029 18:15:10.609"></status>
</kw>
<msg timestamp="20201029 18:15:10.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069314444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069326625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.311" endtime="20201029 18:15:10.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069314444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069326625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.614" endtime="20201029 18:15:10.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.624" endtime="20201029 18:15:10.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.306" endtime="20201029 18:15:10.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.302" endtime="20201029 18:15:10.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.633" level="INFO">${RESULT} = [{'diff': 1.2180999999999997e-05}, {'diff': 1.2166999999993489e-05}, {'diff': 1.2138999999994349e-05}, {'diff': 1.2180999999999997e-05}, {'diff': 1.2165999999994015e-05}, {'diff': 1.2167000000007366e-...</msg>
<status status="PASS" starttime="20201029 18:15:10.629" endtime="20201029 18:15:10.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:10.637" level="INFO">${OVERHEAD} = {'diff': [1.2180999999999997e-05, 1.2166999999993489e-05, 1.2138999999994349e-05, 1.2180999999999997e-05, 1.2165999999994015e-05, 1.2167000000007366e-05, 1.2153000000000858e-05, 1.2165999999994015e-05...</msg>
<status status="PASS" starttime="20201029 18:15:10.634" endtime="20201029 18:15:10.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.642" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:15:10.641" endtime="20201029 18:15:10.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.645" level="INFO">VALUE: [1.2180999999999997e-05, 1.2166999999993489e-05, 1.2138999999994349e-05, 1.2180999999999997e-05, 1.2165999999994015e-05, 1.2167000000007366e-05, 1.2153000000000858e-05, 1.2165999999994015e-05, 1.20969999999887e-05, 1.2165999999994015e-05, 1.2153000000000858e-05, 1.2207999999999664e-05, 1.2165999999994015e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2180999999999997e-05, 1.2153000000000858e-05, 1.2194999999992628e-05, 1.2180999999999997e-05, 1.2208999999999137e-05, 1.2137999999994875e-05, 1.2125000000001718e-05, 1.2153000000000858e-05, 1.2166999999993489e-05, 1.2194999999992628e-05, 1.2165999999994015e-05, 1.2180999999999997e-05, 1.2138999999994349e-05, 1.2180000000000524e-05, 1.2125000000001718e-05, 1.2153000000000858e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2125000000001718e-05, 1.2207999999999664e-05, 1.2153000000000858e-05, 1.2167000000007366e-05, 1.2180000000000524e-05, 1.2167000000007366e-05, 1.2124999999973962e-05, 1.2111000000009087e-05, 1.216699999997961e-05, 1.2194999999992628e-05, 1.2193999999993155e-05, 1.2180000000000524e-05, 1.2153000000014735e-05, 1.2167000000007366e-05, 1.2139000000022104e-05, 1.2138999999994349e-05, 1.216699999997961e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.643" endtime="20201029 18:15:10.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.638" endtime="20201029 18:15:10.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.170" endtime="20201029 18:15:10.646"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:10.097" endtime="20201029 18:15:10.647" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.654" endtime="20201029 18:15:10.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.652" endtime="20201029 18:15:10.675"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.689" endtime="20201029 18:15:10.711"></status>
</kw>
<msg timestamp="20201029 18:15:10.712" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.687" endtime="20201029 18:15:10.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.714" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.713" endtime="20201029 18:15:10.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.717" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:10.715" endtime="20201029 18:15:10.718"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:10.685" endtime="20201029 18:15:10.718"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:10.682" endtime="20201029 18:15:10.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.681" endtime="20201029 18:15:10.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:10.723" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:10.722" endtime="20201029 18:15:10.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.720" endtime="20201029 18:15:10.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.680" endtime="20201029 18:15:10.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.679" endtime="20201029 18:15:10.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.725" endtime="20201029 18:15:10.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.678" endtime="20201029 18:15:10.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.675" endtime="20201029 18:15:10.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.651" endtime="20201029 18:15:10.728"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.736" endtime="20201029 18:15:11.029"></status>
</kw>
<msg timestamp="20201029 18:15:11.030" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.735" endtime="20201029 18:15:11.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.036" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.033" endtime="20201029 18:15:11.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.038" endtime="20201029 18:15:11.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.732" endtime="20201029 18:15:11.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.730" endtime="20201029 18:15:11.044"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.049" endtime="20201029 18:15:11.059"></status>
</kw>
<msg timestamp="20201029 18:15:11.060" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:15:11.046" endtime="20201029 18:15:11.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.070" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:11.067" endtime="20201029 18:15:11.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.075" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:11.073" endtime="20201029 18:15:11.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.062" endtime="20201029 18:15:11.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.085" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:11.083" endtime="20201029 18:15:11.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.090" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:11.088" endtime="20201029 18:15:11.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.078" endtime="20201029 18:15:11.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.106" endtime="20201029 18:15:11.400"></status>
</kw>
<msg timestamp="20201029 18:15:11.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078789208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07881175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:11.103" endtime="20201029 18:15:11.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078789208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07881175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:11.404" endtime="20201029 18:15:11.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.412" endtime="20201029 18:15:11.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.097" endtime="20201029 18:15:11.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.093" endtime="20201029 18:15:11.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.419" level="INFO">${RESULT} = [{'diff': 2.2542000000000395e-05}, {'diff': 2.2542000000000395e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.256900000000006e-05}, {'diff': 2.256900000000006e-05}, {'diff': 2.255500000000743e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:11.416" endtime="20201029 18:15:11.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:11.424" level="INFO">${OVERHEAD} = {'diff': [2.2542000000000395e-05, 2.2542000000000395e-05, 2.25969999999992e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.255500000000743e-05, 2.2569999999999535e-05, 2.2542000000000395e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:15:11.420" endtime="20201029 18:15:11.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.429" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:15:11.428" endtime="20201029 18:15:11.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.432" level="INFO">VALUE: [2.2542000000000395e-05, 2.2542000000000395e-05, 2.25969999999992e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.255500000000743e-05, 2.2569999999999535e-05, 2.2542000000000395e-05, 2.2542000000000395e-05, 2.2582999999992692e-05, 2.261100000000571e-05, 2.2582999999992692e-05, 2.2596999999985323e-05, 2.261100000000571e-05, 2.256900000000006e-05, 2.2556000000006904e-05, 2.2514000000001255e-05, 2.2541999999986517e-05, 2.2500000000008624e-05, 2.2554999999979675e-05, 2.261100000000571e-05, 2.255500000000743e-05, 2.2582999999992692e-05, 2.2527999999993886e-05, 2.2542000000014273e-05, 2.262499999999834e-05, 2.2500000000008624e-05, 2.2582999999992692e-05, 2.262499999999834e-05, 2.25410000000148e-05, 2.2598000000012552e-05, 2.2528000000021642e-05, 2.259700000001308e-05, 2.2555000000035186e-05, 2.2583000000020448e-05, 2.254199999995876e-05, 2.261100000000571e-05, 2.254199999995876e-05, 2.2583999999992166e-05, 2.249999999998087e-05, 2.2555000000035186e-05, 2.254199999995876e-05, 2.2596999999957568e-05, 2.2582999999964937e-05, 2.2542000000014273e-05, 2.2556000000006904e-05, 2.2528000000021642e-05, 2.2568999999972306e-05, 2.2541000000042555e-05, 2.259700000001308e-05]</msg>
<status status="PASS" starttime="20201029 18:15:11.430" endtime="20201029 18:15:11.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.425" endtime="20201029 18:15:11.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.728" endtime="20201029 18:15:11.433"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:10.648" endtime="20201029 18:15:11.434" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.447" endtime="20201029 18:15:11.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.446" endtime="20201029 18:15:11.467"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.481" endtime="20201029 18:15:11.504"></status>
</kw>
<msg timestamp="20201029 18:15:11.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.480" endtime="20201029 18:15:11.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.505" endtime="20201029 18:15:11.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.510" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:11.508" endtime="20201029 18:15:11.510"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:11.477" endtime="20201029 18:15:11.511"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:11.475" endtime="20201029 18:15:11.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.473" endtime="20201029 18:15:11.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:11.516" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:11.515" endtime="20201029 18:15:11.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.513" endtime="20201029 18:15:11.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.473" endtime="20201029 18:15:11.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.472" endtime="20201029 18:15:11.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.518" endtime="20201029 18:15:11.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.470" endtime="20201029 18:15:11.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.468" endtime="20201029 18:15:11.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.444" endtime="20201029 18:15:11.521"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.524" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:11.533" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:12.714" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:11.523" endtime="20201029 18:15:12.715"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.719" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:12.717" endtime="20201029 18:15:12.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.521" endtime="20201029 18:15:12.720"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.724" endtime="20201029 18:15:12.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.722" endtime="20201029 18:15:12.744"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.753" endtime="20201029 18:15:12.766"></status>
</kw>
<msg timestamp="20201029 18:15:12.767" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.751" endtime="20201029 18:15:12.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.770" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.768" endtime="20201029 18:15:12.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.771" endtime="20201029 18:15:12.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.748" endtime="20201029 18:15:12.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.746" endtime="20201029 18:15:12.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.781" endtime="20201029 18:15:13.069"></status>
</kw>
<msg timestamp="20201029 18:15:13.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.779" endtime="20201029 18:15:13.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.074" endtime="20201029 18:15:13.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.084" endtime="20201029 18:15:13.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.777" endtime="20201029 18:15:13.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.775" endtime="20201029 18:15:13.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:13.092" level="INFO">${PHILIP_RES} = [{'diff': 8.903000000001077e-06}, {'diff': 8.958999999999356e-06}, {'diff': 8.985999999999023e-06}, {'diff': 8.985999999999023e-06}, {'diff': 8.971999999999453e-06}, {'diff': 8.972000000002922e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:13.088" endtime="20201029 18:15:13.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.099" level="INFO">${RESULT} = {'diff': [8.903000000001077e-06, 8.958999999999356e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.971999999999453e-06, 8.985999999999023e-06, 9.0139...</msg>
<status status="PASS" starttime="20201029 18:15:13.094" endtime="20201029 18:15:13.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.105" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:13.104" endtime="20201029 18:15:13.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.109" level="INFO">VALUE: [8.903000000001077e-06, 8.958999999999356e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.971999999999453e-06, 8.985999999999023e-06, 9.013999999998162e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.986999999998496e-06, 8.985999999999023e-06, 8.916000000001173e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.931000000000217e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.903000000001077e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.986000000002492e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.972999999998926e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.971999999999453e-06]</msg>
<status status="PASS" starttime="20201029 18:15:13.107" endtime="20201029 18:15:13.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.100" endtime="20201029 18:15:13.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.745" endtime="20201029 18:15:13.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.721" endtime="20201029 18:15:13.112"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.114" endtime="20201029 18:15:13.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.113" endtime="20201029 18:15:13.135"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.143" endtime="20201029 18:15:13.153"></status>
</kw>
<msg timestamp="20201029 18:15:13.153" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.141" endtime="20201029 18:15:13.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.156" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.154" endtime="20201029 18:15:13.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.157" endtime="20201029 18:15:13.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.139" endtime="20201029 18:15:13.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.137" endtime="20201029 18:15:13.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.167" endtime="20201029 18:15:13.476"></status>
</kw>
<msg timestamp="20201029 18:15:13.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017913222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:13.165" endtime="20201029 18:15:13.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017913222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:13.481" endtime="20201029 18:15:13.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.489" endtime="20201029 18:15:13.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.163" endtime="20201029 18:15:13.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.161" endtime="20201029 18:15:13.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:13.496" level="INFO">${PHILIP_RES} = [{'diff': 1.7222000000000764e-05}, {'diff': 1.7263999999999474e-05}, {'diff': 1.7277999999999044e-05}, {'diff': 1.7291999999998614e-05}, {'diff': 1.7306000000001653e-05}, {'diff': 1.7292000000002083e-...</msg>
<status status="PASS" starttime="20201029 18:15:13.493" endtime="20201029 18:15:13.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.500" level="INFO">${RESULT} = {'diff': [1.7222000000000764e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7291999999998614e-05, 1.7306000000001653e-05, 1.7292000000002083e-05, 1.7306000000001653e-05, 1.7320000000001223e-05...</msg>
<status status="PASS" starttime="20201029 18:15:13.497" endtime="20201029 18:15:13.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.505" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:13.504" endtime="20201029 18:15:13.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.507" level="INFO">VALUE: [1.7222000000000764e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7291999999998614e-05, 1.7306000000001653e-05, 1.7292000000002083e-05, 1.7306000000001653e-05, 1.7320000000001223e-05, 1.7305999999998184e-05, 1.7277999999999044e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7334000000000793e-05, 1.7306000000001653e-05, 1.7277999999999044e-05, 1.727699999999957e-05, 1.7292000000002083e-05, 1.7305999999998184e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, 1.731900000000175e-05, 1.7305999999998184e-05, 1.7291999999998614e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.727699999999957e-05, 1.729100000000261e-05, 1.730500000000218e-05, 1.733300000000132e-05, 1.7249999999999904e-05, 1.7264000000002944e-05, 1.729099999999914e-05, 1.729099999999914e-05, 1.730499999999871e-05, 1.730499999999871e-05, 1.7277999999999044e-05, 1.7277999999999044e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7264000000002944e-05, 1.7305999999998184e-05, 1.7361999999999933e-05, 1.7305999999998184e-05, 1.7291999999998614e-05, 1.7305999999998184e-05, 1.7292000000002083e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7292000000002083e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.506" endtime="20201029 18:15:13.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.501" endtime="20201029 18:15:13.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.135" endtime="20201029 18:15:13.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.112" endtime="20201029 18:15:13.509"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.511" endtime="20201029 18:15:13.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.510" endtime="20201029 18:15:13.532"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.540" endtime="20201029 18:15:13.549"></status>
</kw>
<msg timestamp="20201029 18:15:13.550" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.538" endtime="20201029 18:15:13.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.552" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.551" endtime="20201029 18:15:13.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.554" endtime="20201029 18:15:13.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.536" endtime="20201029 18:15:13.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.534" endtime="20201029 18:15:13.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.564" endtime="20201029 18:15:13.851"></status>
</kw>
<msg timestamp="20201029 18:15:13.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017863972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017890403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.563" endtime="20201029 18:15:13.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017863972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017890403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.855" endtime="20201029 18:15:13.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.863" endtime="20201029 18:15:13.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.560" endtime="20201029 18:15:13.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.558" endtime="20201029 18:15:13.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:13.870" level="INFO">${PHILIP_RES} = [{'diff': 2.643100000000037e-05}, {'diff': 2.6471999999999607e-05}, {'diff': 2.6527999999997887e-05}, {'diff': 2.6499999999998747e-05}, {'diff': 2.6458000000000037e-05}, {'diff': 2.6499999999998747e-0...</msg>
<status status="PASS" starttime="20201029 18:15:13.867" endtime="20201029 18:15:13.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.875" level="INFO">${RESULT} = {'diff': [2.643100000000037e-05, 2.6471999999999607e-05, 2.6527999999997887e-05, 2.6499999999998747e-05, 2.6458000000000037e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6541999999997457e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:13.871" endtime="20201029 18:15:13.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.879" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:13.878" endtime="20201029 18:15:13.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.882" level="INFO">VALUE: [2.643100000000037e-05, 2.6471999999999607e-05, 2.6527999999997887e-05, 2.6499999999998747e-05, 2.6458000000000037e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6541999999997457e-05, 2.6485999999999177e-05, 2.6512999999998843e-05, 2.6527999999997887e-05, 2.6500000000002216e-05, 2.6499999999998747e-05, 2.6526999999998413e-05, 2.6540999999997983e-05, 2.6500000000002216e-05, 2.6485999999999177e-05, 2.6472000000003076e-05, 2.6527999999997887e-05, 2.6556000000000496e-05, 2.6514000000001786e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6471999999999607e-05, 2.6513999999998317e-05, 2.6542000000000926e-05, 2.6500000000002216e-05, 2.6471999999999607e-05, 2.6514000000001786e-05, 2.6555000000001022e-05, 2.6583000000000162e-05, 2.6513999999998317e-05, 2.6528000000001356e-05, 2.6542000000000926e-05, 2.6555000000001022e-05, 2.6471999999999607e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.6499999999998747e-05, 2.6486000000002646e-05, 2.6499999999998747e-05, 2.6514000000001786e-05, 2.6541000000001452e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6528000000001356e-05, 2.6555000000001022e-05, 2.6485999999999177e-05, 2.6471999999999607e-05, 2.6499999999998747e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.880" endtime="20201029 18:15:13.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.876" endtime="20201029 18:15:13.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.532" endtime="20201029 18:15:13.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.509" endtime="20201029 18:15:13.885"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.887" endtime="20201029 18:15:13.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.886" endtime="20201029 18:15:13.908"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.916" endtime="20201029 18:15:13.930"></status>
</kw>
<msg timestamp="20201029 18:15:13.931" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.915" endtime="20201029 18:15:13.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.934" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.932" endtime="20201029 18:15:13.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.935" endtime="20201029 18:15:13.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.912" endtime="20201029 18:15:13.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.910" endtime="20201029 18:15:13.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.945" endtime="20201029 18:15:14.232"></status>
</kw>
<msg timestamp="20201029 18:15:14.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01853325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018569833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:13.943" endtime="20201029 18:15:14.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01853325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018569833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:14.236" endtime="20201029 18:15:14.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.245" endtime="20201029 18:15:14.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.940" endtime="20201029 18:15:14.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.938" endtime="20201029 18:15:14.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:14.252" level="INFO">${PHILIP_RES} = [{'diff': 3.6582999999999755e-05}, {'diff': 3.6569000000000185e-05}, {'diff': 3.6610999999998894e-05}, {'diff': 3.6667000000000644e-05}, {'diff': 3.6569000000000185e-05}, {'diff': 3.6625000000001934e-...</msg>
<status status="PASS" starttime="20201029 18:15:14.249" endtime="20201029 18:15:14.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.257" level="INFO">${RESULT} = {'diff': [3.6582999999999755e-05, 3.6569000000000185e-05, 3.6610999999998894e-05, 3.6667000000000644e-05, 3.6569000000000185e-05, 3.6625000000001934e-05, 3.6610999999998894e-05, 3.654199999999705e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:14.253" endtime="20201029 18:15:14.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.262" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:14.260" endtime="20201029 18:15:14.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.264" level="INFO">VALUE: [3.6582999999999755e-05, 3.6569000000000185e-05, 3.6610999999998894e-05, 3.6667000000000644e-05, 3.6569000000000185e-05, 3.6625000000001934e-05, 3.6610999999998894e-05, 3.654199999999705e-05, 3.656999999999966e-05, 3.659800000000227e-05, 3.6554999999997145e-05, 3.65979999999988e-05, 3.6583000000003224e-05, 3.6582999999999755e-05, 3.6555000000000615e-05, 3.6638999999998034e-05, 3.6611000000002364e-05, 3.6582999999999755e-05, 3.655600000000009e-05, 3.6638999999998034e-05, 3.6555000000000615e-05, 3.6555000000000615e-05, 3.6653000000001074e-05, 3.652799999999748e-05, 3.6597000000002794e-05, 3.6652999999997604e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.6611000000002364e-05, 3.6638999999998034e-05, 3.6596999999999325e-05, 3.659800000000227e-05, 3.6638999999998034e-05, 3.6639000000001504e-05, 3.655600000000009e-05, 3.656999999999966e-05, 3.6624999999998464e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.6667000000000644e-05, 3.6596999999999325e-05, 3.6610999999998894e-05, 3.6569000000000185e-05, 3.658399999999923e-05, 3.6610999999998894e-05, 3.6610999999998894e-05, 3.649999999999834e-05, 3.6596999999999325e-05, 3.6624999999998464e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.263" endtime="20201029 18:15:14.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.258" endtime="20201029 18:15:14.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.908" endtime="20201029 18:15:14.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.885" endtime="20201029 18:15:14.266"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.268" endtime="20201029 18:15:14.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.267" endtime="20201029 18:15:14.288"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.302" endtime="20201029 18:15:14.318"></status>
</kw>
<msg timestamp="20201029 18:15:14.318" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.300" endtime="20201029 18:15:14.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.322" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.320" endtime="20201029 18:15:14.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.324" endtime="20201029 18:15:14.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.295" endtime="20201029 18:15:14.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.292" endtime="20201029 18:15:14.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.333" endtime="20201029 18:15:14.620"></status>
</kw>
<msg timestamp="20201029 18:15:14.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024584208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.331" endtime="20201029 18:15:14.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024584208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.624" endtime="20201029 18:15:14.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.633" endtime="20201029 18:15:14.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.329" endtime="20201029 18:15:14.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.327" endtime="20201029 18:15:14.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:14.641" level="INFO">${PHILIP_RES} = [{'diff': 4.752800000000154e-05}, {'diff': 4.75139999999985e-05}, {'diff': 4.761099999999949e-05}, {'diff': 4.751299999999903e-05}, {'diff': 4.758300000000035e-05}, {'diff': 4.756900000000078e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:14.637" endtime="20201029 18:15:14.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.645" level="INFO">${RESULT} = {'diff': [4.752800000000154e-05, 4.75139999999985e-05, 4.761099999999949e-05, 4.751299999999903e-05, 4.758300000000035e-05, 4.756900000000078e-05, 4.758300000000035e-05, 4.756900000000078e-05, 4.75549...</msg>
<status status="PASS" starttime="20201029 18:15:14.642" endtime="20201029 18:15:14.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.650" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:14.648" endtime="20201029 18:15:14.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.652" level="INFO">VALUE: [4.752800000000154e-05, 4.75139999999985e-05, 4.761099999999949e-05, 4.751299999999903e-05, 4.758300000000035e-05, 4.756900000000078e-05, 4.758300000000035e-05, 4.756900000000078e-05, 4.755499999999774e-05, 4.7639000000002096e-05, 4.754100000000164e-05, 4.757000000000025e-05, 4.75139999999985e-05, 4.762499999999906e-05, 4.761099999999949e-05, 4.751400000000197e-05, 4.762499999999906e-05, 4.755499999999774e-05, 4.758300000000035e-05, 4.7639000000002096e-05, 4.752799999999807e-05, 4.757000000000025e-05, 4.766699999999777e-05, 4.754200000000111e-05, 4.759799999999939e-05, 4.759699999999992e-05, 4.759799999999939e-05, 4.749999999999893e-05, 4.751299999999903e-05, 4.7639000000002096e-05, 4.754100000000164e-05, 4.755500000000121e-05, 4.75269999999986e-05, 4.758300000000035e-05, 4.755500000000121e-05, 4.759699999999992e-05, 4.758299999999688e-05, 4.756900000000078e-05, 4.748599999999936e-05, 4.761099999999949e-05, 4.752800000000154e-05, 4.762499999999906e-05, 4.75269999999986e-05, 4.761099999999949e-05, 4.755500000000121e-05, 4.763899999999863e-05, 4.754200000000111e-05, 4.758300000000035e-05, 4.757000000000025e-05, 4.758399999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.651" endtime="20201029 18:15:14.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.646" endtime="20201029 18:15:14.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.289" endtime="20201029 18:15:14.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.266" endtime="20201029 18:15:14.654"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.656" endtime="20201029 18:15:14.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.655" endtime="20201029 18:15:14.676"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.685" endtime="20201029 18:15:14.700"></status>
</kw>
<msg timestamp="20201029 18:15:14.700" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.683" endtime="20201029 18:15:14.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.703" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.701" endtime="20201029 18:15:14.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.704" endtime="20201029 18:15:14.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.680" endtime="20201029 18:15:14.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.678" endtime="20201029 18:15:14.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.714" endtime="20201029 18:15:15.001"></status>
</kw>
<msg timestamp="20201029 18:15:15.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018695292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018754639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.712" endtime="20201029 18:15:15.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018695292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018754639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.005" endtime="20201029 18:15:15.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.014" endtime="20201029 18:15:15.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.710" endtime="20201029 18:15:15.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.708" endtime="20201029 18:15:15.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:15.020" level="INFO">${PHILIP_RES} = [{'diff': 5.934700000000126e-05}, {'diff': 5.936099999999736e-05}, {'diff': 5.948700000000043e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.9429999999999206e-05}, {'diff': 5.940299999999954e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:15.017" endtime="20201029 18:15:15.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.025" level="INFO">${RESULT} = {'diff': [5.934700000000126e-05, 5.936099999999736e-05, 5.948700000000043e-05, 5.93750000000004e-05, 5.9429999999999206e-05, 5.940299999999954e-05, 5.943099999999868e-05, 5.941699999999911e-05, 5.9402...</msg>
<status status="PASS" starttime="20201029 18:15:15.022" endtime="20201029 18:15:15.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.029" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:15.028" endtime="20201029 18:15:15.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.032" level="INFO">VALUE: [5.934700000000126e-05, 5.936099999999736e-05, 5.948700000000043e-05, 5.93750000000004e-05, 5.9429999999999206e-05, 5.940299999999954e-05, 5.943099999999868e-05, 5.941699999999911e-05, 5.940299999999954e-05, 5.9486000000000955e-05, 5.934700000000126e-05, 5.951300000000062e-05, 5.9429999999999206e-05, 5.93750000000004e-05, 5.9443999999998776e-05, 5.938899999999997e-05, 5.938899999999997e-05, 5.9458000000001815e-05, 5.940299999999954e-05, 5.948700000000043e-05, 5.9402000000000066e-05, 5.93750000000004e-05, 5.936099999999736e-05, 5.9458000000001815e-05, 5.938899999999997e-05, 5.943099999999868e-05, 5.941699999999911e-05, 5.9500000000000525e-05, 5.938899999999997e-05, 5.9472000000001385e-05, 5.936099999999736e-05, 5.941700000000258e-05, 5.941699999999911e-05, 5.940299999999954e-05, 5.933300000000169e-05, 5.9486000000000955e-05, 5.9415999999999636e-05, 5.9443999999998776e-05, 5.9415999999999636e-05, 5.9500000000000525e-05, 5.9415999999999636e-05, 5.936100000000083e-05, 5.9472000000001385e-05, 5.940299999999954e-05, 5.944499999999825e-05, 5.940299999999954e-05, 5.9514000000000095e-05, 5.938899999999997e-05, 5.9471999999997915e-05, 5.936100000000083e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.031" endtime="20201029 18:15:15.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.026" endtime="20201029 18:15:15.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.677" endtime="20201029 18:15:15.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.654" endtime="20201029 18:15:15.034"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.037" endtime="20201029 18:15:15.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.035" endtime="20201029 18:15:15.057"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.066" endtime="20201029 18:15:15.083"></status>
</kw>
<msg timestamp="20201029 18:15:15.084" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.064" endtime="20201029 18:15:15.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.088" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.085" endtime="20201029 18:15:15.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.089" endtime="20201029 18:15:15.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.061" endtime="20201029 18:15:15.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.059" endtime="20201029 18:15:15.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.103" endtime="20201029 18:15:15.389"></status>
</kw>
<msg timestamp="20201029 18:15:15.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.101" endtime="20201029 18:15:15.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.393" endtime="20201029 18:15:15.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.402" endtime="20201029 18:15:15.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.098" endtime="20201029 18:15:15.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.095" endtime="20201029 18:15:15.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:15.409" level="INFO">${PHILIP_RES} = [{'diff': 7.199999999999915e-05}, {'diff': 7.222299999999973e-05}, {'diff': 7.208300000000056e-05}, {'diff': 7.212499999999927e-05}, {'diff': 7.212499999999927e-05}, {'diff': 7.204200000000133e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:15.405" endtime="20201029 18:15:15.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.414" level="INFO">${RESULT} = {'diff': [7.199999999999915e-05, 7.222299999999973e-05, 7.208300000000056e-05, 7.212499999999927e-05, 7.212499999999927e-05, 7.204200000000133e-05, 7.209700000000013e-05, 7.216699999999798e-05, 7.2110...</msg>
<status status="PASS" starttime="20201029 18:15:15.410" endtime="20201029 18:15:15.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.418" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:15.417" endtime="20201029 18:15:15.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.421" level="INFO">VALUE: [7.199999999999915e-05, 7.222299999999973e-05, 7.208300000000056e-05, 7.212499999999927e-05, 7.212499999999927e-05, 7.204200000000133e-05, 7.209700000000013e-05, 7.216699999999798e-05, 7.21109999999997e-05, 7.208400000000004e-05, 7.215199999999894e-05, 7.215199999999894e-05, 7.208400000000004e-05, 7.213899999999884e-05, 7.216700000000145e-05, 7.208300000000056e-05, 7.21109999999997e-05, 7.218100000000102e-05, 7.2069000000001e-05, 7.219500000000059e-05, 7.205499999999795e-05, 7.220799999999722e-05, 7.209799999999961e-05, 7.215199999999894e-05, 7.207000000000047e-05, 7.219400000000112e-05, 7.207000000000047e-05, 7.218100000000102e-05, 7.209700000000013e-05, 7.209799999999961e-05, 7.219399999999765e-05, 7.205599999999743e-05, 7.219399999999765e-05, 7.20560000000009e-05, 7.213899999999884e-05, 7.220800000000069e-05, 7.2069000000001e-05, 7.215299999999841e-05, 7.205499999999795e-05, 7.220900000000016e-05, 7.209700000000013e-05, 7.216699999999798e-05, 7.217999999999808e-05, 7.20560000000009e-05, 7.215199999999894e-05, 7.204200000000133e-05, 7.21109999999997e-05, 7.212499999999927e-05, 7.208300000000056e-05, 7.216700000000145e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.419" endtime="20201029 18:15:15.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.415" endtime="20201029 18:15:15.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.058" endtime="20201029 18:15:15.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.035" endtime="20201029 18:15:15.423"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.425" endtime="20201029 18:15:15.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.424" endtime="20201029 18:15:15.445"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.455" endtime="20201029 18:15:15.473"></status>
</kw>
<msg timestamp="20201029 18:15:15.474" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.453" endtime="20201029 18:15:15.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.476" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.475" endtime="20201029 18:15:15.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.478" endtime="20201029 18:15:15.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.450" endtime="20201029 18:15:15.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.448" endtime="20201029 18:15:15.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.487" endtime="20201029 18:15:15.774"></status>
</kw>
<msg timestamp="20201029 18:15:15.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023436236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023521931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.486" endtime="20201029 18:15:15.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023436236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023521931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.778" endtime="20201029 18:15:15.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.786" endtime="20201029 18:15:15.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.483" endtime="20201029 18:15:15.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.481" endtime="20201029 18:15:15.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:15.795" level="INFO">${PHILIP_RES} = [{'diff': 8.569500000000022e-05}, {'diff': 8.563900000000194e-05}, {'diff': 8.570800000000031e-05}, {'diff': 8.565199999999856e-05}, {'diff': 8.573599999999945e-05}, {'diff': 8.572199999999988e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:15.792" endtime="20201029 18:15:15.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.800" level="INFO">${RESULT} = {'diff': [8.569500000000022e-05, 8.563900000000194e-05, 8.570800000000031e-05, 8.565199999999856e-05, 8.573599999999945e-05, 8.572199999999988e-05, 8.56669999999976e-05, 8.572199999999988e-05, 8.57080...</msg>
<status status="PASS" starttime="20201029 18:15:15.796" endtime="20201029 18:15:15.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.804" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:15.803" endtime="20201029 18:15:15.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.807" level="INFO">VALUE: [8.569500000000022e-05, 8.563900000000194e-05, 8.570800000000031e-05, 8.565199999999856e-05, 8.573599999999945e-05, 8.572199999999988e-05, 8.56669999999976e-05, 8.572199999999988e-05, 8.570800000000031e-05, 8.576399999999859e-05, 8.568100000000065e-05, 8.574999999999902e-05, 8.563899999999847e-05, 8.573599999999945e-05, 8.583399999999991e-05, 8.576399999999859e-05, 8.558300000000019e-05, 8.569400000000074e-05, 8.56799999999977e-05, 8.57920000000012e-05, 8.569399999999727e-05, 8.574999999999902e-05, 8.570800000000031e-05, 8.569400000000074e-05, 8.575000000000249e-05, 8.569500000000022e-05, 8.568100000000065e-05, 8.574999999999902e-05, 8.565299999999804e-05, 8.568000000000117e-05, 8.572199999999988e-05, 8.568000000000117e-05, 8.565199999999856e-05, 8.574999999999902e-05, 8.57370000000024e-05, 8.574999999999902e-05, 8.573600000000292e-05, 8.569400000000074e-05, 8.570800000000031e-05, 8.576400000000206e-05, 8.569500000000022e-05, 8.563900000000194e-05, 8.57920000000012e-05, 8.574999999999902e-05, 8.570800000000031e-05, 8.568099999999718e-05, 8.572299999999936e-05, 8.569500000000022e-05, 8.57920000000012e-05, 8.573600000000292e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.805" endtime="20201029 18:15:15.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.801" endtime="20201029 18:15:15.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.446" endtime="20201029 18:15:15.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.423" endtime="20201029 18:15:15.808"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.810" endtime="20201029 18:15:15.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.809" endtime="20201029 18:15:15.830"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.839" endtime="20201029 18:15:15.855"></status>
</kw>
<msg timestamp="20201029 18:15:15.855" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.838" endtime="20201029 18:15:15.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.858" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.856" endtime="20201029 18:15:15.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.859" endtime="20201029 18:15:15.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.835" endtime="20201029 18:15:15.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.832" endtime="20201029 18:15:15.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.869" endtime="20201029 18:15:16.159"></status>
</kw>
<msg timestamp="20201029 18:15:16.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.867" endtime="20201029 18:15:16.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.164" endtime="20201029 18:15:16.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.174" endtime="20201029 18:15:16.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.865" endtime="20201029 18:15:16.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.863" endtime="20201029 18:15:16.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:16.184" level="INFO">${PHILIP_RES} = [{'diff': 0.00010009700000000038}, {'diff': 0.00010015199999999919}, {'diff': 0.00010015199999999919}, {'diff': 0.00010013900000000256}, {'diff': 0.0001001809999999978}, {'diff': 0.0001002080000000009...</msg>
<status status="PASS" starttime="20201029 18:15:16.179" endtime="20201029 18:15:16.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.191" level="INFO">${RESULT} = {'diff': [0.00010009700000000038, 0.00010015199999999919, 0.00010015199999999919, 0.00010013900000000256, 0.0001001809999999978, 0.00010020800000000094, 0.0001001800000000018, 0.00010017999999999833, ...</msg>
<status status="PASS" starttime="20201029 18:15:16.186" endtime="20201029 18:15:16.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.196" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:16.194" endtime="20201029 18:15:16.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.198" level="INFO">VALUE: [0.00010009700000000038, 0.00010015199999999919, 0.00010015199999999919, 0.00010013900000000256, 0.0001001809999999978, 0.00010020800000000094, 0.0001001800000000018, 0.00010017999999999833, 0.00010006899999999777, 0.00010020900000000041, 0.00010019500000000084, 0.00010019499999999737, 0.00010020900000000041, 0.00010005600000000114, 0.00010018100000000127, 0.00010017999999999833, 0.00010008300000000081, 0.0001001670000000017, 0.00010016699999999823, 0.00010022199999999704, 0.00010015300000000213, 0.00010018100000000127, 0.00010016699999999823, 0.0001001670000000017, 0.00010012499999999952, 0.00010016699999999823, 0.00010005600000000114, 0.0001001800000000018, 0.00010015299999999866, 0.00010019400000000137, 0.00010009700000000038, 0.00010019400000000137, 0.00010015199999999919, 0.00010024999999999964, 0.00010012499999999952, 0.00010012499999999952, 0.00010016600000000223, 0.00010020800000000094, 0.00010020900000000041, 0.0001001809999999978, 0.00010023600000000008, 0.00010019400000000137, 0.00010012499999999952, 0.00010012499999999952, 0.00010015299999999866, 0.00010011099999999995, 0.00010015300000000213, 0.0001001670000000017, 0.0001001939999999979, 0.0001002220000000005]</msg>
<status status="PASS" starttime="20201029 18:15:16.197" endtime="20201029 18:15:16.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.192" endtime="20201029 18:15:16.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.831" endtime="20201029 18:15:16.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.808" endtime="20201029 18:15:16.201"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.203" endtime="20201029 18:15:16.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.202" endtime="20201029 18:15:16.224"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.232" endtime="20201029 18:15:16.246"></status>
</kw>
<msg timestamp="20201029 18:15:16.247" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.230" endtime="20201029 18:15:16.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.249" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.248" endtime="20201029 18:15:16.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.250" endtime="20201029 18:15:16.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.228" endtime="20201029 18:15:16.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.226" endtime="20201029 18:15:16.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.259" endtime="20201029 18:15:16.545"></status>
</kw>
<msg timestamp="20201029 18:15:16.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018927111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019042569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.258" endtime="20201029 18:15:16.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018927111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019042569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.549" endtime="20201029 18:15:16.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.558" endtime="20201029 18:15:16.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.255" endtime="20201029 18:15:16.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.254" endtime="20201029 18:15:16.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:16.564" level="INFO">${PHILIP_RES} = [{'diff': 0.00011545799999999884}, {'diff': 0.00011549999999999755}, {'diff': 0.00011550000000000102}, {'diff': 0.00011558400000000191}, {'diff': 0.00011558300000000243}, {'diff': 0.000115583999999998...</msg>
<status status="PASS" starttime="20201029 18:15:16.561" endtime="20201029 18:15:16.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.569" level="INFO">${RESULT} = {'diff': [0.00011545799999999884, 0.00011549999999999755, 0.00011550000000000102, 0.00011558400000000191, 0.00011558300000000243, 0.00011558399999999844, 0.0001156109999999981, 0.00011552800000000016,...</msg>
<status status="PASS" starttime="20201029 18:15:16.565" endtime="20201029 18:15:16.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.573" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:16.572" endtime="20201029 18:15:16.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.576" level="INFO">VALUE: [0.00011545799999999884, 0.00011549999999999755, 0.00011550000000000102, 0.00011558400000000191, 0.00011558300000000243, 0.00011558399999999844, 0.0001156109999999981, 0.00011552800000000016, 0.00011550000000000102, 0.00011562499999999767, 0.00011551400000000059, 0.00011562500000000114, 0.0001155689999999994, 0.00011551300000000111, 0.00011556999999999887, 0.00011558299999999896, 0.00011550000000000102, 0.00011554199999999973, 0.00011561100000000157, 0.00011554199999999973, 0.00011557000000000234, 0.00011552699999999722, 0.00011562500000000114, 0.00011550000000000102, 0.00011561100000000157, 0.0001155689999999994, 0.00011562500000000114, 0.00011550000000000102, 0.000115597000000002, 0.00011551399999999712, 0.0001155420000000032, 0.00011551400000000059, 0.00011552699999999722, 0.00011563800000000124, 0.00011552800000000016, 0.000115597000000002, 0.0001155559999999993, 0.00011562500000000114, 0.00011548700000000092, 0.00011561199999999758, 0.00011552700000000068, 0.00011568099999999942, 0.00011558299999999896, 0.00011541700000000307, 0.00011552800000000016, 0.0001155559999999993, 0.00011554199999999973, 0.00011566600000000038, 0.00011562500000000114, 0.00011548599999999798]</msg>
<status status="PASS" starttime="20201029 18:15:16.575" endtime="20201029 18:15:16.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.570" endtime="20201029 18:15:16.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.224" endtime="20201029 18:15:16.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.201" endtime="20201029 18:15:16.577"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.591" endtime="20201029 18:15:16.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.589" endtime="20201029 18:15:16.611"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.619" endtime="20201029 18:15:16.639"></status>
</kw>
<msg timestamp="20201029 18:15:16.639" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.618" endtime="20201029 18:15:16.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.642" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.640" endtime="20201029 18:15:16.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.643" endtime="20201029 18:15:16.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.615" endtime="20201029 18:15:16.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.613" endtime="20201029 18:15:16.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.652" endtime="20201029 18:15:16.938"></status>
</kw>
<msg timestamp="20201029 18:15:16.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018317986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.650" endtime="20201029 18:15:16.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018317986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.943" endtime="20201029 18:15:16.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.951" endtime="20201029 18:15:16.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.648" endtime="20201029 18:15:16.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.646" endtime="20201029 18:15:16.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:16.958" level="INFO">${PHILIP_RES} = [{'diff': 0.0001316669999999985}, {'diff': 0.00013173600000000035}, {'diff': 0.00013172200000000078}, {'diff': 0.0001317769999999996}, {'diff': 0.00013169399999999817}, {'diff': 0.00013172200000000078...</msg>
<status status="PASS" starttime="20201029 18:15:16.955" endtime="20201029 18:15:16.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.962" level="INFO">${RESULT} = {'diff': [0.0001316669999999985, 0.00013173600000000035, 0.00013172200000000078, 0.0001317769999999996, 0.00013169399999999817, 0.00013172200000000078, 0.00013169400000000164, 0.00013173600000000035, ...</msg>
<status status="PASS" starttime="20201029 18:15:16.959" endtime="20201029 18:15:16.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.967" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:16.966" endtime="20201029 18:15:16.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.969" level="INFO">VALUE: [0.0001316669999999985, 0.00013173600000000035, 0.00013172200000000078, 0.0001317769999999996, 0.00013169399999999817, 0.00013172200000000078, 0.00013169400000000164, 0.00013173600000000035, 0.00013173600000000035, 0.00013172200000000078, 0.0001317080000000012, 0.00013174999999999992, 0.0001317219999999973, 0.00013177799999999906, 0.00013174999999999992, 0.00013172200000000078, 0.00013170799999999774, 0.0001317769999999996, 0.0001317080000000012, 0.0001317080000000012, 0.00013173600000000035, 0.00013176300000000002, 0.00013177799999999906, 0.00013172200000000078, 0.00013176400000000296, 0.00013173599999999688, 0.00013172300000000026, 0.00013169500000000112, 0.00013168100000000155, 0.00013186100000000048, 0.00013176400000000296, 0.00013172200000000078, 0.0001317090000000007, 0.00013173600000000035, 0.00013170799999999774, 0.00013174999999999992, 0.0001317769999999996, 0.0001318470000000009, 0.00013173600000000035, 0.00013173699999999983, 0.00013183299999999787, 0.00013170799999999774, 0.0001317080000000012, 0.00013169500000000112, 0.00013179199999999863, 0.00013169399999999817, 0.00013180499999999873, 0.0001317639999999995, 0.0001318340000000008, 0.0001317080000000012]</msg>
<status status="PASS" starttime="20201029 18:15:16.968" endtime="20201029 18:15:16.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.963" endtime="20201029 18:15:16.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.611" endtime="20201029 18:15:16.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.589" endtime="20201029 18:15:16.971"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.974" endtime="20201029 18:15:16.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.972" endtime="20201029 18:15:16.994"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.002" endtime="20201029 18:15:17.026"></status>
</kw>
<msg timestamp="20201029 18:15:17.026" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.000" endtime="20201029 18:15:17.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.029" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.027" endtime="20201029 18:15:17.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.030" endtime="20201029 18:15:17.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.998" endtime="20201029 18:15:17.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.996" endtime="20201029 18:15:17.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.040" endtime="20201029 18:15:17.327"></status>
</kw>
<msg timestamp="20201029 18:15:17.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.038" endtime="20201029 18:15:17.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.331" endtime="20201029 18:15:17.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.339" endtime="20201029 18:15:17.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.036" endtime="20201029 18:15:17.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.034" endtime="20201029 18:15:17.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:17.345" level="INFO">${PHILIP_RES} = [{'diff': 0.00014876400000000262}, {'diff': 0.00014876400000000262}, {'diff': 0.00014879200000000176}, {'diff': 0.00014863899999999902}, {'diff': 0.00014880599999999786}, {'diff': 0.000148749999999999...</msg>
<status status="PASS" starttime="20201029 18:15:17.342" endtime="20201029 18:15:17.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.350" level="INFO">${RESULT} = {'diff': [0.00014876400000000262, 0.00014876400000000262, 0.00014879200000000176, 0.00014863899999999902, 0.00014880599999999786, 0.00014874999999999958, 0.00014877799999999872, 0.00014880500000000185...</msg>
<status status="PASS" starttime="20201029 18:15:17.346" endtime="20201029 18:15:17.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.354" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:17.353" endtime="20201029 18:15:17.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.356" level="INFO">VALUE: [0.00014876400000000262, 0.00014876400000000262, 0.00014879200000000176, 0.00014863899999999902, 0.00014880599999999786, 0.00014874999999999958, 0.00014877799999999872, 0.00014880500000000185, 0.00014874999999999958, 0.00014874999999999958, 0.00014865300000000206, 0.00014880600000000133, 0.00014880500000000185, 0.00014876400000000262, 0.0001488200000000009, 0.00014876400000000262, 0.00014877799999999872, 0.00014874999999999958, 0.00014876400000000262, 0.00014874999999999958, 0.000148736, 0.0001487919999999983, 0.00014869399999999783, 0.00014880600000000133, 0.00014879200000000176, 0.00014876399999999915, 0.000148736, 0.00014881899999999795, 0.0001486659999999987, 0.00014876399999999915, 0.00014874999999999958, 0.0001486810000000012, 0.00014883400000000047, 0.0001488749999999997, 0.00014876399999999915, 0.00014890199999999937, 0.00014884700000000056, 0.00014876400000000262, 0.00014877699999999924, 0.00014870800000000087, 0.0001488200000000009, 0.00014874999999999958, 0.000148833000000001, 0.000148736, 0.00014874999999999958, 0.00014881900000000142, 0.0001486940000000013, 0.00014874999999999958, 0.00014888900000000274, 0.00014876399999999915]</msg>
<status status="PASS" starttime="20201029 18:15:17.355" endtime="20201029 18:15:17.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.350" endtime="20201029 18:15:17.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.994" endtime="20201029 18:15:17.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.971" endtime="20201029 18:15:17.359"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.361" endtime="20201029 18:15:17.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.360" endtime="20201029 18:15:17.381"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.390" endtime="20201029 18:15:17.417"></status>
</kw>
<msg timestamp="20201029 18:15:17.418" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.388" endtime="20201029 18:15:17.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.420" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.419" endtime="20201029 18:15:17.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.421" endtime="20201029 18:15:17.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.385" endtime="20201029 18:15:17.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.384" endtime="20201029 18:15:17.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.431" endtime="20201029 18:15:17.716"></status>
</kw>
<msg timestamp="20201029 18:15:17.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021578111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.429" endtime="20201029 18:15:17.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021578111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.720" endtime="20201029 18:15:17.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.729" endtime="20201029 18:15:17.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.426" endtime="20201029 18:15:17.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.425" endtime="20201029 18:15:17.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:17.735" level="INFO">${PHILIP_RES} = [{'diff': 0.00016673600000000066}, {'diff': 0.00016673600000000066}, {'diff': 0.0001668610000000008}, {'diff': 0.00016682000000000155}, {'diff': 0.0001668050000000025}, {'diff': 0.00016677800000000284...</msg>
<status status="PASS" starttime="20201029 18:15:17.732" endtime="20201029 18:15:17.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.740" level="INFO">${RESULT} = {'diff': [0.00016673600000000066, 0.00016673600000000066, 0.0001668610000000008, 0.00016682000000000155, 0.0001668050000000025, 0.00016677800000000284, 0.00016680499999999904, 0.0001667769999999999, 0...</msg>
<status status="PASS" starttime="20201029 18:15:17.736" endtime="20201029 18:15:17.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.744" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:17.743" endtime="20201029 18:15:17.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.747" level="INFO">VALUE: [0.00016673600000000066, 0.00016673600000000066, 0.0001668610000000008, 0.00016682000000000155, 0.0001668050000000025, 0.00016677800000000284, 0.00016680499999999904, 0.0001667769999999999, 0.0001668059999999985, 0.00016683299999999818, 0.00016677799999999937, 0.00016680499999999904, 0.00016680499999999904, 0.00016684700000000122, 0.0001668050000000025, 0.00016680600000000198, 0.00016680499999999904, 0.000166709000000001, 0.00016680499999999904, 0.00016673600000000066, 0.00016677799999999937, 0.00016687500000000036, 0.0001668059999999985, 0.00016684700000000122, 0.00016679199999999894, 0.00016675000000000023, 0.00016680600000000198, 0.00016681900000000208, 0.00016687500000000036, 0.00016684700000000122, 0.00016675000000000023, 0.0001669029999999995, 0.0001669029999999995, 0.0001668059999999985, 0.0001667220000000011, 0.00016684699999999775, 0.0001668189999999986, 0.00016677799999999937, 0.00016675000000000023, 0.00016680499999999904, 0.00016691699999999907, 0.00016677799999999937, 0.0001667639999999998, 0.00016677799999999937, 0.00016682000000000155, 0.00016694399999999873, 0.00016687500000000036, 0.00016683300000000165, 0.00016681999999999808, 0.00016683299999999818]</msg>
<status status="PASS" starttime="20201029 18:15:17.745" endtime="20201029 18:15:17.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.741" endtime="20201029 18:15:17.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.382" endtime="20201029 18:15:17.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.359" endtime="20201029 18:15:17.749"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.751" endtime="20201029 18:15:17.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.750" endtime="20201029 18:15:17.771"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.779" endtime="20201029 18:15:17.799"></status>
</kw>
<msg timestamp="20201029 18:15:17.800" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.778" endtime="20201029 18:15:17.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.802" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.801" endtime="20201029 18:15:17.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.803" endtime="20201029 18:15:17.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.775" endtime="20201029 18:15:17.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.773" endtime="20201029 18:15:17.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.812" endtime="20201029 18:15:18.098"></status>
</kw>
<msg timestamp="20201029 18:15:18.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018718597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.811" endtime="20201029 18:15:18.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018718597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.103" endtime="20201029 18:15:18.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.111" endtime="20201029 18:15:18.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.808" endtime="20201029 18:15:18.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.806" endtime="20201029 18:15:18.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:18.118" level="INFO">${PHILIP_RES} = [{'diff': 0.00018561099999999872}, {'diff': 0.00018551399999999774}, {'diff': 0.0001856110000000022}, {'diff': 0.00018563899999999786}, {'diff': 0.00018554200000000035}, {'diff': 0.0001856530000000009...</msg>
<status status="PASS" starttime="20201029 18:15:18.115" endtime="20201029 18:15:18.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.122" level="INFO">${RESULT} = {'diff': [0.00018561099999999872, 0.00018551399999999774, 0.0001856110000000022, 0.00018563899999999786, 0.00018554200000000035, 0.0001856530000000009, 0.000185666999999997, 0.00018558399999999906, 0....</msg>
<status status="PASS" starttime="20201029 18:15:18.119" endtime="20201029 18:15:18.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.127" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:18.126" endtime="20201029 18:15:18.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.129" level="INFO">VALUE: [0.00018561099999999872, 0.00018551399999999774, 0.0001856110000000022, 0.00018563899999999786, 0.00018554200000000035, 0.0001856530000000009, 0.000185666999999997, 0.00018558399999999906, 0.00018555599999999992, 0.00018565299999999743, 0.00018558299999999958, 0.00018563900000000133, 0.00018569400000000014, 0.0001856530000000009, 0.00018568000000000057, 0.0001856110000000022, 0.00018563900000000133, 0.00018559699999999915, 0.00018563899999999786, 0.00018565199999999796, 0.0001856530000000009, 0.0001856110000000022, 0.000185569, 0.0001856110000000022, 0.00018559699999999915, 0.0001856949999999996, 0.00018565199999999796, 0.00018554200000000035, 0.00018555500000000044, 0.00018556999999999949, 0.0001856249999999983, 0.00018556999999999949, 0.00018559799999999863, 0.00018558299999999958, 0.00018559699999999915, 0.00018551399999999774, 0.0001855270000000013, 0.00018554200000000035, 0.00018554200000000035, 0.00018558399999999906, 0.00018558399999999906, 0.000185666000000001, 0.00018568100000000004, 0.000185569, 0.00018558300000000305, 0.0001856949999999996, 0.00018555500000000044, 0.00018570899999999918, 0.00018558300000000305, 0.00018565299999999743]</msg>
<status status="PASS" starttime="20201029 18:15:18.128" endtime="20201029 18:15:18.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.123" endtime="20201029 18:15:18.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.772" endtime="20201029 18:15:18.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.749" endtime="20201029 18:15:18.131"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.133" endtime="20201029 18:15:18.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.132" endtime="20201029 18:15:18.154"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.162" endtime="20201029 18:15:18.182"></status>
</kw>
<msg timestamp="20201029 18:15:18.182" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.160" endtime="20201029 18:15:18.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.185" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.183" endtime="20201029 18:15:18.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.186" endtime="20201029 18:15:18.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.157" endtime="20201029 18:15:18.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.156" endtime="20201029 18:15:18.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.196" endtime="20201029 18:15:18.483"></status>
</kw>
<msg timestamp="20201029 18:15:18.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018061514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018266792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.194" endtime="20201029 18:15:18.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018061514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018266792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.487" endtime="20201029 18:15:18.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.495" endtime="20201029 18:15:18.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.192" endtime="20201029 18:15:18.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.190" endtime="20201029 18:15:18.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:18.502" level="INFO">${PHILIP_RES} = [{'diff': 0.0002052779999999997}, {'diff': 0.0002052779999999997}, {'diff': 0.00020534800000000103}, {'diff': 0.000205333999999998}, {'diff': 0.00020530499999999938}, {'diff': 0.00020545799999999864},...</msg>
<status status="PASS" starttime="20201029 18:15:18.499" endtime="20201029 18:15:18.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.506" level="INFO">${RESULT} = {'diff': [0.0002052779999999997, 0.0002052779999999997, 0.00020534800000000103, 0.000205333999999998, 0.00020530499999999938, 0.00020545799999999864, 0.00020526400000000014, 0.00020525000000000057, 0....</msg>
<status status="PASS" starttime="20201029 18:15:18.503" endtime="20201029 18:15:18.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.510" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:18.509" endtime="20201029 18:15:18.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.513" level="INFO">VALUE: [0.0002052779999999997, 0.0002052779999999997, 0.00020534800000000103, 0.000205333999999998, 0.00020530499999999938, 0.00020545799999999864, 0.00020526400000000014, 0.00020525000000000057, 0.00020534700000000156, 0.00020529200000000275, 0.00020540299999999984, 0.00020538900000000027, 0.00020530600000000232, 0.00020525000000000057, 0.00020529199999999928, 0.00020531899999999895, 0.00020534700000000156, 0.000205236000000001, 0.00020523700000000047, 0.0002053750000000007, 0.00020534700000000156, 0.00020533299999999852, 0.00020533400000000146, 0.00020525000000000057, 0.0002052779999999997, 0.0002053620000000006, 0.000205236000000001, 0.00020537499999999723, 0.00020531900000000242, 0.00020531899999999895, 0.00020540299999999984, 0.0002054169999999994, 0.00020526400000000014, 0.00020529200000000275, 0.00020538900000000027, 0.00020529199999999928, 0.00020534700000000156, 0.00020536099999999766, 0.00020520800000000186, 0.000205333999999998, 0.0002053620000000006, 0.00020536100000000113, 0.00020540299999999984, 0.00020536100000000113, 0.00020526400000000014, 0.00020525000000000057, 0.00020536099999999766, 0.00020523599999999753, 0.0002053469999999981, 0.0002052779999999997]</msg>
<status status="PASS" starttime="20201029 18:15:18.512" endtime="20201029 18:15:18.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.507" endtime="20201029 18:15:18.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.154" endtime="20201029 18:15:18.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.131" endtime="20201029 18:15:18.516"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.518" endtime="20201029 18:15:18.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.517" endtime="20201029 18:15:18.538"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.546" endtime="20201029 18:15:18.573"></status>
</kw>
<msg timestamp="20201029 18:15:18.573" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.545" endtime="20201029 18:15:18.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.576" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.574" endtime="20201029 18:15:18.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.577" endtime="20201029 18:15:18.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.542" endtime="20201029 18:15:18.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.540" endtime="20201029 18:15:18.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.586" endtime="20201029 18:15:18.872"></status>
</kw>
<msg timestamp="20201029 18:15:18.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.585" endtime="20201029 18:15:18.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.876" endtime="20201029 18:15:18.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.884" endtime="20201029 18:15:18.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.582" endtime="20201029 18:15:18.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.580" endtime="20201029 18:15:18.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:18.891" level="INFO">${PHILIP_RES} = [{'diff': 0.00022576399999999983}, {'diff': 0.0002258329999999982}, {'diff': 0.00022580499999999906}, {'diff': 0.0002257779999999994}, {'diff': 0.0002257779999999994}, {'diff': 0.00022575000000000026}...</msg>
<status status="PASS" starttime="20201029 18:15:18.887" endtime="20201029 18:15:18.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.895" level="INFO">${RESULT} = {'diff': [0.00022576399999999983, 0.0002258329999999982, 0.00022580499999999906, 0.0002257779999999994, 0.0002257779999999994, 0.00022575000000000026, 0.00022581899999999863, 0.0002258190000000021, 0....</msg>
<status status="PASS" starttime="20201029 18:15:18.892" endtime="20201029 18:15:18.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.900" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:18.899" endtime="20201029 18:15:18.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.902" level="INFO">VALUE: [0.00022576399999999983, 0.0002258329999999982, 0.00022580499999999906, 0.0002257779999999994, 0.0002257779999999994, 0.00022575000000000026, 0.00022581899999999863, 0.0002258190000000021, 0.00022579200000000244, 0.00022579200000000244, 0.00022577699999999992, 0.00022583300000000167, 0.0002257779999999994, 0.00022572200000000112, 0.0002257230000000006, 0.00022583400000000114, 0.0002257499999999968, 0.00022584800000000071, 0.0002257499999999968, 0.00022584700000000124, 0.00022584699999999777, 0.0002258610000000008, 0.00022588800000000048, 0.00022572200000000112, 0.00022580500000000253, 0.00022570899999999755, 0.00022582000000000158, 0.00022569500000000145, 0.0002257779999999994, 0.00022575000000000026, 0.00022570799999999808, 0.00022587500000000038, 0.00022581899999999863, 0.00022573600000000069, 0.00022584700000000124, 0.00022573599999999722, 0.00022575000000000026, 0.00022575000000000026, 0.0002257779999999994, 0.00022576399999999983, 0.0002258329999999982, 0.00022577800000000287, 0.00022584700000000124, 0.00022583400000000114, 0.00022582000000000158, 0.0002257640000000033, 0.000225806000000002, 0.00022584700000000124, 0.00022583300000000167, 0.00022576299999999688]</msg>
<status status="PASS" starttime="20201029 18:15:18.901" endtime="20201029 18:15:18.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.896" endtime="20201029 18:15:18.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.539" endtime="20201029 18:15:18.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.516" endtime="20201029 18:15:18.904"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.907" endtime="20201029 18:15:18.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.905" endtime="20201029 18:15:18.927"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.935" endtime="20201029 18:15:18.960"></status>
</kw>
<msg timestamp="20201029 18:15:18.961" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.933" endtime="20201029 18:15:18.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.963" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.962" endtime="20201029 18:15:18.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.964" endtime="20201029 18:15:18.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.931" endtime="20201029 18:15:18.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.929" endtime="20201029 18:15:18.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.974" endtime="20201029 18:15:19.261"></status>
</kw>
<msg timestamp="20201029 18:15:19.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018575472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018822611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.973" endtime="20201029 18:15:19.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018575472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018822611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.265" endtime="20201029 18:15:19.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.273" endtime="20201029 18:15:19.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.970" endtime="20201029 18:15:19.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.968" endtime="20201029 18:15:19.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:19.282" level="INFO">${PHILIP_RES} = [{'diff': 0.0002471390000000004}, {'diff': 0.0002472640000000005}, {'diff': 0.00024716600000000005}, {'diff': 0.00024712499999999735}, {'diff': 0.0002473199999999988}, {'diff': 0.0002472090000000017},...</msg>
<status status="PASS" starttime="20201029 18:15:19.279" endtime="20201029 18:15:19.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.286" level="INFO">${RESULT} = {'diff': [0.0002471390000000004, 0.0002472640000000005, 0.00024716600000000005, 0.00024712499999999735, 0.0002473199999999988, 0.0002472090000000017, 0.00024730499999999975, 0.0002471809999999991, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:19.283" endtime="20201029 18:15:19.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.291" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:19.290" endtime="20201029 18:15:19.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.293" level="INFO">VALUE: [0.0002471390000000004, 0.0002472640000000005, 0.00024716600000000005, 0.00024712499999999735, 0.0002473199999999988, 0.0002472090000000017, 0.00024730499999999975, 0.0002471809999999991, 0.00024725000000000094, 0.00024729199999999965, 0.00024720799999999876, 0.00024729199999999965, 0.00024718100000000257, 0.0002472220000000018, 0.00024729199999999965, 0.00024719500000000214, 0.00024719499999999867, 0.0002472640000000005, 0.0002471250000000008, 0.00024725000000000094, 0.00024723600000000137, 0.0002472640000000005, 0.00024724999999999747, 0.00024715299999999996, 0.0002472220000000018, 0.00024718100000000257, 0.00024712499999999735, 0.00024723700000000084, 0.0002471799999999996, 0.0002472640000000005, 0.00024727699999999714, 0.0002472770000000006, 0.00024725000000000094, 0.00024720800000000223, 0.00024715299999999996, 0.0002471389999999969, 0.0002473059999999992, 0.0002470969999999982, 0.00024715299999999996, 0.0002472770000000006, 0.0002471669999999995, 0.00024719500000000214, 0.0002472229999999978, 0.0002473749999999976, 0.00024720799999999876, 0.0002471390000000004, 0.0002472080000000057, 0.00024724999999999747, 0.00024715299999999996, 0.00024724999999999747]</msg>
<status status="PASS" starttime="20201029 18:15:19.292" endtime="20201029 18:15:19.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.287" endtime="20201029 18:15:19.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.927" endtime="20201029 18:15:19.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.904" endtime="20201029 18:15:19.295"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.298" endtime="20201029 18:15:19.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.296" endtime="20201029 18:15:19.318"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.326" endtime="20201029 18:15:19.351"></status>
</kw>
<msg timestamp="20201029 18:15:19.352" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.324" endtime="20201029 18:15:19.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.354" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.353" endtime="20201029 18:15:19.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.355" endtime="20201029 18:15:19.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.321" endtime="20201029 18:15:19.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.320" endtime="20201029 18:15:19.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.365" endtime="20201029 18:15:19.650"></status>
</kw>
<msg timestamp="20201029 18:15:19.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.364" endtime="20201029 18:15:19.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.655" endtime="20201029 18:15:19.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.663" endtime="20201029 18:15:19.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.361" endtime="20201029 18:15:19.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.360" endtime="20201029 18:15:19.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:19.669" level="INFO">${PHILIP_RES} = [{'diff': 0.00026961099999999946}, {'diff': 0.00026965299999999817}, {'diff': 0.00026972300000000296}, {'diff': 0.0002696670000000012}, {'diff': 0.0002695700000000002}, {'diff': 0.0002696389999999986}...</msg>
<status status="PASS" starttime="20201029 18:15:19.666" endtime="20201029 18:15:19.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.673" level="INFO">${RESULT} = {'diff': [0.00026961099999999946, 0.00026965299999999817, 0.00026972300000000296, 0.0002696670000000012, 0.0002695700000000002, 0.0002696389999999986, 0.00026961199999999894, 0.00026969500000000035, 0...</msg>
<status status="PASS" starttime="20201029 18:15:19.670" endtime="20201029 18:15:19.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.677" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:19.676" endtime="20201029 18:15:19.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.680" level="INFO">VALUE: [0.00026961099999999946, 0.00026965299999999817, 0.00026972300000000296, 0.0002696670000000012, 0.0002695700000000002, 0.0002696389999999986, 0.00026961199999999894, 0.00026969500000000035, 0.0002696670000000012, 0.00026965299999999817, 0.0002696389999999986, 0.00026974999999999916, 0.00026965299999999817, 0.00026965299999999817, 0.0002698060000000009, 0.00026961099999999946, 0.0002696810000000008, 0.00026965300000000164, 0.0002696939999999974, 0.000269722, 0.0002696940000000009, 0.00026962499999999903, 0.00026973600000000306, 0.0002696519999999987, 0.000269722, 0.0002696940000000009, 0.0002697639999999987, 0.0002696670000000012, 0.000269722, 0.0002696940000000009, 0.00026979199999999787, 0.00026973699999999906, 0.00026966699999999774, 0.0002697089999999999, 0.0002697640000000022, 0.0002697359999999996, 0.00026966599999999827, 0.000269707999999997, 0.00026963799999999566, 0.0002696810000000008, 0.00026956999999999676, 0.00026965300000000164, 0.0002696800000000013, 0.00026963899999999513, 0.00026963900000000207, 0.00026965300000000164, 0.00026965199999999523, 0.00026970800000000045, 0.0002696250000000025, 0.00026970800000000045]</msg>
<status status="PASS" starttime="20201029 18:15:19.678" endtime="20201029 18:15:19.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.674" endtime="20201029 18:15:19.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.318" endtime="20201029 18:15:19.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.295" endtime="20201029 18:15:19.683"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.685" endtime="20201029 18:15:19.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.684" endtime="20201029 18:15:19.705"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.713" endtime="20201029 18:15:19.739"></status>
</kw>
<msg timestamp="20201029 18:15:19.740" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.711" endtime="20201029 18:15:19.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.742" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.741" endtime="20201029 18:15:19.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.743" endtime="20201029 18:15:19.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.709" endtime="20201029 18:15:19.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.707" endtime="20201029 18:15:19.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.752" endtime="20201029 18:15:20.040"></status>
</kw>
<msg timestamp="20201029 18:15:20.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018946847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019239569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.751" endtime="20201029 18:15:20.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018946847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019239569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.044" endtime="20201029 18:15:20.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.052" endtime="20201029 18:15:20.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.748" endtime="20201029 18:15:20.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.746" endtime="20201029 18:15:20.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:20.058" level="INFO">${PHILIP_RES} = [{'diff': 0.0002927220000000022}, {'diff': 0.00029279200000000005}, {'diff': 0.0002927220000000022}, {'diff': 0.00029279200000000005}, {'diff': 0.0002927499999999979}, {'diff': 0.00029272199999999873}...</msg>
<status status="PASS" starttime="20201029 18:15:20.055" endtime="20201029 18:15:20.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.063" level="INFO">${RESULT} = {'diff': [0.0002927220000000022, 0.00029279200000000005, 0.0002927220000000022, 0.00029279200000000005, 0.0002927499999999979, 0.00029272199999999873, 0.0002926939999999996, 0.0002927090000000021, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:20.059" endtime="20201029 18:15:20.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.068" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:20.067" endtime="20201029 18:15:20.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.070" level="INFO">VALUE: [0.0002927220000000022, 0.00029279200000000005, 0.0002927220000000022, 0.00029279200000000005, 0.0002927499999999979, 0.00029272199999999873, 0.0002926939999999996, 0.0002927090000000021, 0.0002926809999999995, 0.0002927910000000006, 0.0002928189999999997, 0.0002926809999999995, 0.0002927499999999979, 0.00029272199999999873, 0.0002928190000000032, 0.0002927640000000009, 0.0002927640000000009, 0.00029275000000000134, 0.00029284700000000233, 0.0002927640000000009, 0.0002925969999999986, 0.0002927499999999979, 0.00029275000000000134, 0.0002927220000000022, 0.0002929160000000007, 0.00029279200000000005, 0.0002927910000000006, 0.0002927499999999979, 0.0002927640000000009, 0.0002928199999999992, 0.0002926520000000009, 0.00029288900000000104, 0.00029275000000000134, 0.0002927780000000005, 0.00029275000000000134, 0.0002927640000000009, 0.00029287500000000147, 0.0002927359999999983, 0.0002927220000000022, 0.0002926389999999973, 0.00029284799999999833, 0.0002926519999999974, 0.0002926109999999982, 0.00029272199999999526, 0.0002927780000000005, 0.000292777000000001, 0.0002927780000000005, 0.0002928340000000057, 0.0002928059999999996, 0.00029262499999999775]</msg>
<status status="PASS" starttime="20201029 18:15:20.069" endtime="20201029 18:15:20.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.064" endtime="20201029 18:15:20.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.706" endtime="20201029 18:15:20.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.683" endtime="20201029 18:15:20.072"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.074" endtime="20201029 18:15:20.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.073" endtime="20201029 18:15:20.094"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.103" endtime="20201029 18:15:20.135"></status>
</kw>
<msg timestamp="20201029 18:15:20.136" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.101" endtime="20201029 18:15:20.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.138" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.137" endtime="20201029 18:15:20.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.139" endtime="20201029 18:15:20.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.098" endtime="20201029 18:15:20.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.096" endtime="20201029 18:15:20.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.148" endtime="20201029 18:15:20.434"></status>
</kw>
<msg timestamp="20201029 18:15:20.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.147" endtime="20201029 18:15:20.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021421903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.439" endtime="20201029 18:15:20.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.447" endtime="20201029 18:15:20.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.144" endtime="20201029 18:15:20.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.143" endtime="20201029 18:15:20.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:20.454" level="INFO">${PHILIP_RES} = [{'diff': 0.0003166530000000001}, {'diff': 0.0003168610000000016}, {'diff': 0.00031683400000000195}, {'diff': 0.0003168469999999986}, {'diff': 0.00031679200000000324}, {'diff': 0.0003168199999999989},...</msg>
<status status="PASS" starttime="20201029 18:15:20.451" endtime="20201029 18:15:20.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.458" level="INFO">${RESULT} = {'diff': [0.0003166530000000001, 0.0003168610000000016, 0.00031683400000000195, 0.0003168469999999986, 0.00031679200000000324, 0.0003168199999999989, 0.000316735999999998, 0.0003167360000000015, 0.000...</msg>
<status status="PASS" starttime="20201029 18:15:20.455" endtime="20201029 18:15:20.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.463" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:20.461" endtime="20201029 18:15:20.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.465" level="INFO">VALUE: [0.0003166530000000001, 0.0003168610000000016, 0.00031683400000000195, 0.0003168469999999986, 0.00031679200000000324, 0.0003168199999999989, 0.000316735999999998, 0.0003167360000000015, 0.00031680599999999934, 0.00031681899999999943, 0.0003168339999999985, 0.0003168339999999985, 0.0003167780000000002, 0.0003167499999999976, 0.0003168330000000025, 0.00031670800000000235, 0.0003167910000000003, 0.0003168880000000013, 0.0003169169999999999, 0.00031680499999999986, 0.0003167780000000002, 0.0003166939999999993, 0.00031675000000000106, 0.00031684700000000204, 0.00031676400000000063, 0.0003167229999999979, 0.00031675000000000106, 0.0003168200000000024, 0.00031683400000000195, 0.00031680500000000333, 0.00031683400000000195, 0.00031666699999999964, 0.0003167080000000058, 0.000316735999999998, 0.0003167909999999968, 0.0003167640000000041, 0.00031688900000000075, 0.0003168610000000016, 0.0003168610000000016, 0.00031683299999999553, 0.00031666699999999964, 0.00031676399999999716, 0.00031676399999999716, 0.0003167499999999976, 0.0003167499999999976, 0.00031672199999999845, 0.000316735999999998, 0.0003168330000000025, 0.0003168200000000024, 0.0003167079999999989]</msg>
<status status="PASS" starttime="20201029 18:15:20.464" endtime="20201029 18:15:20.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.459" endtime="20201029 18:15:20.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.095" endtime="20201029 18:15:20.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.072" endtime="20201029 18:15:20.467"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.469" endtime="20201029 18:15:20.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.468" endtime="20201029 18:15:20.489"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.498" endtime="20201029 18:15:20.527"></status>
</kw>
<msg timestamp="20201029 18:15:20.528" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.496" endtime="20201029 18:15:20.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.530" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.529" endtime="20201029 18:15:20.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.531" endtime="20201029 18:15:20.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.494" endtime="20201029 18:15:20.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.491" endtime="20201029 18:15:20.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.541" endtime="20201029 18:15:20.828"></status>
</kw>
<msg timestamp="20201029 18:15:20.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018800931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.540" endtime="20201029 18:15:20.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018800931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.833" endtime="20201029 18:15:20.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.842" endtime="20201029 18:15:20.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.537" endtime="20201029 18:15:20.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.536" endtime="20201029 18:15:20.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:20.850" level="INFO">${PHILIP_RES} = [{'diff': 0.00034180600000000005}, {'diff': 0.00034186099999999886}, {'diff': 0.00034191600000000114}, {'diff': 0.00034187499999999843}, {'diff': 0.0003419170000000006}, {'diff': 0.0003418890000000014...</msg>
<status status="PASS" starttime="20201029 18:15:20.846" endtime="20201029 18:15:20.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.855" level="INFO">${RESULT} = {'diff': [0.00034180600000000005, 0.00034186099999999886, 0.00034191600000000114, 0.00034187499999999843, 0.0003419170000000006, 0.00034188900000000147, 0.0003417780000000009, 0.00034195799999999985, ...</msg>
<status status="PASS" starttime="20201029 18:15:20.851" endtime="20201029 18:15:20.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.859" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:20.858" endtime="20201029 18:15:20.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.862" level="INFO">VALUE: [0.00034180600000000005, 0.00034186099999999886, 0.00034191600000000114, 0.00034187499999999843, 0.0003419170000000006, 0.00034188900000000147, 0.0003417780000000009, 0.00034195799999999985, 0.00034173599999999874, 0.00034191599999999767, 0.00034188900000000147, 0.0003419580000000033, 0.00034184800000000223, 0.0003418329999999997, 0.00034186099999999886, 0.000341888999999998, 0.0003418189999999967, 0.00034188900000000147, 0.0003418329999999997, 0.00034190300000000104, 0.0003419580000000033, 0.0003418329999999997, 0.0003419590000000028, 0.0003419300000000007, 0.00034186099999999886, 0.00034190300000000104, 0.0003418620000000018, 0.0003419450000000032, 0.0003418339999999992, 0.0003419589999999993, 0.00034190299999999757, 0.0003418750000000019, 0.0003419440000000003, 0.00034191600000000114, 0.00034190200000000504, 0.00034190299999999757, 0.0003418199999999996, 0.0003419019999999981, 0.0003418339999999992, 0.00034187500000000537, 0.000341888999999998, 0.00034186099999999886, 0.0003418329999999997, 0.00034187499999999843, 0.00034190299999999757, 0.0003418050000000006, 0.0003418469999999993, 0.00034186099999999886, 0.00034187500000000537, 0.00034186099999999886]</msg>
<status status="PASS" starttime="20201029 18:15:20.860" endtime="20201029 18:15:20.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.856" endtime="20201029 18:15:20.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.490" endtime="20201029 18:15:20.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.467" endtime="20201029 18:15:20.864"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.867" endtime="20201029 18:15:20.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.865" endtime="20201029 18:15:20.887"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.895" endtime="20201029 18:15:20.924"></status>
</kw>
<msg timestamp="20201029 18:15:20.924" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.893" endtime="20201029 18:15:20.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.927" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.925" endtime="20201029 18:15:20.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.928" endtime="20201029 18:15:20.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.891" endtime="20201029 18:15:20.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.889" endtime="20201029 18:15:20.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.937" endtime="20201029 18:15:21.223"></status>
</kw>
<msg timestamp="20201029 18:15:21.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017930597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.936" endtime="20201029 18:15:21.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017930597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.228" endtime="20201029 18:15:21.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.235" endtime="20201029 18:15:21.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.933" endtime="20201029 18:15:21.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.931" endtime="20201029 18:15:21.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:21.242" level="INFO">${PHILIP_RES} = [{'diff': 0.00036763899999999947}, {'diff': 0.0003677220000000009}, {'diff': 0.00036775}, {'diff': 0.00036769399999999827}, {'diff': 0.0003677220000000009}, {'diff': 0.0003675690000000016}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:15:21.239" endtime="20201029 18:15:21.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.247" level="INFO">${RESULT} = {'diff': [0.00036763899999999947, 0.0003677220000000009, 0.00036775, 0.00036769399999999827, 0.0003677220000000009, 0.0003675690000000016, 0.00036768000000000217, 0.0003676950000000012, 0.000367736000...</msg>
<status status="PASS" starttime="20201029 18:15:21.243" endtime="20201029 18:15:21.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.251" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:21.250" endtime="20201029 18:15:21.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.254" level="INFO">VALUE: [0.00036763899999999947, 0.0003677220000000009, 0.00036775, 0.00036769399999999827, 0.0003677220000000009, 0.0003675690000000016, 0.00036768000000000217, 0.0003676950000000012, 0.00036773600000000045, 0.0003676799999999987, 0.0003677639999999996, 0.0003677639999999996, 0.0003677220000000009, 0.0003677089999999973, 0.00036775, 0.00036776400000000306, 0.00036775, 0.00036773600000000045, 0.00036756899999999815, 0.0003677639999999996, 0.00036775, 0.00036768100000000165, 0.0003676799999999987, 0.0003677219999999974, 0.0003676249999999999, 0.0003676799999999987, 0.00036769499999999775, 0.0003677080000000013, 0.0003677220000000009, 0.0003677219999999974, 0.00036769400000000174, 0.00036773600000000045, 0.00036770799999999784, 0.0003678189999999984, 0.0003677220000000009, 0.00036769400000000174, 0.0003677080000000013, 0.0003678189999999984, 0.0003677220000000009, 0.00036768000000000217, 0.00036772199999999394, 0.00036772300000000036, 0.0003677220000000009, 0.00036773600000000045, 0.00036769400000000174, 0.0003677080000000013, 0.00036775, 0.00036773600000000045, 0.00036768100000000165, 0.00036762500000000337]</msg>
<status status="PASS" starttime="20201029 18:15:21.252" endtime="20201029 18:15:21.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.248" endtime="20201029 18:15:21.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.887" endtime="20201029 18:15:21.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.865" endtime="20201029 18:15:21.256"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.258" endtime="20201029 18:15:21.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.257" endtime="20201029 18:15:21.278"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.286" endtime="20201029 18:15:21.316"></status>
</kw>
<msg timestamp="20201029 18:15:21.317" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.285" endtime="20201029 18:15:21.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.319" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.318" endtime="20201029 18:15:21.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.320" endtime="20201029 18:15:21.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.282" endtime="20201029 18:15:21.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.280" endtime="20201029 18:15:21.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.330" endtime="20201029 18:15:21.616"></status>
</kw>
<msg timestamp="20201029 18:15:21.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018417667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018811792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.328" endtime="20201029 18:15:21.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018417667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018811792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.621" endtime="20201029 18:15:21.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.629" endtime="20201029 18:15:21.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.326" endtime="20201029 18:15:21.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.324" endtime="20201029 18:15:21.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:21.635" level="INFO">${PHILIP_RES} = [{'diff': 0.0003941250000000021}, {'diff': 0.0003941670000000008}, {'diff': 0.0003941390000000017}, {'diff': 0.00039430500000000104}, {'diff': 0.0003941109999999991}, {'diff': 0.00039441700000000107},...</msg>
<status status="PASS" starttime="20201029 18:15:21.632" endtime="20201029 18:15:21.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.639" level="INFO">${RESULT} = {'diff': [0.0003941250000000021, 0.0003941670000000008, 0.0003941390000000017, 0.00039430500000000104, 0.0003941109999999991, 0.00039441700000000107, 0.0003944030000000015, 0.00039438899999999846, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:21.636" endtime="20201029 18:15:21.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.644" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:21.643" endtime="20201029 18:15:21.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.646" level="INFO">VALUE: [0.0003941250000000021, 0.0003941670000000008, 0.0003941390000000017, 0.00039430500000000104, 0.0003941109999999991, 0.00039441700000000107, 0.0003944030000000015, 0.00039438899999999846, 0.00039443100000000064, 0.00039437500000000236, 0.00039441700000000107, 0.00039438899999999846, 0.0003943749999999989, 0.00039436200000000227, 0.0003943340000000031, 0.00039438899999999846, 0.00039443099999999717, 0.0003943330000000002, 0.0003943749999999989, 0.00039438899999999846, 0.000394499999999999, 0.00039430599999999705, 0.0003942919999999975, 0.00039441599999999813, 0.0003943330000000002, 0.0003944299999999977, 0.0003944299999999977, 0.00039434699999999975, 0.0003945129999999991, 0.0003942770000000019, 0.00039444400000000074, 0.00039422199999999963, 0.0003943610000000028, 0.00039437500000000236, 0.00039443100000000064, 0.0003942640000000053, 0.0003943879999999955, 0.0003943469999999963, 0.0003943610000000028, 0.0003943749999999954, 0.00039438900000000193, 0.000394306000000004, 0.00039426399999999834, 0.00039438900000000193, 0.0003942779999999979, 0.00039441700000000107, 0.0003943610000000028, 0.0003943339999999962, 0.0003944030000000015, 0.00039433300000000365]</msg>
<status status="PASS" starttime="20201029 18:15:21.645" endtime="20201029 18:15:21.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.640" endtime="20201029 18:15:21.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.279" endtime="20201029 18:15:21.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.256" endtime="20201029 18:15:21.654"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.657" endtime="20201029 18:15:21.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.655" endtime="20201029 18:15:21.677"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.685" endtime="20201029 18:15:21.723"></status>
</kw>
<msg timestamp="20201029 18:15:21.723" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.683" endtime="20201029 18:15:21.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.726" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.724" endtime="20201029 18:15:21.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.727" endtime="20201029 18:15:21.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.681" endtime="20201029 18:15:21.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.679" endtime="20201029 18:15:21.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.737" endtime="20201029 18:15:22.025"></status>
</kw>
<msg timestamp="20201029 18:15:22.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02211325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:21.735" endtime="20201029 18:15:22.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02211325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:22.029" endtime="20201029 18:15:22.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.037" endtime="20201029 18:15:22.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.733" endtime="20201029 18:15:22.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.731" endtime="20201029 18:15:22.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:22.043" level="INFO">${PHILIP_RES} = [{'diff': 0.00042154200000000044}, {'diff': 0.00042173599999999895}, {'diff': 0.0004218340000000029}, {'diff': 0.00042186099999999907}, {'diff': 0.0004217219999999994}, {'diff': 0.0004217219999999994}...</msg>
<status status="PASS" starttime="20201029 18:15:22.040" endtime="20201029 18:15:22.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.047" level="INFO">${RESULT} = {'diff': [0.00042154200000000044, 0.00042173599999999895, 0.0004218340000000029, 0.00042186099999999907, 0.0004217219999999994, 0.0004217219999999994, 0.00042168100000000014, 0.0004217079999999998, 0....</msg>
<status status="PASS" starttime="20201029 18:15:22.044" endtime="20201029 18:15:22.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.052" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:22.051" endtime="20201029 18:15:22.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.054" level="INFO">VALUE: [0.00042154200000000044, 0.00042173599999999895, 0.0004218340000000029, 0.00042186099999999907, 0.0004217219999999994, 0.0004217219999999994, 0.00042168100000000014, 0.0004217079999999998, 0.00042183299999999993, 0.00042173599999999895, 0.0004217230000000023, 0.0004217079999999998, 0.000421750000000002, 0.00042173599999999895, 0.0004217920000000007, 0.00042168000000000067, 0.000421653000000001, 0.00042172200000000284, 0.0004218050000000008, 0.00042190300000000125, 0.00042183299999999993, 0.0004218200000000033, 0.0004217919999999972, 0.0004217079999999998, 0.0004218059999999968, 0.00042173599999999895, 0.0004217089999999993, 0.000421653000000001, 0.00042166700000000057, 0.0004216249999999949, 0.00042169400000000024, 0.0004216110000000023, 0.00042166700000000057, 0.00042173599999999895, 0.0004217089999999993, 0.0004217499999999985, 0.0004217089999999993, 0.00042173599999999895, 0.00042169400000000024, 0.00042166700000000057, 0.0004218330000000034, 0.00042184699999999603, 0.0004217220000000063, 0.00042169400000000024, 0.00042161099999999535, 0.0004217230000000058, 0.0004217629999999986, 0.0004217639999999981, 0.0004219300000000009, 0.000421653000000001]</msg>
<status status="PASS" starttime="20201029 18:15:22.053" endtime="20201029 18:15:22.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.048" endtime="20201029 18:15:22.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.677" endtime="20201029 18:15:22.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.655" endtime="20201029 18:15:22.057"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.059" endtime="20201029 18:15:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.058" endtime="20201029 18:15:22.080"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.088" endtime="20201029 18:15:22.125"></status>
</kw>
<msg timestamp="20201029 18:15:22.125" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.086" endtime="20201029 18:15:22.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.128" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.126" endtime="20201029 18:15:22.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.129" endtime="20201029 18:15:22.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.084" endtime="20201029 18:15:22.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.081" endtime="20201029 18:15:22.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.138" endtime="20201029 18:15:22.423"></status>
</kw>
<msg timestamp="20201029 18:15:22.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.136" endtime="20201029 18:15:22.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.427" endtime="20201029 18:15:22.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.435" endtime="20201029 18:15:22.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.134" endtime="20201029 18:15:22.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.132" endtime="20201029 18:15:22.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:22.442" level="INFO">${PHILIP_RES} = [{'diff': 0.0004503190000000011}, {'diff': 0.0004503609999999998}, {'diff': 0.0004503609999999998}, {'diff': 0.0004503330000000007}, {'diff': 0.0004504299999999982}, {'diff': 0.00045047299999999985}, ...</msg>
<status status="PASS" starttime="20201029 18:15:22.439" endtime="20201029 18:15:22.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.447" level="INFO">${RESULT} = {'diff': [0.0004503190000000011, 0.0004503609999999998, 0.0004503609999999998, 0.0004503330000000007, 0.0004504299999999982, 0.00045047299999999985, 0.0004503330000000007, 0.0004503749999999994, 0.000...</msg>
<status status="PASS" starttime="20201029 18:15:22.443" endtime="20201029 18:15:22.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.451" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:22.450" endtime="20201029 18:15:22.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.454" level="INFO">VALUE: [0.0004503190000000011, 0.0004503609999999998, 0.0004503609999999998, 0.0004503330000000007, 0.0004504299999999982, 0.00045047299999999985, 0.0004503330000000007, 0.0004503749999999994, 0.00045034700000000025, 0.0004503890000000024, 0.0004503609999999998, 0.0004504029999999985, 0.0004503619999999993, 0.00045034700000000025, 0.000450403000000002, 0.0004505280000000021, 0.0004503749999999994, 0.0004503749999999994, 0.0004503890000000024, 0.0004504020000000025, 0.0004504999999999995, 0.0004503749999999994, 0.0004504450000000007, 0.000450403000000002, 0.0004503329999999972, 0.00045041699999999463, 0.0004502359999999997, 0.00045030499999999807, 0.00045020800000000055, 0.00045019500000000046, 0.0004502779999999984, 0.0004503890000000024, 0.0004502779999999984, 0.00045030599999999754, 0.0004503329999999972, 0.00045045799999999386, 0.0004503890000000024, 0.00045033300000000415, 0.0004504999999999995, 0.00045047299999999985, 0.0004504999999999995, 0.0004503749999999959, 0.00045037500000000286, 0.0004502220000000001, 0.00045041700000000157, 0.00045031899999999764, 0.0004501810000000009, 0.0004503749999999959, 0.00045030499999999807, 0.00045047200000000037]</msg>
<status status="PASS" starttime="20201029 18:15:22.452" endtime="20201029 18:15:22.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.448" endtime="20201029 18:15:22.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.080" endtime="20201029 18:15:22.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.057" endtime="20201029 18:15:22.456"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.458" endtime="20201029 18:15:22.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.457" endtime="20201029 18:15:22.478"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.486" endtime="20201029 18:15:22.522"></status>
</kw>
<msg timestamp="20201029 18:15:22.523" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.485" endtime="20201029 18:15:22.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.525" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.524" endtime="20201029 18:15:22.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.526" endtime="20201029 18:15:22.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.482" endtime="20201029 18:15:22.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.480" endtime="20201029 18:15:22.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.536" endtime="20201029 18:15:22.825"></status>
</kw>
<msg timestamp="20201029 18:15:22.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.534" endtime="20201029 18:15:22.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019716639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.829" endtime="20201029 18:15:22.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.837" endtime="20201029 18:15:22.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.531" endtime="20201029 18:15:22.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.530" endtime="20201029 18:15:22.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:22.843" level="INFO">${PHILIP_RES} = [{'diff': 0.0004793470000000015}, {'diff': 0.00047941699999999934}, {'diff': 0.0004794029999999998}, {'diff': 0.000479541}, {'diff': 0.00047955499999999956}, {'diff': 0.000479443999999999}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:15:22.840" endtime="20201029 18:15:22.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.847" level="INFO">${RESULT} = {'diff': [0.0004793470000000015, 0.00047941699999999934, 0.0004794029999999998, 0.000479541, 0.00047955499999999956, 0.000479443999999999, 0.0004793890000000002, 0.00047945800000000205, 0.000479292000...</msg>
<status status="PASS" starttime="20201029 18:15:22.844" endtime="20201029 18:15:22.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.852" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:22.851" endtime="20201029 18:15:22.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.854" level="INFO">VALUE: [0.0004793470000000015, 0.00047941699999999934, 0.0004794029999999998, 0.000479541, 0.00047955499999999956, 0.000479443999999999, 0.0004793890000000002, 0.00047945800000000205, 0.0004792920000000027, 0.0004793890000000002, 0.00047941599999999987, 0.00047941599999999987, 0.00047941699999999934, 0.0004794449999999985, 0.00047933299999999845, 0.0004794729999999976, 0.0004794029999999998, 0.0004795279999999999, 0.0004795279999999999, 0.00047942999999999944, 0.0004795699999999986, 0.0004794720000000016, 0.00047937500000000063, 0.00047961099999999784, 0.00047973600000000144, 0.0004796249999999974, 0.0004795829999999987, 0.0004797080000000023, 0.0004797080000000023, 0.0004798049999999998, 0.0004797919999999997, 0.0004796249999999974, 0.0004796249999999974, 0.000479638999999997, 0.00047972200000000187, 0.000479652000000004, 0.00047959799999999775, 0.00047970899999999483, 0.0004796799999999962, 0.0004798190000000063, 0.00047977800000000015, 0.0004795699999999986, 0.0004797919999999997, 0.00047965299999999655, 0.00047969400000000273, 0.00047972200000000187, 0.00047979100000000025, 0.00047972199999999493, 0.00047968000000000316, 0.0004797770000000007]</msg>
<status status="PASS" starttime="20201029 18:15:22.853" endtime="20201029 18:15:22.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.848" endtime="20201029 18:15:22.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.479" endtime="20201029 18:15:22.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.456" endtime="20201029 18:15:22.856"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.858" endtime="20201029 18:15:22.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.857" endtime="20201029 18:15:22.878"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.887" endtime="20201029 18:15:22.928"></status>
</kw>
<msg timestamp="20201029 18:15:22.929" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.885" endtime="20201029 18:15:22.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.931" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.930" endtime="20201029 18:15:22.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.933" endtime="20201029 18:15:22.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.882" endtime="20201029 18:15:22.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.880" endtime="20201029 18:15:22.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.943" endtime="20201029 18:15:23.229"></status>
</kw>
<msg timestamp="20201029 18:15:23.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020763236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:22.941" endtime="20201029 18:15:23.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020763236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:23.233" endtime="20201029 18:15:23.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.241" endtime="20201029 18:15:23.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.938" endtime="20201029 18:15:23.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.937" endtime="20201029 18:15:23.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:23.247" level="INFO">${PHILIP_RES} = [{'diff': 0.0005097639999999994}, {'diff': 0.0005099439999999983}, {'diff': 0.0005098749999999999}, {'diff': 0.0005099730000000004}, {'diff': 0.0005099580000000013}, {'diff': 0.0005098470000000008}, {...</msg>
<status status="PASS" starttime="20201029 18:15:23.244" endtime="20201029 18:15:23.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.251" level="INFO">${RESULT} = {'diff': [0.0005097639999999994, 0.0005099439999999983, 0.0005098749999999999, 0.0005099730000000004, 0.0005099580000000013, 0.0005098470000000008, 0.0005098749999999999, 0.0005098470000000008, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:15:23.248" endtime="20201029 18:15:23.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.256" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:23.255" endtime="20201029 18:15:23.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.258" level="INFO">VALUE: [0.0005097639999999994, 0.0005099439999999983, 0.0005098749999999999, 0.0005099730000000004, 0.0005099580000000013, 0.0005098470000000008, 0.0005098749999999999, 0.0005098470000000008, 0.0005099440000000018, 0.0005098059999999981, 0.0005098889999999995, 0.0005099030000000025, 0.0005097779999999989, 0.0005098749999999999, 0.0005098889999999995, 0.0005097779999999989, 0.0005099030000000025, 0.0005098749999999999, 0.000509889000000003, 0.0005097780000000024, 0.000509791999999995, 0.0005097219999999972, 0.0005097499999999963, 0.000509888, 0.0005099860000000039, 0.000509902999999999, 0.0005098330000000012, 0.0005099719999999974, 0.0005098749999999999, 0.0005097639999999959, 0.0005099719999999974, 0.000509693999999998, 0.0005098610000000003, 0.0005098749999999999, 0.0005098749999999999, 0.0005098749999999999, 0.0005099860000000039, 0.0005098619999999998, 0.000509902999999999, 0.0005098749999999999, 0.0005099159999999991, 0.0005097089999999971, 0.0005099019999999996, 0.0005098470000000008, 0.0005098889999999995, 0.0005099590000000043, 0.0005098749999999999, 0.0005099159999999991, 0.0005098889999999995, 0.0005098330000000012]</msg>
<status status="PASS" starttime="20201029 18:15:23.257" endtime="20201029 18:15:23.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.252" endtime="20201029 18:15:23.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.879" endtime="20201029 18:15:23.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.856" endtime="20201029 18:15:23.261"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.263" endtime="20201029 18:15:23.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.262" endtime="20201029 18:15:23.283"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.292" endtime="20201029 18:15:23.331"></status>
</kw>
<msg timestamp="20201029 18:15:23.332" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.290" endtime="20201029 18:15:23.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.337" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.334" endtime="20201029 18:15:23.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.340" endtime="20201029 18:15:23.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.287" endtime="20201029 18:15:23.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.285" endtime="20201029 18:15:23.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.359" endtime="20201029 18:15:23.653"></status>
</kw>
<msg timestamp="20201029 18:15:23.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0177255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018266125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:23.356" endtime="20201029 18:15:23.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0177255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018266125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:23.657" endtime="20201029 18:15:23.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.665" endtime="20201029 18:15:23.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.350" endtime="20201029 18:15:23.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.347" endtime="20201029 18:15:23.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:23.671" level="INFO">${PHILIP_RES} = [{'diff': 0.0005406249999999994}, {'diff': 0.0005406809999999977}, {'diff': 0.0005407769999999992}, {'diff': 0.0005405700000000006}, {'diff': 0.0005407079999999974}, {'diff': 0.0005406810000000012}, {...</msg>
<status status="PASS" starttime="20201029 18:15:23.668" endtime="20201029 18:15:23.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.677" level="INFO">${RESULT} = {'diff': [0.0005406249999999994, 0.0005406809999999977, 0.0005407769999999992, 0.0005405700000000006, 0.0005407079999999974, 0.0005406810000000012, 0.0005407080000000009, 0.0005407499999999996, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:15:23.673" endtime="20201029 18:15:23.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.681" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:23.680" endtime="20201029 18:15:23.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.683" level="INFO">VALUE: [0.0005406249999999994, 0.0005406809999999977, 0.0005407769999999992, 0.0005405700000000006, 0.0005407079999999974, 0.0005406810000000012, 0.0005407080000000009, 0.0005407499999999996, 0.0005406800000000017, 0.0005406249999999994, 0.0005406529999999986, 0.0005406109999999999, 0.0005406529999999986, 0.0005407220000000004, 0.0005407229999999999, 0.0005407640000000026, 0.0005406390000000025, 0.0005407629999999997, 0.0005406670000000016, 0.0005405699999999972, 0.0005406799999999982, 0.0005406940000000013, 0.0005405970000000003, 0.0005406390000000025, 0.0005407220000000004, 0.0005405559999999976, 0.0005405689999999977, 0.000540736, 0.0005407080000000009, 0.0005407639999999991, 0.0005407499999999996, 0.0005407080000000009, 0.0005405970000000038, 0.0005405139999999989, 0.0005406110000000033, 0.0005406940000000013, 0.0005406250000000029, 0.000540653000000002, 0.000540736, 0.0005407919999999983, 0.0005406389999999955, 0.0005404999999999993, 0.0005406670000000016, 0.0005406390000000025, 0.000540624999999996, 0.0005407909999999988, 0.0005407229999999999, 0.0005408049999999984, 0.0005407640000000061, 0.0005406389999999955]</msg>
<status status="PASS" starttime="20201029 18:15:23.682" endtime="20201029 18:15:23.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.677" endtime="20201029 18:15:23.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.284" endtime="20201029 18:15:23.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.261" endtime="20201029 18:15:23.685"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.688" endtime="20201029 18:15:23.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.686" endtime="20201029 18:15:23.708"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.716" endtime="20201029 18:15:23.758"></status>
</kw>
<msg timestamp="20201029 18:15:23.759" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.714" endtime="20201029 18:15:23.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.761" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.760" endtime="20201029 18:15:23.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.762" endtime="20201029 18:15:23.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.712" endtime="20201029 18:15:23.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.710" endtime="20201029 18:15:23.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.771" endtime="20201029 18:15:24.058"></status>
</kw>
<msg timestamp="20201029 18:15:24.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020904722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.770" endtime="20201029 18:15:24.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020904722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.063" endtime="20201029 18:15:24.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.070" endtime="20201029 18:15:24.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.767" endtime="20201029 18:15:24.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.766" endtime="20201029 18:15:24.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:24.077" level="INFO">${PHILIP_RES} = [{'diff': 0.0005728610000000009}, {'diff': 0.0005727500000000003}, {'diff': 0.0005727220000000012}, {'diff': 0.0005725689999999985}, {'diff': 0.0005728330000000018}, {'diff': 0.0005729310000000022}, {...</msg>
<status status="PASS" starttime="20201029 18:15:24.074" endtime="20201029 18:15:24.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.081" level="INFO">${RESULT} = {'diff': [0.0005728610000000009, 0.0005727500000000003, 0.0005727220000000012, 0.0005725689999999985, 0.0005728330000000018, 0.0005729310000000022, 0.0005727639999999999, 0.0005726529999999994, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:15:24.078" endtime="20201029 18:15:24.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.085" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:24.084" endtime="20201029 18:15:24.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.088" level="INFO">VALUE: [0.0005728610000000009, 0.0005727500000000003, 0.0005727220000000012, 0.0005725689999999985, 0.0005728330000000018, 0.0005729310000000022, 0.0005727639999999999, 0.0005726529999999994, 0.0005726950000000015, 0.0005728750000000005, 0.0005729029999999996, 0.0005726800000000025, 0.0005728050000000026, 0.0005727639999999999, 0.0005728329999999983, 0.000572889, 0.0005728190000000022, 0.0005727500000000003, 0.0005730130000000042, 0.0005728329999999948, 0.000572889, 0.0005727499999999969, 0.0005727359999999973, 0.0005726109999999937, 0.0005726250000000002, 0.0005727360000000042, 0.0005728330000000018, 0.0005726939999999986, 0.0005725830000000015, 0.0005726659999999995, 0.0005726389999999998, 0.000572584000000001, 0.0005724719999999975, 0.0005724450000000048, 0.0005724589999999974, 0.0005725559999999949, 0.0005724730000000039, 0.0005724439999999983, 0.0005726529999999994, 0.0005724579999999979, 0.0005728190000000022, 0.0005727919999999956, 0.0005727770000000035, 0.0005728340000000012, 0.0005728049999999957, 0.0005728330000000018, 0.0005727919999999956, 0.0005727639999999964, 0.0005728200000000017, 0.0005726939999999986]</msg>
<status status="PASS" starttime="20201029 18:15:24.087" endtime="20201029 18:15:24.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.082" endtime="20201029 18:15:24.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.708" endtime="20201029 18:15:24.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.686" endtime="20201029 18:15:24.090"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.092" endtime="20201029 18:15:24.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.091" endtime="20201029 18:15:24.112"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.120" endtime="20201029 18:15:24.164"></status>
</kw>
<msg timestamp="20201029 18:15:24.165" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.119" endtime="20201029 18:15:24.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.167" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.166" endtime="20201029 18:15:24.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.168" endtime="20201029 18:15:24.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.116" endtime="20201029 18:15:24.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.114" endtime="20201029 18:15:24.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.178" endtime="20201029 18:15:24.466"></status>
</kw>
<msg timestamp="20201029 18:15:24.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018292069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.177" endtime="20201029 18:15:24.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018292069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.470" endtime="20201029 18:15:24.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.478" endtime="20201029 18:15:24.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.174" endtime="20201029 18:15:24.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.173" endtime="20201029 18:15:24.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:24.484" level="INFO">${PHILIP_RES} = [{'diff': 0.0006055270000000015}, {'diff': 0.0006055699999999997}, {'diff': 0.0006055699999999997}, {'diff': 0.0006055699999999997}, {'diff': 0.0006056659999999978}, {'diff': 0.0006055409999999976}, {...</msg>
<status status="PASS" starttime="20201029 18:15:24.481" endtime="20201029 18:15:24.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.488" level="INFO">${RESULT} = {'diff': [0.0006055270000000015, 0.0006055699999999997, 0.0006055699999999997, 0.0006055699999999997, 0.0006056659999999978, 0.0006055409999999976, 0.0006055000000000019, 0.0006054030000000009, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:15:24.485" endtime="20201029 18:15:24.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.493" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:24.492" endtime="20201029 18:15:24.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.495" level="INFO">VALUE: [0.0006055270000000015, 0.0006055699999999997, 0.0006055699999999997, 0.0006055699999999997, 0.0006056659999999978, 0.0006055409999999976, 0.0006055000000000019, 0.0006054030000000009, 0.0006054030000000009, 0.0006053059999999999, 0.000605513999999998, 0.0006055840000000028, 0.0006056249999999985, 0.0006055829999999998, 0.0006055969999999994, 0.0006054720000000027, 0.0006054719999999993, 0.000605610999999999, 0.0006054720000000027, 0.000605513999999998, 0.0006056530000000011, 0.0006055829999999998, 0.0006055699999999997, 0.0006055140000000014, 0.0006055000000000019, 0.0006056110000000059, 0.0006056250000000055, 0.0006056940000000038, 0.0006055140000000014, 0.0006055969999999994, 0.0006054859999999954, 0.0006055550000000007, 0.0006055410000000011, 0.0006054450000000031, 0.0006055000000000019, 0.0006054299999999971, 0.0006055269999999946, 0.0006055140000000014, 0.000605610999999999, 0.0006054580000000032, 0.0006054449999999961, 0.0006055270000000015, 0.0006054859999999954, 0.0006055420000000006, 0.0006055140000000014, 0.0006055270000000015, 0.0006054720000000027, 0.0006056670000000042, 0.0006055269999999946, 0.0006055699999999997]</msg>
<status status="PASS" starttime="20201029 18:15:24.494" endtime="20201029 18:15:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.489" endtime="20201029 18:15:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.113" endtime="20201029 18:15:24.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.090" endtime="20201029 18:15:24.498"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.500" endtime="20201029 18:15:24.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.499" endtime="20201029 18:15:24.520"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.528" endtime="20201029 18:15:24.576"></status>
</kw>
<msg timestamp="20201029 18:15:24.577" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.527" endtime="20201029 18:15:24.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.579" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.578" endtime="20201029 18:15:24.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.580" endtime="20201029 18:15:24.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.524" endtime="20201029 18:15:24.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.522" endtime="20201029 18:15:24.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.590" endtime="20201029 18:15:24.885"></status>
</kw>
<msg timestamp="20201029 18:15:24.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.588" endtime="20201029 18:15:24.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.894" endtime="20201029 18:15:24.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.912" endtime="20201029 18:15:24.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.585" endtime="20201029 18:15:24.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.584" endtime="20201029 18:15:24.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:24.926" level="INFO">${PHILIP_RES} = [{'diff': 0.0006389859999999976}, {'diff': 0.0006390840000000016}, {'diff': 0.0006390130000000008}, {'diff': 0.0006389439999999989}, {'diff': 0.0006388609999999975}, {'diff': 0.0006389029999999997}, {...</msg>
<status status="PASS" starttime="20201029 18:15:24.919" endtime="20201029 18:15:24.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.936" level="INFO">${RESULT} = {'diff': [0.0006389859999999976, 0.0006390840000000016, 0.0006390130000000008, 0.0006389439999999989, 0.0006388609999999975, 0.0006389029999999997, 0.0006389870000000006, 0.0006389030000000032, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:15:24.928" endtime="20201029 18:15:24.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.946" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:24.943" endtime="20201029 18:15:24.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.948" level="INFO">VALUE: [0.0006389859999999976, 0.0006390840000000016, 0.0006390130000000008, 0.0006389439999999989, 0.0006388609999999975, 0.0006389029999999997, 0.0006389870000000006, 0.0006389030000000032, 0.0006391250000000008, 0.0006390419999999994, 0.0006389169999999993, 0.0006390140000000002, 0.000638958000000002, 0.0006388750000000006, 0.0006388749999999971, 0.0006389870000000006, 0.0006388330000000053, 0.0006388609999999975, 0.0006389860000000011, 0.0006389860000000011, 0.0006389859999999942, 0.000638875000000004, 0.0006389860000000011, 0.0006388889999999967, 0.0006391250000000043, 0.0006391660000000035, 0.0006390270000000003, 0.0006390139999999933, 0.000638958000000002, 0.0006390000000000007, 0.0006389169999999958, 0.000638958000000002, 0.0006389590000000014, 0.0006389159999999963, 0.0006389310000000023, 0.0006390000000000007, 0.0006388609999999975, 0.0006389450000000019, 0.0006389860000000011, 0.000638875000000004, 0.0006390969999999982, 0.0006389719999999946, 0.0006389860000000011, 0.000638875000000004, 0.0006389169999999958, 0.000638958000000002, 0.0006389450000000019, 0.0006390970000000051, 0.0006388749999999971, 0.0006389720000000015]</msg>
<status status="PASS" starttime="20201029 18:15:24.947" endtime="20201029 18:15:24.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.938" endtime="20201029 18:15:24.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.521" endtime="20201029 18:15:24.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.498" endtime="20201029 18:15:24.950"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.953" endtime="20201029 18:15:24.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.951" endtime="20201029 18:15:24.973"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.981" endtime="20201029 18:15:25.029"></status>
</kw>
<msg timestamp="20201029 18:15:25.030" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.979" endtime="20201029 18:15:25.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.032" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.031" endtime="20201029 18:15:25.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.033" endtime="20201029 18:15:25.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.977" endtime="20201029 18:15:25.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.975" endtime="20201029 18:15:25.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.043" endtime="20201029 18:15:25.330"></status>
</kw>
<msg timestamp="20201029 18:15:25.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.041" endtime="20201029 18:15:25.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.334" endtime="20201029 18:15:25.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.342" endtime="20201029 18:15:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.038" endtime="20201029 18:15:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.036" endtime="20201029 18:15:25.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:25.348" level="INFO">${PHILIP_RES} = [{'diff': 0.0006732639999999998}, {'diff': 0.0006734730000000008}, {'diff': 0.0006733470000000012}, {'diff': 0.0006735690000000023}, {'diff': 0.0006734859999999974}, {'diff': 0.0006733750000000004}, {...</msg>
<status status="PASS" starttime="20201029 18:15:25.345" endtime="20201029 18:15:25.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.353" level="INFO">${RESULT} = {'diff': [0.0006732639999999998, 0.0006734730000000008, 0.0006733470000000012, 0.0006735690000000023, 0.0006734859999999974, 0.0006733750000000004, 0.0006734299999999992, 0.0006734860000000009, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:15:25.349" endtime="20201029 18:15:25.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.357" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:25.356" endtime="20201029 18:15:25.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.359" level="INFO">VALUE: [0.0006732639999999998, 0.0006734730000000008, 0.0006733470000000012, 0.0006735690000000023, 0.0006734859999999974, 0.0006733750000000004, 0.0006734299999999992, 0.0006734860000000009, 0.0006735279999999996, 0.0006735270000000002, 0.0006735409999999997, 0.0006735839999999979, 0.0006735270000000002, 0.0006735419999999992, 0.0006733890000000034, 0.0006736670000000028, 0.000673304999999999, 0.0006735000000000005, 0.0006736109999999976, 0.0006735419999999992, 0.0006735270000000002, 0.0006735000000000005, 0.0006734169999999956, 0.0006734170000000025, 0.0006736380000000042, 0.0006735279999999996, 0.0006735140000000001, 0.000673402999999996, 0.0006734720000000013, 0.0006733890000000034, 0.0006735000000000005, 0.0006735549999999993, 0.0006734720000000013, 0.0006735700000000053, 0.0006734720000000013, 0.0006734170000000025, 0.0006734450000000017, 0.0006736110000000045, 0.0006736250000000041, 0.0006734720000000013, 0.0006735000000000005, 0.0006733479999999972, 0.0006733749999999969, 0.0006733469999999978, 0.0006734860000000009, 0.0006734299999999957, 0.0006734860000000009, 0.0006734590000000013, 0.0006735829999999984, 0.0006735559999999988]</msg>
<status status="PASS" starttime="20201029 18:15:25.358" endtime="20201029 18:15:25.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.354" endtime="20201029 18:15:25.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.973" endtime="20201029 18:15:25.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.950" endtime="20201029 18:15:25.361"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.364" endtime="20201029 18:15:25.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.362" endtime="20201029 18:15:25.384"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.392" endtime="20201029 18:15:25.440"></status>
</kw>
<msg timestamp="20201029 18:15:25.441" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.390" endtime="20201029 18:15:25.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.443" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.442" endtime="20201029 18:15:25.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.445" endtime="20201029 18:15:25.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.388" endtime="20201029 18:15:25.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.386" endtime="20201029 18:15:25.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.455" endtime="20201029 18:15:25.758"></status>
</kw>
<msg timestamp="20201029 18:15:25.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017213222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017922153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.453" endtime="20201029 18:15:25.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017213222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017922153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.762" endtime="20201029 18:15:25.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.770" endtime="20201029 18:15:25.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.450" endtime="20201029 18:15:25.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.449" endtime="20201029 18:15:25.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:25.776" level="INFO">${PHILIP_RES} = [{'diff': 0.0007089309999999995}, {'diff': 0.0007090550000000001}, {'diff': 0.0007090000000000013}, {'diff': 0.0007088469999999986}, {'diff': 0.0007090700000000026}, {'diff': 0.0007089030000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:15:25.773" endtime="20201029 18:15:25.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.780" level="INFO">${RESULT} = {'diff': [0.0007089309999999995, 0.0007090550000000001, 0.0007090000000000013, 0.0007088469999999986, 0.0007090700000000026, 0.0007089030000000003, 0.0007088750000000012, 0.0007090140000000009, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:15:25.777" endtime="20201029 18:15:25.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.785" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:25.784" endtime="20201029 18:15:25.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.787" level="INFO">VALUE: [0.0007089309999999995, 0.0007090550000000001, 0.0007090000000000013, 0.0007088469999999986, 0.0007090700000000026, 0.0007089030000000003, 0.0007088750000000012, 0.0007090140000000009, 0.000709124999999998, 0.000709027000000001, 0.000708944999999999, 0.0007093050000000004, 0.0007094579999999996, 0.0007093189999999999, 0.0007091800000000002, 0.000709124999999998, 0.0007091670000000001, 0.0007090140000000009, 0.0007090830000000027, 0.0007090410000000005, 0.0007091529999999971, 0.0007092080000000028, 0.0007092780000000007, 0.0007090699999999991, 0.0007091810000000032, 0.0007091809999999962, 0.0007091939999999963, 0.0007092780000000007, 0.000709236000000002, 0.0007091669999999967, 0.0007091669999999967, 0.000709153000000004, 0.0007092640000000011, 0.0007092640000000011, 0.0007093609999999986, 0.000709333999999999, 0.0007092639999999942, 0.0007092220000000024, 0.0007092080000000028, 0.000709124999999998, 0.0007092640000000011, 0.0007093889999999978, 0.0007089310000000029, 0.0007092640000000011, 0.0007092910000000008, 0.0007091669999999967, 0.0007090559999999996, 0.0007092909999999938, 0.0007093050000000004, 0.0007093609999999986]</msg>
<status status="PASS" starttime="20201029 18:15:25.786" endtime="20201029 18:15:25.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.781" endtime="20201029 18:15:25.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.384" endtime="20201029 18:15:25.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.362" endtime="20201029 18:15:25.790"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.793" endtime="20201029 18:15:25.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.791" endtime="20201029 18:15:25.813"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.821" endtime="20201029 18:15:25.877"></status>
</kw>
<msg timestamp="20201029 18:15:25.877" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.819" endtime="20201029 18:15:25.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.880" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.878" endtime="20201029 18:15:25.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.881" endtime="20201029 18:15:25.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.816" endtime="20201029 18:15:25.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.815" endtime="20201029 18:15:25.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.890" endtime="20201029 18:15:26.176"></status>
</kw>
<msg timestamp="20201029 18:15:26.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021346097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.888" endtime="20201029 18:15:26.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021346097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.180" endtime="20201029 18:15:26.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.188" endtime="20201029 18:15:26.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.886" endtime="20201029 18:15:26.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.884" endtime="20201029 18:15:26.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:26.195" level="INFO">${PHILIP_RES} = [{'diff': 0.0007454440000000014}, {'diff': 0.0007454999999999996}, {'diff': 0.0007453470000000004}, {'diff': 0.0007455139999999992}, {'diff': 0.0007455139999999992}, {'diff': 0.0007453059999999977}, {...</msg>
<status status="PASS" starttime="20201029 18:15:26.192" endtime="20201029 18:15:26.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.200" level="INFO">${RESULT} = {'diff': [0.0007454440000000014, 0.0007454999999999996, 0.0007453470000000004, 0.0007455139999999992, 0.0007455139999999992, 0.0007453059999999977, 0.0007454299999999983, 0.0007455550000000019, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:15:26.196" endtime="20201029 18:15:26.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.204" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:26.203" endtime="20201029 18:15:26.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.207" level="INFO">VALUE: [0.0007454440000000014, 0.0007454999999999996, 0.0007453470000000004, 0.0007455139999999992, 0.0007455139999999992, 0.0007453059999999977, 0.0007454299999999983, 0.0007455550000000019, 0.0007453609999999999, 0.0007453479999999998, 0.0007454159999999987, 0.0007454030000000021, 0.0007454860000000001, 0.0007454439999999979, 0.0007454859999999966, 0.0007455140000000027, 0.0007455550000000019, 0.0007455000000000031, 0.0007455690000000015, 0.0007454019999999992, 0.000745471999999997, 0.000745471999999997, 0.0007455139999999957, 0.0007453190000000012, 0.0007452639999999955, 0.0007451809999999975, 0.000745069000000001, 0.0007450139999999952, 0.0007451249999999993, 0.0007451109999999997, 0.0007451530000000053, 0.0007453879999999996, 0.0007452220000000037, 0.0007451809999999975, 0.0007450560000000009, 0.0007451249999999993, 0.0007451659999999985, 0.000745195000000004, 0.0007451389999999988, 0.000745084, 0.0007450829999999936, 0.0007450970000000001, 0.0007451389999999988, 0.0007453050000000017, 0.0007452220000000037, 0.0007452089999999967, 0.0007452500000000029, 0.0007449439999999974, 0.0007452090000000036, 0.0007450979999999996]</msg>
<status status="PASS" starttime="20201029 18:15:26.205" endtime="20201029 18:15:26.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.201" endtime="20201029 18:15:26.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.813" endtime="20201029 18:15:26.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.790" endtime="20201029 18:15:26.209"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.211" endtime="20201029 18:15:26.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.210" endtime="20201029 18:15:26.231"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.239" endtime="20201029 18:15:26.294"></status>
</kw>
<msg timestamp="20201029 18:15:26.295" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.238" endtime="20201029 18:15:26.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.297" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.296" endtime="20201029 18:15:26.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.298" endtime="20201029 18:15:26.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.235" endtime="20201029 18:15:26.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.233" endtime="20201029 18:15:26.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.307" endtime="20201029 18:15:26.618"></status>
</kw>
<msg timestamp="20201029 18:15:26.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019083389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.306" endtime="20201029 18:15:26.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019083389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.622" endtime="20201029 18:15:26.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.630" endtime="20201029 18:15:26.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.303" endtime="20201029 18:15:26.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.302" endtime="20201029 18:15:26.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:26.636" level="INFO">${PHILIP_RES} = [{'diff': 0.0007825829999999999}, {'diff': 0.0007825140000000015}, {'diff': 0.0007825410000000012}, {'diff': 0.0007827779999999979}, {'diff': 0.000782513000000002}, {'diff': 0.0007826670000000008}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:26.633" endtime="20201029 18:15:26.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.640" level="INFO">${RESULT} = {'diff': [0.0007825829999999999, 0.0007825140000000015, 0.0007825410000000012, 0.0007827779999999979, 0.000782513000000002, 0.0007826670000000008, 0.0007825969999999995, 0.0007826670000000008, 0.00078...</msg>
<status status="PASS" starttime="20201029 18:15:26.637" endtime="20201029 18:15:26.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.645" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:26.644" endtime="20201029 18:15:26.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.647" level="INFO">VALUE: [0.0007825829999999999, 0.0007825140000000015, 0.0007825410000000012, 0.0007827779999999979, 0.000782513000000002, 0.0007826670000000008, 0.0007825969999999995, 0.0007826670000000008, 0.0007826530000000012, 0.0007827359999999992, 0.0007824579999999998, 0.0007825699999999998, 0.0007825699999999998, 0.0007826810000000003, 0.0007825279999999976, 0.0007825559999999968, 0.0007827499999999987, 0.0007824859999999989, 0.0007825419999999972, 0.0007826949999999999, 0.0007825559999999968, 0.0007827219999999996, 0.0007826250000000021, 0.0007825830000000034, 0.0007826949999999999, 0.0007827359999999992, 0.0007827629999999988, 0.0007826940000000004, 0.0007825129999999986, 0.0007826530000000012, 0.0007825829999999964, 0.0007826800000000009, 0.0007825699999999963, 0.0007823189999999966, 0.0007825560000000037, 0.0007825980000000024, 0.0007826380000000022, 0.0007824589999999992, 0.0007825419999999972, 0.0007826660000000013, 0.0007827780000000048, 0.0007826810000000003, 0.0007827499999999987, 0.0007825699999999963, 0.0007825559999999968, 0.0007826520000000017, 0.0007826390000000016, 0.0007826810000000003, 0.0007825559999999968, 0.0007825550000000042]</msg>
<status status="PASS" starttime="20201029 18:15:26.646" endtime="20201029 18:15:26.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.641" endtime="20201029 18:15:26.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.232" endtime="20201029 18:15:26.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.209" endtime="20201029 18:15:26.653"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.655" endtime="20201029 18:15:26.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.654" endtime="20201029 18:15:26.675"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.683" endtime="20201029 18:15:26.737"></status>
</kw>
<msg timestamp="20201029 18:15:26.737" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.682" endtime="20201029 18:15:26.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.740" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.738" endtime="20201029 18:15:26.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.741" endtime="20201029 18:15:26.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.679" endtime="20201029 18:15:26.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.677" endtime="20201029 18:15:26.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.751" endtime="20201029 18:15:27.037"></status>
</kw>
<msg timestamp="20201029 18:15:27.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017076097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.749" endtime="20201029 18:15:27.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017076097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.041" endtime="20201029 18:15:27.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.049" endtime="20201029 18:15:27.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.747" endtime="20201029 18:15:27.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.745" endtime="20201029 18:15:27.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:27.056" level="INFO">${PHILIP_RES} = [{'diff': 0.0008202220000000024}, {'diff': 0.0008202499999999981}, {'diff': 0.0008201810000000032}, {'diff': 0.0008202920000000002}, {'diff': 0.000820346999999999}, {'diff': 0.0008203059999999998}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:27.052" endtime="20201029 18:15:27.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.059" level="INFO">${RESULT} = {'diff': [0.0008202220000000024, 0.0008202499999999981, 0.0008201810000000032, 0.0008202920000000002, 0.000820346999999999, 0.0008203059999999998, 0.0008204030000000008, 0.0008200980000000017, 0.00082...</msg>
<status status="PASS" starttime="20201029 18:15:27.056" endtime="20201029 18:15:27.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.064" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:27.063" endtime="20201029 18:15:27.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.066" level="INFO">VALUE: [0.0008202220000000024, 0.0008202499999999981, 0.0008201810000000032, 0.0008202920000000002, 0.000820346999999999, 0.0008203059999999998, 0.0008204030000000008, 0.0008200980000000017, 0.0008202920000000002, 0.0008202359999999985, 0.000820236999999998, 0.000820236999999998, 0.0008202079999999994, 0.0008201250000000014, 0.0008204160000000009, 0.0008202499999999981, 0.0008204309999999999, 0.0008202910000000008, 0.0008201390000000044, 0.0008201799999999967, 0.000820236000000002, 0.0008202780000000007, 0.0008202499999999946, 0.0008202640000000011, 0.0008203749999999982, 0.0008202920000000002, 0.0008203480000000055, 0.0008203749999999982, 0.000820236000000002, 0.0008201939999999963, 0.0008202920000000002, 0.0008203479999999985, 0.0008201799999999967, 0.000820346999999999, 0.0008202230000000019, 0.000820236000000002, 0.0008201659999999972, 0.0008204440000000035, 0.0008202220000000024, 0.0008201809999999962, 0.0008204029999999973, 0.0008204440000000035, 0.0008201249999999979, 0.0008201939999999963, 0.0008202780000000007, 0.0008202770000000012, 0.0008202769999999943, 0.000820347000000006, 0.0008202920000000002, 0.0008202500000000015]</msg>
<status status="PASS" starttime="20201029 18:15:27.065" endtime="20201029 18:15:27.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.060" endtime="20201029 18:15:27.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.676" endtime="20201029 18:15:27.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.653" endtime="20201029 18:15:27.069"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.071" endtime="20201029 18:15:27.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.070" endtime="20201029 18:15:27.091"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.100" endtime="20201029 18:15:27.154"></status>
</kw>
<msg timestamp="20201029 18:15:27.155" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.098" endtime="20201029 18:15:27.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.157" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.156" endtime="20201029 18:15:27.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.158" endtime="20201029 18:15:27.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.096" endtime="20201029 18:15:27.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.094" endtime="20201029 18:15:27.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.168" endtime="20201029 18:15:27.468"></status>
</kw>
<msg timestamp="20201029 18:15:27.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017967153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018825958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.166" endtime="20201029 18:15:27.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017967153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018825958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.472" endtime="20201029 18:15:27.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.480" endtime="20201029 18:15:27.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.163" endtime="20201029 18:15:27.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.162" endtime="20201029 18:15:27.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:27.487" level="INFO">${PHILIP_RES} = [{'diff': 0.0008588050000000007}, {'diff': 0.0008590549999999975}, {'diff': 0.0008590000000000021}, {'diff': 0.0008589159999999978}, {'diff': 0.0008589730000000025}, {'diff': 0.0008590969999999996}, {...</msg>
<status status="PASS" starttime="20201029 18:15:27.484" endtime="20201029 18:15:27.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.492" level="INFO">${RESULT} = {'diff': [0.0008588050000000007, 0.0008590549999999975, 0.0008590000000000021, 0.0008589159999999978, 0.0008589730000000025, 0.0008590969999999996, 0.0008590969999999996, 0.0008590690000000005, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:15:27.488" endtime="20201029 18:15:27.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.497" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:27.495" endtime="20201029 18:15:27.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.499" level="INFO">VALUE: [0.0008588050000000007, 0.0008590549999999975, 0.0008590000000000021, 0.0008589159999999978, 0.0008589730000000025, 0.0008590969999999996, 0.0008590969999999996, 0.0008590690000000005, 0.0008590560000000004, 0.0008592089999999997, 0.0008590690000000005, 0.0008590970000000031, 0.0008593060000000007, 0.000858875000000002, 0.0008592360000000028, 0.0008592359999999993, 0.0008593189999999973, 0.0008591379999999954, 0.0008592359999999993, 0.0008592219999999998, 0.000859167000000001, 0.0008590550000000044, 0.0008591250000000022, 0.0008590420000000043, 0.0008590970000000031, 0.0008592359999999993, 0.0008590700000000034, 0.0008591250000000022, 0.0008588049999999972, 0.0008591530000000014, 0.0008592359999999993, 0.0008590560000000039, 0.0008590699999999965, 0.0008590140000000052, 0.0008589449999999998, 0.0008590550000000044, 0.000859069000000004, 0.0008591950000000001, 0.0008592089999999997, 0.0008589999999999987, 0.0008590699999999965, 0.0008590830000000035, 0.0008590269999999983, 0.0008589869999999986, 0.0008591249999999953, 0.0008591660000000015, 0.0008591380000000023, 0.0008590830000000035, 0.000859084000000003, 0.0008592639999999985]</msg>
<status status="PASS" starttime="20201029 18:15:27.498" endtime="20201029 18:15:27.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.493" endtime="20201029 18:15:27.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.092" endtime="20201029 18:15:27.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.069" endtime="20201029 18:15:27.501"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.503" endtime="20201029 18:15:27.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.502" endtime="20201029 18:15:27.524"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.532" endtime="20201029 18:15:27.591"></status>
</kw>
<msg timestamp="20201029 18:15:27.591" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.530" endtime="20201029 18:15:27.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.594" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.592" endtime="20201029 18:15:27.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.595" endtime="20201029 18:15:27.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.528" endtime="20201029 18:15:27.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.526" endtime="20201029 18:15:27.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.605" endtime="20201029 18:15:27.891"></status>
</kw>
<msg timestamp="20201029 18:15:27.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018731472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.603" endtime="20201029 18:15:27.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017832611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018731472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.896" endtime="20201029 18:15:27.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.904" endtime="20201029 18:15:27.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.600" endtime="20201029 18:15:27.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.599" endtime="20201029 18:15:27.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:27.911" level="INFO">${PHILIP_RES} = [{'diff': 0.0008988609999999973}, {'diff': 0.0008991250000000006}, {'diff': 0.0008988330000000017}, {'diff': 0.0008988889999999999}, {'diff': 0.0008987500000000002}, {'diff': 0.0008989589999999978}, {...</msg>
<status status="PASS" starttime="20201029 18:15:27.908" endtime="20201029 18:15:27.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.915" level="INFO">${RESULT} = {'diff': [0.0008988609999999973, 0.0008991250000000006, 0.0008988330000000017, 0.0008988889999999999, 0.0008987500000000002, 0.0008989589999999978, 0.0008989299999999992, 0.0008989169999999991, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:15:27.912" endtime="20201029 18:15:27.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.920" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:27.918" endtime="20201029 18:15:27.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.922" level="INFO">VALUE: [0.0008988609999999973, 0.0008991250000000006, 0.0008988330000000017, 0.0008988889999999999, 0.0008987500000000002, 0.0008989589999999978, 0.0008989299999999992, 0.0008989169999999991, 0.0008988610000000008, 0.0008989449999999982, 0.0008990000000000005, 0.0008989859999999975, 0.0008987639999999998, 0.0008989440000000022, 0.0008990699999999949, 0.0008989439999999987, 0.0008989729999999974, 0.0008989590000000047, 0.0008990559999999953, 0.0008988750000000004, 0.0008988750000000004, 0.000899098000000001, 0.0008989029999999995, 0.0008989169999999991, 0.0008988470000000012, 0.0008989030000000064, 0.0008989440000000057, 0.0008988620000000003, 0.0008989299999999992, 0.000898597000000001, 0.0008988750000000004, 0.0008990419999999957, 0.0008991390000000002, 0.0008988880000000005, 0.0008986659999999994, 0.0008989309999999986, 0.000899208999999998, 0.0008992080000000055, 0.0008991809999999989, 0.0008992359999999977, 0.0008990830000000019, 0.0008989859999999975, 0.0008991669999999993, 0.0008992229999999976, 0.000899193999999999, 0.0008993749999999939, 0.0008992079999999986, 0.0008993190000000095, 0.0008991389999999932, 0.0008993470000000087]</msg>
<status status="PASS" starttime="20201029 18:15:27.921" endtime="20201029 18:15:27.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.916" endtime="20201029 18:15:27.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.524" endtime="20201029 18:15:27.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.501" endtime="20201029 18:15:27.924"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.927" endtime="20201029 18:15:27.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.925" endtime="20201029 18:15:27.947"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.955" endtime="20201029 18:15:28.018"></status>
</kw>
<msg timestamp="20201029 18:15:28.018" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.954" endtime="20201029 18:15:28.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.021" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.019" endtime="20201029 18:15:28.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.022" endtime="20201029 18:15:28.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.951" endtime="20201029 18:15:28.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.949" endtime="20201029 18:15:28.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.032" endtime="20201029 18:15:28.340"></status>
</kw>
<msg timestamp="20201029 18:15:28.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.031" endtime="20201029 18:15:28.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.344" endtime="20201029 18:15:28.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.352" endtime="20201029 18:15:28.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.028" endtime="20201029 18:15:28.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.026" endtime="20201029 18:15:28.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:28.359" level="INFO">${PHILIP_RES} = [{'diff': 0.0009394170000000014}, {'diff': 0.0009395139999999989}, {'diff': 0.0009395840000000003}, {'diff': 0.0009395279999999985}, {'diff': 0.0009397079999999974}, {'diff': 0.0009394859999999998}, {...</msg>
<status status="PASS" starttime="20201029 18:15:28.356" endtime="20201029 18:15:28.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.363" level="INFO">${RESULT} = {'diff': [0.0009394170000000014, 0.0009395139999999989, 0.0009395840000000003, 0.0009395279999999985, 0.0009397079999999974, 0.0009394859999999998, 0.0009396950000000008, 0.0009396939999999979, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:15:28.360" endtime="20201029 18:15:28.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.368" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:28.366" endtime="20201029 18:15:28.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.370" level="INFO">VALUE: [0.0009394170000000014, 0.0009395139999999989, 0.0009395840000000003, 0.0009395279999999985, 0.0009397079999999974, 0.0009394859999999998, 0.0009396950000000008, 0.0009396939999999979, 0.0009399030000000023, 0.0009397920000000018, 0.0009396529999999986, 0.000939639000000006, 0.0009397359999999966, 0.0009396389999999991, 0.0009395830000000008, 0.0009395970000000003, 0.0009397359999999966, 0.000939445000000004, 0.0009395139999999955, 0.0009396249999999995, 0.0009394159999999985, 0.0009396949999999973, 0.0009398749999999997, 0.0009395409999999951, 0.0009395979999999998, 0.0009395690000000012, 0.000939721999999997, 0.0009393609999999997, 0.0009395000000000028, 0.0009395140000000024, 0.0009396389999999991, 0.0009395829999999938, 0.0009397079999999974, 0.0009393889999999988, 0.0009395830000000008, 0.0009396389999999991, 0.0009396389999999991, 0.0009395550000000016, 0.0009395550000000016, 0.0009398749999999997, 0.0009396249999999925, 0.000939639000000006, 0.0009395970000000003, 0.0009394310000000045, 0.0009394299999999911, 0.0009395690000000012, 0.0009396530000000125, 0.0009397079999999974, 0.0009397909999999954, 0.0009397220000000039]</msg>
<status status="PASS" starttime="20201029 18:15:28.369" endtime="20201029 18:15:28.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.364" endtime="20201029 18:15:28.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.947" endtime="20201029 18:15:28.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.924" endtime="20201029 18:15:28.373"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.375" endtime="20201029 18:15:28.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.374" endtime="20201029 18:15:28.395"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.404" endtime="20201029 18:15:28.470"></status>
</kw>
<msg timestamp="20201029 18:15:28.470" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.402" endtime="20201029 18:15:28.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.473" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.471" endtime="20201029 18:15:28.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.474" endtime="20201029 18:15:28.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.400" endtime="20201029 18:15:28.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.398" endtime="20201029 18:15:28.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.483" endtime="20201029 18:15:28.770"></status>
</kw>
<msg timestamp="20201029 18:15:28.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021148319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.482" endtime="20201029 18:15:28.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021148319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.774" endtime="20201029 18:15:28.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.782" endtime="20201029 18:15:28.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.479" endtime="20201029 18:15:28.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.477" endtime="20201029 18:15:28.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:28.789" level="INFO">${PHILIP_RES} = [{'diff': 0.0009810129999999993}, {'diff': 0.0009811249999999994}, {'diff': 0.0009812090000000002}, {'diff': 0.0009810140000000023}, {'diff': 0.0009809169999999978}, {'diff': 0.0009810700000000006}, {...</msg>
<status status="PASS" starttime="20201029 18:15:28.786" endtime="20201029 18:15:28.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.794" level="INFO">${RESULT} = {'diff': [0.0009810129999999993, 0.0009811249999999994, 0.0009812090000000002, 0.0009810140000000023, 0.0009809169999999978, 0.0009810700000000006, 0.000980972, 0.0009808190000000008, 0.000980972, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:28.790" endtime="20201029 18:15:28.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.799" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:28.798" endtime="20201029 18:15:28.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.801" level="INFO">VALUE: [0.0009810129999999993, 0.0009811249999999994, 0.0009812090000000002, 0.0009810140000000023, 0.0009809169999999978, 0.0009810700000000006, 0.000980972, 0.0009808190000000008, 0.000980972, 0.0009808339999999999, 0.0009809029999999982, 0.0009807920000000012, 0.0009809860000000031, 0.0009807090000000032, 0.0009810000000000027, 0.0009808749999999991, 0.0009809160000000053, 0.0009810000000000027, 0.000981027999999995, 0.0009810130000000028, 0.0009810000000000027, 0.000980958000000004, 0.0009809310000000043, 0.0009811529999999985, 0.0009809860000000031, 0.0009808749999999991, 0.0009808200000000003, 0.000981056000000001, 0.0009809860000000031, 0.0009809439999999975, 0.0009810000000000027, 0.0009809020000000057, 0.0009809860000000031, 0.000980847, 0.000981041000000002, 0.000980958000000004, 0.000980957999999997, 0.0009810830000000006, 0.0009810830000000006, 0.0009810280000000018, 0.0009809999999999958, 0.0009811109999999928, 0.0009810979999999997, 0.0009809859999999893, 0.0009808330000000004, 0.0009809450000000108, 0.0009808189999999939, 0.0009807780000000016, 0.000980958000000004, 0.000981278000000002]</msg>
<status status="PASS" starttime="20201029 18:15:28.800" endtime="20201029 18:15:28.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.795" endtime="20201029 18:15:28.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.396" endtime="20201029 18:15:28.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.373" endtime="20201029 18:15:28.803"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.806" endtime="20201029 18:15:28.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.804" endtime="20201029 18:15:28.826"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.834" endtime="20201029 18:15:28.904"></status>
</kw>
<msg timestamp="20201029 18:15:28.905" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.833" endtime="20201029 18:15:28.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.910" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.907" endtime="20201029 18:15:28.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.913" endtime="20201029 18:15:28.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.830" endtime="20201029 18:15:28.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.828" endtime="20201029 18:15:28.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.933" endtime="20201029 18:15:29.231"></status>
</kw>
<msg timestamp="20201029 18:15:29.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:28.930" endtime="20201029 18:15:29.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:29.235" endtime="20201029 18:15:29.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.244" endtime="20201029 18:15:29.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.924" endtime="20201029 18:15:29.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.920" endtime="20201029 18:15:29.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:29.251" level="INFO">${PHILIP_RES} = [{'diff': 0.0010236529999999994}, {'diff': 0.0010237220000000012}, {'diff': 0.0010235980000000006}, {'diff': 0.0010236389999999998}, {'diff': 0.0010237779999999995}, {'diff': 0.0010237220000000012}, {...</msg>
<status status="PASS" starttime="20201029 18:15:29.247" endtime="20201029 18:15:29.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.255" level="INFO">${RESULT} = {'diff': [0.0010236529999999994, 0.0010237220000000012, 0.0010235980000000006, 0.0010236389999999998, 0.0010237779999999995, 0.0010237220000000012, 0.001023764, 0.001023861000000001, 0.001023820000000...</msg>
<status status="PASS" starttime="20201029 18:15:29.252" endtime="20201029 18:15:29.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.259" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:29.258" endtime="20201029 18:15:29.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.262" level="INFO">VALUE: [0.0010236529999999994, 0.0010237220000000012, 0.0010235980000000006, 0.0010236389999999998, 0.0010237779999999995, 0.0010237220000000012, 0.001023764, 0.001023861000000001, 0.0010238200000000017, 0.001023889, 0.0010239860000000045, 0.0010238750000000005, 0.0010235830000000015, 0.001023971999999998, 0.0010238620000000004, 0.0010236809999999985, 0.0010236529999999994, 0.0010235830000000015, 0.0010234029999999991, 0.0010235279999999958, 0.001023473000000004, 0.0010235139999999962, 0.001023666999999999, 0.0010235140000000031, 0.0010234439999999984, 0.0010236389999999998, 0.0010237219999999977, 0.0010237220000000047, 0.0010238199999999947, 0.0010237219999999977, 0.0010239449999999983, 0.0010237920000000025, 0.0010237079999999982, 0.0010236250000000002, 0.0010236110000000007, 0.0010237919999999956, 0.0010238750000000005, 0.0010239029999999927, 0.0010237079999999982, 0.0010238620000000004, 0.0010239860000000045, 0.0010238340000000012, 0.0010238469999999944, 0.001024070000000002, 0.0010239580000000054, 0.0010238199999999947, 0.0010240279999999963, 0.0010238749999999935, 0.001023806000000002, 0.0010239729999999975]</msg>
<status status="PASS" starttime="20201029 18:15:29.260" endtime="20201029 18:15:29.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.256" endtime="20201029 18:15:29.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.826" endtime="20201029 18:15:29.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.804" endtime="20201029 18:15:29.264"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.266" endtime="20201029 18:15:29.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.265" endtime="20201029 18:15:29.286"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.295" endtime="20201029 18:15:29.360"></status>
</kw>
<msg timestamp="20201029 18:15:29.360" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.293" endtime="20201029 18:15:29.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.363" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.361" endtime="20201029 18:15:29.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.364" endtime="20201029 18:15:29.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.291" endtime="20201029 18:15:29.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.289" endtime="20201029 18:15:29.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.375" endtime="20201029 18:15:29.661"></status>
</kw>
<msg timestamp="20201029 18:15:29.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.373" endtime="20201029 18:15:29.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.665" endtime="20201029 18:15:29.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.674" endtime="20201029 18:15:29.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.370" endtime="20201029 18:15:29.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.368" endtime="20201029 18:15:29.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:29.680" level="INFO">${PHILIP_RES} = [{'diff': 0.0010667359999999987}, {'diff': 0.0010667640000000013}, {'diff': 0.0010669310000000001}, {'diff': 0.0010667920000000004}, {'diff': 0.0010668750000000018}, {'diff': 0.0010669719999999994}, {...</msg>
<status status="PASS" starttime="20201029 18:15:29.677" endtime="20201029 18:15:29.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.685" level="INFO">${RESULT} = {'diff': [0.0010667359999999987, 0.0010667640000000013, 0.0010669310000000001, 0.0010667920000000004, 0.0010668750000000018, 0.0010669719999999994, 0.0010668609999999988, 0.0010669719999999994, 0.0010...</msg>
<status status="PASS" starttime="20201029 18:15:29.681" endtime="20201029 18:15:29.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.689" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:29.688" endtime="20201029 18:15:29.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.691" level="INFO">VALUE: [0.0010667359999999987, 0.0010667640000000013, 0.0010669310000000001, 0.0010667920000000004, 0.0010668750000000018, 0.0010669719999999994, 0.0010668609999999988, 0.0010669719999999994, 0.0010669579999999998, 0.0010667909999999975, 0.001066611000000002, 0.0010666530000000007, 0.0010668619999999948, 0.0010667499999999983, 0.001066709000000006, 0.0010667359999999987, 0.0010668059999999965, 0.0010665969999999955, 0.0010668889999999945, 0.0010666670000000003, 0.0010667780000000043, 0.0010667079999999995, 0.0010666670000000003, 0.0010667639999999978, 0.0010668750000000018, 0.0010668470000000027, 0.0010668890000000014, 0.0010668470000000027, 0.0010666809999999999, 0.0010669999999999985, 0.0010668189999999966, 0.0010668609999999953, 0.0010665689999999964, 0.0010671379999999953, 0.0010672639999999983, 0.0010673750000000023, 0.001067083999999996, 0.001067125000000002, 0.0010670690000000038, 0.0010669719999999994, 0.0010669589999999923, 0.0010670549999999973, 0.0010671109999999956, 0.001067014000000005, 0.0010672780000000048, 0.0010671950000000069, 0.0010671389999999947, 0.001066888000000002, 0.001067125000000002, 0.001067194999999993]</msg>
<status status="PASS" starttime="20201029 18:15:29.690" endtime="20201029 18:15:29.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.685" endtime="20201029 18:15:29.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.287" endtime="20201029 18:15:29.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.264" endtime="20201029 18:15:29.694"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.697" endtime="20201029 18:15:29.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.695" endtime="20201029 18:15:29.717"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.726" endtime="20201029 18:15:29.796"></status>
</kw>
<msg timestamp="20201029 18:15:29.797" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.724" endtime="20201029 18:15:29.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.800" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.798" endtime="20201029 18:15:29.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.801" endtime="20201029 18:15:29.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.721" endtime="20201029 18:15:29.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.719" endtime="20201029 18:15:29.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.810" endtime="20201029 18:15:30.096"></status>
</kw>
<msg timestamp="20201029 18:15:30.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019868722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020980097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.809" endtime="20201029 18:15:30.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019868722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020980097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.100" endtime="20201029 18:15:30.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.108" endtime="20201029 18:15:30.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.806" endtime="20201029 18:15:30.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.804" endtime="20201029 18:15:30.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:30.115" level="INFO">${PHILIP_RES} = [{'diff': 0.0011113750000000013}, {'diff': 0.001111499999999998}, {'diff': 0.0011112919999999998}, {'diff': 0.0011112919999999998}, {'diff': 0.0011111110000000014}, {'diff': 0.001111415999999997}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:30.112" endtime="20201029 18:15:30.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.120" level="INFO">${RESULT} = {'diff': [0.0011113750000000013, 0.001111499999999998, 0.0011112919999999998, 0.0011112919999999998, 0.0011111110000000014, 0.001111415999999997, 0.0011112780000000003, 0.0011114030000000004, 0.001111...</msg>
<status status="PASS" starttime="20201029 18:15:30.116" endtime="20201029 18:15:30.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.125" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:30.124" endtime="20201029 18:15:30.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.127" level="INFO">VALUE: [0.0011113750000000013, 0.001111499999999998, 0.0011112919999999998, 0.0011112919999999998, 0.0011111110000000014, 0.001111415999999997, 0.0011112780000000003, 0.0011114030000000004, 0.0011114579999999992, 0.0011114439999999996, 0.0011114169999999965, 0.0011111940000000028, 0.0011113469999999986, 0.001111193999999996, 0.0011112359999999946, 0.0011112080000000024, 0.0011113189999999995, 0.0011112919999999998, 0.0011112500000000011, 0.0011113609999999982, 0.0011114580000000027, 0.0011114300000000035, 0.001111221999999995, 0.0011111800000000033, 0.0011109720000000017, 0.0011114859999999949, 0.0011113880000000048, 0.0011112780000000003, 0.001111416000000004, 0.0011115000000000014, 0.0011112919999999998, 0.0011114300000000035, 0.0011111530000000036, 0.0011113469999999986, 0.0011113749999999978, 0.0011112230000000015, 0.0011114729999999948, 0.0011112640000000007, 0.0011111250000000045, 0.001111222000000009, 0.0011111670000000101, 0.0011112090000000019, 0.0011113189999999995, 0.0011113890000000043, 0.0011115829999999993, 0.001111221999999995, 0.001111237000000001, 0.0011110690000000062, 0.001111041000000007, 0.0011114170000000034]</msg>
<status status="PASS" starttime="20201029 18:15:30.126" endtime="20201029 18:15:30.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.121" endtime="20201029 18:15:30.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.718" endtime="20201029 18:15:30.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.695" endtime="20201029 18:15:30.129"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.132" endtime="20201029 18:15:30.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.130" endtime="20201029 18:15:30.152"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.161" endtime="20201029 18:15:30.234"></status>
</kw>
<msg timestamp="20201029 18:15:30.235" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.159" endtime="20201029 18:15:30.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.237" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.236" endtime="20201029 18:15:30.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.238" endtime="20201029 18:15:30.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.156" endtime="20201029 18:15:30.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.154" endtime="20201029 18:15:30.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.248" endtime="20201029 18:15:30.565"></status>
</kw>
<msg timestamp="20201029 18:15:30.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.246" endtime="20201029 18:15:30.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.569" endtime="20201029 18:15:30.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.577" endtime="20201029 18:15:30.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.244" endtime="20201029 18:15:30.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.242" endtime="20201029 18:15:30.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:30.583" level="INFO">${PHILIP_RES} = [{'diff': 0.001155444999999998}, {'diff': 0.0011555969999999978}, {'diff': 0.0011559299999999995}, {'diff': 0.0011558750000000007}, {'diff': 0.0011559169999999994}, {'diff': 0.0011557779999999997}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:30.580" endtime="20201029 18:15:30.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.587" level="INFO">${RESULT} = {'diff': [0.001155444999999998, 0.0011555969999999978, 0.0011559299999999995, 0.0011558750000000007, 0.0011559169999999994, 0.0011557779999999997, 0.001155736000000001, 0.001155958000000002, 0.0011557...</msg>
<status status="PASS" starttime="20201029 18:15:30.584" endtime="20201029 18:15:30.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.592" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:30.591" endtime="20201029 18:15:30.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.594" level="INFO">VALUE: [0.001155444999999998, 0.0011555969999999978, 0.0011559299999999995, 0.0011558750000000007, 0.0011559169999999994, 0.0011557779999999997, 0.001155736000000001, 0.001155958000000002, 0.001155749999999997, 0.0011558609999999941, 0.0011556250000000004, 0.0011555419999999955, 0.0011556250000000004, 0.0011557909999999963, 0.0011555970000000013, 0.0011557089999999978, 0.0011559029999999998, 0.0011558340000000014, 0.0011558890000000002, 0.001155819999999995, 0.0011557080000000053, 0.0011556669999999991, 0.001155750000000004, 0.0011555690000000021, 0.001155652, 0.001155639, 0.0011555690000000021, 0.0011556939999999988, 0.0011560139999999969, 0.0011562089999999983, 0.0011561940000000062, 0.0011561390000000005, 0.0011560559999999956, 0.0011562219999999984, 0.0011561250000000078, 0.0011560560000000025, 0.0011561110000000013, 0.0011561250000000078, 0.0011562779999999967, 0.0011562089999999914, 0.001156124999999994, 0.0011562080000000058, 0.0011562780000000106, 0.0011562499999999976, 0.0011562910000000037, 0.0011562629999999907, 0.0011560969999999948, 0.0011561809999999922, 0.001156152999999993, 0.0011560139999999969]</msg>
<status status="PASS" starttime="20201029 18:15:30.593" endtime="20201029 18:15:30.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.588" endtime="20201029 18:15:30.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.153" endtime="20201029 18:15:30.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.130" endtime="20201029 18:15:30.596"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.598" endtime="20201029 18:15:30.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.597" endtime="20201029 18:15:30.618"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.626" endtime="20201029 18:15:30.701"></status>
</kw>
<msg timestamp="20201029 18:15:30.701" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.625" endtime="20201029 18:15:30.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.704" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.702" endtime="20201029 18:15:30.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.705" endtime="20201029 18:15:30.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.622" endtime="20201029 18:15:30.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.620" endtime="20201029 18:15:30.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.715" endtime="20201029 18:15:31.000"></status>
</kw>
<msg timestamp="20201029 18:15:31.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017884181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019085861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.713" endtime="20201029 18:15:31.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017884181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019085861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.004" endtime="20201029 18:15:31.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.012" endtime="20201029 18:15:31.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.710" endtime="20201029 18:15:31.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.709" endtime="20201029 18:15:31.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:31.019" level="INFO">${PHILIP_RES} = [{'diff': 0.0012016800000000001}, {'diff': 0.0012016249999999978}, {'diff': 0.0012016530000000004}, {'diff': 0.0012017780000000006}, {'diff': 0.0012015830000000026}, {'diff': 0.0012017220000000023}, {...</msg>
<status status="PASS" starttime="20201029 18:15:31.016" endtime="20201029 18:15:31.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.023" level="INFO">${RESULT} = {'diff': [0.0012016800000000001, 0.0012016249999999978, 0.0012016530000000004, 0.0012017780000000006, 0.0012015830000000026, 0.0012017220000000023, 0.0012015970000000022, 0.0012017370000000013, 0.0012...</msg>
<status status="PASS" starttime="20201029 18:15:31.020" endtime="20201029 18:15:31.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.027" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:31.026" endtime="20201029 18:15:31.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.029" level="INFO">VALUE: [0.0012016800000000001, 0.0012016249999999978, 0.0012016530000000004, 0.0012017780000000006, 0.0012015830000000026, 0.0012017220000000023, 0.0012015970000000022, 0.0012017370000000013, 0.001201874999999998, 0.001201681000000003, 0.0012015689999999996, 0.0012014999999999942, 0.0012015970000000056, 0.0012014860000000016, 0.0012015000000000012, 0.0012016949999999957, 0.001201569999999999, 0.001201652999999997, 0.001201555, 0.0012014170000000032, 0.0012015689999999996, 0.0012014299999999964, 0.0012016249999999978, 0.0012016670000000035, 0.0012015689999999996, 0.0012016669999999965, 0.0012016800000000036, 0.0012355420000000061, 0.0012016519999999975, 0.001201569999999999, 0.0012015689999999996, 0.0012015559999999995, 0.001201569999999999, 0.0012016520000000044, 0.0012015829999999991, 0.001201472000000009, 0.0012015560000000064, 0.0012018059999999997, 0.0012017079999999958, 0.001201583000000006, 0.001201763999999994, 0.0012013750000000045, 0.0012015000000000081, 0.001201583000000006, 0.0012016119999999908, 0.0012016250000000117, 0.0012016250000000117, 0.0012015000000000081, 0.0012017500000000014, 0.0012014300000000033]</msg>
<status status="PASS" starttime="20201029 18:15:31.028" endtime="20201029 18:15:31.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.024" endtime="20201029 18:15:31.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.619" endtime="20201029 18:15:31.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.596" endtime="20201029 18:15:31.032"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.034" endtime="20201029 18:15:31.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.033" endtime="20201029 18:15:31.054"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.062" endtime="20201029 18:15:31.138"></status>
</kw>
<msg timestamp="20201029 18:15:31.139" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.061" endtime="20201029 18:15:31.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.141" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.140" endtime="20201029 18:15:31.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.142" endtime="20201029 18:15:31.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.058" endtime="20201029 18:15:31.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.056" endtime="20201029 18:15:31.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.152" endtime="20201029 18:15:31.458"></status>
</kw>
<msg timestamp="20201029 18:15:31.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.150" endtime="20201029 18:15:31.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.463" endtime="20201029 18:15:31.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.471" endtime="20201029 18:15:31.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.147" endtime="20201029 18:15:31.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.146" endtime="20201029 18:15:31.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:31.477" level="INFO">${PHILIP_RES} = [{'diff': 0.0012487090000000006}, {'diff': 0.0012489860000000005}, {'diff': 0.0012491800000000025}, {'diff': 0.0012488610000000004}, {'diff': 0.0012488049999999987}, {'diff': 0.001248665999999999}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:31.474" endtime="20201029 18:15:31.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.482" level="INFO">${RESULT} = {'diff': [0.0012487090000000006, 0.0012489860000000005, 0.0012491800000000025, 0.0012488610000000004, 0.0012488049999999987, 0.001248665999999999, 0.0012488889999999996, 0.0012488610000000004, 0.00124...</msg>
<status status="PASS" starttime="20201029 18:15:31.478" endtime="20201029 18:15:31.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.486" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:31.485" endtime="20201029 18:15:31.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.489" level="INFO">VALUE: [0.0012487090000000006, 0.0012489860000000005, 0.0012491800000000025, 0.0012488610000000004, 0.0012488049999999987, 0.001248665999999999, 0.0012488889999999996, 0.0012488610000000004, 0.0012488889999999996, 0.0012488200000000012, 0.001248972000000001, 0.0012486390000000028, 0.0012487499999999999, 0.001248987, 0.001248889000000003, 0.0012490279999999992, 0.0012488879999999966, 0.0012489450000000013, 0.0012490969999999976, 0.0012490559999999984, 0.001248790999999999, 0.0012489440000000018, 0.0012487220000000007, 0.0012487220000000007, 0.0012489160000000027, 0.0012489300000000023, 0.0012485140000000061, 0.001248680000000002, 0.0012490279999999992, 0.0012489020000000031, 0.0012488049999999987, 0.0012487499999999999, 0.001248972000000001, 0.0012488340000000042, 0.0012488750000000104, 0.0012489440000000018, 0.0012488189999999982, 0.0012487080000000012, 0.0012488470000000113, 0.0012487639999999994, 0.0012487639999999994, 0.0012489029999999957, 0.001248889000000003, 0.0012489030000000095, 0.0012488189999999982, 0.0012489440000000018, 0.0012489450000000013, 0.0012486530000000023, 0.0012488470000000113, 0.0012488469999999974]</msg>
<status status="PASS" starttime="20201029 18:15:31.487" endtime="20201029 18:15:31.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.483" endtime="20201029 18:15:31.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.055" endtime="20201029 18:15:31.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.032" endtime="20201029 18:15:31.491"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.493" endtime="20201029 18:15:31.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.492" endtime="20201029 18:15:31.513"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.521" endtime="20201029 18:15:31.600"></status>
</kw>
<msg timestamp="20201029 18:15:31.600" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.520" endtime="20201029 18:15:31.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.603" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.602" endtime="20201029 18:15:31.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.604" endtime="20201029 18:15:31.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.517" endtime="20201029 18:15:31.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.515" endtime="20201029 18:15:31.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.613" endtime="20201029 18:15:31.900"></status>
</kw>
<msg timestamp="20201029 18:15:31.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017264194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0185605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:31.612" endtime="20201029 18:15:31.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017264194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0185605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:31.904" endtime="20201029 18:15:31.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.912" endtime="20201029 18:15:31.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.609" endtime="20201029 18:15:31.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.607" endtime="20201029 18:15:31.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:31.919" level="INFO">${PHILIP_RES} = [{'diff': 0.0012963060000000005}, {'diff': 0.0012961670000000008}, {'diff': 0.0012961390000000017}, {'diff': 0.001295985999999999}, {'diff': 0.0012961670000000008}, {'diff': 0.001296110999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:31.916" endtime="20201029 18:15:31.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.923" level="INFO">${RESULT} = {'diff': [0.0012963060000000005, 0.0012961670000000008, 0.0012961390000000017, 0.001295985999999999, 0.0012961670000000008, 0.001296110999999999, 0.0012959579999999998, 0.0012962919999999975, 0.001296...</msg>
<status status="PASS" starttime="20201029 18:15:31.920" endtime="20201029 18:15:31.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.927" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:31.926" endtime="20201029 18:15:31.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.929" level="INFO">VALUE: [0.0012963060000000005, 0.0012961670000000008, 0.0012961390000000017, 0.001295985999999999, 0.0012961670000000008, 0.001296110999999999, 0.0012959579999999998, 0.0012962919999999975, 0.0012962219999999997, 0.0012963190000000006, 0.0012962220000000031, 0.0012959589999999993, 0.0012961250000000021, 0.0012962639999999984, 0.001296195, 0.0012962359999999992, 0.0012962639999999984, 0.0012961530000000013, 0.0012961389999999948, 0.0012961810000000004, 0.0012960560000000038, 0.001296096999999996, 0.0012961109999999956, 0.0012961530000000013, 0.0012961670000000008, 0.0012961110000000026, 0.0012961249999999952, 0.0012959999999999985, 0.0012961530000000013, 0.001295985999999999, 0.0012959589999999993, 0.0012964030000000015, 0.0012963199999999966, 0.0012962360000000062, 0.0012963200000000036, 0.0012961249999999952, 0.001296388999999995, 0.0012962089999999926, 0.0012961110000000026, 0.0012962360000000062, 0.0012962219999999997, 0.0012960699999999964, 0.0012961110000000026, 0.0012959589999999993, 0.001295985999999999, 0.0012959579999999998, 0.0012962499999999988, 0.001296125000000009, 0.0012960409999999978, 0.0012961109999999887]</msg>
<status status="PASS" starttime="20201029 18:15:31.928" endtime="20201029 18:15:31.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.924" endtime="20201029 18:15:31.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.514" endtime="20201029 18:15:31.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.491" endtime="20201029 18:15:31.932"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.934" endtime="20201029 18:15:31.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.933" endtime="20201029 18:15:31.954"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.962" endtime="20201029 18:15:32.045"></status>
</kw>
<msg timestamp="20201029 18:15:32.046" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.961" endtime="20201029 18:15:32.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.051" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.048" endtime="20201029 18:15:32.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.053" endtime="20201029 18:15:32.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.958" endtime="20201029 18:15:32.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.956" endtime="20201029 18:15:32.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.074" endtime="20201029 18:15:32.369"></status>
</kw>
<msg timestamp="20201029 18:15:32.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018469153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.071" endtime="20201029 18:15:32.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018469153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.373" endtime="20201029 18:15:32.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.381" endtime="20201029 18:15:32.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.065" endtime="20201029 18:15:32.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.062" endtime="20201029 18:15:32.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:32.388" level="INFO">${PHILIP_RES} = [{'diff': 0.001344708}, {'diff': 0.0013448889999999984}, {'diff': 0.0013451670000000013}, {'diff': 0.0013449310000000006}, {'diff': 0.0013449720000000033}, {'diff': 0.001344917000000001}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:32.385" endtime="20201029 18:15:32.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.392" level="INFO">${RESULT} = {'diff': [0.001344708, 0.0013448889999999984, 0.0013451670000000013, 0.0013449310000000006, 0.0013449720000000033, 0.001344917000000001, 0.0013449160000000016, 0.0013448190000000006, 0.001344931000000...</msg>
<status status="PASS" starttime="20201029 18:15:32.389" endtime="20201029 18:15:32.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.396" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:32.395" endtime="20201029 18:15:32.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.399" level="INFO">VALUE: [0.001344708, 0.0013448889999999984, 0.0013451670000000013, 0.0013449310000000006, 0.0013449720000000033, 0.001344917000000001, 0.0013449160000000016, 0.0013448190000000006, 0.0013449310000000006, 0.001345222, 0.0013449440000000007, 0.0013449440000000007, 0.0013451249999999956, 0.0013450559999999973, 0.0013450840000000033, 0.001344999999999999, 0.0013449300000000011, 0.0013449589999999997, 0.001344999999999999, 0.0013449310000000006, 0.0013450419999999977, 0.0013448330000000036, 0.0013449580000000003, 0.0013450419999999977, 0.001344902000000002, 0.0013450140000000055, 0.0013448339999999961, 0.0013450270000000056, 0.0013448750000000023, 0.001344834000000003, 0.0013448609999999958, 0.0013450410000000051, 0.0013449450000000002, 0.0013449579999999933, 0.0013451249999999887, 0.0013447229999999921, 0.001344596999999989, 0.0013443060000000034, 0.001344596999999989, 0.0013446530000000012, 0.0013445840000000098, 0.001344431000000007, 0.0013444170000000005, 0.0013443340000000026, 0.0013444170000000005, 0.0013442639999999978, 0.001344110999999995, 0.0013441250000000016, 0.0013442230000000055, 0.0013442770000000048]</msg>
<status status="PASS" starttime="20201029 18:15:32.397" endtime="20201029 18:15:32.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.393" endtime="20201029 18:15:32.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.955" endtime="20201029 18:15:32.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.932" endtime="20201029 18:15:32.401"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.404" endtime="20201029 18:15:32.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.402" endtime="20201029 18:15:32.424"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.432" endtime="20201029 18:15:32.519"></status>
</kw>
<msg timestamp="20201029 18:15:32.520" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.430" endtime="20201029 18:15:32.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.522" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.521" endtime="20201029 18:15:32.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.524" endtime="20201029 18:15:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.428" endtime="20201029 18:15:32.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.426" endtime="20201029 18:15:32.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.533" endtime="20201029 18:15:32.822"></status>
</kw>
<msg timestamp="20201029 18:15:32.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.531" endtime="20201029 18:15:32.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.831" endtime="20201029 18:15:32.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.849" endtime="20201029 18:15:32.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.528" endtime="20201029 18:15:32.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.527" endtime="20201029 18:15:32.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:32.863" level="INFO">${PHILIP_RES} = [{'diff': 0.0013938609999999997}, {'diff': 0.0013937640000000022}, {'diff': 0.0013938330000000006}, {'diff': 0.001393722}, {'diff': 0.0013938890000000023}, {'diff': 0.0013937499999999992}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 18:15:32.856" endtime="20201029 18:15:32.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.873" level="INFO">${RESULT} = {'diff': [0.0013938609999999997, 0.0013937640000000022, 0.0013938330000000006, 0.001393722, 0.0013938890000000023, 0.0013937499999999992, 0.0013937779999999983, 0.001394013999999999, 0.001393847999999...</msg>
<status status="PASS" starttime="20201029 18:15:32.865" endtime="20201029 18:15:32.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.882" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:32.880" endtime="20201029 18:15:32.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.887" level="INFO">VALUE: [0.0013938609999999997, 0.0013937640000000022, 0.0013938330000000006, 0.001393722, 0.0013938890000000023, 0.0013937499999999992, 0.0013937779999999983, 0.001394013999999999, 0.0013938479999999961, 0.0013941660000000022, 0.0013938060000000044, 0.0013941390000000026, 0.0013939999999999994, 0.001393902999999995, 0.0013939440000000011, 0.0013939859999999998, 0.0013940840000000038, 0.0013941390000000026, 0.0013940409999999986, 0.0013940559999999977, 0.0013939030000000019, 0.0013939450000000006, 0.0013938189999999975, 0.0013938749999999958, 0.0013940279999999985, 0.0013939300000000016, 0.0013943060000000049, 0.0013941940000000014, 0.0013941810000000013, 0.0013941529999999952, 0.0013939300000000016, 0.0013939580000000007, 0.0013939449999999937, 0.0013941390000000026, 0.0013941519999999957, 0.0013940700000000111, 0.0013942080000000079, 0.0013941809999999943, 0.0013937779999999983, 0.001393832999999997, 0.001393931000000001, 0.0013940000000000063, 0.001394042000000012, 0.0013940689999999978, 0.0013940829999999904, 0.0013938889999999954, 0.0013941939999999875, 0.0013940000000000063, 0.001393722, 0.0013940419999999981]</msg>
<status status="PASS" starttime="20201029 18:15:32.884" endtime="20201029 18:15:32.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.875" endtime="20201029 18:15:32.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.424" endtime="20201029 18:15:32.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.402" endtime="20201029 18:15:32.891"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.896" endtime="20201029 18:15:32.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.893" endtime="20201029 18:15:32.920"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.930" endtime="20201029 18:15:33.017"></status>
</kw>
<msg timestamp="20201029 18:15:33.018" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.928" endtime="20201029 18:15:33.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.020" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.019" endtime="20201029 18:15:33.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.021" endtime="20201029 18:15:33.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.926" endtime="20201029 18:15:33.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.924" endtime="20201029 18:15:33.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.031" endtime="20201029 18:15:33.318"></status>
</kw>
<msg timestamp="20201029 18:15:33.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025134694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026579097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.029" endtime="20201029 18:15:33.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025134694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026579097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.323" endtime="20201029 18:15:33.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.331" endtime="20201029 18:15:33.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.026" endtime="20201029 18:15:33.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.025" endtime="20201029 18:15:33.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:33.337" level="INFO">${PHILIP_RES} = [{'diff': 0.0014444030000000004}, {'diff': 0.0014441110000000014}, {'diff': 0.0014440689999999992}, {'diff': 0.0014440000000000008}, {'diff': 0.0014440700000000022}, {'diff': 0.0014444300000000035}, {...</msg>
<status status="PASS" starttime="20201029 18:15:33.334" endtime="20201029 18:15:33.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.341" level="INFO">${RESULT} = {'diff': [0.0014444030000000004, 0.0014441110000000014, 0.0014440689999999992, 0.0014440000000000008, 0.0014440700000000022, 0.0014444300000000035, 0.0014443059999999994, 0.001444139000000004, 0.00144...</msg>
<status status="PASS" starttime="20201029 18:15:33.338" endtime="20201029 18:15:33.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.346" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:33.345" endtime="20201029 18:15:33.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.348" level="INFO">VALUE: [0.0014444030000000004, 0.0014441110000000014, 0.0014440689999999992, 0.0014440000000000008, 0.0014440700000000022, 0.0014444300000000035, 0.0014443059999999994, 0.001444139000000004, 0.001444041, 0.001444041, 0.0014441530000000036, 0.0014438889999999968, 0.0014440000000000008, 0.001444139000000004, 0.0014439590000000016, 0.0014441659999999967, 0.0014440829999999988, 0.0014442780000000002, 0.0014441250000000044, 0.001444110999999998, 0.0014443189999999995, 0.0014440549999999996, 0.0014440000000000008, 0.0014440699999999987, 0.001443916999999996, 0.0014441669999999962, 0.0014440700000000056, 0.0014442360000000015, 0.0014441800000000032, 0.0014443469999999986, 0.0014442359999999876, 0.0014442919999999998, 0.0014441530000000036, 0.0014440559999999991, 0.0014442780000000072, 0.0014441530000000036, 0.00144441599999999, 0.0014443050000000068, 0.0014443050000000068, 0.0014441530000000036, 0.0014439859999999943, 0.0014441810000000027, 0.0014440970000000053, 0.0014442359999999876, 0.0014441810000000027, 0.0014443749999999977, 0.0014444719999999883, 0.0014443610000000051, 0.0014442079999999885, 0.0014442220000000089]</msg>
<status status="PASS" starttime="20201029 18:15:33.347" endtime="20201029 18:15:33.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.342" endtime="20201029 18:15:33.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.921" endtime="20201029 18:15:33.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.892" endtime="20201029 18:15:33.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.721" endtime="20201029 18:15:33.350"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:11.442" endtime="20201029 18:15:33.351" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:50.388" endtime="20201029 18:15:33.360"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.430" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:33.439" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:34.717" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:33.429" endtime="20201029 18:15:34.717"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.720" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:34.718" endtime="20201029 18:15:34.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.428" endtime="20201029 18:15:34.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.723" endtime="20201029 18:15:34.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.721" endtime="20201029 18:15:34.909"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.922" endtime="20201029 18:15:34.943"></status>
</kw>
<msg timestamp="20201029 18:15:34.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['7)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.921" endtime="20201029 18:15:34.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['7)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.944" endtime="20201029 18:15:34.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.949" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:34.947" endtime="20201029 18:15:34.949"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:34.918" endtime="20201029 18:15:34.950"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:34.916" endtime="20201029 18:15:34.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.915" endtime="20201029 18:15:34.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:34.954" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:34.954" endtime="20201029 18:15:34.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.951" endtime="20201029 18:15:34.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.914" endtime="20201029 18:15:34.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.913" endtime="20201029 18:15:34.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.956" endtime="20201029 18:15:34.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.912" endtime="20201029 18:15:34.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.960" endtime="20201029 18:15:34.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.910" endtime="20201029 18:15:34.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.427" endtime="20201029 18:15:34.964"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.973" endtime="20201029 18:15:34.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.971" endtime="20201029 18:15:34.994"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.009" endtime="20201029 18:15:35.029"></status>
</kw>
<msg timestamp="20201029 18:15:35.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.007" endtime="20201029 18:15:35.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.030" endtime="20201029 18:15:35.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.035" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:35.033" endtime="20201029 18:15:35.035"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:35.005" endtime="20201029 18:15:35.036"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:35.002" endtime="20201029 18:15:35.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.001" endtime="20201029 18:15:35.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:35.040" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:35.040" endtime="20201029 18:15:35.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.037" endtime="20201029 18:15:35.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.000" endtime="20201029 18:15:35.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.999" endtime="20201029 18:15:35.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.042" endtime="20201029 18:15:35.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.997" endtime="20201029 18:15:35.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.995" endtime="20201029 18:15:35.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.969" endtime="20201029 18:15:35.045"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.054" endtime="20201029 18:15:35.073"></status>
</kw>
<msg timestamp="20201029 18:15:35.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.053" endtime="20201029 18:15:35.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.075" endtime="20201029 18:15:35.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.077" endtime="20201029 18:15:35.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.050" endtime="20201029 18:15:35.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.048" endtime="20201029 18:15:35.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.086" endtime="20201029 18:15:35.379"></status>
</kw>
<msg timestamp="20201029 18:15:35.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075059319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075065431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.085" endtime="20201029 18:15:35.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075059319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075065431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.384" endtime="20201029 18:15:35.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.392" endtime="20201029 18:15:35.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.082" endtime="20201029 18:15:35.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.080" endtime="20201029 18:15:35.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.399" level="INFO">${RESULT} = [{'diff': 6.11200000000256e-06}, {'diff': 6.124999999995717e-06}, {'diff': 6.08400000000342e-06}, {'diff': 6.124999999995717e-06}, {'diff': 6.05600000000428e-06}, {'diff': 6.083000000003946e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:35.395" endtime="20201029 18:15:35.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.403" level="INFO">${ACCURACY} = {'diff': [6.11200000000256e-06, 6.124999999995717e-06, 6.08400000000342e-06, 6.124999999995717e-06, 6.05600000000428e-06, 6.083000000003946e-06, 6.11200000000256e-06, 6.138999999988348e-06, 6.06899999...</msg>
<status status="PASS" starttime="20201029 18:15:35.400" endtime="20201029 18:15:35.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.408" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.407" endtime="20201029 18:15:35.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.410" level="INFO">VALUE: [6.11200000000256e-06, 6.124999999995717e-06, 6.08400000000342e-06, 6.124999999995717e-06, 6.05600000000428e-06, 6.083000000003946e-06, 6.11200000000256e-06, 6.138999999988348e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.083000000003946e-06, 6.070000000010789e-06, 6.054999999990929e-06, 6.041999999997771e-06, 6.05600000000428e-06, 6.138999999988348e-06, 6.02800000000514e-06, 6.083000000003946e-06, 6.05600000000428e-06, 6.05600000000428e-06, 6.0689999999974376e-06, 6.083000000003946e-06, 6.055999999990402e-06, 6.042000000011649e-06, 6.0550000000048065e-06, 6.05600000000428e-06, 6.0550000000048065e-06, 6.041999999997771e-06, 5.9729999999924566e-06, 6.083000000003946e-06, 6.055999999990402e-06, 6.0550000000048065e-06, 6.041999999997771e-06, 6.0279999999912626e-06, 6.02800000000514e-06, 6.08400000000342e-06, 6.125000000009595e-06, 6.041999999997771e-06, 6.0550000000048065e-06, 6.069000000011315e-06, 6.041999999997771e-06, 6.05600000000428e-06, 6.055999999990402e-06, 6.040999999998298e-06, 6.027000000005667e-06, 6.070000000010789e-06, 6.040999999998298e-06, 6.125000000009595e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201029 18:15:35.409" endtime="20201029 18:15:35.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.404" endtime="20201029 18:15:35.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.415" endtime="20201029 18:15:35.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.413" endtime="20201029 18:15:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.412" endtime="20201029 18:15:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.046" endtime="20201029 18:15:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.046" endtime="20201029 18:15:35.435"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.445" endtime="20201029 18:15:35.460"></status>
</kw>
<msg timestamp="20201029 18:15:35.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.443" endtime="20201029 18:15:35.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.461" endtime="20201029 18:15:35.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.464" endtime="20201029 18:15:35.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.440" endtime="20201029 18:15:35.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.438" endtime="20201029 18:15:35.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.473" endtime="20201029 18:15:35.764"></status>
</kw>
<msg timestamp="20201029 18:15:35.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021087097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.471" endtime="20201029 18:15:35.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021087097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.768" endtime="20201029 18:15:35.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.777" endtime="20201029 18:15:35.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.469" endtime="20201029 18:15:35.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.467" endtime="20201029 18:15:35.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.783" level="INFO">${RESULT} = [{'diff': 6.054999999997868e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.124999999999187e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:35.780" endtime="20201029 18:15:35.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.788" level="INFO">${ACCURACY} = {'diff': [6.054999999997868e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0690...</msg>
<status status="PASS" starttime="20201029 18:15:35.784" endtime="20201029 18:15:35.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.793" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.791" endtime="20201029 18:15:35.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.796" level="INFO">VALUE: [6.054999999997868e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.041999999997771e-06, 5.985999999999492e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.0979999999995205e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.027000000002197e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.040999999998298e-06, 5.986000000002961e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.026999999998728e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.027000000002197e-06]</msg>
<status status="PASS" starttime="20201029 18:15:35.794" endtime="20201029 18:15:35.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.789" endtime="20201029 18:15:35.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.801" endtime="20201029 18:15:35.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.799" endtime="20201029 18:15:35.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.798" endtime="20201029 18:15:35.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.436" endtime="20201029 18:15:35.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.436" endtime="20201029 18:15:35.821"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.830" endtime="20201029 18:15:35.848"></status>
</kw>
<msg timestamp="20201029 18:15:35.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.829" endtime="20201029 18:15:35.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.849" endtime="20201029 18:15:35.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.852" endtime="20201029 18:15:35.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.826" endtime="20201029 18:15:35.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.824" endtime="20201029 18:15:35.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.862" endtime="20201029 18:15:36.167"></status>
</kw>
<msg timestamp="20201029 18:15:36.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.860" endtime="20201029 18:15:36.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.171" endtime="20201029 18:15:36.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.179" endtime="20201029 18:15:36.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.858" endtime="20201029 18:15:36.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.856" endtime="20201029 18:15:36.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.186" level="INFO">${RESULT} = [{'diff': 6.1389999999987566e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.055000000001337e-06}, {'diff': 5.999999999999062e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.041999999997771e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:36.183" endtime="20201029 18:15:36.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.191" level="INFO">${ACCURACY} = {'diff': [6.1389999999987566e-06, 6.070000000000381e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0829999999970075e-06, 6.02...</msg>
<status status="PASS" starttime="20201029 18:15:36.187" endtime="20201029 18:15:36.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.196" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.195" endtime="20201029 18:15:36.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.198" level="INFO">VALUE: [6.1389999999987566e-06, 6.070000000000381e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0829999999970075e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.0279999999982015e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 5.971999999999922e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.0689999999974376e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.041999999997771e-06, 5.999999999999062e-06, 6.070000000000381e-06, 5.985999999999492e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.139000000002226e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201029 18:15:36.197" endtime="20201029 18:15:36.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.192" endtime="20201029 18:15:36.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.203" endtime="20201029 18:15:36.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.201" endtime="20201029 18:15:36.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.200" endtime="20201029 18:15:36.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.822" endtime="20201029 18:15:36.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.822" endtime="20201029 18:15:36.224"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.233" endtime="20201029 18:15:36.249"></status>
</kw>
<msg timestamp="20201029 18:15:36.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.231" endtime="20201029 18:15:36.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.251" endtime="20201029 18:15:36.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.254" endtime="20201029 18:15:36.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.229" endtime="20201029 18:15:36.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.226" endtime="20201029 18:15:36.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.263" endtime="20201029 18:15:36.548"></status>
</kw>
<msg timestamp="20201029 18:15:36.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02160975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:36.261" endtime="20201029 18:15:36.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02160975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:36.553" endtime="20201029 18:15:36.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.561" endtime="20201029 18:15:36.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.259" endtime="20201029 18:15:36.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.257" endtime="20201029 18:15:36.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.568" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.014000000002101e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:36.564" endtime="20201029 18:15:36.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.572" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.0549...</msg>
<status status="PASS" starttime="20201029 18:15:36.569" endtime="20201029 18:15:36.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.576" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.575" endtime="20201029 18:15:36.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.579" level="INFO">VALUE: [6.069000000000907e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.070000000000381e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 6.000000000002531e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.055999999997341e-06, 5.9579999999968825e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.041999999997771e-06, 5.986000000002961e-06, 5.999999999999062e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201029 18:15:36.578" endtime="20201029 18:15:36.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.573" endtime="20201029 18:15:36.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.584" endtime="20201029 18:15:36.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.582" endtime="20201029 18:15:36.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.581" endtime="20201029 18:15:36.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.225" endtime="20201029 18:15:36.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.224" endtime="20201029 18:15:36.608"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.628" endtime="20201029 18:15:36.652"></status>
</kw>
<msg timestamp="20201029 18:15:36.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.624" endtime="20201029 18:15:36.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.655" endtime="20201029 18:15:36.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.658" endtime="20201029 18:15:36.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.618" endtime="20201029 18:15:36.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.613" endtime="20201029 18:15:36.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.668" endtime="20201029 18:15:36.954"></status>
</kw>
<msg timestamp="20201029 18:15:36.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042889181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04289525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:36.666" endtime="20201029 18:15:36.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042889181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04289525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:36.959" endtime="20201029 18:15:36.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.967" endtime="20201029 18:15:36.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.663" endtime="20201029 18:15:36.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.661" endtime="20201029 18:15:36.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.974" level="INFO">${RESULT} = [{'diff': 6.0690000000043764e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 6.013000000006097e-06}, {'diff': 6.07000000000385e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.0279999999982015e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:36.970" endtime="20201029 18:15:36.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.978" level="INFO">${ACCURACY} = {'diff': [6.0690000000043764e-06, 6.0139999999986316e-06, 6.013000000006097e-06, 6.07000000000385e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.0...</msg>
<status status="PASS" starttime="20201029 18:15:36.975" endtime="20201029 18:15:36.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.983" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.981" endtime="20201029 18:15:36.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.985" level="INFO">VALUE: [6.0690000000043764e-06, 6.0139999999986316e-06, 6.013000000006097e-06, 6.07000000000385e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.083000000003946e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.041000000005237e-06, 6.096999999996577e-06, 6.055999999997341e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.07000000000385e-06, 6.0550000000048065e-06, 6.0689999999974376e-06, 6.0829999999970075e-06, 6.0139999999986316e-06, 6.054999999997868e-06, 6.04200000000471e-06, 6.07000000000385e-06, 6.055999999997341e-06, 6.02800000000514e-06, 6.0139999999986316e-06, 6.096999999996577e-06, 6.07000000000385e-06, 6.0690000000043764e-06, 6.041000000005237e-06, 5.999999999999062e-06, 6.041999999997771e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.0689999999974376e-06, 6.069999999996911e-06, 6.07000000000385e-06, 6.096999999996577e-06, 6.054999999997868e-06, 6.083000000003946e-06, 6.0690000000043764e-06, 6.07000000000385e-06, 6.0829999999970075e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201029 18:15:36.984" endtime="20201029 18:15:36.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.979" endtime="20201029 18:15:36.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.994" endtime="20201029 18:15:37.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.992" endtime="20201029 18:15:37.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.991" endtime="20201029 18:15:37.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.610" endtime="20201029 18:15:37.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.609" endtime="20201029 18:15:37.015"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.028" endtime="20201029 18:15:37.044"></status>
</kw>
<msg timestamp="20201029 18:15:37.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.026" endtime="20201029 18:15:37.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.046" endtime="20201029 18:15:37.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.048" endtime="20201029 18:15:37.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.023" endtime="20201029 18:15:37.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.020" endtime="20201029 18:15:37.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.058" endtime="20201029 18:15:37.346"></status>
</kw>
<msg timestamp="20201029 18:15:37.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024031403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.056" endtime="20201029 18:15:37.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024031403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.350" endtime="20201029 18:15:37.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.358" endtime="20201029 18:15:37.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.053" endtime="20201029 18:15:37.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.051" endtime="20201029 18:15:37.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.365" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 5.999999999999062e-06}, {'diff': 5.986999999998965e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.069000000000907e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:37.361" endtime="20201029 18:15:37.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.370" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 5.999999999999062e-06, 5.986999999998965e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.1660...</msg>
<status status="PASS" starttime="20201029 18:15:37.366" endtime="20201029 18:15:37.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.374" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.373" endtime="20201029 18:15:37.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.377" level="INFO">VALUE: [6.056000000000811e-06, 5.999999999999062e-06, 5.986999999998965e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.166000000001892e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.138000000002752e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.083000000000477e-06, 5.9729999999993955e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.026999999998728e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201029 18:15:37.375" endtime="20201029 18:15:37.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.371" endtime="20201029 18:15:37.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.381" endtime="20201029 18:15:37.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.380" endtime="20201029 18:15:37.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.379" endtime="20201029 18:15:37.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.016" endtime="20201029 18:15:37.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.016" endtime="20201029 18:15:37.403"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.411" endtime="20201029 18:15:37.429"></status>
</kw>
<msg timestamp="20201029 18:15:37.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.410" endtime="20201029 18:15:37.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.430" endtime="20201029 18:15:37.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.433" endtime="20201029 18:15:37.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.407" endtime="20201029 18:15:37.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.405" endtime="20201029 18:15:37.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.442" endtime="20201029 18:15:37.731"></status>
</kw>
<msg timestamp="20201029 18:15:37.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023900042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.441" endtime="20201029 18:15:37.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023900042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.735" endtime="20201029 18:15:37.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.744" endtime="20201029 18:15:37.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.438" endtime="20201029 18:15:37.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.436" endtime="20201029 18:15:37.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.751" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.056000000000811e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:37.747" endtime="20201029 18:15:37.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.755" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.04...</msg>
<status status="PASS" starttime="20201029 18:15:37.752" endtime="20201029 18:15:37.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.760" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.759" endtime="20201029 18:15:37.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.762" level="INFO">VALUE: [6.0839999999999506e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.056000000000811e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.000000000002531e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.041999999997771e-06, 5.971999999999922e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.110999999999617e-06, 5.999999999999062e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 5.971999999999922e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.042000000001241e-06, 5.9589999999998255e-06, 6.097000000000047e-06, 6.055999999997341e-06]</msg>
<status status="PASS" starttime="20201029 18:15:37.761" endtime="20201029 18:15:37.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.756" endtime="20201029 18:15:37.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.768" endtime="20201029 18:15:37.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.766" endtime="20201029 18:15:37.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.765" endtime="20201029 18:15:37.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.403" endtime="20201029 18:15:37.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.403" endtime="20201029 18:15:37.789"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.798" endtime="20201029 18:15:37.820"></status>
</kw>
<msg timestamp="20201029 18:15:37.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.796" endtime="20201029 18:15:37.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.822" endtime="20201029 18:15:37.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.824" endtime="20201029 18:15:37.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.793" endtime="20201029 18:15:37.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.791" endtime="20201029 18:15:37.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.834" endtime="20201029 18:15:38.120"></status>
</kw>
<msg timestamp="20201029 18:15:38.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024206431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.832" endtime="20201029 18:15:38.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024206431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.124" endtime="20201029 18:15:38.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.132" endtime="20201029 18:15:38.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.829" endtime="20201029 18:15:38.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.828" endtime="20201029 18:15:38.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.139" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.056000000000811e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:38.136" endtime="20201029 18:15:38.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.144" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.083...</msg>
<status status="PASS" starttime="20201029 18:15:38.140" endtime="20201029 18:15:38.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.148" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.147" endtime="20201029 18:15:38.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.151" level="INFO">VALUE: [6.070000000000381e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.0139999999986316e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.014000000002101e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.069999999996911e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.027000000002197e-06, 6.040999999998298e-06, 6.000000000002531e-06]</msg>
<status status="PASS" starttime="20201029 18:15:38.149" endtime="20201029 18:15:38.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.144" endtime="20201029 18:15:38.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.157" endtime="20201029 18:15:38.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.155" endtime="20201029 18:15:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.154" endtime="20201029 18:15:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.790" endtime="20201029 18:15:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.789" endtime="20201029 18:15:38.178"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.187" endtime="20201029 18:15:38.203"></status>
</kw>
<msg timestamp="20201029 18:15:38.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.185" endtime="20201029 18:15:38.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.205" endtime="20201029 18:15:38.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.207" endtime="20201029 18:15:38.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.182" endtime="20201029 18:15:38.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.180" endtime="20201029 18:15:38.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.217" endtime="20201029 18:15:38.527"></status>
</kw>
<msg timestamp="20201029 18:15:38.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.215" endtime="20201029 18:15:38.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.532" endtime="20201029 18:15:38.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.540" endtime="20201029 18:15:38.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.213" endtime="20201029 18:15:38.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.211" endtime="20201029 18:15:38.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.546" level="INFO">${RESULT} = [{'diff': 6.0829999999970075e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.056000000000811e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:38.543" endtime="20201029 18:15:38.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.554" level="INFO">${ACCURACY} = {'diff': [6.0829999999970075e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.014000000002101e-06, 6.08...</msg>
<status status="PASS" starttime="20201029 18:15:38.547" endtime="20201029 18:15:38.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.559" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.557" endtime="20201029 18:15:38.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.561" level="INFO">VALUE: [6.0829999999970075e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.014000000002101e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.124999999999187e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.0279999999982015e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.139000000002226e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.08400000000342e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201029 18:15:38.560" endtime="20201029 18:15:38.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.555" endtime="20201029 18:15:38.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.566" endtime="20201029 18:15:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.564" endtime="20201029 18:15:38.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.563" endtime="20201029 18:15:38.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.179" endtime="20201029 18:15:38.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.178" endtime="20201029 18:15:38.587"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.596" endtime="20201029 18:15:38.615"></status>
</kw>
<msg timestamp="20201029 18:15:38.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.594" endtime="20201029 18:15:38.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.616" endtime="20201029 18:15:38.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.619" endtime="20201029 18:15:38.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.591" endtime="20201029 18:15:38.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.589" endtime="20201029 18:15:38.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.628" endtime="20201029 18:15:38.916"></status>
</kw>
<msg timestamp="20201029 18:15:38.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024973986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024980014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.626" endtime="20201029 18:15:38.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024973986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024980014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.920" endtime="20201029 18:15:38.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.929" endtime="20201029 18:15:38.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.624" endtime="20201029 18:15:38.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.622" endtime="20201029 18:15:38.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.935" level="INFO">${RESULT} = [{'diff': 6.0279999999982015e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.056000000000811e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:38.932" endtime="20201029 18:15:38.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.939" level="INFO">${ACCURACY} = {'diff': [6.0279999999982015e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 6.05...</msg>
<status status="PASS" starttime="20201029 18:15:38.936" endtime="20201029 18:15:38.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.944" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.943" endtime="20201029 18:15:38.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.946" level="INFO">VALUE: [6.0279999999982015e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.014000000002101e-06, 5.985999999999492e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.124999999999187e-06, 6.0829999999970075e-06, 6.0979999999995205e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.1389999999987566e-06, 6.0139999999986316e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201029 18:15:38.945" endtime="20201029 18:15:38.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.940" endtime="20201029 18:15:38.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.951" endtime="20201029 18:15:38.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.950" endtime="20201029 18:15:38.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.949" endtime="20201029 18:15:38.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.588" endtime="20201029 18:15:38.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.587" endtime="20201029 18:15:38.972"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.981" endtime="20201029 18:15:39.000"></status>
</kw>
<msg timestamp="20201029 18:15:39.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.979" endtime="20201029 18:15:39.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.002" endtime="20201029 18:15:39.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.005" endtime="20201029 18:15:39.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.977" endtime="20201029 18:15:39.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.975" endtime="20201029 18:15:39.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.014" endtime="20201029 18:15:39.302"></status>
</kw>
<msg timestamp="20201029 18:15:39.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.012" endtime="20201029 18:15:39.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.306" endtime="20201029 18:15:39.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.315" endtime="20201029 18:15:39.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.009" endtime="20201029 18:15:39.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.008" endtime="20201029 18:15:39.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.321" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 5.999999999999062e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:39.318" endtime="20201029 18:15:39.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.325" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069...</msg>
<status status="PASS" starttime="20201029 18:15:39.322" endtime="20201029 18:15:39.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.330" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.329" endtime="20201029 18:15:39.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.332" level="INFO">VALUE: [6.083000000000477e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.026999999998728e-06, 6.110999999999617e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.027000000002197e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.041000000001767e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.041999999997771e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 5.971999999999922e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.040999999998298e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201029 18:15:39.331" endtime="20201029 18:15:39.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.326" endtime="20201029 18:15:39.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.338" endtime="20201029 18:15:39.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.337" endtime="20201029 18:15:39.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.335" endtime="20201029 18:15:39.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.973" endtime="20201029 18:15:39.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.973" endtime="20201029 18:15:39.359"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.370" endtime="20201029 18:15:39.389"></status>
</kw>
<msg timestamp="20201029 18:15:39.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.368" endtime="20201029 18:15:39.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.391" endtime="20201029 18:15:39.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.393" endtime="20201029 18:15:39.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.365" endtime="20201029 18:15:39.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.362" endtime="20201029 18:15:39.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.402" endtime="20201029 18:15:39.688"></status>
</kw>
<msg timestamp="20201029 18:15:39.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026462431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026468472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.401" endtime="20201029 18:15:39.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026462431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026468472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.692" endtime="20201029 18:15:39.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.701" endtime="20201029 18:15:39.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.398" endtime="20201029 18:15:39.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.397" endtime="20201029 18:15:39.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.707" level="INFO">${RESULT} = [{'diff': 6.040999999998298e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.042000000001241e-06}, {'diff': 5.985999999999492e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.069000000000907e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:39.704" endtime="20201029 18:15:39.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.712" level="INFO">${ACCURACY} = {'diff': [6.040999999998298e-06, 6.041999999997771e-06, 6.042000000001241e-06, 5.985999999999492e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0549...</msg>
<status status="PASS" starttime="20201029 18:15:39.708" endtime="20201029 18:15:39.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.717" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.716" endtime="20201029 18:15:39.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.719" level="INFO">VALUE: [6.040999999998298e-06, 6.041999999997771e-06, 6.042000000001241e-06, 5.985999999999492e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.026999999998728e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201029 18:15:39.718" endtime="20201029 18:15:39.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.713" endtime="20201029 18:15:39.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.724" endtime="20201029 18:15:39.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.723" endtime="20201029 18:15:39.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.722" endtime="20201029 18:15:39.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.360" endtime="20201029 18:15:39.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.359" endtime="20201029 18:15:39.745"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.754" endtime="20201029 18:15:39.771"></status>
</kw>
<msg timestamp="20201029 18:15:39.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.752" endtime="20201029 18:15:39.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.772" endtime="20201029 18:15:39.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.775" endtime="20201029 18:15:39.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.750" endtime="20201029 18:15:39.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.748" endtime="20201029 18:15:39.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.784" endtime="20201029 18:15:40.070"></status>
</kw>
<msg timestamp="20201029 18:15:40.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.782" endtime="20201029 18:15:40.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.075" endtime="20201029 18:15:40.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.083" endtime="20201029 18:15:40.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.780" endtime="20201029 18:15:40.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.778" endtime="20201029 18:15:40.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.090" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.056000000000811e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:40.086" endtime="20201029 18:15:40.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.094" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.042...</msg>
<status status="PASS" starttime="20201029 18:15:40.091" endtime="20201029 18:15:40.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.098" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.097" endtime="20201029 18:15:40.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.101" level="INFO">VALUE: [6.097000000000047e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.042000000001241e-06, 5.999999999999062e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.027000000002197e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.000000000002531e-06, 6.055000000001337e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201029 18:15:40.099" endtime="20201029 18:15:40.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.095" endtime="20201029 18:15:40.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.106" endtime="20201029 18:15:40.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.104" endtime="20201029 18:15:40.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.103" endtime="20201029 18:15:40.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.746" endtime="20201029 18:15:40.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.746" endtime="20201029 18:15:40.126"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.135" endtime="20201029 18:15:40.157"></status>
</kw>
<msg timestamp="20201029 18:15:40.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.134" endtime="20201029 18:15:40.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.159" endtime="20201029 18:15:40.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.161" endtime="20201029 18:15:40.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.131" endtime="20201029 18:15:40.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.129" endtime="20201029 18:15:40.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.170" endtime="20201029 18:15:40.456"></status>
</kw>
<msg timestamp="20201029 18:15:40.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:40.169" endtime="20201029 18:15:40.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:40.462" endtime="20201029 18:15:40.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.473" endtime="20201029 18:15:40.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.166" endtime="20201029 18:15:40.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.164" endtime="20201029 18:15:40.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.482" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.042000000001241e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:40.478" endtime="20201029 18:15:40.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.486" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.042...</msg>
<status status="PASS" starttime="20201029 18:15:40.483" endtime="20201029 18:15:40.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.490" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.489" endtime="20201029 18:15:40.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.494" level="INFO">VALUE: [6.083000000000477e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.070000000000381e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201029 18:15:40.492" endtime="20201029 18:15:40.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.487" endtime="20201029 18:15:40.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.507" endtime="20201029 18:15:40.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.503" endtime="20201029 18:15:40.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.501" endtime="20201029 18:15:40.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.127" endtime="20201029 18:15:40.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.127" endtime="20201029 18:15:40.532"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.552" endtime="20201029 18:15:40.574"></status>
</kw>
<msg timestamp="20201029 18:15:40.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.549" endtime="20201029 18:15:40.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.577" endtime="20201029 18:15:40.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.583" endtime="20201029 18:15:40.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.543" endtime="20201029 18:15:40.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.538" endtime="20201029 18:15:40.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.598" endtime="20201029 18:15:40.887"></status>
</kw>
<msg timestamp="20201029 18:15:40.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037570847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037576875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.597" endtime="20201029 18:15:40.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037570847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037576875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.891" endtime="20201029 18:15:40.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.900" endtime="20201029 18:15:40.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.594" endtime="20201029 18:15:40.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.590" endtime="20201029 18:15:40.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.907" level="INFO">${RESULT} = [{'diff': 6.02800000000514e-06}, {'diff': 6.04200000000471e-06}, {'diff': 6.08400000000342e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.125000000002656e-06}, {'diff': 6.041999999997771e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:40.904" endtime="20201029 18:15:40.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.915" level="INFO">${ACCURACY} = {'diff': [6.02800000000514e-06, 6.04200000000471e-06, 6.08400000000342e-06, 6.0689999999974376e-06, 6.125000000002656e-06, 6.041999999997771e-06, 6.055999999997341e-06, 6.083000000003946e-06, 6.041999...</msg>
<status status="PASS" starttime="20201029 18:15:40.909" endtime="20201029 18:15:40.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.921" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.919" endtime="20201029 18:15:40.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.925" level="INFO">VALUE: [6.02800000000514e-06, 6.04200000000471e-06, 6.08400000000342e-06, 6.0689999999974376e-06, 6.125000000002656e-06, 6.041999999997771e-06, 6.055999999997341e-06, 6.083000000003946e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.139000000002226e-06, 6.0140000000055704e-06, 6.040999999998298e-06, 6.07000000000385e-06, 6.040999999998298e-06, 6.05600000000428e-06, 6.069999999996911e-06, 6.027000000005667e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.09800000000299e-06, 6.083000000003946e-06, 6.0279999999982015e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.02800000000514e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.05600000000428e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.124999999995717e-06, 6.083999999996481e-06, 6.0689999999974376e-06, 6.0690000000043764e-06, 6.04200000000471e-06, 6.0689999999974376e-06, 6.083000000003946e-06, 6.04200000000471e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.05600000000428e-06, 6.110999999996147e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.055999999997341e-06]</msg>
<status status="PASS" starttime="20201029 18:15:40.923" endtime="20201029 18:15:40.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.916" endtime="20201029 18:15:40.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.930" endtime="20201029 18:15:40.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.929" endtime="20201029 18:15:40.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.927" endtime="20201029 18:15:40.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.534" endtime="20201029 18:15:40.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.533" endtime="20201029 18:15:40.951"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.960" endtime="20201029 18:15:40.976"></status>
</kw>
<msg timestamp="20201029 18:15:40.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.958" endtime="20201029 18:15:40.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.978" endtime="20201029 18:15:40.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.981" endtime="20201029 18:15:40.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.956" endtime="20201029 18:15:40.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.954" endtime="20201029 18:15:40.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.990" endtime="20201029 18:15:41.280"></status>
</kw>
<msg timestamp="20201029 18:15:41.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.988" endtime="20201029 18:15:41.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.285" endtime="20201029 18:15:41.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.293" endtime="20201029 18:15:41.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.986" endtime="20201029 18:15:41.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.984" endtime="20201029 18:15:41.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.300" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.110999999999617e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:41.297" endtime="20201029 18:15:41.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.310" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.0419...</msg>
<status status="PASS" starttime="20201029 18:15:41.302" endtime="20201029 18:15:41.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.320" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.318" endtime="20201029 18:15:41.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.326" level="INFO">VALUE: [6.042000000001241e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.000000000002531e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.125000000002656e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.125000000002656e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.041999999997771e-06, 5.987000000002435e-06, 6.0139999999986316e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.054999999997868e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201029 18:15:41.323" endtime="20201029 18:15:41.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.312" endtime="20201029 18:15:41.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.338" endtime="20201029 18:15:41.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.335" endtime="20201029 18:15:41.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.332" endtime="20201029 18:15:41.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.952" endtime="20201029 18:15:41.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.951" endtime="20201029 18:15:41.364"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.384" endtime="20201029 18:15:41.405"></status>
</kw>
<msg timestamp="20201029 18:15:41.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.380" endtime="20201029 18:15:41.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.407" endtime="20201029 18:15:41.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.409" endtime="20201029 18:15:41.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.374" endtime="20201029 18:15:41.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.369" endtime="20201029 18:15:41.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.419" endtime="20201029 18:15:41.704"></status>
</kw>
<msg timestamp="20201029 18:15:41.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04001925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040025292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:41.417" endtime="20201029 18:15:41.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04001925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040025292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:41.708" endtime="20201029 18:15:41.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.717" endtime="20201029 18:15:41.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.415" endtime="20201029 18:15:41.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.413" endtime="20201029 18:15:41.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.724" level="INFO">${RESULT} = [{'diff': 6.041999999997771e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.0550000000048065e-06}, {'diff': 6.05600000000428e-06}, {'diff': 6.05600000000428e-06}, {'diff': 6.0279999999982015e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:41.720" endtime="20201029 18:15:41.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.728" level="INFO">${ACCURACY} = {'diff': [6.041999999997771e-06, 6.0279999999982015e-06, 6.0550000000048065e-06, 6.05600000000428e-06, 6.05600000000428e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.0690000000043764e-06, 6.04...</msg>
<status status="PASS" starttime="20201029 18:15:41.725" endtime="20201029 18:15:41.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.733" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.732" endtime="20201029 18:15:41.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.735" level="INFO">VALUE: [6.041999999997771e-06, 6.0279999999982015e-06, 6.0550000000048065e-06, 6.05600000000428e-06, 6.05600000000428e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.0690000000043764e-06, 6.041999999997771e-06, 6.04200000000471e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.041999999997771e-06, 6.0829999999970075e-06, 6.0279999999982015e-06, 6.096999999996577e-06, 6.069999999996911e-06, 6.07000000000385e-06, 6.0690000000043764e-06, 6.124999999995717e-06, 6.0279999999982015e-06, 6.0689999999974376e-06, 6.069999999996911e-06, 6.055999999997341e-06, 6.040999999998298e-06, 6.0690000000043764e-06, 6.04200000000471e-06, 6.05600000000428e-06, 6.069999999996911e-06, 6.0829999999970075e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.083000000003946e-06, 6.04200000000471e-06, 6.04200000000471e-06, 6.08400000000342e-06, 6.054999999997868e-06, 6.05600000000428e-06, 6.08400000000342e-06, 6.040999999998298e-06, 6.055999999997341e-06, 6.054999999997868e-06, 6.026999999998728e-06, 6.041999999997771e-06, 6.069999999996911e-06, 6.0279999999982015e-06, 6.0829999999970075e-06, 6.041000000005237e-06]</msg>
<status status="PASS" starttime="20201029 18:15:41.734" endtime="20201029 18:15:41.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.729" endtime="20201029 18:15:41.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.741" endtime="20201029 18:15:41.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.740" endtime="20201029 18:15:41.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.739" endtime="20201029 18:15:41.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.366" endtime="20201029 18:15:41.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.365" endtime="20201029 18:15:41.762"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.776" endtime="20201029 18:15:41.797"></status>
</kw>
<msg timestamp="20201029 18:15:41.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.773" endtime="20201029 18:15:41.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.798" endtime="20201029 18:15:41.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.801" endtime="20201029 18:15:41.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.769" endtime="20201029 18:15:41.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.765" endtime="20201029 18:15:41.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.810" endtime="20201029 18:15:42.096"></status>
</kw>
<msg timestamp="20201029 18:15:42.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029586931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029592986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.809" endtime="20201029 18:15:42.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029586931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029592986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.100" endtime="20201029 18:15:42.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.109" endtime="20201029 18:15:42.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.806" endtime="20201029 18:15:42.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.804" endtime="20201029 18:15:42.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.116" level="INFO">${RESULT} = [{'diff': 6.055000000001337e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.069000000000907e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.112" endtime="20201029 18:15:42.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.123" level="INFO">${ACCURACY} = {'diff': [6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.0700...</msg>
<status status="PASS" starttime="20201029 18:15:42.117" endtime="20201029 18:15:42.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.128" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.127" endtime="20201029 18:15:42.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.131" level="INFO">VALUE: [6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.125000000002656e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.026999999998728e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.0139999999986316e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.1389999999987566e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.069999999996911e-06]</msg>
<status status="PASS" starttime="20201029 18:15:42.129" endtime="20201029 18:15:42.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.124" endtime="20201029 18:15:42.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.140" endtime="20201029 18:15:42.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.139" endtime="20201029 18:15:42.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.138" endtime="20201029 18:15:42.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.763" endtime="20201029 18:15:42.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.763" endtime="20201029 18:15:42.161"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.170" endtime="20201029 18:15:42.187"></status>
</kw>
<msg timestamp="20201029 18:15:42.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.169" endtime="20201029 18:15:42.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.189" endtime="20201029 18:15:42.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.191" endtime="20201029 18:15:42.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.166" endtime="20201029 18:15:42.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.164" endtime="20201029 18:15:42.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.201" endtime="20201029 18:15:42.488"></status>
</kw>
<msg timestamp="20201029 18:15:42.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02260075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:42.199" endtime="20201029 18:15:42.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02260075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:42.492" endtime="20201029 18:15:42.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.501" endtime="20201029 18:15:42.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.197" endtime="20201029 18:15:42.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.195" endtime="20201029 18:15:42.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.508" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.028000000001671e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.504" endtime="20201029 18:15:42.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.512" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.0690...</msg>
<status status="PASS" starttime="20201029 18:15:42.509" endtime="20201029 18:15:42.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.517" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.516" endtime="20201029 18:15:42.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.519" level="INFO">VALUE: [6.083000000000477e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 5.986000000002961e-06, 6.055000000001337e-06, 6.124999999999187e-06, 6.069999999996911e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0979999999995205e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.0689999999974376e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.026999999998728e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.111000000003086e-06, 6.110999999999617e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.028000000001671e-06, 6.055000000001337e-06, 5.986000000002961e-06, 6.000000000002531e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.028000000001671e-06]</msg>
<status status="PASS" starttime="20201029 18:15:42.518" endtime="20201029 18:15:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.513" endtime="20201029 18:15:42.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.524" endtime="20201029 18:15:42.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.523" endtime="20201029 18:15:42.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.522" endtime="20201029 18:15:42.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.162" endtime="20201029 18:15:42.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.162" endtime="20201029 18:15:42.545"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.555" endtime="20201029 18:15:42.576"></status>
</kw>
<msg timestamp="20201029 18:15:42.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.553" endtime="20201029 18:15:42.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.577" endtime="20201029 18:15:42.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.580" endtime="20201029 18:15:42.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.550" endtime="20201029 18:15:42.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.548" endtime="20201029 18:15:42.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.589" endtime="20201029 18:15:42.874"></status>
</kw>
<msg timestamp="20201029 18:15:42.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025303681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025309736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.588" endtime="20201029 18:15:42.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025303681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025309736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.879" endtime="20201029 18:15:42.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.887" endtime="20201029 18:15:42.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.585" endtime="20201029 18:15:42.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.583" endtime="20201029 18:15:42.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.894" level="INFO">${RESULT} = [{'diff': 6.054999999997868e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.042000000001241e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.891" endtime="20201029 18:15:42.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.898" level="INFO">${ACCURACY} = {'diff': [6.054999999997868e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.097...</msg>
<status status="PASS" starttime="20201029 18:15:42.895" endtime="20201029 18:15:42.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.903" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.902" endtime="20201029 18:15:42.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.906" level="INFO">VALUE: [6.054999999997868e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.026999999998728e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.153000000001796e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.0139999999986316e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.000000000002531e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.138000000002752e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.110999999999617e-06, 6.041999999997771e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201029 18:15:42.904" endtime="20201029 18:15:42.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.899" endtime="20201029 18:15:42.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.912" endtime="20201029 18:15:42.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.910" endtime="20201029 18:15:42.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.909" endtime="20201029 18:15:42.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.546" endtime="20201029 18:15:42.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.546" endtime="20201029 18:15:42.933"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.942" endtime="20201029 18:15:42.960"></status>
</kw>
<msg timestamp="20201029 18:15:42.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.940" endtime="20201029 18:15:42.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.962" endtime="20201029 18:15:42.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.965" endtime="20201029 18:15:42.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.937" endtime="20201029 18:15:42.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.935" endtime="20201029 18:15:42.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.974" endtime="20201029 18:15:43.262"></status>
</kw>
<msg timestamp="20201029 18:15:43.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024937681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024943722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.972" endtime="20201029 18:15:43.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024937681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024943722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.266" endtime="20201029 18:15:43.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.274" endtime="20201029 18:15:43.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.970" endtime="20201029 18:15:43.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.968" endtime="20201029 18:15:43.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.281" level="INFO">${RESULT} = [{'diff': 6.041000000001767e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.042000000001241e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:43.278" endtime="20201029 18:15:43.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.286" level="INFO">${ACCURACY} = {'diff': [6.041000000001767e-06, 6.0279999999982015e-06, 6.124999999999187e-06, 6.0829999999970075e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.014000000002101e-06, 5.999999999999062e-06, 5.97...</msg>
<status status="PASS" starttime="20201029 18:15:43.282" endtime="20201029 18:15:43.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.290" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.289" endtime="20201029 18:15:43.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.293" level="INFO">VALUE: [6.041000000001767e-06, 6.0279999999982015e-06, 6.124999999999187e-06, 6.0829999999970075e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.014000000002101e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.137999999999283e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.026999999998728e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.014000000002101e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.041000000001767e-06, 5.971999999999922e-06, 6.041000000001767e-06, 5.971999999999922e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201029 18:15:43.291" endtime="20201029 18:15:43.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.287" endtime="20201029 18:15:43.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.298" endtime="20201029 18:15:43.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.296" endtime="20201029 18:15:43.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.295" endtime="20201029 18:15:43.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.934" endtime="20201029 18:15:43.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.933" endtime="20201029 18:15:43.319"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.327" endtime="20201029 18:15:43.346"></status>
</kw>
<msg timestamp="20201029 18:15:43.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.326" endtime="20201029 18:15:43.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.348" endtime="20201029 18:15:43.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.351" endtime="20201029 18:15:43.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.323" endtime="20201029 18:15:43.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.321" endtime="20201029 18:15:43.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.367" endtime="20201029 18:15:43.676"></status>
</kw>
<msg timestamp="20201029 18:15:43.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020653611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.365" endtime="20201029 18:15:43.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020653611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020659694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.681" endtime="20201029 18:15:43.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.689" endtime="20201029 18:15:43.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.361" endtime="20201029 18:15:43.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.357" endtime="20201029 18:15:43.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.696" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.069000000000907e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:43.693" endtime="20201029 18:15:43.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.701" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.041999999997771e-06, 6.069...</msg>
<status status="PASS" starttime="20201029 18:15:43.697" endtime="20201029 18:15:43.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.705" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.704" endtime="20201029 18:15:43.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.708" level="INFO">VALUE: [6.083000000000477e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.027000000002197e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.000000000002531e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201029 18:15:43.706" endtime="20201029 18:15:43.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.701" endtime="20201029 18:15:43.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.713" endtime="20201029 18:15:43.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.711" endtime="20201029 18:15:43.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.710" endtime="20201029 18:15:43.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.319" endtime="20201029 18:15:43.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.319" endtime="20201029 18:15:43.734"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.743" endtime="20201029 18:15:43.760"></status>
</kw>
<msg timestamp="20201029 18:15:43.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.741" endtime="20201029 18:15:43.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.761" endtime="20201029 18:15:43.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.764" endtime="20201029 18:15:43.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.739" endtime="20201029 18:15:43.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.736" endtime="20201029 18:15:43.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.774" endtime="20201029 18:15:44.059"></status>
</kw>
<msg timestamp="20201029 18:15:44.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.772" endtime="20201029 18:15:44.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.063" endtime="20201029 18:15:44.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.071" endtime="20201029 18:15:44.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.769" endtime="20201029 18:15:44.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.767" endtime="20201029 18:15:44.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.078" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.070000000000381e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:44.075" endtime="20201029 18:15:44.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.083" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.05...</msg>
<status status="PASS" starttime="20201029 18:15:44.079" endtime="20201029 18:15:44.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.087" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.086" endtime="20201029 18:15:44.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.090" level="INFO">VALUE: [6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.069999999996911e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 5.971999999999922e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.000000000002531e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.139000000002226e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.040999999998298e-06]</msg>
<status status="PASS" starttime="20201029 18:15:44.089" endtime="20201029 18:15:44.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.084" endtime="20201029 18:15:44.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.096" endtime="20201029 18:15:44.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.094" endtime="20201029 18:15:44.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.093" endtime="20201029 18:15:44.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.735" endtime="20201029 18:15:44.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.734" endtime="20201029 18:15:44.117"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.126" endtime="20201029 18:15:44.141"></status>
</kw>
<msg timestamp="20201029 18:15:44.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.124" endtime="20201029 18:15:44.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.143" endtime="20201029 18:15:44.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.146" endtime="20201029 18:15:44.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.122" endtime="20201029 18:15:44.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.119" endtime="20201029 18:15:44.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.155" endtime="20201029 18:15:44.443"></status>
</kw>
<msg timestamp="20201029 18:15:44.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.154" endtime="20201029 18:15:44.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.448" endtime="20201029 18:15:44.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.456" endtime="20201029 18:15:44.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.151" endtime="20201029 18:15:44.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.149" endtime="20201029 18:15:44.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.463" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.09800000000299e-06}, {'diff': 6.055999999997341e-06}, {'diff': 5.985999999999492e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:44.460" endtime="20201029 18:15:44.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.469" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.09800000000299e-06, 6.055999999997341e-06, 5.985999999999492e-06, 6.056000000000811e-06, 6.069000000000907e-06, 5.95899...</msg>
<status status="PASS" starttime="20201029 18:15:44.464" endtime="20201029 18:15:44.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.473" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.472" endtime="20201029 18:15:44.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.476" level="INFO">VALUE: [6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.09800000000299e-06, 6.055999999997341e-06, 5.985999999999492e-06, 6.056000000000811e-06, 6.069000000000907e-06, 5.9589999999998255e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.055999999997341e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.09800000000299e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 5.999999999999062e-06, 6.0279999999982015e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201029 18:15:44.474" endtime="20201029 18:15:44.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.469" endtime="20201029 18:15:44.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.481" endtime="20201029 18:15:44.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.480" endtime="20201029 18:15:44.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.478" endtime="20201029 18:15:44.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.118" endtime="20201029 18:15:44.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.117" endtime="20201029 18:15:44.502"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.511" endtime="20201029 18:15:44.532"></status>
</kw>
<msg timestamp="20201029 18:15:44.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.510" endtime="20201029 18:15:44.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.534" endtime="20201029 18:15:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.536" endtime="20201029 18:15:44.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.507" endtime="20201029 18:15:44.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.505" endtime="20201029 18:15:44.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.546" endtime="20201029 18:15:44.834"></status>
</kw>
<msg timestamp="20201029 18:15:44.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.544" endtime="20201029 18:15:44.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.838" endtime="20201029 18:15:44.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.847" endtime="20201029 18:15:44.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.541" endtime="20201029 18:15:44.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.540" endtime="20201029 18:15:44.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.853" level="INFO">${RESULT} = [{'diff': 6.041999999997771e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.040999999998298e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:44.850" endtime="20201029 18:15:44.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.858" level="INFO">${ACCURACY} = {'diff': [6.041999999997771e-06, 6.056000000000811e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.054...</msg>
<status status="PASS" starttime="20201029 18:15:44.854" endtime="20201029 18:15:44.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.862" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.861" endtime="20201029 18:15:44.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.865" level="INFO">VALUE: [6.041999999997771e-06, 6.056000000000811e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.014000000002101e-06, 6.041999999997771e-06, 6.041000000001767e-06, 6.012999999999158e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.124999999999187e-06, 6.042000000001241e-06, 6.0139999999986316e-06, 6.055999999997341e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.0689999999974376e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201029 18:15:44.864" endtime="20201029 18:15:44.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.859" endtime="20201029 18:15:44.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.870" endtime="20201029 18:15:44.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.869" endtime="20201029 18:15:44.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.867" endtime="20201029 18:15:44.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.503" endtime="20201029 18:15:44.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.503" endtime="20201029 18:15:44.891"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.900" endtime="20201029 18:15:44.921"></status>
</kw>
<msg timestamp="20201029 18:15:44.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.899" endtime="20201029 18:15:44.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.922" endtime="20201029 18:15:44.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.925" endtime="20201029 18:15:44.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.896" endtime="20201029 18:15:44.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.894" endtime="20201029 18:15:44.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.935" endtime="20201029 18:15:45.222"></status>
</kw>
<msg timestamp="20201029 18:15:45.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025825056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:44.933" endtime="20201029 18:15:45.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025825056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:45.226" endtime="20201029 18:15:45.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.237" endtime="20201029 18:15:45.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.930" endtime="20201029 18:15:45.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.928" endtime="20201029 18:15:45.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.246" level="INFO">${RESULT} = [{'diff': 6.055999999997341e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.083000000000477e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:45.242" endtime="20201029 18:15:45.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.252" level="INFO">${ACCURACY} = {'diff': [6.055999999997341e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.042...</msg>
<status status="PASS" starttime="20201029 18:15:45.248" endtime="20201029 18:15:45.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.257" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.256" endtime="20201029 18:15:45.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.260" level="INFO">VALUE: [6.055999999997341e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.027000000002197e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.055999999997341e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.125000000002656e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.138000000002752e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201029 18:15:45.258" endtime="20201029 18:15:45.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.253" endtime="20201029 18:15:45.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.268" endtime="20201029 18:15:45.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.266" endtime="20201029 18:15:45.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.265" endtime="20201029 18:15:45.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.892" endtime="20201029 18:15:45.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.891" endtime="20201029 18:15:45.289"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.298" endtime="20201029 18:15:45.317"></status>
</kw>
<msg timestamp="20201029 18:15:45.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.296" endtime="20201029 18:15:45.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.319" endtime="20201029 18:15:45.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.321" endtime="20201029 18:15:45.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.294" endtime="20201029 18:15:45.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.291" endtime="20201029 18:15:45.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.331" endtime="20201029 18:15:45.618"></status>
</kw>
<msg timestamp="20201029 18:15:45.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024961861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.329" endtime="20201029 18:15:45.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024961861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.623" endtime="20201029 18:15:45.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.631" endtime="20201029 18:15:45.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.327" endtime="20201029 18:15:45.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.325" endtime="20201029 18:15:45.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.638" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.027000000002197e-06}, {'diff': 6.0979999999995205e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:45.635" endtime="20201029 18:15:45.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.646" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.027000000002197e-06, 6.0979999999995205e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.041...</msg>
<status status="PASS" starttime="20201029 18:15:45.639" endtime="20201029 18:15:45.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.650" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.649" endtime="20201029 18:15:45.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.653" level="INFO">VALUE: [6.042000000001241e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.027000000002197e-06, 6.0979999999995205e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.041000000001767e-06, 6.027000000002197e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.139000000002226e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.041000000001767e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 5.971999999999922e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.027000000002197e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.0689999999974376e-06, 6.055999999997341e-06]</msg>
<status status="PASS" starttime="20201029 18:15:45.652" endtime="20201029 18:15:45.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.647" endtime="20201029 18:15:45.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.658" endtime="20201029 18:15:45.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.657" endtime="20201029 18:15:45.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.655" endtime="20201029 18:15:45.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.290" endtime="20201029 18:15:45.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.289" endtime="20201029 18:15:45.679"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.690" endtime="20201029 18:15:45.709"></status>
</kw>
<msg timestamp="20201029 18:15:45.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.688" endtime="20201029 18:15:45.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.710" endtime="20201029 18:15:45.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.713" endtime="20201029 18:15:45.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.685" endtime="20201029 18:15:45.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.682" endtime="20201029 18:15:45.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.723" endtime="20201029 18:15:46.010"></status>
</kw>
<msg timestamp="20201029 18:15:46.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026519056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026525153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.721" endtime="20201029 18:15:46.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026519056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026525153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.015" endtime="20201029 18:15:46.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.023" endtime="20201029 18:15:46.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.718" endtime="20201029 18:15:46.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.716" endtime="20201029 18:15:46.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.030" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.09800000000299e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:46.027" endtime="20201029 18:15:46.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.035" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.09800000000299e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.027...</msg>
<status status="PASS" starttime="20201029 18:15:46.031" endtime="20201029 18:15:46.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.039" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.038" endtime="20201029 18:15:46.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.042" level="INFO">VALUE: [6.097000000000047e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.09800000000299e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.0279999999982015e-06, 5.985999999999492e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.012999999999158e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069000000000907e-06, 5.986000000002961e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.040999999998298e-06, 6.110999999999617e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.0839999999999506e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201029 18:15:46.040" endtime="20201029 18:15:46.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.036" endtime="20201029 18:15:46.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.047" endtime="20201029 18:15:46.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.045" endtime="20201029 18:15:46.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.044" endtime="20201029 18:15:46.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.680" endtime="20201029 18:15:46.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.680" endtime="20201029 18:15:46.068"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.077" endtime="20201029 18:15:46.095"></status>
</kw>
<msg timestamp="20201029 18:15:46.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.075" endtime="20201029 18:15:46.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.097" endtime="20201029 18:15:46.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.099" endtime="20201029 18:15:46.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.073" endtime="20201029 18:15:46.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.071" endtime="20201029 18:15:46.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.109" endtime="20201029 18:15:46.394"></status>
</kw>
<msg timestamp="20201029 18:15:46.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024579639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.107" endtime="20201029 18:15:46.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024579639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024585708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.398" endtime="20201029 18:15:46.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.407" endtime="20201029 18:15:46.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.105" endtime="20201029 18:15:46.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.103" endtime="20201029 18:15:46.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.414" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055000000001337e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:46.411" endtime="20201029 18:15:46.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.419" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.0139...</msg>
<status status="PASS" starttime="20201029 18:15:46.416" endtime="20201029 18:15:46.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.423" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.422" endtime="20201029 18:15:46.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.426" level="INFO">VALUE: [6.069000000000907e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.0139999999986316e-06, 6.041999999997771e-06, 6.055999999997341e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.041000000001767e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.069999999996911e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.0979999999995205e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.012999999999158e-06]</msg>
<status status="PASS" starttime="20201029 18:15:46.425" endtime="20201029 18:15:46.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.420" endtime="20201029 18:15:46.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.432" endtime="20201029 18:15:46.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.430" endtime="20201029 18:15:46.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.429" endtime="20201029 18:15:46.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.069" endtime="20201029 18:15:46.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.068" endtime="20201029 18:15:46.453"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.462" endtime="20201029 18:15:46.478"></status>
</kw>
<msg timestamp="20201029 18:15:46.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.461" endtime="20201029 18:15:46.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.480" endtime="20201029 18:15:46.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.482" endtime="20201029 18:15:46.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.458" endtime="20201029 18:15:46.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.456" endtime="20201029 18:15:46.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.492" endtime="20201029 18:15:46.780"></status>
</kw>
<msg timestamp="20201029 18:15:46.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021197889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.490" endtime="20201029 18:15:46.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021197889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.784" endtime="20201029 18:15:46.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.793" endtime="20201029 18:15:46.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.487" endtime="20201029 18:15:46.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.486" endtime="20201029 18:15:46.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.800" level="INFO">${RESULT} = [{'diff': 6.054999999997868e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.055999999997341e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:46.796" endtime="20201029 18:15:46.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.805" level="INFO">${ACCURACY} = {'diff': [6.054999999997868e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.0280...</msg>
<status status="PASS" starttime="20201029 18:15:46.801" endtime="20201029 18:15:46.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.809" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.808" endtime="20201029 18:15:46.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.812" level="INFO">VALUE: [6.054999999997868e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.069999999996911e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.0829999999970075e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.026999999998728e-06, 6.153000000001796e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.0689999999974376e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.014000000002101e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.069999999996911e-06]</msg>
<status status="PASS" starttime="20201029 18:15:46.811" endtime="20201029 18:15:46.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.806" endtime="20201029 18:15:46.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.817" endtime="20201029 18:15:46.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.816" endtime="20201029 18:15:46.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.814" endtime="20201029 18:15:46.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.454" endtime="20201029 18:15:46.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.454" endtime="20201029 18:15:46.838"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.847" endtime="20201029 18:15:46.866"></status>
</kw>
<msg timestamp="20201029 18:15:46.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.846" endtime="20201029 18:15:46.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.867" endtime="20201029 18:15:46.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.870" endtime="20201029 18:15:46.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.843" endtime="20201029 18:15:46.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.841" endtime="20201029 18:15:46.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.879" endtime="20201029 18:15:47.173"></status>
</kw>
<msg timestamp="20201029 18:15:47.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:46.878" endtime="20201029 18:15:47.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:47.182" endtime="20201029 18:15:47.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.200" endtime="20201029 18:15:47.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.875" endtime="20201029 18:15:47.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.873" endtime="20201029 18:15:47.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.217" level="INFO">${RESULT} = [{'diff': 1.459699999999814e-05}, {'diff': 2.4207999999997787e-05}, {'diff': 1.937499999999856e-05}, {'diff': 2.04029999999987e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.6069999999999566e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:47.207" endtime="20201029 18:15:47.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.227" level="INFO">${ACCURACY} = {'diff': [1.459699999999814e-05, 2.4207999999997787e-05, 1.937499999999856e-05, 2.04029999999987e-05, 2.2292000000000145e-05, 2.6069999999999566e-05, 2.3249999999998966e-05, 2.136100000000099e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 18:15:47.219" endtime="20201029 18:15:47.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.236" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.234" endtime="20201029 18:15:47.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.241" level="INFO">VALUE: [1.459699999999814e-05, 2.4207999999997787e-05, 1.937499999999856e-05, 2.04029999999987e-05, 2.2292000000000145e-05, 2.6069999999999566e-05, 2.3249999999998966e-05, 2.136100000000099e-05, 2.1333999999997855e-05, 2.034700000000042e-05, 2.513900000000041e-05, 2.038899999999913e-05, 2.136100000000099e-05, 1.940300000000117e-05, 2.32229999999993e-05, 1.941700000000074e-05, 2.5180000000003117e-05, 2.4166000000002547e-05, 2.415299999999898e-05, 2.231899999999981e-05, 2.518099999999912e-05, 1.931900000000028e-05, 2.1236000000000865e-05, 2.3221999999999826e-05, 2.4151999999999507e-05, 2.513900000000041e-05, 2.3166000000001546e-05, 2.037499999999956e-05, 2.3249999999998966e-05, 2.131900000000228e-05, 2.037499999999956e-05, 2.416699999999855e-05, 1.938899999999813e-05, 2.033300000000085e-05, 2.512500000000084e-05, 2.1334000000001324e-05, 2.033300000000085e-05, 2.512500000000084e-05, 2.1291999999999145e-05, 1.94029999999977e-05, 2.2264000000001005e-05, 2.5179999999999647e-05, 2.5193999999999217e-05, 2.3278000000001575e-05, 2.519499999999869e-05, 2.418100000000159e-05, 2.036099999999999e-05, 2.3264000000002005e-05, 2.037500000000303e-05, 2.036099999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.238" endtime="20201029 18:15:47.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.229" endtime="20201029 18:15:47.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.252" endtime="20201029 18:15:47.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.248" endtime="20201029 18:15:47.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.246" endtime="20201029 18:15:47.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.839" endtime="20201029 18:15:47.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.838" endtime="20201029 18:15:47.274"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.283" endtime="20201029 18:15:47.302"></status>
</kw>
<msg timestamp="20201029 18:15:47.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.281" endtime="20201029 18:15:47.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.303" endtime="20201029 18:15:47.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.306" endtime="20201029 18:15:47.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.279" endtime="20201029 18:15:47.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.277" endtime="20201029 18:15:47.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.315" endtime="20201029 18:15:47.603"></status>
</kw>
<msg timestamp="20201029 18:15:47.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023976986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.313" endtime="20201029 18:15:47.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023976986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.607" endtime="20201029 18:15:47.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.615" endtime="20201029 18:15:47.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.311" endtime="20201029 18:15:47.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.309" endtime="20201029 18:15:47.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.622" level="INFO">${RESULT} = [{'diff': 3.180600000000228e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.0387999999999656e-05}, {'diff': 2.5179999999999647e-05...</msg>
<status status="PASS" starttime="20201029 18:15:47.618" endtime="20201029 18:15:47.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.626" level="INFO">${ACCURACY} = {'diff': [3.180600000000228e-05, 2.041700000000174e-05, 2.2250000000001435e-05, 2.3263999999998536e-05, 2.0387999999999656e-05, 2.5179999999999647e-05, 1.938899999999813e-05, 2.3263999999998536e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:47.623" endtime="20201029 18:15:47.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.630" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.629" endtime="20201029 18:15:47.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.633" level="INFO">VALUE: [3.180600000000228e-05, 2.041700000000174e-05, 2.2250000000001435e-05, 2.3263999999998536e-05, 2.0387999999999656e-05, 2.5179999999999647e-05, 1.938899999999813e-05, 2.3263999999998536e-05, 2.034700000000042e-05, 2.513900000000041e-05, 1.93890000000016e-05, 2.518100000000259e-05, 2.0387999999999656e-05, 2.4193999999998217e-05, 2.131900000000228e-05, 2.2263999999997536e-05, 2.231899999999981e-05, 2.22770000000011e-05, 2.1334000000001324e-05, 2.0401999999999226e-05, 2.3292000000001145e-05, 2.2278000000000575e-05, 2.3208000000000256e-05, 2.0444000000001405e-05, 2.518099999999912e-05, 2.418100000000159e-05, 2.1291999999999145e-05, 2.3193999999997217e-05, 2.418100000000159e-05, 2.5166000000000077e-05, 2.133299999999838e-05, 2.131899999999881e-05, 2.130499999999924e-05, 2.416699999999855e-05, 2.3221999999999826e-05, 1.940300000000117e-05, 1.9444000000000405e-05, 2.416700000000202e-05, 2.4180000000002116e-05, 2.4193999999998217e-05, 2.513899999999694e-05, 2.1415999999999796e-05, 2.4263000000000062e-05, 2.611100000000227e-05, 2.319500000000016e-05, 2.512500000000084e-05, 2.2249999999997966e-05, 2.0401999999999226e-05, 2.2319999999999285e-05, 2.4165999999999077e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.631" endtime="20201029 18:15:47.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.627" endtime="20201029 18:15:47.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.638" endtime="20201029 18:15:47.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.637" endtime="20201029 18:15:47.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.636" endtime="20201029 18:15:47.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.275" endtime="20201029 18:15:47.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.275" endtime="20201029 18:15:47.660"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.672" endtime="20201029 18:15:47.689"></status>
</kw>
<msg timestamp="20201029 18:15:47.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.670" endtime="20201029 18:15:47.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.690" endtime="20201029 18:15:47.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.693" endtime="20201029 18:15:47.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.666" endtime="20201029 18:15:47.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.664" endtime="20201029 18:15:47.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.703" endtime="20201029 18:15:47.998"></status>
</kw>
<msg timestamp="20201029 18:15:48.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025944306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025968597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.701" endtime="20201029 18:15:48.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025944306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025968597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.008" endtime="20201029 18:15:48.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.026" endtime="20201029 18:15:48.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.697" endtime="20201029 18:15:48.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.696" endtime="20201029 18:15:48.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.040" level="INFO">${RESULT} = [{'diff': 2.4290999999999202e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.2222000000002295e-05}, {'diff': 2.513899999999694e-05}, {'diff': 2.6152000000001507e-05...</msg>
<status status="PASS" starttime="20201029 18:15:48.033" endtime="20201029 18:15:48.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.050" level="INFO">${ACCURACY} = {'diff': [2.4290999999999202e-05, 2.513900000000041e-05, 2.3221999999999826e-05, 2.2222000000002295e-05, 2.513899999999694e-05, 2.6152000000001507e-05, 2.134699999999795e-05, 2.2263999999997536e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:48.042" endtime="20201029 18:15:48.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.060" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.058" endtime="20201029 18:15:48.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.064" level="INFO">VALUE: [2.4290999999999202e-05, 2.513900000000041e-05, 2.3221999999999826e-05, 2.2222000000002295e-05, 2.513899999999694e-05, 2.6152000000001507e-05, 2.134699999999795e-05, 2.2263999999997536e-05, 2.036100000000346e-05, 2.513900000000041e-05, 2.1235999999997396e-05, 2.2264000000001005e-05, 1.93890000000016e-05, 1.9471999999999545e-05, 2.2264000000001005e-05, 2.6055000000000522e-05, 2.2249999999997966e-05, 2.512500000000084e-05, 2.3249999999998966e-05, 2.6055000000000522e-05, 2.133300000000185e-05, 2.0415999999998796e-05, 2.513900000000041e-05, 2.034700000000042e-05, 2.1277999999999575e-05, 2.034700000000042e-05, 2.2263999999997536e-05, 2.4236000000000396e-05, 1.9416000000001266e-05, 1.944499999999988e-05, 2.520899999999826e-05, 2.1320000000001754e-05, 2.512500000000084e-05, 2.130500000000271e-05, 2.4165999999999077e-05, 2.4098000000000175e-05, 1.9415999999997796e-05, 2.036099999999999e-05, 2.4208000000001256e-05, 2.040300000000217e-05, 2.2333999999998855e-05, 1.93890000000016e-05, 2.515299999999998e-05, 2.2278000000000575e-05, 2.513900000000041e-05, 2.4179999999998647e-05, 1.9416000000001266e-05, 2.033300000000085e-05, 2.416699999999855e-05, 1.93890000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.062" endtime="20201029 18:15:48.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.052" endtime="20201029 18:15:48.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.069" endtime="20201029 18:15:48.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.068" endtime="20201029 18:15:48.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.067" endtime="20201029 18:15:48.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.662" endtime="20201029 18:15:48.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.661" endtime="20201029 18:15:48.090"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.099" endtime="20201029 18:15:48.118"></status>
</kw>
<msg timestamp="20201029 18:15:48.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.097" endtime="20201029 18:15:48.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.119" endtime="20201029 18:15:48.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.122" endtime="20201029 18:15:48.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.095" endtime="20201029 18:15:48.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.093" endtime="20201029 18:15:48.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.131" endtime="20201029 18:15:48.418"></status>
</kw>
<msg timestamp="20201029 18:15:48.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.129" endtime="20201029 18:15:48.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.422" endtime="20201029 18:15:48.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.435" endtime="20201029 18:15:48.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.127" endtime="20201029 18:15:48.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.125" endtime="20201029 18:15:48.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.442" level="INFO">${RESULT} = [{'diff': 2.7056000000000996e-05}, {'diff': 2.612500000000184e-05}, {'diff': 2.4193999999998217e-05}, {'diff': 2.038899999999913e-05}, {'diff': 1.941700000000074e-05}, {'diff': 2.3263999999998536e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:48.439" endtime="20201029 18:15:48.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.447" level="INFO">${ACCURACY} = {'diff': [2.7056000000000996e-05, 2.612500000000184e-05, 2.4193999999998217e-05, 2.038899999999913e-05, 1.941700000000074e-05, 2.3263999999998536e-05, 2.230500000000024e-05, 2.6083999999999136e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:48.444" endtime="20201029 18:15:48.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.451" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.450" endtime="20201029 18:15:48.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.455" level="INFO">VALUE: [2.7056000000000996e-05, 2.612500000000184e-05, 2.4193999999998217e-05, 2.038899999999913e-05, 1.941700000000074e-05, 2.3263999999998536e-05, 2.230500000000024e-05, 2.6083999999999136e-05, 2.319500000000016e-05, 2.4236000000000396e-05, 2.5193999999999217e-05, 2.134700000000142e-05, 2.041699999999827e-05, 2.1305999999998715e-05, 2.512500000000084e-05, 2.136100000000099e-05, 1.9415999999997796e-05, 2.2305999999999715e-05, 2.515299999999998e-05, 1.937499999999856e-05, 2.615300000000098e-05, 2.3347999999999425e-05, 2.4222000000000826e-05, 2.130500000000271e-05, 2.423700000000334e-05, 2.5179999999999647e-05, 2.134700000000142e-05, 2.5152000000000507e-05, 1.9430000000000835e-05, 2.1319999999998285e-05, 1.941699999999727e-05, 1.937499999999856e-05, 2.4165999999999077e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.140300000000317e-05, 2.42230000000003e-05, 2.126300000000053e-05, 2.32229999999993e-05, 2.229100000000067e-05, 2.136099999999752e-05, 2.512499999999737e-05, 2.223699999999787e-05, 2.037499999999956e-05, 2.615300000000098e-05, 2.415299999999898e-05, 2.2263999999997536e-05, 2.3277999999998106e-05, 2.041699999999827e-05, 2.318099999999712e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.452" endtime="20201029 18:15:48.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.447" endtime="20201029 18:15:48.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.460" endtime="20201029 18:15:48.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.458" endtime="20201029 18:15:48.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.457" endtime="20201029 18:15:48.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.091" endtime="20201029 18:15:48.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.090" endtime="20201029 18:15:48.480"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.489" endtime="20201029 18:15:48.508"></status>
</kw>
<msg timestamp="20201029 18:15:48.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.488" endtime="20201029 18:15:48.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.509" endtime="20201029 18:15:48.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.512" endtime="20201029 18:15:48.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.485" endtime="20201029 18:15:48.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.483" endtime="20201029 18:15:48.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.521" endtime="20201029 18:15:48.816"></status>
</kw>
<msg timestamp="20201029 18:15:48.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023564333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023596181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.519" endtime="20201029 18:15:48.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023564333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023596181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.825" endtime="20201029 18:15:48.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.843" endtime="20201029 18:15:48.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.517" endtime="20201029 18:15:48.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.515" endtime="20201029 18:15:48.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.857" level="INFO">${RESULT} = [{'diff': 3.184800000000099e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.4180000000002116e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.4236000000000396e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:48.850" endtime="20201029 18:15:48.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.866" level="INFO">${ACCURACY} = {'diff': [3.184800000000099e-05, 2.036099999999999e-05, 2.4180000000002116e-05, 2.2278000000000575e-05, 2.036099999999999e-05, 2.4236000000000396e-05, 2.133299999999838e-05, 2.3235999999999396e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:15:48.859" endtime="20201029 18:15:48.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.875" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.873" endtime="20201029 18:15:48.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.877" level="INFO">VALUE: [3.184800000000099e-05, 2.036099999999999e-05, 2.4180000000002116e-05, 2.2278000000000575e-05, 2.036099999999999e-05, 2.4236000000000396e-05, 2.133299999999838e-05, 2.3235999999999396e-05, 1.9361999999998464e-05, 2.036099999999999e-05, 2.04029999999987e-05, 2.515299999999998e-05, 2.037499999999956e-05, 2.1305999999998715e-05, 2.037499999999956e-05, 2.320899999999973e-05, 2.4193999999998217e-05, 2.4222000000000826e-05, 2.418100000000159e-05, 2.230500000000024e-05, 2.6069000000000092e-05, 1.938899999999813e-05, 2.518099999999912e-05, 1.941700000000074e-05, 2.5193999999999217e-05, 2.034700000000042e-05, 2.036099999999999e-05, 2.3208000000000256e-05, 2.037499999999956e-05, 2.2278000000000575e-05, 2.516699999999955e-05, 1.9457999999999975e-05, 1.93890000000016e-05, 2.5096999999998232e-05, 2.1306000000002184e-05, 2.5138000000000937e-05, 2.515299999999998e-05, 2.2277999999997106e-05, 2.6069000000000092e-05, 2.3292000000001145e-05, 2.2278000000000575e-05, 2.0347999999999894e-05, 2.6082999999999662e-05, 2.50970000000017e-05, 2.3250000000002435e-05, 2.519499999999869e-05, 2.518099999999912e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.4208000000001256e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.876" endtime="20201029 18:15:48.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.868" endtime="20201029 18:15:48.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.883" endtime="20201029 18:15:48.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.881" endtime="20201029 18:15:48.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.880" endtime="20201029 18:15:48.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.481" endtime="20201029 18:15:48.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.481" endtime="20201029 18:15:48.904"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.912" endtime="20201029 18:15:48.933"></status>
</kw>
<msg timestamp="20201029 18:15:48.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.911" endtime="20201029 18:15:48.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.934" endtime="20201029 18:15:48.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.937" endtime="20201029 18:15:48.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.908" endtime="20201029 18:15:48.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.906" endtime="20201029 18:15:48.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.946" endtime="20201029 18:15:49.231"></status>
</kw>
<msg timestamp="20201029 18:15:49.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.944" endtime="20201029 18:15:49.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.236" endtime="20201029 18:15:49.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.244" endtime="20201029 18:15:49.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.942" endtime="20201029 18:15:49.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.940" endtime="20201029 18:15:49.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.250" level="INFO">${RESULT} = [{'diff': 1.7513999999999724e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.131899999999881e-05}, {'diff': 2.5193999999999217e-05}, {'diff': 2.6124999999998372e-05}, {'diff': 2.2249999999997966e-0...</msg>
<status status="PASS" starttime="20201029 18:15:49.247" endtime="20201029 18:15:49.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.258" level="INFO">${ACCURACY} = {'diff': [1.7513999999999724e-05, 2.3235999999999396e-05, 2.131899999999881e-05, 2.5193999999999217e-05, 2.6124999999998372e-05, 2.2249999999997966e-05, 2.034700000000042e-05, 2.036099999999999e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:49.251" endtime="20201029 18:15:49.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.262" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.261" endtime="20201029 18:15:49.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.265" level="INFO">VALUE: [1.7513999999999724e-05, 2.3235999999999396e-05, 2.131899999999881e-05, 2.5193999999999217e-05, 2.6124999999998372e-05, 2.2249999999997966e-05, 2.034700000000042e-05, 2.036099999999999e-05, 2.2250000000001435e-05, 2.6083999999999136e-05, 2.4194000000001686e-05, 2.4236000000000396e-05, 2.036099999999999e-05, 2.515299999999998e-05, 2.513900000000041e-05, 2.3249999999998966e-05, 2.134700000000142e-05, 2.136100000000099e-05, 2.3249999999998966e-05, 2.2250000000001435e-05, 2.2235999999998396e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.131899999999881e-05, 2.229100000000067e-05, 2.1334000000001324e-05, 1.9416000000001266e-05, 2.0291999999998145e-05, 2.037499999999956e-05, 2.513900000000041e-05, 2.3235999999999396e-05, 2.2278000000000575e-05, 2.5152000000000507e-05, 2.033299999999738e-05, 2.4180000000002116e-05, 2.133299999999838e-05, 2.6083999999999136e-05, 2.0334000000000324e-05, 2.138900000000013e-05, 2.3179999999997647e-05, 2.3236000000002865e-05, 2.2263999999997536e-05, 2.129099999999967e-05, 2.3221999999999826e-05, 2.4236000000000396e-05, 2.3277999999998106e-05, 2.0305999999997715e-05, 2.3221999999999826e-05, 2.416700000000202e-05, 2.512500000000084e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.264" endtime="20201029 18:15:49.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.259" endtime="20201029 18:15:49.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.270" endtime="20201029 18:15:49.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.268" endtime="20201029 18:15:49.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.267" endtime="20201029 18:15:49.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.905" endtime="20201029 18:15:49.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.904" endtime="20201029 18:15:49.290"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.299" endtime="20201029 18:15:49.316"></status>
</kw>
<msg timestamp="20201029 18:15:49.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.298" endtime="20201029 18:15:49.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.318" endtime="20201029 18:15:49.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.320" endtime="20201029 18:15:49.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.295" endtime="20201029 18:15:49.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.293" endtime="20201029 18:15:49.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.329" endtime="20201029 18:15:49.621"></status>
</kw>
<msg timestamp="20201029 18:15:49.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022384986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.328" endtime="20201029 18:15:49.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022384986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.626" endtime="20201029 18:15:49.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.634" endtime="20201029 18:15:49.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.325" endtime="20201029 18:15:49.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.323" endtime="20201029 18:15:49.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.640" level="INFO">${RESULT} = [{'diff': 2.9958000000000068e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.0334000000000324e-05}, {'diff': 2.0388000000003126e-05...</msg>
<status status="PASS" starttime="20201029 18:15:49.637" endtime="20201029 18:15:49.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.644" level="INFO">${ACCURACY} = {'diff': [2.9958000000000068e-05, 2.4236000000000396e-05, 2.513900000000041e-05, 2.513900000000041e-05, 2.0334000000000324e-05, 2.0388000000003126e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:49.641" endtime="20201029 18:15:49.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.649" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.648" endtime="20201029 18:15:49.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.651" level="INFO">VALUE: [2.9958000000000068e-05, 2.4236000000000396e-05, 2.513900000000041e-05, 2.513900000000041e-05, 2.0334000000000324e-05, 2.0388000000003126e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2.2290999999997202e-05, 2.034700000000042e-05, 2.026299999999953e-05, 2.133299999999838e-05, 2.3292000000001145e-05, 2.134699999999795e-05, 2.420900000000073e-05, 2.036099999999999e-05, 2.3208000000000256e-05, 2.419500000000116e-05, 2.3263999999998536e-05, 2.50970000000017e-05, 2.0306000000001184e-05, 2.0387999999999656e-05, 2.1348000000000894e-05, 2.4207999999997787e-05, 1.943100000000031e-05, 2.6083999999999136e-05, 2.4165999999999077e-05, 2.2292000000000145e-05, 2.512500000000084e-05, 2.513900000000041e-05, 2.130499999999924e-05, 2.4194000000001686e-05, 2.1305999999998715e-05, 2.0401999999999226e-05, 2.4235999999996927e-05, 2.130499999999924e-05, 2.4249999999999966e-05, 2.4277999999999106e-05, 2.133299999999838e-05, 2.3235999999999396e-05, 1.941700000000074e-05, 1.94029999999977e-05, 2.420900000000073e-05, 2.5193999999999217e-05, 2.137500000000056e-05, 2.036099999999999e-05, 2.133299999999838e-05, 2.0401999999999226e-05, 2.5179999999999647e-05, 1.940300000000117e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.650" endtime="20201029 18:15:49.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.645" endtime="20201029 18:15:49.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.656" endtime="20201029 18:15:49.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.655" endtime="20201029 18:15:49.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.654" endtime="20201029 18:15:49.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.291" endtime="20201029 18:15:49.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.291" endtime="20201029 18:15:49.677"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.686" endtime="20201029 18:15:49.704"></status>
</kw>
<msg timestamp="20201029 18:15:49.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.684" endtime="20201029 18:15:49.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.706" endtime="20201029 18:15:49.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.708" endtime="20201029 18:15:49.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.681" endtime="20201029 18:15:49.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.679" endtime="20201029 18:15:49.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.717" endtime="20201029 18:15:50.003"></status>
</kw>
<msg timestamp="20201029 18:15:50.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.716" endtime="20201029 18:15:50.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022696528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.007" endtime="20201029 18:15:50.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.015" endtime="20201029 18:15:50.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.713" endtime="20201029 18:15:50.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.711" endtime="20201029 18:15:50.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.022" level="INFO">${RESULT} = [{'diff': 1.1750000000001343e-05}, {'diff': 2.3276999999998632e-05}, {'diff': 2.131899999999881e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.4165999999999077e-05}, {'diff': 1.9430000000000835e-05...</msg>
<status status="PASS" starttime="20201029 18:15:50.019" endtime="20201029 18:15:50.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.026" level="INFO">${ACCURACY} = {'diff': [1.1750000000001343e-05, 2.3276999999998632e-05, 2.131899999999881e-05, 2.036099999999999e-05, 2.4165999999999077e-05, 1.9430000000000835e-05, 2.136100000000099e-05, 2.037499999999956e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:50.023" endtime="20201029 18:15:50.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.030" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.029" endtime="20201029 18:15:50.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.033" level="INFO">VALUE: [1.1750000000001343e-05, 2.3276999999998632e-05, 2.131899999999881e-05, 2.036099999999999e-05, 2.4165999999999077e-05, 1.9430000000000835e-05, 2.136100000000099e-05, 2.037499999999956e-05, 2.513900000000041e-05, 1.9444000000000405e-05, 2.516700000000302e-05, 2.038899999999913e-05, 2.4180000000002116e-05, 1.9430000000000835e-05, 2.518099999999912e-05, 2.2278000000000575e-05, 1.938899999999813e-05, 1.9388000000002126e-05, 2.04029999999987e-05, 2.4235999999996927e-05, 2.518099999999912e-05, 2.50970000000017e-05, 2.415299999999898e-05, 2.036099999999999e-05, 2.136100000000099e-05, 2.3263999999998536e-05, 1.9401999999998226e-05, 2.033299999999738e-05, 2.416700000000202e-05, 2.136100000000099e-05, 2.4277999999999106e-05, 2.4208000000001256e-05, 1.9430000000000835e-05, 2.036099999999999e-05, 2.4208000000001256e-05, 2.6124999999998372e-05, 2.04029999999987e-05, 2.4179999999998647e-05, 1.943100000000031e-05, 2.42230000000003e-05, 2.4179999999998647e-05, 2.4137999999999937e-05, 2.2278000000000575e-05, 1.9416000000001266e-05, 2.2333999999998855e-05, 2.4236000000000396e-05, 2.3278000000001575e-05, 2.4208000000001256e-05, 2.413899999999941e-05, 1.9430000000000835e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.032" endtime="20201029 18:15:50.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.027" endtime="20201029 18:15:50.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.039" endtime="20201029 18:15:50.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.037" endtime="20201029 18:15:50.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.036" endtime="20201029 18:15:50.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.678" endtime="20201029 18:15:50.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.677" endtime="20201029 18:15:50.060"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.068" endtime="20201029 18:15:50.090"></status>
</kw>
<msg timestamp="20201029 18:15:50.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.067" endtime="20201029 18:15:50.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.091" endtime="20201029 18:15:50.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.094" endtime="20201029 18:15:50.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.064" endtime="20201029 18:15:50.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.062" endtime="20201029 18:15:50.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.103" endtime="20201029 18:15:50.389"></status>
</kw>
<msg timestamp="20201029 18:15:50.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.101" endtime="20201029 18:15:50.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.393" endtime="20201029 18:15:50.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.402" endtime="20201029 18:15:50.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.099" endtime="20201029 18:15:50.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.097" endtime="20201029 18:15:50.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.408" level="INFO">${RESULT} = [{'diff': 2.7958000000001537e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.5193999999999217e-05}, {'diff': 2.32229999999993e-05}, {'diff': 2.1277999999999575e-05}, {'diff': 2.3278000000001575e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:50.405" endtime="20201029 18:15:50.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.413" level="INFO">${ACCURACY} = {'diff': [2.7958000000001537e-05, 2.230500000000024e-05, 2.5193999999999217e-05, 2.32229999999993e-05, 2.1277999999999575e-05, 2.3278000000001575e-05, 1.937499999999856e-05, 1.943099999999684e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:15:50.409" endtime="20201029 18:15:50.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.418" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.417" endtime="20201029 18:15:50.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.420" level="INFO">VALUE: [2.7958000000001537e-05, 2.230500000000024e-05, 2.5193999999999217e-05, 2.32229999999993e-05, 2.1277999999999575e-05, 2.3278000000001575e-05, 1.937499999999856e-05, 1.943099999999684e-05, 2.2236000000001865e-05, 2.411100000000027e-05, 2.416699999999855e-05, 2.2249999999997966e-05, 2.3250000000002435e-05, 2.130499999999924e-05, 2.416699999999855e-05, 2.4208000000001256e-05, 2.2264000000001005e-05, 2.3179999999997647e-05, 2.130499999999924e-05, 2.2249999999997966e-05, 2.1319999999998285e-05, 2.136100000000099e-05, 2.516699999999955e-05, 2.131899999999881e-05, 1.940300000000117e-05, 2.036099999999999e-05, 2.033300000000085e-05, 1.8471999999998545e-05, 2.134700000000142e-05, 2.036099999999999e-05, 2.131899999999881e-05, 2.5166000000000077e-05, 2.4249999999999966e-05, 2.3194000000000686e-05, 2.6069999999999566e-05, 2.036099999999999e-05, 2.4236000000000396e-05, 2.133299999999838e-05, 2.612500000000184e-05, 1.941700000000074e-05, 2.2249999999997966e-05, 2.130499999999924e-05, 2.037499999999956e-05, 2.0430000000001836e-05, 2.4277999999999106e-05, 2.0347999999999894e-05, 2.037499999999956e-05, 2.6083999999999136e-05, 2.5179999999999647e-05, 2.418099999999812e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.419" endtime="20201029 18:15:50.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.414" endtime="20201029 18:15:50.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.425" endtime="20201029 18:15:50.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.424" endtime="20201029 18:15:50.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.422" endtime="20201029 18:15:50.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.060" endtime="20201029 18:15:50.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.060" endtime="20201029 18:15:50.446"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.454" endtime="20201029 18:15:50.472"></status>
</kw>
<msg timestamp="20201029 18:15:50.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.453" endtime="20201029 18:15:50.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.474" endtime="20201029 18:15:50.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.477" endtime="20201029 18:15:50.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.450" endtime="20201029 18:15:50.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.448" endtime="20201029 18:15:50.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.486" endtime="20201029 18:15:50.772"></status>
</kw>
<msg timestamp="20201029 18:15:50.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.484" endtime="20201029 18:15:50.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.776" endtime="20201029 18:15:50.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.784" endtime="20201029 18:15:50.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.481" endtime="20201029 18:15:50.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.480" endtime="20201029 18:15:50.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.791" level="INFO">${RESULT} = [{'diff': 1.1805000000000149e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.131899999999881e-05}, {'diff': 2.2235999999998396e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:50.788" endtime="20201029 18:15:50.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.795" level="INFO">${ACCURACY} = {'diff': [1.1805000000000149e-05, 2.2319999999999285e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.131899999999881e-05, 2.2235999999998396e-05, 2.033300000000085e-05, 2.4236000000000396e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:50.792" endtime="20201029 18:15:50.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.800" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.799" endtime="20201029 18:15:50.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.802" level="INFO">VALUE: [1.1805000000000149e-05, 2.2319999999999285e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.131899999999881e-05, 2.2235999999998396e-05, 2.033300000000085e-05, 2.4236000000000396e-05, 2.516699999999955e-05, 2.3236000000002865e-05, 2.415300000000245e-05, 2.513899999999694e-05, 1.944499999999988e-05, 2.037499999999956e-05, 2.4221999999997357e-05, 2.3249999999998966e-05, 2.036099999999999e-05, 2.0347999999999894e-05, 2.4235999999996927e-05, 2.326300000000253e-05, 2.2249999999997966e-05, 2.3208000000000256e-05, 2.1348000000000894e-05, 2.3291999999997676e-05, 2.219499999999916e-05, 2.3235999999999396e-05, 2.131899999999881e-05, 2.1305999999998715e-05, 1.934699999999942e-05, 2.420900000000073e-05, 2.512500000000084e-05, 2.233299999999938e-05, 2.512500000000084e-05, 2.2250000000001435e-05, 2.1362000000000464e-05, 1.945899999999945e-05, 2.129099999999967e-05, 2.511100000000127e-05, 2.3278000000001575e-05, 2.613900000000141e-05, 2.0444000000001405e-05, 2.418100000000159e-05, 2.4207999999997787e-05, 2.134700000000142e-05, 1.936100000000246e-05, 2.0334000000000324e-05, 2.5054999999999522e-05, 2.519499999999869e-05, 2.1319999999998285e-05, 2.230500000000024e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.801" endtime="20201029 18:15:50.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.796" endtime="20201029 18:15:50.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.807" endtime="20201029 18:15:50.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.805" endtime="20201029 18:15:50.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.804" endtime="20201029 18:15:50.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.447" endtime="20201029 18:15:50.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.446" endtime="20201029 18:15:50.828"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.836" endtime="20201029 18:15:50.854"></status>
</kw>
<msg timestamp="20201029 18:15:50.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.835" endtime="20201029 18:15:50.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.855" endtime="20201029 18:15:50.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.858" endtime="20201029 18:15:50.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.832" endtime="20201029 18:15:50.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.830" endtime="20201029 18:15:50.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.867" endtime="20201029 18:15:51.152"></status>
</kw>
<msg timestamp="20201029 18:15:51.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.866" endtime="20201029 18:15:51.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.156" endtime="20201029 18:15:51.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.164" endtime="20201029 18:15:51.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.863" endtime="20201029 18:15:51.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.861" endtime="20201029 18:15:51.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.171" level="INFO">${RESULT} = [{'diff': 2.8069999999998096e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.3208000000000256e-05}, {'diff': 2.5097999999997705e-05}, {'diff': 2.1333999999997855e-05}, {'diff': 1.940300000000117e-05...</msg>
<status status="PASS" starttime="20201029 18:15:51.168" endtime="20201029 18:15:51.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.175" level="INFO">${ACCURACY} = {'diff': [2.8069999999998096e-05, 2.034700000000042e-05, 2.3208000000000256e-05, 2.5097999999997705e-05, 2.1333999999997855e-05, 1.940300000000117e-05, 2.4207999999997787e-05, 2.5179999999999647e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:51.172" endtime="20201029 18:15:51.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.180" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.179" endtime="20201029 18:15:51.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.182" level="INFO">VALUE: [2.8069999999998096e-05, 2.034700000000042e-05, 2.3208000000000256e-05, 2.5097999999997705e-05, 2.1333999999997855e-05, 1.940300000000117e-05, 2.4207999999997787e-05, 2.5179999999999647e-05, 1.940300000000117e-05, 1.938899999999813e-05, 2.419500000000116e-05, 1.938899999999813e-05, 2.615300000000098e-05, 2.231899999999981e-05, 2.4193999999998217e-05, 2.1319999999998285e-05, 2.5179999999999647e-05, 1.9457999999999975e-05, 2.1333999999997855e-05, 2.036099999999999e-05, 2.613900000000141e-05, 2.133299999999838e-05, 2.413899999999941e-05, 1.931900000000028e-05, 2.3249999999998966e-05, 2.5207999999998787e-05, 2.5152000000000507e-05, 2.3194000000000686e-05, 1.943100000000031e-05, 2.03890000000026e-05, 2.4263999999999536e-05, 2.5082999999998662e-05, 2.516699999999955e-05, 2.6069000000000092e-05, 1.9415999999997796e-05, 2.5138000000000937e-05, 2.036099999999999e-05, 2.5098000000001175e-05, 2.1292000000002614e-05, 2.2194000000003156e-05, 2.131899999999881e-05, 2.516699999999955e-05, 2.033299999999738e-05, 2.515299999999998e-05, 2.2305999999999715e-05, 2.3278000000001575e-05, 2.3208000000000256e-05, 2.42230000000003e-05, 1.94029999999977e-05, 2.0305999999997715e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.181" endtime="20201029 18:15:51.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.176" endtime="20201029 18:15:51.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.188" endtime="20201029 18:15:51.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.186" endtime="20201029 18:15:51.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.185" endtime="20201029 18:15:51.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.829" endtime="20201029 18:15:51.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.828" endtime="20201029 18:15:51.209"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.217" endtime="20201029 18:15:51.240"></status>
</kw>
<msg timestamp="20201029 18:15:51.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.216" endtime="20201029 18:15:51.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.242" endtime="20201029 18:15:51.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.244" endtime="20201029 18:15:51.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.213" endtime="20201029 18:15:51.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.211" endtime="20201029 18:15:51.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.253" endtime="20201029 18:15:51.538"></status>
</kw>
<msg timestamp="20201029 18:15:51.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.252" endtime="20201029 18:15:51.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.542" endtime="20201029 18:15:51.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.550" endtime="20201029 18:15:51.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.249" endtime="20201029 18:15:51.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.248" endtime="20201029 18:15:51.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.557" level="INFO">${RESULT} = [{'diff': 1.658300000000057e-05}, {'diff': 2.0306000000001184e-05}, {'diff': 2.418100000000159e-05}, {'diff': 2.6042000000000426e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.036099999999999e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:51.553" endtime="20201029 18:15:51.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.562" level="INFO">${ACCURACY} = {'diff': [1.658300000000057e-05, 2.0306000000001184e-05, 2.418100000000159e-05, 2.6042000000000426e-05, 2.2292000000000145e-05, 2.036099999999999e-05, 2.5193999999999217e-05, 2.037499999999956e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:15:51.558" endtime="20201029 18:15:51.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.566" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.565" endtime="20201029 18:15:51.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.569" level="INFO">VALUE: [1.658300000000057e-05, 2.0306000000001184e-05, 2.418100000000159e-05, 2.6042000000000426e-05, 2.2292000000000145e-05, 2.036099999999999e-05, 2.5193999999999217e-05, 2.037499999999956e-05, 1.93890000000016e-05, 2.2292000000000145e-05, 2.1334000000001324e-05, 2.32229999999993e-05, 2.2278000000000575e-05, 2.0347999999999894e-05, 2.416700000000202e-05, 1.944499999999988e-05, 2.1319999999998285e-05, 2.2276999999997632e-05, 2.519499999999869e-05, 2.1334000000001324e-05, 2.416699999999855e-05, 2.2221999999998826e-05, 1.944499999999988e-05, 2.034700000000042e-05, 2.041699999999827e-05, 2.412499999999984e-05, 2.033299999999738e-05, 2.418099999999812e-05, 2.2334000000002324e-05, 2.6138000000001937e-05, 1.9416000000001266e-05, 2.516699999999955e-05, 2.136100000000099e-05, 2.2264000000001005e-05, 2.513900000000041e-05, 2.036099999999999e-05, 2.1250000000000435e-05, 2.3264000000002005e-05, 2.4236000000000396e-05, 2.6096999999999232e-05, 2.5070000000002035e-05, 2.3249999999998966e-05, 2.134699999999795e-05, 2.313900000000188e-05, 2.419500000000116e-05, 2.2263999999997536e-05, 2.4165999999999077e-05, 2.422299999999683e-05, 2.043099999999784e-05, 2.5138000000000937e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.567" endtime="20201029 18:15:51.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.563" endtime="20201029 18:15:51.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.574" endtime="20201029 18:15:51.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.572" endtime="20201029 18:15:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.571" endtime="20201029 18:15:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.209" endtime="20201029 18:15:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.209" endtime="20201029 18:15:51.594"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.603" endtime="20201029 18:15:51.622"></status>
</kw>
<msg timestamp="20201029 18:15:51.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.601" endtime="20201029 18:15:51.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.624" endtime="20201029 18:15:51.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.626" endtime="20201029 18:15:51.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.599" endtime="20201029 18:15:51.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.597" endtime="20201029 18:15:51.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.635" endtime="20201029 18:15:51.922"></status>
</kw>
<msg timestamp="20201029 18:15:51.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024533917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.634" endtime="20201029 18:15:51.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024513569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024533917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.926" endtime="20201029 18:15:51.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.934" endtime="20201029 18:15:51.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.631" endtime="20201029 18:15:51.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.629" endtime="20201029 18:15:51.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.941" level="INFO">${RESULT} = [{'diff': 2.0347999999999894e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.4249999999999966e-05}, {'diff': 2.419500000000116e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.3208000000000256e-05...</msg>
<status status="PASS" starttime="20201029 18:15:51.937" endtime="20201029 18:15:51.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.945" level="INFO">${ACCURACY} = {'diff': [2.0347999999999894e-05, 2.518099999999912e-05, 2.4249999999999966e-05, 2.419500000000116e-05, 2.2249999999997966e-05, 2.3208000000000256e-05, 2.12770000000001e-05, 1.938899999999813e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 18:15:51.942" endtime="20201029 18:15:51.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.949" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.948" endtime="20201029 18:15:51.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.952" level="INFO">VALUE: [2.0347999999999894e-05, 2.518099999999912e-05, 2.4249999999999966e-05, 2.419500000000116e-05, 2.2249999999997966e-05, 2.3208000000000256e-05, 2.12770000000001e-05, 1.938899999999813e-05, 2.50970000000017e-05, 2.0444000000001405e-05, 2.4277999999999106e-05, 2.413899999999941e-05, 2.416700000000202e-05, 2.419499999999769e-05, 2.513900000000041e-05, 2.613900000000141e-05, 2.234699999999895e-05, 2.233299999999938e-05, 2.2333999999998855e-05, 2.32229999999993e-05, 2.319500000000016e-05, 2.515299999999998e-05, 2.3235999999999396e-05, 2.2264000000001005e-05, 2.04029999999987e-05, 2.136100000000099e-05, 2.513900000000041e-05, 1.938899999999813e-05, 2.512500000000084e-05, 1.94029999999977e-05, 2.5152000000000507e-05, 2.2263999999997536e-05, 2.416700000000202e-05, 2.2264000000001005e-05, 2.3208000000000256e-05, 2.512500000000084e-05, 2.2249999999997966e-05, 2.519500000000216e-05, 2.038899999999913e-05, 2.131900000000228e-05, 2.4180000000002116e-05, 2.50970000000017e-05, 2.512499999999737e-05, 2.5082999999998662e-05, 2.2264000000001005e-05, 2.136100000000099e-05, 2.518099999999912e-05, 2.6097999999998706e-05, 2.419500000000116e-05, 2.418099999999812e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.950" endtime="20201029 18:15:51.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.946" endtime="20201029 18:15:51.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.957" endtime="20201029 18:15:51.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.955" endtime="20201029 18:15:51.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.954" endtime="20201029 18:15:51.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.595" endtime="20201029 18:15:51.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.595" endtime="20201029 18:15:51.977"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.986" endtime="20201029 18:15:52.005"></status>
</kw>
<msg timestamp="20201029 18:15:52.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.984" endtime="20201029 18:15:52.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.007" endtime="20201029 18:15:52.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.009" endtime="20201029 18:15:52.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.982" endtime="20201029 18:15:52.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.980" endtime="20201029 18:15:52.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.018" endtime="20201029 18:15:52.304"></status>
</kw>
<msg timestamp="20201029 18:15:52.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023379528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023412389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.017" endtime="20201029 18:15:52.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023379528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023412389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.308" endtime="20201029 18:15:52.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.316" endtime="20201029 18:15:52.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.014" endtime="20201029 18:15:52.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.013" endtime="20201029 18:15:52.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.323" level="INFO">${RESULT} = [{'diff': 3.2860999999998614e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.2278000000000575e-...</msg>
<status status="PASS" starttime="20201029 18:15:52.320" endtime="20201029 18:15:52.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.327" level="INFO">${ACCURACY} = {'diff': [3.2860999999998614e-05, 2.4236000000000396e-05, 2.2278000000000575e-05, 2.5179999999999647e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.137500000000056e-05, 2.231899999999981e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:52.324" endtime="20201029 18:15:52.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.331" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.330" endtime="20201029 18:15:52.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.334" level="INFO">VALUE: [3.2860999999998614e-05, 2.4236000000000396e-05, 2.2278000000000575e-05, 2.5179999999999647e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.137500000000056e-05, 2.231899999999981e-05, 2.3208000000000256e-05, 2.137500000000056e-05, 2.2319999999999285e-05, 2.038899999999913e-05, 2.513900000000041e-05, 2.034699999999695e-05, 2.416699999999855e-05, 2.12770000000001e-05, 2.3249999999998966e-05, 1.94029999999977e-05, 2.237499999999809e-05, 2.3250000000002435e-05, 1.937499999999856e-05, 2.3276999999998632e-05, 2.03890000000026e-05, 1.9402000000001696e-05, 1.9457999999999975e-05, 2.138900000000013e-05, 2.229100000000067e-05, 2.415300000000245e-05, 2.1334000000001324e-05, 2.133299999999838e-05, 2.420900000000073e-05, 2.134700000000142e-05, 2.3277999999998106e-05, 2.2292000000000145e-05, 2.6055000000000522e-05, 2.32229999999993e-05, 1.9458000000003445e-05, 2.4194000000001686e-05, 2.6096999999999232e-05, 2.04029999999987e-05, 2.511100000000127e-05, 2.418100000000159e-05, 2.4151999999999507e-05, 2.3208000000000256e-05, 2.134699999999795e-05, 2.3263999999998536e-05, 2.3250000000002435e-05, 2.2263999999997536e-05, 2.5112000000000745e-05, 1.943100000000031e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.332" endtime="20201029 18:15:52.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.328" endtime="20201029 18:15:52.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.343" endtime="20201029 18:15:52.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.342" endtime="20201029 18:15:52.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.341" endtime="20201029 18:15:52.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.978" endtime="20201029 18:15:52.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.978" endtime="20201029 18:15:52.364"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.373" endtime="20201029 18:15:52.393"></status>
</kw>
<msg timestamp="20201029 18:15:52.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.371" endtime="20201029 18:15:52.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.394" endtime="20201029 18:15:52.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.397" endtime="20201029 18:15:52.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.369" endtime="20201029 18:15:52.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.367" endtime="20201029 18:15:52.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.406" endtime="20201029 18:15:52.691"></status>
</kw>
<msg timestamp="20201029 18:15:52.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023452903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.404" endtime="20201029 18:15:52.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023452903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023479944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.696" endtime="20201029 18:15:52.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.704" endtime="20201029 18:15:52.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.401" endtime="20201029 18:15:52.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.400" endtime="20201029 18:15:52.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.710" level="INFO">${RESULT} = [{'diff': 2.7040999999998483e-05}, {'diff': 2.5166000000000077e-05}, {'diff': 1.943100000000031e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.036099999999999e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:52.707" endtime="20201029 18:15:52.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.718" level="INFO">${ACCURACY} = {'diff': [2.7040999999998483e-05, 2.5166000000000077e-05, 1.943100000000031e-05, 2.512500000000084e-05, 2.3263999999998536e-05, 2.036099999999999e-05, 2.420899999999726e-05, 2.2250000000001435e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:52.711" endtime="20201029 18:15:52.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.722" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.721" endtime="20201029 18:15:52.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.725" level="INFO">VALUE: [2.7040999999998483e-05, 2.5166000000000077e-05, 1.943100000000031e-05, 2.512500000000084e-05, 2.3263999999998536e-05, 2.036099999999999e-05, 2.420899999999726e-05, 2.2250000000001435e-05, 2.3250000000002435e-05, 1.9457999999999975e-05, 2.419500000000116e-05, 1.94029999999977e-05, 2.1320000000001754e-05, 2.134700000000142e-05, 1.837500000000103e-05, 2.0347999999999894e-05, 2.036099999999999e-05, 2.136099999999752e-05, 2.518099999999912e-05, 1.9485999999999115e-05, 2.133299999999838e-05, 2.5193999999999217e-05, 2.133299999999838e-05, 2.3235999999999396e-05, 1.943100000000031e-05, 2.3208000000000256e-05, 2.412499999999984e-05, 2.129099999999967e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.415299999999898e-05, 2.033300000000085e-05, 2.2250000000001435e-05, 2.5221999999998357e-05, 2.0320000000000754e-05, 2.3208000000000256e-05, 2.4165999999999077e-05, 2.415299999999898e-05, 2.419500000000116e-05, 2.1320000000001754e-05, 2.5166000000000077e-05, 2.034700000000042e-05, 2.6124999999998372e-05, 2.133299999999838e-05, 2.038899999999913e-05, 2.416699999999855e-05, 2.4222000000000826e-05, 1.9416000000001266e-05, 2.037499999999956e-05, 1.93890000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.723" endtime="20201029 18:15:52.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.719" endtime="20201029 18:15:52.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.730" endtime="20201029 18:15:52.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.728" endtime="20201029 18:15:52.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.727" endtime="20201029 18:15:52.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.365" endtime="20201029 18:15:52.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.364" endtime="20201029 18:15:52.750"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.759" endtime="20201029 18:15:52.778"></status>
</kw>
<msg timestamp="20201029 18:15:52.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.757" endtime="20201029 18:15:52.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.780" endtime="20201029 18:15:52.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.782" endtime="20201029 18:15:52.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.755" endtime="20201029 18:15:52.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.753" endtime="20201029 18:15:52.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.791" endtime="20201029 18:15:53.079"></status>
</kw>
<msg timestamp="20201029 18:15:53.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024134444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024158653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.790" endtime="20201029 18:15:53.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024134444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024158653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.083" endtime="20201029 18:15:53.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.091" endtime="20201029 18:15:53.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.787" endtime="20201029 18:15:53.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.786" endtime="20201029 18:15:53.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.098" level="INFO">${RESULT} = [{'diff': 2.420899999999726e-05}, {'diff': 2.4179999999998647e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.3264000000002005e-05}, {'diff': 2.2208000000002726e-05}, {'diff': 2.515299999999998e-05...</msg>
<status status="PASS" starttime="20201029 18:15:53.094" endtime="20201029 18:15:53.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.102" level="INFO">${ACCURACY} = {'diff': [2.420899999999726e-05, 2.4179999999998647e-05, 2.2278000000000575e-05, 2.3264000000002005e-05, 2.2208000000002726e-05, 2.515299999999998e-05, 2.034700000000042e-05, 2.3264000000002005e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:53.099" endtime="20201029 18:15:53.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.106" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.105" endtime="20201029 18:15:53.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.109" level="INFO">VALUE: [2.420899999999726e-05, 2.4179999999998647e-05, 2.2278000000000575e-05, 2.3264000000002005e-05, 2.2208000000002726e-05, 2.515299999999998e-05, 2.034700000000042e-05, 2.3264000000002005e-05, 2.4236000000000396e-05, 2.133299999999838e-05, 2.322300000000277e-05, 2.416699999999855e-05, 2.513900000000041e-05, 2.036099999999999e-05, 1.945899999999945e-05, 2.230500000000024e-05, 2.0347999999999894e-05, 2.03890000000026e-05, 2.5193999999999217e-05, 2.2277999999997106e-05, 2.130500000000271e-05, 2.412500000000331e-05, 2.034699999999695e-05, 2.320899999999973e-05, 2.5110999999997802e-05, 2.1334000000001324e-05, 2.2222000000002295e-05, 2.037499999999956e-05, 2.3208000000000256e-05, 2.613900000000141e-05, 2.4207999999997787e-05, 2.0347999999999894e-05, 2.516699999999955e-05, 1.940300000000117e-05, 2.034700000000042e-05, 2.32770000000021e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.32229999999993e-05, 2.2305999999999715e-05, 2.133299999999838e-05, 1.941700000000074e-05, 2.4194000000001686e-05, 2.3250000000002435e-05, 2.420900000000073e-05, 1.941699999999727e-05, 2.2264000000001005e-05, 2.134700000000142e-05, 2.516699999999955e-05, 2.3221999999999826e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.107" endtime="20201029 18:15:53.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.103" endtime="20201029 18:15:53.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.114" endtime="20201029 18:15:53.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.112" endtime="20201029 18:15:53.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.111" endtime="20201029 18:15:53.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.751" endtime="20201029 18:15:53.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.751" endtime="20201029 18:15:53.134"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.143" endtime="20201029 18:15:53.160"></status>
</kw>
<msg timestamp="20201029 18:15:53.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.141" endtime="20201029 18:15:53.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.162" endtime="20201029 18:15:53.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.164" endtime="20201029 18:15:53.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.139" endtime="20201029 18:15:53.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.137" endtime="20201029 18:15:53.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.173" endtime="20201029 18:15:53.458"></status>
</kw>
<msg timestamp="20201029 18:15:53.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.171" endtime="20201029 18:15:53.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.463" endtime="20201029 18:15:53.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.471" endtime="20201029 18:15:53.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.169" endtime="20201029 18:15:53.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.167" endtime="20201029 18:15:53.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.477" level="INFO">${RESULT} = [{'diff': 1.4624999999997279e-05}, {'diff': 2.234700000000242e-05}, {'diff': 2.6096999999999232e-05}, {'diff': 2.4208000000001256e-05}, {'diff': 2.4194000000001686e-05}, {'diff': 2.03890000000026e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:53.474" endtime="20201029 18:15:53.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.481" level="INFO">${ACCURACY} = {'diff': [1.4624999999997279e-05, 2.234700000000242e-05, 2.6096999999999232e-05, 2.4208000000001256e-05, 2.4194000000001686e-05, 2.03890000000026e-05, 2.519500000000216e-05, 1.9430000000000835e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:53.478" endtime="20201029 18:15:53.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.486" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.485" endtime="20201029 18:15:53.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.488" level="INFO">VALUE: [1.4624999999997279e-05, 2.234700000000242e-05, 2.6096999999999232e-05, 2.4208000000001256e-05, 2.4194000000001686e-05, 2.03890000000026e-05, 2.519500000000216e-05, 1.9430000000000835e-05, 2.5179999999999647e-05, 2.133300000000185e-05, 2.037500000000303e-05, 2.515299999999998e-05, 2.515299999999998e-05, 2.2262999999998062e-05, 2.2236000000001865e-05, 2.133300000000185e-05, 2.1334000000001324e-05, 2.229100000000067e-05, 2.418100000000159e-05, 2.2290999999997202e-05, 2.5166000000000077e-05, 2.5110999999997802e-05, 2.033299999999738e-05, 2.2235999999998396e-05, 2.136099999999752e-05, 2.2305999999999715e-05, 2.419500000000116e-05, 1.9387999999998656e-05, 2.034700000000042e-05, 2.4179999999998647e-05, 2.320899999999973e-05, 2.131899999999881e-05, 1.9444000000000405e-05, 2.4236000000000396e-05, 1.938899999999813e-05, 2.133299999999838e-05, 2.2278000000000575e-05, 2.513900000000041e-05, 2.6110999999998802e-05, 2.130499999999924e-05, 2.516699999999955e-05, 2.4222000000000826e-05, 2.2292000000000145e-05, 2.036099999999999e-05, 2.5152000000000507e-05, 2.2263999999997536e-05, 2.4207999999997787e-05, 2.4207999999997787e-05, 2.036099999999999e-05, 2.415299999999898e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.487" endtime="20201029 18:15:53.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.482" endtime="20201029 18:15:53.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.494" endtime="20201029 18:15:53.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.493" endtime="20201029 18:15:53.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.491" endtime="20201029 18:15:53.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.135" endtime="20201029 18:15:53.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.135" endtime="20201029 18:15:53.515"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.524" endtime="20201029 18:15:53.543"></status>
</kw>
<msg timestamp="20201029 18:15:53.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.523" endtime="20201029 18:15:53.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.545" endtime="20201029 18:15:53.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.547" endtime="20201029 18:15:53.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.520" endtime="20201029 18:15:53.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.518" endtime="20201029 18:15:53.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.556" endtime="20201029 18:15:53.844"></status>
</kw>
<msg timestamp="20201029 18:15:53.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023105597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.555" endtime="20201029 18:15:53.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023105597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.848" endtime="20201029 18:15:53.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.856" endtime="20201029 18:15:53.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.552" endtime="20201029 18:15:53.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.551" endtime="20201029 18:15:53.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.863" level="INFO">${RESULT} = [{'diff': 2.7082999999997193e-05}, {'diff': 2.037500000000303e-05}, {'diff': 2.034699999999695e-05}, {'diff': 2.3180000000001116e-05}, {'diff': 2.3208000000000256e-05}, {'diff': 2.1292000000002614e-05...</msg>
<status status="PASS" starttime="20201029 18:15:53.860" endtime="20201029 18:15:53.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.868" level="INFO">${ACCURACY} = {'diff': [2.7082999999997193e-05, 2.037500000000303e-05, 2.034699999999695e-05, 2.3180000000001116e-05, 2.3208000000000256e-05, 2.1292000000002614e-05, 2.034699999999695e-05, 2.5138000000000937e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:53.864" endtime="20201029 18:15:53.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.872" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.871" endtime="20201029 18:15:53.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.875" level="INFO">VALUE: [2.7082999999997193e-05, 2.037500000000303e-05, 2.034699999999695e-05, 2.3180000000001116e-05, 2.3208000000000256e-05, 2.1292000000002614e-05, 2.034699999999695e-05, 2.5138000000000937e-05, 2.3306000000000715e-05, 2.4306000000001715e-05, 2.038899999999913e-05, 2.036099999999999e-05, 2.1319999999998285e-05, 2.511100000000127e-05, 2.1320000000001754e-05, 2.513900000000041e-05, 2.423699999999987e-05, 2.3235999999999396e-05, 2.133299999999838e-05, 2.3235999999999396e-05, 2.4236000000000396e-05, 2.520899999999826e-05, 2.138900000000013e-05, 2.2278000000000575e-05, 2.5040999999999952e-05, 2.2276999999997632e-05, 2.138900000000013e-05, 2.137500000000056e-05, 2.515299999999998e-05, 2.512500000000084e-05, 1.93890000000016e-05, 2.131900000000228e-05, 2.04029999999987e-05, 2.2278000000000575e-05, 2.505500000000299e-05, 2.3221999999999826e-05, 2.034700000000042e-05, 2.131899999999881e-05, 2.518099999999912e-05, 2.2263999999997536e-05, 2.3194000000000686e-05, 2.036099999999999e-05, 2.034700000000042e-05, 2.3250000000002435e-05, 2.034700000000042e-05, 2.3249999999998966e-05, 2.60970000000027e-05, 2.130499999999924e-05, 2.133300000000185e-05, 2.3208000000000256e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.873" endtime="20201029 18:15:53.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.869" endtime="20201029 18:15:53.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.880" endtime="20201029 18:15:53.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.878" endtime="20201029 18:15:53.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.877" endtime="20201029 18:15:53.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.516" endtime="20201029 18:15:53.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.516" endtime="20201029 18:15:53.901"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.909" endtime="20201029 18:15:53.928"></status>
</kw>
<msg timestamp="20201029 18:15:53.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.908" endtime="20201029 18:15:53.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.930" endtime="20201029 18:15:53.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.932" endtime="20201029 18:15:53.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.905" endtime="20201029 18:15:53.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.903" endtime="20201029 18:15:53.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.941" endtime="20201029 18:15:54.227"></status>
</kw>
<msg timestamp="20201029 18:15:54.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024434722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024455125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.940" endtime="20201029 18:15:54.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024434722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024455125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.232" endtime="20201029 18:15:54.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.240" endtime="20201029 18:15:54.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.937" endtime="20201029 18:15:54.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.936" endtime="20201029 18:15:54.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.246" level="INFO">${RESULT} = [{'diff': 2.040300000000217e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.516700000000302e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.140300000000317e-05}, {'diff': 2.2264000000001005e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:54.243" endtime="20201029 18:15:54.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.251" level="INFO">${ACCURACY} = {'diff': [2.040300000000217e-05, 2.2319999999999285e-05, 2.516700000000302e-05, 2.3235999999999396e-05, 2.140300000000317e-05, 2.2264000000001005e-05, 2.22770000000011e-05, 2.2263999999997536e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 18:15:54.247" endtime="20201029 18:15:54.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.255" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.254" endtime="20201029 18:15:54.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.258" level="INFO">VALUE: [2.040300000000217e-05, 2.2319999999999285e-05, 2.516700000000302e-05, 2.3235999999999396e-05, 2.140300000000317e-05, 2.2264000000001005e-05, 2.22770000000011e-05, 2.2263999999997536e-05, 2.4165999999999077e-05, 2.2292000000000145e-05, 2.518099999999912e-05, 2.4222000000000826e-05, 1.9416000000001266e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.133299999999838e-05, 2.1333999999997855e-05, 2.134699999999795e-05, 2.236099999999852e-05, 2.030499999999824e-05, 1.9387999999998656e-05, 2.133300000000185e-05, 2.518099999999912e-05, 2.5166000000000077e-05, 1.940300000000117e-05, 1.9415999999997796e-05, 2.3278000000001575e-05, 2.0347999999999894e-05, 2.031899999999781e-05, 2.2305999999999715e-05, 2.3278000000001575e-05, 2.2249999999997966e-05, 2.4208000000001256e-05, 2.037499999999956e-05, 2.5207999999998787e-05, 2.2276999999997632e-05, 1.94029999999977e-05, 2.3250000000002435e-05, 2.2320000000002754e-05, 2.3263999999998536e-05, 2.32229999999993e-05, 2.03890000000026e-05, 2.6041000000000952e-05, 2.4207999999997787e-05, 2.418100000000159e-05, 1.943100000000031e-05, 2.040300000000217e-05, 2.1305999999998715e-05, 2.512500000000084e-05, 2.5152000000000507e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.256" endtime="20201029 18:15:54.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.251" endtime="20201029 18:15:54.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.263" endtime="20201029 18:15:54.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.261" endtime="20201029 18:15:54.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.260" endtime="20201029 18:15:54.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.901" endtime="20201029 18:15:54.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.901" endtime="20201029 18:15:54.283"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.292" endtime="20201029 18:15:54.313"></status>
</kw>
<msg timestamp="20201029 18:15:54.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.290" endtime="20201029 18:15:54.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.315" endtime="20201029 18:15:54.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.317" endtime="20201029 18:15:54.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.288" endtime="20201029 18:15:54.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.286" endtime="20201029 18:15:54.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.326" endtime="20201029 18:15:54.615"></status>
</kw>
<msg timestamp="20201029 18:15:54.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023450639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023486347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.325" endtime="20201029 18:15:54.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023450639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023486347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.619" endtime="20201029 18:15:54.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.627" endtime="20201029 18:15:54.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.322" endtime="20201029 18:15:54.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.320" endtime="20201029 18:15:54.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.634" level="INFO">${RESULT} = [{'diff': 3.570800000000235e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.5193999999999217e-05}, {'diff': 2.2222000000002295e-05}, {'diff': 2.3208000000000256e-05...</msg>
<status status="PASS" starttime="20201029 18:15:54.631" endtime="20201029 18:15:54.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.638" level="INFO">${ACCURACY} = {'diff': [3.570800000000235e-05, 2.034700000000042e-05, 2.2250000000001435e-05, 2.5193999999999217e-05, 2.2222000000002295e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.5110999999997802e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:54.635" endtime="20201029 18:15:54.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.642" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.641" endtime="20201029 18:15:54.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.645" level="INFO">VALUE: [3.570800000000235e-05, 2.034700000000042e-05, 2.2250000000001435e-05, 2.5193999999999217e-05, 2.2222000000002295e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.5110999999997802e-05, 2.129099999999967e-05, 2.515299999999998e-05, 2.411100000000027e-05, 1.9430000000000835e-05, 2.136099999999752e-05, 2.037499999999956e-05, 2.2264000000001005e-05, 2.1250000000000435e-05, 2.130499999999924e-05, 2.233299999999938e-05, 2.04029999999987e-05, 2.2250000000001435e-05, 2.233299999999938e-05, 2.416699999999855e-05, 2.129099999999967e-05, 2.334699999999995e-05, 2.231899999999981e-05, 2.3263999999998536e-05, 2.033300000000085e-05, 2.32229999999993e-05, 2.2264000000001005e-05, 2.137499999999709e-05, 2.4222000000000826e-05, 2.3222000000003296e-05, 1.9416000000001266e-05, 2.3207999999996787e-05, 2.2292000000000145e-05, 2.513900000000041e-05, 2.034700000000042e-05, 2.329100000000167e-05, 2.134699999999795e-05, 2.234700000000242e-05, 2.137500000000056e-05, 2.3180000000001116e-05, 2.2278000000000575e-05, 2.612500000000184e-05, 2.2180000000000116e-05, 1.945899999999945e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.418099999999812e-05, 2.3235999999999396e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.643" endtime="20201029 18:15:54.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.639" endtime="20201029 18:15:54.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.651" endtime="20201029 18:15:54.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.649" endtime="20201029 18:15:54.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.648" endtime="20201029 18:15:54.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.284" endtime="20201029 18:15:54.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.284" endtime="20201029 18:15:54.671"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.680" endtime="20201029 18:15:54.698"></status>
</kw>
<msg timestamp="20201029 18:15:54.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.678" endtime="20201029 18:15:54.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.699" endtime="20201029 18:15:54.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.702" endtime="20201029 18:15:54.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.676" endtime="20201029 18:15:54.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.674" endtime="20201029 18:15:54.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.711" endtime="20201029 18:15:54.997"></status>
</kw>
<msg timestamp="20201029 18:15:55.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022242347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.709" endtime="20201029 18:15:55.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022242347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.001" endtime="20201029 18:15:55.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.009" endtime="20201029 18:15:55.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.707" endtime="20201029 18:15:55.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.705" endtime="20201029 18:15:55.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.016" level="INFO">${RESULT} = [{'diff': 1.4639000000000318e-05}, {'diff': 1.937499999999856e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.3278000000001575e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:55.013" endtime="20201029 18:15:55.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.021" level="INFO">${ACCURACY} = {'diff': [1.4639000000000318e-05, 1.937499999999856e-05, 2.2263999999997536e-05, 2.136100000000099e-05, 2.037499999999956e-05, 2.3278000000001575e-05, 2.038899999999913e-05, 2.3221999999999826e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:55.017" endtime="20201029 18:15:55.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.026" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.025" endtime="20201029 18:15:55.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.028" level="INFO">VALUE: [1.4639000000000318e-05, 1.937499999999856e-05, 2.2263999999997536e-05, 2.136100000000099e-05, 2.037499999999956e-05, 2.3278000000001575e-05, 2.038899999999913e-05, 2.3221999999999826e-05, 2.130499999999924e-05, 2.22770000000011e-05, 2.231899999999981e-05, 2.5193999999999217e-05, 2.3291999999997676e-05, 2.511100000000127e-05, 1.941699999999727e-05, 2.515299999999998e-05, 2.137500000000056e-05, 1.94029999999977e-05, 2.4222000000000826e-05, 2.230500000000024e-05, 2.036099999999999e-05, 2.40970000000007e-05, 2.318100000000059e-05, 2.3249999999998966e-05, 2.42230000000003e-05, 2.4151999999999507e-05, 2.1333999999997855e-05, 2.129099999999967e-05, 2.3235999999999396e-05, 2.0306000000001184e-05, 2.3194000000000686e-05, 2.1305999999998715e-05, 1.9416000000001266e-05, 1.9388000000002126e-05, 2.4165999999999077e-05, 2.6151999999998038e-05, 1.9457999999999975e-05, 2.2292000000000145e-05, 2.1306000000002184e-05, 2.513900000000041e-05, 2.5152000000000507e-05, 2.415299999999898e-05, 2.131900000000228e-05, 2.034700000000042e-05, 1.941700000000074e-05, 2.233299999999938e-05, 2.3221999999999826e-05, 2.2264000000001005e-05, 2.418099999999812e-05, 2.2277999999997106e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.027" endtime="20201029 18:15:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.022" endtime="20201029 18:15:55.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.033" endtime="20201029 18:15:55.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.032" endtime="20201029 18:15:55.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.030" endtime="20201029 18:15:55.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.672" endtime="20201029 18:15:55.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.672" endtime="20201029 18:15:55.054"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.062" endtime="20201029 18:15:55.080"></status>
</kw>
<msg timestamp="20201029 18:15:55.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.061" endtime="20201029 18:15:55.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.081" endtime="20201029 18:15:55.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.084" endtime="20201029 18:15:55.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.058" endtime="20201029 18:15:55.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.056" endtime="20201029 18:15:55.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.093" endtime="20201029 18:15:55.379"></status>
</kw>
<msg timestamp="20201029 18:15:55.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.091" endtime="20201029 18:15:55.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.383" endtime="20201029 18:15:55.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.391" endtime="20201029 18:15:55.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.088" endtime="20201029 18:15:55.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.087" endtime="20201029 18:15:55.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.398" level="INFO">${RESULT} = [{'diff': 1.7555999999998434e-05}, {'diff': 1.9416000000001266e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.1306000000002184e-05...</msg>
<status status="PASS" starttime="20201029 18:15:55.395" endtime="20201029 18:15:55.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.402" level="INFO">${ACCURACY} = {'diff': [1.7555999999998434e-05, 1.9416000000001266e-05, 2.2264000000001005e-05, 2.036099999999999e-05, 2.512500000000084e-05, 2.1306000000002184e-05, 2.3194000000000686e-05, 2.3235999999999396e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:55.399" endtime="20201029 18:15:55.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.406" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.405" endtime="20201029 18:15:55.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.409" level="INFO">VALUE: [1.7555999999998434e-05, 1.9416000000001266e-05, 2.2264000000001005e-05, 2.036099999999999e-05, 2.512500000000084e-05, 2.1306000000002184e-05, 2.3194000000000686e-05, 2.3235999999999396e-05, 2.036099999999999e-05, 1.93890000000016e-05, 2.2319999999999285e-05, 2.136100000000099e-05, 2.518099999999912e-05, 1.844499999999888e-05, 2.418099999999812e-05, 2.4166000000002547e-05, 2.129099999999967e-05, 2.515299999999998e-05, 2.511100000000127e-05, 2.1291999999999145e-05, 1.941700000000074e-05, 2.033300000000085e-05, 2.2278000000000575e-05, 2.2236000000001865e-05, 2.231899999999981e-05, 1.940300000000117e-05, 2.3194000000000686e-05, 2.1292000000002614e-05, 2.1250000000000435e-05, 2.5180000000003117e-05, 2.2278000000000575e-05, 2.037499999999956e-05, 2.516699999999955e-05, 2.130499999999924e-05, 2.3249999999998966e-05, 2.512500000000084e-05, 2.5096999999998232e-05, 2.130499999999924e-05, 2.3222000000003296e-05, 2.608300000000313e-05, 2.513900000000041e-05, 2.2264000000001005e-05, 2.3249999999998966e-05, 2.1305999999998715e-05, 2.133300000000185e-05, 1.936099999999899e-05, 2.515299999999998e-05, 2.4208000000001256e-05, 2.2333999999998855e-05, 2.5207999999998787e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.407" endtime="20201029 18:15:55.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.403" endtime="20201029 18:15:55.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.414" endtime="20201029 18:15:55.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.412" endtime="20201029 18:15:55.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.411" endtime="20201029 18:15:55.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.055" endtime="20201029 18:15:55.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.054" endtime="20201029 18:15:55.435"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.443" endtime="20201029 18:15:55.465"></status>
</kw>
<msg timestamp="20201029 18:15:55.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.441" endtime="20201029 18:15:55.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.467" endtime="20201029 18:15:55.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.469" endtime="20201029 18:15:55.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.439" endtime="20201029 18:15:55.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.437" endtime="20201029 18:15:55.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.478" endtime="20201029 18:15:55.763"></status>
</kw>
<msg timestamp="20201029 18:15:55.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.477" endtime="20201029 18:15:55.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.767" endtime="20201029 18:15:55.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.776" endtime="20201029 18:15:55.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.474" endtime="20201029 18:15:55.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.472" endtime="20201029 18:15:55.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.782" level="INFO">${RESULT} = [{'diff': 1.3652999999998888e-05}, {'diff': 2.5152000000000507e-05}, {'diff': 2.133299999999838e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.034700000000042e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:55.779" endtime="20201029 18:15:55.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.786" level="INFO">${ACCURACY} = {'diff': [1.3652999999998888e-05, 2.5152000000000507e-05, 2.133299999999838e-05, 2.2264000000001005e-05, 2.034700000000042e-05, 2.034700000000042e-05, 2.418100000000159e-05, 2.1320000000001754e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:55.783" endtime="20201029 18:15:55.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.791" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.790" endtime="20201029 18:15:55.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.793" level="INFO">VALUE: [1.3652999999998888e-05, 2.5152000000000507e-05, 2.133299999999838e-05, 2.2264000000001005e-05, 2.034700000000042e-05, 2.034700000000042e-05, 2.418100000000159e-05, 2.1320000000001754e-05, 2.6166000000001077e-05, 2.4194000000001686e-05, 2.12770000000001e-05, 2.4207999999997787e-05, 2.1347999999997425e-05, 2.04029999999987e-05, 2.512500000000084e-05, 2.6096999999999232e-05, 2.512500000000084e-05, 2.4193999999998217e-05, 2.42230000000003e-05, 2.230500000000024e-05, 2.416700000000202e-05, 2.415299999999898e-05, 2.037499999999956e-05, 2.4194000000001686e-05, 2.3235999999999396e-05, 2.4165999999999077e-05, 2.036099999999999e-05, 2.131899999999881e-05, 2.42230000000003e-05, 2.512500000000084e-05, 2.22770000000011e-05, 2.2305999999999715e-05, 2.4236000000000396e-05, 2.5166000000000077e-05, 2.2278000000000575e-05, 2.4193999999998217e-05, 2.2249999999997966e-05, 2.516699999999955e-05, 2.134699999999795e-05, 2.3235999999999396e-05, 2.419500000000116e-05, 2.2250000000001435e-05, 2.320899999999973e-05, 2.5166000000000077e-05, 2.2305999999999715e-05, 2.2264000000001005e-05, 2.512499999999737e-05, 2.312500000000231e-05, 2.419499999999769e-05, 2.133299999999838e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.792" endtime="20201029 18:15:55.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.787" endtime="20201029 18:15:55.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.799" endtime="20201029 18:15:55.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.798" endtime="20201029 18:15:55.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.797" endtime="20201029 18:15:55.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.435" endtime="20201029 18:15:55.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.435" endtime="20201029 18:15:55.820"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.829" endtime="20201029 18:15:55.848"></status>
</kw>
<msg timestamp="20201029 18:15:55.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.827" endtime="20201029 18:15:55.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.849" endtime="20201029 18:15:55.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.852" endtime="20201029 18:15:55.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.825" endtime="20201029 18:15:55.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.822" endtime="20201029 18:15:55.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.861" endtime="20201029 18:15:56.146"></status>
</kw>
<msg timestamp="20201029 18:15:56.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024186167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024217958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.859" endtime="20201029 18:15:56.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024186167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024217958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.151" endtime="20201029 18:15:56.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.159" endtime="20201029 18:15:56.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.857" endtime="20201029 18:15:56.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.855" endtime="20201029 18:15:56.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.166" level="INFO">${RESULT} = [{'diff': 3.1790999999999764e-05}, {'diff': 2.131899999999881e-05}, {'diff': 1.9416000000001266e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.5083999999998136e-05}, {'diff': 2.2249999999997966e-05...</msg>
<status status="PASS" starttime="20201029 18:15:56.163" endtime="20201029 18:15:56.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.173" level="INFO">${ACCURACY} = {'diff': [3.1790999999999764e-05, 2.131899999999881e-05, 1.9416000000001266e-05, 2.037499999999956e-05, 2.5083999999998136e-05, 2.2249999999997966e-05, 2.036099999999999e-05, 2.3235999999999396e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:56.167" endtime="20201029 18:15:56.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.178" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.177" endtime="20201029 18:15:56.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.180" level="INFO">VALUE: [3.1790999999999764e-05, 2.131899999999881e-05, 1.9416000000001266e-05, 2.037499999999956e-05, 2.5083999999998136e-05, 2.2249999999997966e-05, 2.036099999999999e-05, 2.3235999999999396e-05, 2.419500000000116e-05, 2.1291999999999145e-05, 2.0429999999998366e-05, 2.0444000000001405e-05, 2.515299999999998e-05, 2.2278000000000575e-05, 2.512500000000084e-05, 2.3235999999999396e-05, 2.226300000000153e-05, 2.2264000000001005e-05, 2.3235999999999396e-05, 2.6152000000001507e-05, 2.513900000000041e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.034700000000042e-05, 2.4166000000002547e-05, 2.218099999999959e-05, 2.036099999999999e-05, 2.136100000000099e-05, 2.511100000000127e-05, 2.131899999999881e-05, 2.1292000000002614e-05, 2.2263999999997536e-05, 2.1277999999999575e-05, 2.1305999999998715e-05, 2.1291999999999145e-05, 2.4194000000001686e-05, 2.1306000000002184e-05, 2.3249999999998966e-05, 1.9401999999998226e-05, 1.9444000000000405e-05, 2.513900000000041e-05, 2.2264000000001005e-05, 2.131899999999881e-05, 2.3221999999999826e-05, 2.037499999999956e-05, 2.12770000000001e-05, 2.2235999999998396e-05, 2.513900000000041e-05, 2.136099999999752e-05, 2.134700000000142e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.179" endtime="20201029 18:15:56.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.174" endtime="20201029 18:15:56.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.185" endtime="20201029 18:15:56.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.184" endtime="20201029 18:15:56.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.182" endtime="20201029 18:15:56.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.821" endtime="20201029 18:15:56.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.820" endtime="20201029 18:15:56.206"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.214" endtime="20201029 18:15:56.229"></status>
</kw>
<msg timestamp="20201029 18:15:56.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.213" endtime="20201029 18:15:56.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.231" endtime="20201029 18:15:56.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.235" endtime="20201029 18:15:56.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.210" endtime="20201029 18:15:56.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.208" endtime="20201029 18:15:56.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.245" endtime="20201029 18:15:56.532"></status>
</kw>
<msg timestamp="20201029 18:15:56.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.244" endtime="20201029 18:15:56.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.536" endtime="20201029 18:15:56.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.544" endtime="20201029 18:15:56.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.241" endtime="20201029 18:15:56.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.239" endtime="20201029 18:15:56.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.551" level="INFO">${RESULT} = [{'diff': 2.2250000000001435e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.415300000000245e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.04029999999987e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:56.548" endtime="20201029 18:15:56.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.556" level="INFO">${ACCURACY} = {'diff': [2.2250000000001435e-05, 2.036099999999999e-05, 2.4236000000000396e-05, 2.415300000000245e-05, 2.416699999999855e-05, 2.04029999999987e-05, 2.3249999999998966e-05, 2.2320000000002754e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 18:15:56.552" endtime="20201029 18:15:56.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.561" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.560" endtime="20201029 18:15:56.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.563" level="INFO">VALUE: [2.2250000000001435e-05, 2.036099999999999e-05, 2.4236000000000396e-05, 2.415300000000245e-05, 2.416699999999855e-05, 2.04029999999987e-05, 2.3249999999998966e-05, 2.2320000000002754e-05, 2.037499999999956e-05, 2.231899999999981e-05, 2.1306000000002184e-05, 2.5179999999999647e-05, 2.2250000000001435e-05, 2.6083999999999136e-05, 2.512500000000084e-05, 2.2264000000001005e-05, 1.941700000000074e-05, 2.3263999999998536e-05, 2.229100000000067e-05, 2.3235999999999396e-05, 2.416700000000202e-05, 2.038899999999913e-05, 2.4236000000000396e-05, 2.4222000000000826e-05, 2.513900000000041e-05, 2.320899999999973e-05, 1.9387999999998656e-05, 2.418100000000159e-05, 2.5207999999998787e-05, 1.8500000000001154e-05, 2.230500000000024e-05, 2.4179999999998647e-05, 2.3221999999999826e-05, 2.515299999999998e-05, 2.5082999999998662e-05, 2.038899999999913e-05, 1.9443999999996936e-05, 2.040300000000217e-05, 2.134699999999795e-05, 1.943100000000031e-05, 2.0334000000000324e-05, 2.3263999999998536e-05, 2.519499999999869e-05, 2.5179999999999647e-05, 1.9402000000001696e-05, 2.2278000000000575e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.034700000000042e-05, 2.2235999999998396e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.562" endtime="20201029 18:15:56.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.557" endtime="20201029 18:15:56.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.568" endtime="20201029 18:15:56.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.567" endtime="20201029 18:15:56.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.566" endtime="20201029 18:15:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.207" endtime="20201029 18:15:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.206" endtime="20201029 18:15:56.589"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.598" endtime="20201029 18:15:56.621"></status>
</kw>
<msg timestamp="20201029 18:15:56.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.596" endtime="20201029 18:15:56.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.623" endtime="20201029 18:15:56.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.625" endtime="20201029 18:15:56.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.594" endtime="20201029 18:15:56.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.591" endtime="20201029 18:15:56.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.634" endtime="20201029 18:15:56.920"></status>
</kw>
<msg timestamp="20201029 18:15:56.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.632" endtime="20201029 18:15:56.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.924" endtime="20201029 18:15:56.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.932" endtime="20201029 18:15:56.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.630" endtime="20201029 18:15:56.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.628" endtime="20201029 18:15:56.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.939" level="INFO">${RESULT} = [{'diff': 2.7000000000002716e-05}, {'diff': 2.129099999999967e-05}, {'diff': 2.137499999999709e-05}, {'diff': 2.137500000000056e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.3221999999999826e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:56.936" endtime="20201029 18:15:56.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.943" level="INFO">${ACCURACY} = {'diff': [2.7000000000002716e-05, 2.129099999999967e-05, 2.137499999999709e-05, 2.137500000000056e-05, 2.513900000000041e-05, 2.3221999999999826e-05, 2.3207999999996787e-05, 2.4193999999998217e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:56.940" endtime="20201029 18:15:56.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.948" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.947" endtime="20201029 18:15:56.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.950" level="INFO">VALUE: [2.7000000000002716e-05, 2.129099999999967e-05, 2.137499999999709e-05, 2.137500000000056e-05, 2.513900000000041e-05, 2.3221999999999826e-05, 2.3207999999996787e-05, 2.4193999999998217e-05, 2.2276999999997632e-05, 2.2236000000001865e-05, 2.037499999999956e-05, 2.4179999999998647e-05, 2.1306000000002184e-05, 1.941699999999727e-05, 2.6069000000000092e-05, 2.129099999999967e-05, 1.94029999999977e-05, 2.1348000000000894e-05, 2.131900000000228e-05, 2.3235999999999396e-05, 2.6069000000000092e-05, 2.320899999999973e-05, 1.937499999999856e-05, 2.036099999999999e-05, 2.4236000000000396e-05, 2.4207999999997787e-05, 2.2264000000001005e-05, 2.034700000000042e-05, 2.6096999999999232e-05, 2.130500000000271e-05, 1.94029999999977e-05, 2.4249999999999966e-05, 2.038899999999913e-05, 2.416699999999855e-05, 2.418099999999812e-05, 1.938899999999813e-05, 2.4179999999998647e-05, 2.22770000000011e-05, 2.134700000000142e-05, 2.1264000000000005e-05, 2.133299999999838e-05, 2.0361999999999464e-05, 2.506900000000256e-05, 2.612500000000184e-05, 2.418100000000159e-05, 2.5096999999998232e-05, 2.034700000000042e-05, 2.3208000000000256e-05, 2.3249999999998966e-05, 2.1348000000000894e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.949" endtime="20201029 18:15:56.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.944" endtime="20201029 18:15:56.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.956" endtime="20201029 18:15:56.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.954" endtime="20201029 18:15:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.953" endtime="20201029 18:15:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.590" endtime="20201029 18:15:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.589" endtime="20201029 18:15:56.977"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.985" endtime="20201029 18:15:57.004"></status>
</kw>
<msg timestamp="20201029 18:15:57.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.984" endtime="20201029 18:15:57.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.005" endtime="20201029 18:15:57.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.008" endtime="20201029 18:15:57.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.981" endtime="20201029 18:15:57.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.979" endtime="20201029 18:15:57.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.017" endtime="20201029 18:15:57.304"></status>
</kw>
<msg timestamp="20201029 18:15:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023043028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.016" endtime="20201029 18:15:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023043028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.308" endtime="20201029 18:15:57.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.316" endtime="20201029 18:15:57.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.013" endtime="20201029 18:15:57.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.011" endtime="20201029 18:15:57.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.323" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 1.943100000000031e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.4179999999998647e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.133299999999838e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:57.319" endtime="20201029 18:15:57.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.328" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 1.943100000000031e-05, 2.4236000000000396e-05, 2.4179999999998647e-05, 2.038899999999913e-05, 2.133299999999838e-05, 2.4236000000000396e-05, 1.93890000000016e-05, 1.94...</msg>
<status status="PASS" starttime="20201029 18:15:57.324" endtime="20201029 18:15:57.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.332" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.331" endtime="20201029 18:15:57.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.335" level="INFO">VALUE: [6.097000000000047e-06, 1.943100000000031e-05, 2.4236000000000396e-05, 2.4179999999998647e-05, 2.038899999999913e-05, 2.133299999999838e-05, 2.4236000000000396e-05, 1.93890000000016e-05, 1.9485999999999115e-05, 2.516699999999955e-05, 2.4208000000001256e-05, 2.034700000000042e-05, 2.319500000000016e-05, 2.3250000000002435e-05, 2.230500000000024e-05, 2.3250000000002435e-05, 2.2235999999998396e-05, 2.134699999999795e-05, 2.133300000000185e-05, 2.037499999999956e-05, 1.8500000000001154e-05, 2.5179999999999647e-05, 2.037499999999956e-05, 2.031900000000128e-05, 2.0347999999999894e-05, 2.137500000000056e-05, 2.1320000000001754e-05, 2.408300000000113e-05, 2.4193999999998217e-05, 2.037499999999956e-05, 1.944500000000335e-05, 2.519500000000216e-05, 2.3249999999998966e-05, 2.219499999999916e-05, 2.2290999999997202e-05, 2.2305999999999715e-05, 2.3291999999997676e-05, 2.613900000000141e-05, 2.518099999999912e-05, 2.229100000000067e-05, 1.937500000000203e-05, 2.036099999999999e-05, 2.4207999999997787e-05, 2.04029999999987e-05, 2.136100000000099e-05, 2.3249999999998966e-05, 2.513900000000041e-05, 2.418100000000159e-05, 1.9443999999996936e-05, 2.420899999999726e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.333" endtime="20201029 18:15:57.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.329" endtime="20201029 18:15:57.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.344" endtime="20201029 18:15:57.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.343" endtime="20201029 18:15:57.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.341" endtime="20201029 18:15:57.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.977" endtime="20201029 18:15:57.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.977" endtime="20201029 18:15:57.365"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.373" endtime="20201029 18:15:57.390"></status>
</kw>
<msg timestamp="20201029 18:15:57.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.372" endtime="20201029 18:15:57.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.392" endtime="20201029 18:15:57.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.395" endtime="20201029 18:15:57.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.369" endtime="20201029 18:15:57.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.367" endtime="20201029 18:15:57.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.404" endtime="20201029 18:15:57.690"></status>
</kw>
<msg timestamp="20201029 18:15:57.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.402" endtime="20201029 18:15:57.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.695" endtime="20201029 18:15:57.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.706" endtime="20201029 18:15:57.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.399" endtime="20201029 18:15:57.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.398" endtime="20201029 18:15:57.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.717" level="INFO">${RESULT} = [{'diff': 1.0818999999998719e-05}, {'diff': 2.03890000000026e-05}, {'diff': 2.5110999999997802e-05}, {'diff': 2.229100000000067e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.134700000000142e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:57.712" endtime="20201029 18:15:57.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.723" level="INFO">${ACCURACY} = {'diff': [1.0818999999998719e-05, 2.03890000000026e-05, 2.5110999999997802e-05, 2.229100000000067e-05, 2.3278000000001575e-05, 2.134700000000142e-05, 2.1277999999999575e-05, 2.6110999999998802e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:57.718" endtime="20201029 18:15:57.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.727" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.726" endtime="20201029 18:15:57.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.730" level="INFO">VALUE: [1.0818999999998719e-05, 2.03890000000026e-05, 2.5110999999997802e-05, 2.229100000000067e-05, 2.3278000000001575e-05, 2.134700000000142e-05, 2.1277999999999575e-05, 2.6110999999998802e-05, 2.518100000000259e-05, 2.040300000000217e-05, 2.3249999999998966e-05, 2.4180000000002116e-05, 2.130499999999924e-05, 1.943100000000031e-05, 2.2278000000000575e-05, 2.418100000000159e-05, 2.037499999999956e-05, 2.4193999999998217e-05, 2.418100000000159e-05, 2.513899999999694e-05, 2.134699999999795e-05, 2.2319999999999285e-05, 2.03890000000026e-05, 2.231899999999981e-05, 2.1305999999998715e-05, 2.515299999999998e-05, 2.231899999999981e-05, 2.136100000000099e-05, 2.2320000000002754e-05, 2.4222000000000826e-05, 2.6097999999998706e-05, 2.4083999999997135e-05, 2.131899999999881e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.0306000000001184e-05, 2.412499999999984e-05, 2.043100000000131e-05, 2.2278000000000575e-05, 2.229100000000067e-05, 2.134700000000142e-05, 2.2264000000001005e-05, 2.5110999999997802e-05, 2.137500000000056e-05, 2.2319999999999285e-05, 2.513900000000041e-05, 1.940300000000117e-05, 2.6069999999999566e-05, 1.941700000000074e-05, 2.2207999999999256e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.728" endtime="20201029 18:15:57.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.723" endtime="20201029 18:15:57.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.735" endtime="20201029 18:15:57.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.733" endtime="20201029 18:15:57.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.732" endtime="20201029 18:15:57.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.366" endtime="20201029 18:15:57.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.365" endtime="20201029 18:15:57.755"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.764" endtime="20201029 18:15:57.783"></status>
</kw>
<msg timestamp="20201029 18:15:57.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.762" endtime="20201029 18:15:57.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.785" endtime="20201029 18:15:57.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.787" endtime="20201029 18:15:57.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.760" endtime="20201029 18:15:57.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.758" endtime="20201029 18:15:57.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.796" endtime="20201029 18:15:58.082"></status>
</kw>
<msg timestamp="20201029 18:15:58.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02307575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:57.795" endtime="20201029 18:15:58.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02307575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:58.087" endtime="20201029 18:15:58.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.095" endtime="20201029 18:15:58.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.792" endtime="20201029 18:15:58.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.790" endtime="20201029 18:15:58.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.101" level="INFO">${RESULT} = [{'diff': 1.7472000000001014e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.2250000000001435e-05...</msg>
<status status="PASS" starttime="20201029 18:15:58.098" endtime="20201029 18:15:58.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.106" level="INFO">${ACCURACY} = {'diff': [1.7472000000001014e-05, 2.3278000000001575e-05, 2.037499999999956e-05, 2.2292000000000145e-05, 2.036099999999999e-05, 2.2250000000001435e-05, 2.6096999999999232e-05, 2.5236000000001396e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:58.102" endtime="20201029 18:15:58.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.110" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.109" endtime="20201029 18:15:58.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.113" level="INFO">VALUE: [1.7472000000001014e-05, 2.3278000000001575e-05, 2.037499999999956e-05, 2.2292000000000145e-05, 2.036099999999999e-05, 2.2250000000001435e-05, 2.6096999999999232e-05, 2.5236000000001396e-05, 2.2276999999997632e-05, 2.5207999999998787e-05, 2.034700000000042e-05, 2.515299999999998e-05, 2.3208000000000256e-05, 1.9415999999997796e-05, 2.231899999999981e-05, 2.513900000000041e-05, 2.3208000000000256e-05, 2.513900000000041e-05, 2.031900000000128e-05, 2.133299999999838e-05, 2.511100000000127e-05, 2.136100000000099e-05, 2.1319999999998285e-05, 2.0347999999999894e-05, 2.5152000000000507e-05, 2.2250000000001435e-05, 2.518099999999912e-05, 2.418099999999812e-05, 2.516699999999955e-05, 2.038899999999913e-05, 2.040300000000217e-05, 2.3290999999998202e-05, 2.233300000000285e-05, 2.036099999999999e-05, 2.2249999999997966e-05, 2.040300000000217e-05, 2.038899999999913e-05, 2.412499999999984e-05, 2.4180000000002116e-05, 2.5112000000000745e-05, 2.230500000000024e-05, 2.033300000000085e-05, 2.1305999999998715e-05, 2.1348000000000894e-05, 2.2305999999999715e-05, 2.516699999999955e-05, 2.033300000000085e-05, 2.229100000000067e-05, 2.3208000000000256e-05, 2.513900000000041e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.111" endtime="20201029 18:15:58.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.106" endtime="20201029 18:15:58.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.118" endtime="20201029 18:15:58.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.117" endtime="20201029 18:15:58.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.116" endtime="20201029 18:15:58.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.756" endtime="20201029 18:15:58.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.756" endtime="20201029 18:15:58.139"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.148" endtime="20201029 18:15:58.164"></status>
</kw>
<msg timestamp="20201029 18:15:58.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.146" endtime="20201029 18:15:58.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.165" endtime="20201029 18:15:58.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.168" endtime="20201029 18:15:58.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.144" endtime="20201029 18:15:58.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.141" endtime="20201029 18:15:58.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.177" endtime="20201029 18:15:58.463"></status>
</kw>
<msg timestamp="20201029 18:15:58.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021166028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021177764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.175" endtime="20201029 18:15:58.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021166028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021177764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.467" endtime="20201029 18:15:58.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.475" endtime="20201029 18:15:58.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.173" endtime="20201029 18:15:58.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.171" endtime="20201029 18:15:58.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.482" level="INFO">${RESULT} = [{'diff': 1.1736000000001773e-05}, {'diff': 2.4151999999999507e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.4193999999998217e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.4165999999999077e-05...</msg>
<status status="PASS" starttime="20201029 18:15:58.479" endtime="20201029 18:15:58.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.487" level="INFO">${ACCURACY} = {'diff': [1.1736000000001773e-05, 2.4151999999999507e-05, 2.037499999999956e-05, 2.4193999999998217e-05, 2.034700000000042e-05, 2.4165999999999077e-05, 2.037499999999956e-05, 2.04029999999987e-05, 2.6...</msg>
<status status="PASS" starttime="20201029 18:15:58.483" endtime="20201029 18:15:58.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.491" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.490" endtime="20201029 18:15:58.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.494" level="INFO">VALUE: [1.1736000000001773e-05, 2.4151999999999507e-05, 2.037499999999956e-05, 2.4193999999998217e-05, 2.034700000000042e-05, 2.4165999999999077e-05, 2.037499999999956e-05, 2.04029999999987e-05, 2.612500000000184e-05, 2.516699999999955e-05, 2.0334000000000324e-05, 2.6097999999998706e-05, 2.420900000000073e-05, 2.323700000000234e-05, 2.2264000000001005e-05, 2.5179999999999647e-05, 2.036099999999999e-05, 2.3207999999996787e-05, 2.130499999999924e-05, 2.5055999999998996e-05, 2.5152000000000507e-05, 2.137500000000056e-05, 2.316699999999755e-05, 2.3250000000002435e-05, 2.6098000000002175e-05, 2.318100000000059e-05, 2.133300000000185e-05, 2.320899999999973e-05, 2.0361999999999464e-05, 2.129099999999967e-05, 2.1334000000001324e-05, 2.3208000000000256e-05, 2.515299999999998e-05, 2.1306000000002184e-05, 2.516699999999955e-05, 2.5193999999999217e-05, 2.034700000000042e-05, 2.2208000000002726e-05, 2.133299999999838e-05, 2.512500000000084e-05, 2.2278000000000575e-05, 2.3249999999998966e-05, 1.944499999999988e-05, 1.941699999999727e-05, 2.2235999999998396e-05, 2.515299999999998e-05, 1.9387999999998656e-05, 2.037500000000303e-05, 2.130499999999924e-05, 2.515299999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.493" endtime="20201029 18:15:58.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.488" endtime="20201029 18:15:58.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.499" endtime="20201029 18:15:58.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.497" endtime="20201029 18:15:58.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.496" endtime="20201029 18:15:58.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.140" endtime="20201029 18:15:58.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.139" endtime="20201029 18:15:58.520"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.528" endtime="20201029 18:15:58.545"></status>
</kw>
<msg timestamp="20201029 18:15:58.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.527" endtime="20201029 18:15:58.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.547" endtime="20201029 18:15:58.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.549" endtime="20201029 18:15:58.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.524" endtime="20201029 18:15:58.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.522" endtime="20201029 18:15:58.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.559" endtime="20201029 18:15:58.845"></status>
</kw>
<msg timestamp="20201029 18:15:58.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.557" endtime="20201029 18:15:58.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.849" endtime="20201029 18:15:58.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.858" endtime="20201029 18:15:58.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.554" endtime="20201029 18:15:58.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.553" endtime="20201029 18:15:58.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.864" level="INFO">${RESULT} = [{'diff': 2.130499999999924e-05}, {'diff': 2.515299999999998e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.0361999999999464e-05}, {'diff': 2.5096999999998232e-05...</msg>
<status status="PASS" starttime="20201029 18:15:58.861" endtime="20201029 18:15:58.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.868" level="INFO">${ACCURACY} = {'diff': [2.130499999999924e-05, 2.515299999999998e-05, 2.3235999999999396e-05, 2.2263999999997536e-05, 2.0361999999999464e-05, 2.5096999999998232e-05, 2.3208000000000256e-05, 2.3263999999998536e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:58.865" endtime="20201029 18:15:58.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.873" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.872" endtime="20201029 18:15:58.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.875" level="INFO">VALUE: [2.130499999999924e-05, 2.515299999999998e-05, 2.3235999999999396e-05, 2.2263999999997536e-05, 2.0361999999999464e-05, 2.5096999999998232e-05, 2.3208000000000256e-05, 2.3263999999998536e-05, 1.93890000000016e-05, 2.4179999999998647e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.3249999999998966e-05, 1.9471999999999545e-05, 1.934699999999942e-05, 2.134700000000142e-05, 2.2264000000001005e-05, 1.94029999999977e-05, 2.42230000000003e-05, 2.3276999999998632e-05, 2.3235999999999396e-05, 2.320899999999973e-05, 1.94029999999977e-05, 2.4194000000001686e-05, 2.4222000000000826e-05, 2.133299999999838e-05, 2.413900000000288e-05, 2.3180000000001116e-05, 2.2278000000000575e-05, 2.0334000000000324e-05, 2.3221999999999826e-05, 2.3320000000000285e-05, 1.937500000000203e-05, 2.2277999999997106e-05, 2.2278000000000575e-05, 2.6069000000000092e-05, 2.5096999999998232e-05, 1.94029999999977e-05, 2.034700000000042e-05, 2.6097999999998706e-05, 1.9471999999999545e-05, 2.2291999999996676e-05, 2.6124999999998372e-05, 2.2264000000001005e-05, 2.513899999999694e-05, 2.2235999999998396e-05, 2.6083999999999136e-05, 2.411100000000027e-05, 2.3221999999999826e-05, 2.5236000000001396e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.874" endtime="20201029 18:15:58.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.869" endtime="20201029 18:15:58.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.880" endtime="20201029 18:15:58.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.879" endtime="20201029 18:15:58.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.878" endtime="20201029 18:15:58.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.520" endtime="20201029 18:15:58.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.520" endtime="20201029 18:15:58.901"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.910" endtime="20201029 18:15:58.931"></status>
</kw>
<msg timestamp="20201029 18:15:58.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.908" endtime="20201029 18:15:58.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.932" endtime="20201029 18:15:58.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.935" endtime="20201029 18:15:58.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.906" endtime="20201029 18:15:58.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.904" endtime="20201029 18:15:58.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.944" endtime="20201029 18:15:59.229"></status>
</kw>
<msg timestamp="20201029 18:15:59.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.942" endtime="20201029 18:15:59.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.233" endtime="20201029 18:15:59.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.243" endtime="20201029 18:15:59.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.939" endtime="20201029 18:15:59.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.938" endtime="20201029 18:15:59.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.250" level="INFO">${RESULT} = [{'diff': 4.5166999999998736e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.186100000000027e-05}, {'diff': 4.994399999999968e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.090300000000145e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:59.247" endtime="20201029 18:15:59.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.254" level="INFO">${ACCURACY} = {'diff': [4.5166999999998736e-05, 5.5763999999999814e-05, 5.186100000000027e-05, 4.994399999999968e-05, 5.290299999999998e-05, 5.090300000000145e-05, 4.998599999999839e-05, 5.383299999999966e-05, 5.18...</msg>
<status status="PASS" starttime="20201029 18:15:59.251" endtime="20201029 18:15:59.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.258" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.257" endtime="20201029 18:15:59.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.261" level="INFO">VALUE: [4.5166999999998736e-05, 5.5763999999999814e-05, 5.186100000000027e-05, 4.994399999999968e-05, 5.290299999999998e-05, 5.090300000000145e-05, 4.998599999999839e-05, 5.383299999999966e-05, 5.187499999999984e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.66809999999994e-05, 5.0973000000002766e-05, 4.995799999999925e-05, 5.380500000000052e-05, 5.386199999999827e-05, 5.379100000000095e-05, 4.994399999999968e-05, 5.097199999999982e-05, 5.090300000000145e-05, 5.090300000000145e-05, 5.5708000000001534e-05, 5.387499999999837e-05, 5.091700000000102e-05, 4.991700000000002e-05, 4.995800000000272e-05, 5.4708000000000534e-05, 5.4722000000000104e-05, 5.093100000000059e-05, 5.483400000000013e-05, 5.0901999999998504e-05, 5.377800000000085e-05, 5.5694000000001964e-05, 5.005500000000024e-05, 5.183300000000113e-05, 5.087499999999884e-05, 5.284699999999823e-05, 5.659699999999851e-05, 5.3749999999998244e-05, 5.290299999999998e-05, 5.4722000000000104e-05, 4.995799999999925e-05, 5.190299999999898e-05, 5.4791999999997953e-05, 5.094500000000016e-05, 5.662500000000112e-05, 5.279200000000289e-05, 5.281899999999909e-05, 5.56809999999984e-05, 5.4763999999998814e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.260" endtime="20201029 18:15:59.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.255" endtime="20201029 18:15:59.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.267" endtime="20201029 18:15:59.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.265" endtime="20201029 18:15:59.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.264" endtime="20201029 18:15:59.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.902" endtime="20201029 18:15:59.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.901" endtime="20201029 18:15:59.288"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.296" endtime="20201029 18:15:59.317"></status>
</kw>
<msg timestamp="20201029 18:15:59.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.295" endtime="20201029 18:15:59.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.319" endtime="20201029 18:15:59.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.321" endtime="20201029 18:15:59.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.292" endtime="20201029 18:15:59.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.290" endtime="20201029 18:15:59.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.330" endtime="20201029 18:15:59.615"></status>
</kw>
<msg timestamp="20201029 18:15:59.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.329" endtime="20201029 18:15:59.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.620" endtime="20201029 18:15:59.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.628" endtime="20201029 18:15:59.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.326" endtime="20201029 18:15:59.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.324" endtime="20201029 18:15:59.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.634" level="INFO">${RESULT} = [{'diff': 5.487499999999937e-05}, {'diff': 5.6652000000000785e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 4.9945000000002626e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.281899999999909e-05...</msg>
<status status="PASS" starttime="20201029 18:15:59.631" endtime="20201029 18:15:59.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.642" level="INFO">${ACCURACY} = {'diff': [5.487499999999937e-05, 5.6652000000000785e-05, 5.4735999999999674e-05, 4.9945000000002626e-05, 5.5777999999999384e-05, 5.281899999999909e-05, 5.186100000000027e-05, 5.19730000000003e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 18:15:59.635" endtime="20201029 18:15:59.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.646" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.645" endtime="20201029 18:15:59.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.649" level="INFO">VALUE: [5.487499999999937e-05, 5.6652000000000785e-05, 5.4735999999999674e-05, 4.9945000000002626e-05, 5.5777999999999384e-05, 5.281899999999909e-05, 5.186100000000027e-05, 5.19730000000003e-05, 5.3763999999997814e-05, 5.18609999999968e-05, 5.197200000000082e-05, 4.994399999999968e-05, 5.472299999999958e-05, 5.5679999999998925e-05, 5.179199999999842e-05, 5.291699999999955e-05, 5.28470000000017e-05, 4.994499999999916e-05, 5.086099999999927e-05, 5.099999999999896e-05, 5.4722000000000104e-05, 5.4694000000000964e-05, 5.66809999999994e-05, 4.995799999999925e-05, 5.662500000000112e-05, 5.197200000000082e-05, 5.00279999999971e-05, 5.091600000000154e-05, 5.191699999999855e-05, 5.377800000000085e-05, 4.993099999999959e-05, 5.187499999999984e-05, 5.005599999999971e-05, 5.569499999999797e-05, 5.197200000000082e-05, 5.28609999999978e-05, 5.193000000000211e-05, 5.665300000000026e-05, 5.187499999999984e-05, 5.663899999999722e-05, 5.4735999999999674e-05, 5.384699999999923e-05, 5.182000000000103e-05, 5.384699999999923e-05, 5.665300000000026e-05, 5.194400000000168e-05, 5.56809999999984e-05, 5.6722000000002104e-05, 5.28470000000017e-05, 4.998599999999839e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.647" endtime="20201029 18:15:59.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.643" endtime="20201029 18:15:59.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.654" endtime="20201029 18:15:59.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.652" endtime="20201029 18:15:59.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.651" endtime="20201029 18:15:59.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.288" endtime="20201029 18:15:59.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.288" endtime="20201029 18:15:59.675"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.683" endtime="20201029 18:15:59.705"></status>
</kw>
<msg timestamp="20201029 18:15:59.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.681" endtime="20201029 18:15:59.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.707" endtime="20201029 18:15:59.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.709" endtime="20201029 18:15:59.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.679" endtime="20201029 18:15:59.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.677" endtime="20201029 18:15:59.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.718" endtime="20201029 18:16:00.004"></status>
</kw>
<msg timestamp="20201029 18:16:00.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023002236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.717" endtime="20201029 18:16:00.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023002236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.008" endtime="20201029 18:16:00.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.017" endtime="20201029 18:16:00.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.714" endtime="20201029 18:16:00.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.712" endtime="20201029 18:16:00.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.023" level="INFO">${RESULT} = [{'diff': 6.633300000000175e-05}, {'diff': 5.565299999999926e-05}, {'diff': 5.1887999999999934e-05}, {'diff': 5.088900000000188e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.5708000000001534e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:00.020" endtime="20201029 18:16:00.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.027" level="INFO">${ACCURACY} = {'diff': [6.633300000000175e-05, 5.565299999999926e-05, 5.1887999999999934e-05, 5.088900000000188e-05, 5.291699999999955e-05, 5.5708000000001534e-05, 5.569500000000144e-05, 5.48609999999998e-05, 5.188...</msg>
<status status="PASS" starttime="20201029 18:16:00.024" endtime="20201029 18:16:00.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.032" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.031" endtime="20201029 18:16:00.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.034" level="INFO">VALUE: [6.633300000000175e-05, 5.565299999999926e-05, 5.1887999999999934e-05, 5.088900000000188e-05, 5.291699999999955e-05, 5.5708000000001534e-05, 5.569500000000144e-05, 5.48609999999998e-05, 5.188900000000288e-05, 5.281900000000256e-05, 5.569500000000144e-05, 4.997200000000229e-05, 5.379200000000042e-05, 5.0915999999998074e-05, 5.377800000000085e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.1887999999999934e-05, 5.4763999999998814e-05, 5.283300000000213e-05, 5.1957999999997784e-05, 5.091700000000102e-05, 5.566699999999883e-05, 5.665300000000026e-05, 5.099999999999896e-05, 5.5708000000001534e-05, 4.997199999999882e-05, 4.998599999999839e-05, 5.38609999999988e-05, 5.093000000000111e-05, 5.187499999999984e-05, 5.5805999999998523e-05, 5.569500000000144e-05, 5.193100000000159e-05, 5.094500000000016e-05, 5.480599999999752e-05, 5.283300000000213e-05, 5.0014000000001e-05, 5.376400000000128e-05, 5.191699999999855e-05, 5.098599999999939e-05, 5.095800000000025e-05, 5.579099999999948e-05, 5.277799999999985e-05, 5.098600000000286e-05, 5.381900000000009e-05, 5.384699999999923e-05, 5.186100000000027e-05, 5.568100000000187e-05, 5.290299999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.033" endtime="20201029 18:16:00.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.028" endtime="20201029 18:16:00.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.039" endtime="20201029 18:16:00.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.038" endtime="20201029 18:16:00.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.037" endtime="20201029 18:16:00.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.675" endtime="20201029 18:16:00.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.675" endtime="20201029 18:16:00.060"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.069" endtime="20201029 18:16:00.092"></status>
</kw>
<msg timestamp="20201029 18:16:00.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.067" endtime="20201029 18:16:00.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.093" endtime="20201029 18:16:00.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.096" endtime="20201029 18:16:00.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.065" endtime="20201029 18:16:00.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.063" endtime="20201029 18:16:00.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.105" endtime="20201029 18:16:00.390"></status>
</kw>
<msg timestamp="20201029 18:16:00.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024390875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024449528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.103" endtime="20201029 18:16:00.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024390875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024449528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.395" endtime="20201029 18:16:00.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.403" endtime="20201029 18:16:00.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.100" endtime="20201029 18:16:00.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.099" endtime="20201029 18:16:00.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.409" level="INFO">${RESULT} = [{'diff': 5.865300000000226e-05}, {'diff': 5.28479999999977e-05}, {'diff': 5.570900000000101e-05}, {'diff': 5.388899999999794e-05}, {'diff': 5.093000000000111e-05}, {'diff': 5.4749999999999244e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:00.406" endtime="20201029 18:16:00.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.414" level="INFO">${ACCURACY} = {'diff': [5.865300000000226e-05, 5.28479999999977e-05, 5.570900000000101e-05, 5.388899999999794e-05, 5.093000000000111e-05, 5.4749999999999244e-05, 5.28340000000016e-05, 5.013900000000113e-05, 5.47499...</msg>
<status status="PASS" starttime="20201029 18:16:00.410" endtime="20201029 18:16:00.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.418" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.417" endtime="20201029 18:16:00.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.420" level="INFO">VALUE: [5.865300000000226e-05, 5.28479999999977e-05, 5.570900000000101e-05, 5.388899999999794e-05, 5.093000000000111e-05, 5.4749999999999244e-05, 5.28340000000016e-05, 5.013900000000113e-05, 5.4749999999999244e-05, 5.4777999999998384e-05, 5.4722000000000104e-05, 5.5722000000001104e-05, 5.388900000000141e-05, 5.381999999999956e-05, 5.369499999999944e-05, 4.999999999999796e-05, 5.280599999999899e-05, 5.088900000000188e-05, 5.100000000000243e-05, 5.091700000000102e-05, 5.0915999999998074e-05, 5.577800000000285e-05, 5.5708000000001534e-05, 5.580600000000199e-05, 5.5721999999997635e-05, 5.291699999999955e-05, 5.480499999999805e-05, 5.5707999999998065e-05, 5.1929999999998644e-05, 5.379200000000042e-05, 5.2929999999999644e-05, 5.186199999999974e-05, 5.5693999999998495e-05, 5.1929999999998644e-05, 5.280499999999952e-05, 5.4708000000000534e-05, 5.0014000000001e-05, 5.376400000000128e-05, 5.283299999999866e-05, 5.386100000000227e-05, 5.377800000000085e-05, 5.476400000000228e-05, 5.1943999999998214e-05, 5.565299999999926e-05, 5.4749999999999244e-05, 5.000000000000143e-05, 5.2943999999999214e-05, 5.283299999999866e-05, 5.098599999999939e-05, 5.0973000000002766e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.419" endtime="20201029 18:16:00.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.415" endtime="20201029 18:16:00.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.426" endtime="20201029 18:16:00.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.425" endtime="20201029 18:16:00.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.424" endtime="20201029 18:16:00.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.061" endtime="20201029 18:16:00.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.060" endtime="20201029 18:16:00.447"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.456" endtime="20201029 18:16:00.478"></status>
</kw>
<msg timestamp="20201029 18:16:00.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.454" endtime="20201029 18:16:00.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.480" endtime="20201029 18:16:00.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.482" endtime="20201029 18:16:00.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.451" endtime="20201029 18:16:00.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.449" endtime="20201029 18:16:00.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.491" endtime="20201029 18:16:00.777"></status>
</kw>
<msg timestamp="20201029 18:16:00.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024212042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.490" endtime="20201029 18:16:00.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024151556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024212042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.781" endtime="20201029 18:16:00.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.790" endtime="20201029 18:16:00.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.487" endtime="20201029 18:16:00.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.485" endtime="20201029 18:16:00.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.797" level="INFO">${RESULT} = [{'diff': 6.0485999999998485e-05}, {'diff': 5.4763999999998814e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.18470000000007e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:00.794" endtime="20201029 18:16:00.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.802" level="INFO">${ACCURACY} = {'diff': [6.0485999999998485e-05, 5.4763999999998814e-05, 5.094500000000016e-05, 5.387499999999837e-05, 5.4722000000000104e-05, 5.18470000000007e-05, 4.997200000000229e-05, 5.38609999999988e-05, 5.381...</msg>
<status status="PASS" starttime="20201029 18:16:00.798" endtime="20201029 18:16:00.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.807" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.806" endtime="20201029 18:16:00.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.809" level="INFO">VALUE: [6.0485999999998485e-05, 5.4763999999998814e-05, 5.094500000000016e-05, 5.387499999999837e-05, 5.4722000000000104e-05, 5.18470000000007e-05, 4.997200000000229e-05, 5.38609999999988e-05, 5.381900000000009e-05, 5.373600000000214e-05, 5.288900000000041e-05, 5.477699999999891e-05, 5.288900000000041e-05, 5.28609999999978e-05, 5.379200000000042e-05, 5.5721999999997635e-05, 5.286100000000127e-05, 5.18340000000006e-05, 5.387499999999837e-05, 5.4763999999998814e-05, 5.568100000000187e-05, 5.100000000000243e-05, 5.286100000000127e-05, 5.4749999999999244e-05, 5.091700000000102e-05, 5.188899999999941e-05, 5.6736000000001674e-05, 5.28470000000017e-05, 5.093100000000059e-05, 5.186100000000027e-05, 5.004100000000067e-05, 5.093100000000059e-05, 5.380500000000052e-05, 5.282000000000203e-05, 4.995800000000272e-05, 5.281900000000256e-05, 5.483299999999719e-05, 5.101399999999853e-05, 5.379200000000042e-05, 5.280499999999952e-05, 5.3749999999998244e-05, 5.187499999999984e-05, 5.483300000000066e-05, 5.28340000000016e-05, 5.379200000000042e-05, 5.3735999999998674e-05, 5.5693999999998495e-05, 5.198600000000039e-05, 4.998599999999839e-05, 5.187499999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.808" endtime="20201029 18:16:00.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.803" endtime="20201029 18:16:00.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.814" endtime="20201029 18:16:00.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.813" endtime="20201029 18:16:00.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.812" endtime="20201029 18:16:00.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.448" endtime="20201029 18:16:00.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.447" endtime="20201029 18:16:00.835"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.844" endtime="20201029 18:16:00.866"></status>
</kw>
<msg timestamp="20201029 18:16:00.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.842" endtime="20201029 18:16:00.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.867" endtime="20201029 18:16:00.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.870" endtime="20201029 18:16:00.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.840" endtime="20201029 18:16:00.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.837" endtime="20201029 18:16:00.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.879" endtime="20201029 18:16:01.166"></status>
</kw>
<msg timestamp="20201029 18:16:01.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023016514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.877" endtime="20201029 18:16:01.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023016514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.170" endtime="20201029 18:16:01.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.178" endtime="20201029 18:16:01.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.875" endtime="20201029 18:16:01.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.873" endtime="20201029 18:16:01.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.185" level="INFO">${RESULT} = [{'diff': 4.2389000000000315e-05}, {'diff': 5.095899999999973e-05}, {'diff': 5.283300000000213e-05}, {'diff': 5.19730000000003e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.290299999999998e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:01.182" endtime="20201029 18:16:01.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.190" level="INFO">${ACCURACY} = {'diff': [4.2389000000000315e-05, 5.095899999999973e-05, 5.283300000000213e-05, 5.19730000000003e-05, 5.188899999999941e-05, 5.290299999999998e-05, 5.104200000000114e-05, 5.477700000000238e-05, 5.2875...</msg>
<status status="PASS" starttime="20201029 18:16:01.187" endtime="20201029 18:16:01.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.195" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.193" endtime="20201029 18:16:01.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.197" level="INFO">VALUE: [4.2389000000000315e-05, 5.095899999999973e-05, 5.283300000000213e-05, 5.19730000000003e-05, 5.188899999999941e-05, 5.290299999999998e-05, 5.104200000000114e-05, 5.477700000000238e-05, 5.287500000000084e-05, 5.095800000000025e-05, 5.6722000000002104e-05, 5.376400000000128e-05, 5.477800000000185e-05, 5.290299999999998e-05, 5.097199999999982e-05, 5.000000000000143e-05, 5.666699999999983e-05, 5.5750000000000244e-05, 5.38609999999988e-05, 5.380599999999999e-05, 5.101399999999853e-05, 5.000000000000143e-05, 5.091699999999755e-05, 5.380599999999999e-05, 5.5750000000000244e-05, 5.194500000000116e-05, 5.5791999999998954e-05, 5.287500000000084e-05, 5.666699999999983e-05, 5.098599999999939e-05, 5.1929999999998644e-05, 5.090300000000145e-05, 4.997199999999882e-05, 5.38609999999988e-05, 5.5708000000001534e-05, 5.1943999999998214e-05, 5.002699999999763e-05, 5.481900000000109e-05, 5.09729999999993e-05, 5.380500000000052e-05, 5.380599999999999e-05, 5.2902000000000504e-05, 5.283299999999866e-05, 5.194500000000116e-05, 5.388899999999794e-05, 5.379200000000042e-05, 5.194400000000168e-05, 5.383299999999966e-05, 4.991700000000002e-05, 5.098600000000286e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.196" endtime="20201029 18:16:01.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.191" endtime="20201029 18:16:01.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.202" endtime="20201029 18:16:01.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.201" endtime="20201029 18:16:01.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.199" endtime="20201029 18:16:01.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.836" endtime="20201029 18:16:01.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.835" endtime="20201029 18:16:01.223"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.232" endtime="20201029 18:16:01.251"></status>
</kw>
<msg timestamp="20201029 18:16:01.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.230" endtime="20201029 18:16:01.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.253" endtime="20201029 18:16:01.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.256" endtime="20201029 18:16:01.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.228" endtime="20201029 18:16:01.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.226" endtime="20201029 18:16:01.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.265" endtime="20201029 18:16:01.550"></status>
</kw>
<msg timestamp="20201029 18:16:01.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.263" endtime="20201029 18:16:01.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.555" endtime="20201029 18:16:01.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.563" endtime="20201029 18:16:01.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.260" endtime="20201029 18:16:01.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.259" endtime="20201029 18:16:01.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.570" level="INFO">${RESULT} = [{'diff': 4.808400000000032e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.480499999999805e-05}, {'diff': 5.5721999999997635e-05}, {'diff': 5.281899999999909e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:01.566" endtime="20201029 18:16:01.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.574" level="INFO">${ACCURACY} = {'diff': [4.808400000000032e-05, 5.094500000000016e-05, 5.5777999999999384e-05, 5.480499999999805e-05, 5.5721999999997635e-05, 5.281899999999909e-05, 5.283300000000213e-05, 5.476400000000228e-05, 5.66...</msg>
<status status="PASS" starttime="20201029 18:16:01.570" endtime="20201029 18:16:01.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.578" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.577" endtime="20201029 18:16:01.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.580" level="INFO">VALUE: [4.808400000000032e-05, 5.094500000000016e-05, 5.5777999999999384e-05, 5.480499999999805e-05, 5.5721999999997635e-05, 5.281899999999909e-05, 5.283300000000213e-05, 5.476400000000228e-05, 5.6693999999999495e-05, 5.284699999999823e-05, 5.5735999999997204e-05, 5.5721999999997635e-05, 5.376400000000128e-05, 5.0929999999997644e-05, 5.097199999999982e-05, 5.097199999999982e-05, 4.998599999999839e-05, 5.287500000000084e-05, 5.191700000000202e-05, 5.381999999999956e-05, 5.481900000000109e-05, 4.995899999999873e-05, 5.480600000000099e-05, 5.670900000000201e-05, 5.091600000000154e-05, 5.098600000000286e-05, 5.48609999999998e-05, 5.181900000000156e-05, 5.380599999999999e-05, 5.099999999999896e-05, 5.283299999999866e-05, 5.572300000000058e-05, 5.379200000000042e-05, 5.1014000000002e-05, 5.28470000000017e-05, 5.5750000000000244e-05, 4.998600000000186e-05, 5.380599999999999e-05, 5.290299999999998e-05, 5.095899999999973e-05, 5.090299999999798e-05, 5.5708000000001534e-05, 5.098599999999939e-05, 5.188899999999941e-05, 5.28609999999978e-05, 5.288899999999694e-05, 5.188900000000288e-05, 5.570900000000101e-05, 5.194499999999769e-05, 5.094500000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.579" endtime="20201029 18:16:01.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.575" endtime="20201029 18:16:01.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.587" endtime="20201029 18:16:01.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.585" endtime="20201029 18:16:01.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.584" endtime="20201029 18:16:01.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.224" endtime="20201029 18:16:01.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.224" endtime="20201029 18:16:01.608"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.616" endtime="20201029 18:16:01.639"></status>
</kw>
<msg timestamp="20201029 18:16:01.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.615" endtime="20201029 18:16:01.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.641" endtime="20201029 18:16:01.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.644" endtime="20201029 18:16:01.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.612" endtime="20201029 18:16:01.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.610" endtime="20201029 18:16:01.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.653" endtime="20201029 18:16:01.938"></status>
</kw>
<msg timestamp="20201029 18:16:01.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024195681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.651" endtime="20201029 18:16:01.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024195681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.943" endtime="20201029 18:16:01.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.951" endtime="20201029 18:16:01.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.648" endtime="20201029 18:16:01.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.647" endtime="20201029 18:16:01.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.960" level="INFO">${RESULT} = [{'diff': 3.7597000000000325e-05}, {'diff': 5.193000000000211e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.2902000000000504e-05}, {'diff': 4.995800000000272e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:01.956" endtime="20201029 18:16:01.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.966" level="INFO">${ACCURACY} = {'diff': [3.7597000000000325e-05, 5.193000000000211e-05, 5.290299999999998e-05, 5.380599999999999e-05, 5.2902000000000504e-05, 4.995800000000272e-05, 5.387500000000184e-05, 5.4680000000001394e-05, 4.9...</msg>
<status status="PASS" starttime="20201029 18:16:01.961" endtime="20201029 18:16:01.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.972" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.970" endtime="20201029 18:16:01.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.975" level="INFO">VALUE: [3.7597000000000325e-05, 5.193000000000211e-05, 5.290299999999998e-05, 5.380599999999999e-05, 5.2902000000000504e-05, 4.995800000000272e-05, 5.387500000000184e-05, 5.4680000000001394e-05, 4.997199999999882e-05, 5.483300000000066e-05, 5.388900000000141e-05, 5.091700000000102e-05, 5.004200000000014e-05, 5.380599999999999e-05, 5.5763999999999814e-05, 5.4777999999998384e-05, 5.48609999999998e-05, 5.572300000000058e-05, 5.180599999999799e-05, 5.3902000000001504e-05, 5.186199999999974e-05, 5.3888000000001934e-05, 5.190299999999898e-05, 5.5777999999999384e-05, 5.1929999999998644e-05, 5.3777999999997383e-05, 5.579099999999948e-05, 5.188899999999941e-05, 5.197200000000082e-05, 5.4763999999998814e-05, 5.104200000000114e-05, 4.998600000000186e-05, 4.995799999999925e-05, 5.198699999999987e-05, 5.093100000000059e-05, 4.994499999999916e-05, 5.2929999999999644e-05, 5.186100000000027e-05, 5.091700000000102e-05, 5.577699999999991e-05, 5.188899999999941e-05, 4.995799999999925e-05, 4.9986999999997866e-05, 5.097199999999982e-05, 5.283399999999813e-05, 5.5679999999998925e-05, 5.581900000000209e-05, 4.997199999999882e-05, 4.998599999999839e-05, 5.386199999999827e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.973" endtime="20201029 18:16:01.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.967" endtime="20201029 18:16:01.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.982" endtime="20201029 18:16:02.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.980" endtime="20201029 18:16:02.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.978" endtime="20201029 18:16:02.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.609" endtime="20201029 18:16:02.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.608" endtime="20201029 18:16:02.004"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.015" endtime="20201029 18:16:02.038"></status>
</kw>
<msg timestamp="20201029 18:16:02.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.013" endtime="20201029 18:16:02.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.039" endtime="20201029 18:16:02.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.042" endtime="20201029 18:16:02.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.010" endtime="20201029 18:16:02.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.007" endtime="20201029 18:16:02.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.051" endtime="20201029 18:16:02.338"></status>
</kw>
<msg timestamp="20201029 18:16:02.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025519111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025581444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.049" endtime="20201029 18:16:02.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025519111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025581444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.344" endtime="20201029 18:16:02.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.355" endtime="20201029 18:16:02.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.047" endtime="20201029 18:16:02.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.045" endtime="20201029 18:16:02.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.361" level="INFO">${RESULT} = [{'diff': 6.233299999999775e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.665299999999679e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:02.358" endtime="20201029 18:16:02.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.366" level="INFO">${ACCURACY} = {'diff': [6.233299999999775e-05, 5.291699999999955e-05, 5.187499999999984e-05, 5.4749999999999244e-05, 5.290299999999998e-05, 5.665299999999679e-05, 5.4708000000000534e-05, 5.293099999999912e-05, 5.47...</msg>
<status status="PASS" starttime="20201029 18:16:02.362" endtime="20201029 18:16:02.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.370" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.369" endtime="20201029 18:16:02.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.373" level="INFO">VALUE: [6.233299999999775e-05, 5.291699999999955e-05, 5.187499999999984e-05, 5.4749999999999244e-05, 5.290299999999998e-05, 5.665299999999679e-05, 5.4708000000000534e-05, 5.293099999999912e-05, 5.473600000000314e-05, 5.187500000000331e-05, 5.580500000000252e-05, 5.480600000000099e-05, 5.569499999999797e-05, 5.006899999999981e-05, 5.28470000000017e-05, 5.090300000000145e-05, 5.483300000000066e-05, 5.0902000000001973e-05, 5.193100000000159e-05, 5.6778000000000384e-05, 5.277799999999985e-05, 5.5722000000001104e-05, 5.3763999999997814e-05, 5.1014000000002e-05, 5.18609999999968e-05, 5.4708000000000534e-05, 5.377800000000085e-05, 5.662500000000112e-05, 5.372300000000205e-05, 5.10279999999981e-05, 5.473600000000314e-05, 5.3777999999997383e-05, 5.198600000000039e-05, 5.18470000000007e-05, 5.093100000000059e-05, 5.569500000000144e-05, 5.3777999999997383e-05, 5.091600000000154e-05, 5.481900000000109e-05, 5.283399999999813e-05, 5.376300000000181e-05, 5.28470000000017e-05, 5.005500000000024e-05, 5.184699999999723e-05, 5.6666000000000355e-05, 5.094400000000068e-05, 5.101399999999853e-05, 5.283399999999813e-05, 5.473600000000314e-05, 5.4735999999999674e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.371" endtime="20201029 18:16:02.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.367" endtime="20201029 18:16:02.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.384" endtime="20201029 18:16:02.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.383" endtime="20201029 18:16:02.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.381" endtime="20201029 18:16:02.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.005" endtime="20201029 18:16:02.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.005" endtime="20201029 18:16:02.405"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.414" endtime="20201029 18:16:02.438"></status>
</kw>
<msg timestamp="20201029 18:16:02.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.412" endtime="20201029 18:16:02.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.439" endtime="20201029 18:16:02.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.442" endtime="20201029 18:16:02.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.410" endtime="20201029 18:16:02.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.407" endtime="20201029 18:16:02.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.451" endtime="20201029 18:16:02.737"></status>
</kw>
<msg timestamp="20201029 18:16:02.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025547208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025586681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.449" endtime="20201029 18:16:02.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025547208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025586681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.741" endtime="20201029 18:16:02.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.749" endtime="20201029 18:16:02.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.447" endtime="20201029 18:16:02.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.445" endtime="20201029 18:16:02.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.756" level="INFO">${RESULT} = [{'diff': 3.9473000000001673e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.095800000000025e-05}, {'diff': 5.0957999999996784e-05}, {'diff': 5.579099999999948e-05}, {'diff': 5.672300000000158e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:02.753" endtime="20201029 18:16:02.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.760" level="INFO">${ACCURACY} = {'diff': [3.9473000000001673e-05, 5.383299999999966e-05, 5.095800000000025e-05, 5.0957999999996784e-05, 5.579099999999948e-05, 5.672300000000158e-05, 5.481900000000109e-05, 5.197200000000082e-05, 5.47...</msg>
<status status="PASS" starttime="20201029 18:16:02.757" endtime="20201029 18:16:02.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.764" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.763" endtime="20201029 18:16:02.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.767" level="INFO">VALUE: [3.9473000000001673e-05, 5.383299999999966e-05, 5.095800000000025e-05, 5.0957999999996784e-05, 5.579099999999948e-05, 5.672300000000158e-05, 5.481900000000109e-05, 5.197200000000082e-05, 5.476400000000228e-05, 5.098599999999939e-05, 5.5722000000001104e-05, 5.188899999999941e-05, 5.188900000000288e-05, 5.094500000000016e-05, 5.101399999999853e-05, 5.4749999999999244e-05, 5.4791999999997953e-05, 5.479200000000142e-05, 5.097199999999982e-05, 5.383299999999966e-05, 5.004100000000067e-05, 5.290299999999998e-05, 5.187499999999984e-05, 5.095800000000025e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.4791999999997953e-05, 5.387499999999837e-05, 5.470900000000001e-05, 5.290299999999998e-05, 5.479200000000142e-05, 5.291699999999955e-05, 5.188899999999941e-05, 5.473600000000314e-05, 5.000000000000143e-05, 5.479100000000195e-05, 5.006899999999981e-05, 5.4708000000000534e-05, 5.194400000000168e-05, 5.0929999999997644e-05, 5.381999999999956e-05, 5.380500000000052e-05, 5.287499999999737e-05, 5.386100000000227e-05, 5.579200000000242e-05, 5.287499999999737e-05, 5.5750000000000244e-05, 5.006899999999981e-05, 5.093100000000059e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.765" endtime="20201029 18:16:02.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.761" endtime="20201029 18:16:02.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.773" endtime="20201029 18:16:02.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.771" endtime="20201029 18:16:02.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.770" endtime="20201029 18:16:02.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.406" endtime="20201029 18:16:02.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.405" endtime="20201029 18:16:02.793"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.802" endtime="20201029 18:16:02.824"></status>
</kw>
<msg timestamp="20201029 18:16:02.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.800" endtime="20201029 18:16:02.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.826" endtime="20201029 18:16:02.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.828" endtime="20201029 18:16:02.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.798" endtime="20201029 18:16:02.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.796" endtime="20201029 18:16:02.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.837" endtime="20201029 18:16:03.124"></status>
</kw>
<msg timestamp="20201029 18:16:03.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.836" endtime="20201029 18:16:03.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024128583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.128" endtime="20201029 18:16:03.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.136" endtime="20201029 18:16:03.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.833" endtime="20201029 18:16:03.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.831" endtime="20201029 18:16:03.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.143" level="INFO">${RESULT} = [{'diff': 5.1971999999997354e-05}, {'diff': 5.091600000000154e-05}, {'diff': 5.284699999999823e-05}, {'diff': 5.095800000000025e-05}, {'diff': 5.283299999999866e-05}, {'diff': 5.1887999999999934e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:03.139" endtime="20201029 18:16:03.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.150" level="INFO">${ACCURACY} = {'diff': [5.1971999999997354e-05, 5.091600000000154e-05, 5.284699999999823e-05, 5.095800000000025e-05, 5.283299999999866e-05, 5.1887999999999934e-05, 5.28340000000016e-05, 5.183300000000113e-05, 5.476...</msg>
<status status="PASS" starttime="20201029 18:16:03.144" endtime="20201029 18:16:03.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.155" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.154" endtime="20201029 18:16:03.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.157" level="INFO">VALUE: [5.1971999999997354e-05, 5.091600000000154e-05, 5.284699999999823e-05, 5.095800000000025e-05, 5.283299999999866e-05, 5.1887999999999934e-05, 5.28340000000016e-05, 5.183300000000113e-05, 5.476400000000228e-05, 5.569500000000144e-05, 5.380500000000052e-05, 5.4735999999999674e-05, 5.294400000000268e-05, 5.193100000000159e-05, 5.4735999999999674e-05, 5.4763999999998814e-05, 5.5707999999998065e-05, 5.477699999999891e-05, 5.180600000000146e-05, 5.476400000000228e-05, 5.093100000000059e-05, 5.29730000000013e-05, 5.093100000000059e-05, 5.187499999999984e-05, 5.283299999999866e-05, 5.5693999999998495e-05, 5.4735999999999674e-05, 5.2930000000003113e-05, 5.279199999999942e-05, 5.4735999999999674e-05, 5.2916000000000074e-05, 5.283299999999866e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.0915999999998074e-05, 5.283299999999866e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.4763999999998814e-05, 4.997200000000229e-05, 5.379200000000042e-05, 5.091699999999755e-05, 5.376299999999834e-05, 5.381900000000009e-05, 5.583299999999819e-05, 5.286200000000074e-05, 5.4749999999999244e-05, 5.288900000000041e-05, 5.0915999999998074e-05, 5.476400000000228e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.156" endtime="20201029 18:16:03.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.151" endtime="20201029 18:16:03.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.162" endtime="20201029 18:16:03.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.160" endtime="20201029 18:16:03.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.159" endtime="20201029 18:16:03.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.794" endtime="20201029 18:16:03.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.794" endtime="20201029 18:16:03.183"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.191" endtime="20201029 18:16:03.211"></status>
</kw>
<msg timestamp="20201029 18:16:03.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.190" endtime="20201029 18:16:03.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.212" endtime="20201029 18:16:03.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.215" endtime="20201029 18:16:03.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.187" endtime="20201029 18:16:03.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.185" endtime="20201029 18:16:03.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.224" endtime="20201029 18:16:03.510"></status>
</kw>
<msg timestamp="20201029 18:16:03.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021548694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.222" endtime="20201029 18:16:03.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021548694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.514" endtime="20201029 18:16:03.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.523" endtime="20201029 18:16:03.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.220" endtime="20201029 18:16:03.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.218" endtime="20201029 18:16:03.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.529" level="INFO">${RESULT} = [{'diff': 5.294499999999869e-05}, {'diff': 5.46809999999974e-05}, {'diff': 5.3777999999997383e-05}, {'diff': 5.582000000000156e-05}, {'diff': 5.201399999999953e-05}, {'diff': 4.997199999999882e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:03.526" endtime="20201029 18:16:03.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.533" level="INFO">${ACCURACY} = {'diff': [5.294499999999869e-05, 5.46809999999974e-05, 5.3777999999997383e-05, 5.582000000000156e-05, 5.201399999999953e-05, 4.997199999999882e-05, 5.379200000000042e-05, 5.283300000000213e-05, 5.0985...</msg>
<status status="PASS" starttime="20201029 18:16:03.530" endtime="20201029 18:16:03.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.538" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.537" endtime="20201029 18:16:03.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.540" level="INFO">VALUE: [5.294499999999869e-05, 5.46809999999974e-05, 5.3777999999997383e-05, 5.582000000000156e-05, 5.201399999999953e-05, 4.997199999999882e-05, 5.379200000000042e-05, 5.283300000000213e-05, 5.098599999999939e-05, 5.28470000000017e-05, 5.5736000000000674e-05, 5.102800000000157e-05, 5.281899999999909e-05, 5.379100000000095e-05, 5.09729999999993e-05, 5.663900000000069e-05, 5.381900000000009e-05, 4.998599999999839e-05, 5.479099999999848e-05, 5.5750000000000244e-05, 5.187499999999984e-05, 5.281899999999909e-05, 5.470900000000001e-05, 5.6750000000001244e-05, 5.4749999999999244e-05, 5.186100000000027e-05, 5.190300000000245e-05, 5.1916000000002543e-05, 5.3708000000003e-05, 5.0987000000002336e-05, 5.281899999999909e-05, 5.379200000000042e-05, 5.563899999999969e-05, 5.284800000000117e-05, 5.480600000000099e-05, 5.569500000000144e-05, 5.283300000000213e-05, 5.095800000000025e-05, 5.38609999999988e-05, 5.18470000000007e-05, 5.4708000000000534e-05, 5.006999999999928e-05, 5.100000000000243e-05, 5.569500000000144e-05, 5.473700000000262e-05, 5.088899999999841e-05, 5.5735999999997204e-05, 5.569499999999797e-05, 5.5750000000000244e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.539" endtime="20201029 18:16:03.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.534" endtime="20201029 18:16:03.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.545" endtime="20201029 18:16:03.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.543" endtime="20201029 18:16:03.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.542" endtime="20201029 18:16:03.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.184" endtime="20201029 18:16:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.183" endtime="20201029 18:16:03.566"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.574" endtime="20201029 18:16:03.599"></status>
</kw>
<msg timestamp="20201029 18:16:03.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.573" endtime="20201029 18:16:03.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.600" endtime="20201029 18:16:03.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.603" endtime="20201029 18:16:03.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.570" endtime="20201029 18:16:03.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.568" endtime="20201029 18:16:03.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.612" endtime="20201029 18:16:03.896"></status>
</kw>
<msg timestamp="20201029 18:16:03.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025502847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025546125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.610" endtime="20201029 18:16:03.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025502847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025546125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.901" endtime="20201029 18:16:03.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.909" endtime="20201029 18:16:03.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.608" endtime="20201029 18:16:03.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.606" endtime="20201029 18:16:03.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.915" level="INFO">${RESULT} = [{'diff': 4.327800000000076e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.481999999999709e-05}, {'diff': 5.6679999999999925e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:03.912" endtime="20201029 18:16:03.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.920" level="INFO">${ACCURACY} = {'diff': [4.327800000000076e-05, 5.000000000000143e-05, 5.4777999999998384e-05, 5.188899999999941e-05, 5.481999999999709e-05, 5.6679999999999925e-05, 4.994399999999968e-05, 5.1957999999997784e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 18:16:03.916" endtime="20201029 18:16:03.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.924" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.923" endtime="20201029 18:16:03.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.927" level="INFO">VALUE: [4.327800000000076e-05, 5.000000000000143e-05, 5.4777999999998384e-05, 5.188899999999941e-05, 5.481999999999709e-05, 5.6679999999999925e-05, 4.994399999999968e-05, 5.1957999999997784e-05, 5.094400000000068e-05, 5.5708000000001534e-05, 5.098599999999939e-05, 5.183299999999766e-05, 5.369500000000291e-05, 5.5763999999999814e-05, 5.5694000000001964e-05, 5.276400000000028e-05, 5.105600000000071e-05, 5.094500000000016e-05, 5.387499999999837e-05, 5.5722000000001104e-05, 5.472299999999958e-05, 5.183300000000113e-05, 5.481900000000109e-05, 5.0929999999997644e-05, 5.3777999999997383e-05, 5.28340000000016e-05, 5.579099999999948e-05, 5.5722000000001104e-05, 4.9915999999997074e-05, 5.387499999999837e-05, 5.5722000000001104e-05, 5.281999999999856e-05, 5.280599999999899e-05, 5.5791999999998954e-05, 5.579099999999948e-05, 5.4749999999999244e-05, 5.4749999999999244e-05, 5.2902000000000504e-05, 5.475000000000271e-05, 5.5694000000001964e-05, 5.2902000000000504e-05, 5.5707999999998065e-05, 5.181899999999809e-05, 5.384699999999923e-05, 5.479200000000142e-05, 5.4735999999999674e-05, 5.194499999999769e-05, 5.283299999999866e-05, 5.570900000000101e-05, 4.994499999999916e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.925" endtime="20201029 18:16:03.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.921" endtime="20201029 18:16:03.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.932" endtime="20201029 18:16:03.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.931" endtime="20201029 18:16:03.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.930" endtime="20201029 18:16:03.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.567" endtime="20201029 18:16:03.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.566" endtime="20201029 18:16:03.953"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.962" endtime="20201029 18:16:03.985"></status>
</kw>
<msg timestamp="20201029 18:16:03.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.960" endtime="20201029 18:16:03.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.986" endtime="20201029 18:16:03.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.989" endtime="20201029 18:16:03.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.958" endtime="20201029 18:16:03.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.956" endtime="20201029 18:16:03.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.998" endtime="20201029 18:16:04.284"></status>
</kw>
<msg timestamp="20201029 18:16:04.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.996" endtime="20201029 18:16:04.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.288" endtime="20201029 18:16:04.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.296" endtime="20201029 18:16:04.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.994" endtime="20201029 18:16:04.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.992" endtime="20201029 18:16:04.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.303" level="INFO">${RESULT} = [{'diff': 5.7694000000000495e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.481999999999709e-05}, {'diff': 5.380500000000052e-05}, {'diff': 5.5679999999998925e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:04.300" endtime="20201029 18:16:04.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.308" level="INFO">${ACCURACY} = {'diff': [5.7694000000000495e-05, 5.4722000000000104e-05, 5.286100000000127e-05, 5.481999999999709e-05, 5.380500000000052e-05, 5.5679999999998925e-05, 5.097199999999982e-05, 5.5777999999999384e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:04.304" endtime="20201029 18:16:04.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.313" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.312" endtime="20201029 18:16:04.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.316" level="INFO">VALUE: [5.7694000000000495e-05, 5.4722000000000104e-05, 5.286100000000127e-05, 5.481999999999709e-05, 5.380500000000052e-05, 5.5679999999998925e-05, 5.097199999999982e-05, 5.5777999999999384e-05, 5.1901999999999504e-05, 5.18470000000007e-05, 5.375000000000171e-05, 5.187499999999984e-05, 5.5750000000000244e-05, 5.383299999999966e-05, 5.186100000000027e-05, 5.476400000000228e-05, 4.904200000000261e-05, 5.379200000000042e-05, 5.28609999999978e-05, 5.381900000000009e-05, 4.998599999999839e-05, 5.4722000000000104e-05, 5.479200000000142e-05, 5.190299999999898e-05, 5.4777999999998384e-05, 5.4749999999999244e-05, 5.479200000000142e-05, 5.38479999999987e-05, 4.994399999999968e-05, 5.661099999999808e-05, 5.479200000000142e-05, 5.007000000000275e-05, 5.470900000000001e-05, 5.5763999999999814e-05, 5.472299999999958e-05, 5.661199999999755e-05, 5.386100000000227e-05, 5.281999999999856e-05, 5.6666000000000355e-05, 5.56809999999984e-05, 5.1916000000002543e-05, 4.999999999999796e-05, 5.18609999999968e-05, 5.005500000000024e-05, 5.190299999999898e-05, 5.6722000000002104e-05, 4.997199999999882e-05, 5.3777999999997383e-05, 5.187499999999984e-05, 4.995799999999925e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.314" endtime="20201029 18:16:04.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.309" endtime="20201029 18:16:04.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.321" endtime="20201029 18:16:04.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.320" endtime="20201029 18:16:04.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.318" endtime="20201029 18:16:04.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.954" endtime="20201029 18:16:04.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.954" endtime="20201029 18:16:04.342"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.351" endtime="20201029 18:16:04.372"></status>
</kw>
<msg timestamp="20201029 18:16:04.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.350" endtime="20201029 18:16:04.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.374" endtime="20201029 18:16:04.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.376" endtime="20201029 18:16:04.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.347" endtime="20201029 18:16:04.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.345" endtime="20201029 18:16:04.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.386" endtime="20201029 18:16:04.694"></status>
</kw>
<msg timestamp="20201029 18:16:04.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.384" endtime="20201029 18:16:04.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.699" endtime="20201029 18:16:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.707" endtime="20201029 18:16:04.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.381" endtime="20201029 18:16:04.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.380" endtime="20201029 18:16:04.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.714" level="INFO">${RESULT} = [{'diff': 3.763800000000303e-05}, {'diff': 5.479099999999848e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.097199999999982e-05}, {'diff': 5.286100000000127e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:04.711" endtime="20201029 18:16:04.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.719" level="INFO">${ACCURACY} = {'diff': [3.763800000000303e-05, 5.479099999999848e-05, 5.199999999999996e-05, 5.094500000000016e-05, 5.097199999999982e-05, 5.286100000000127e-05, 5.5805999999998523e-05, 5.393100000000012e-05, 4.998...</msg>
<status status="PASS" starttime="20201029 18:16:04.715" endtime="20201029 18:16:04.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.723" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.722" endtime="20201029 18:16:04.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.726" level="INFO">VALUE: [3.763800000000303e-05, 5.479099999999848e-05, 5.199999999999996e-05, 5.094500000000016e-05, 5.097199999999982e-05, 5.286100000000127e-05, 5.5805999999998523e-05, 5.393100000000012e-05, 4.998600000000186e-05, 5.090300000000145e-05, 5.482000000000056e-05, 5.4763999999998814e-05, 5.287500000000084e-05, 5.2943999999999214e-05, 5.1916000000002543e-05, 5.387499999999837e-05, 5.095800000000025e-05, 5.5722000000001104e-05, 5.198600000000039e-05, 5.379200000000042e-05, 5.579200000000242e-05, 5.490300000000198e-05, 5.093100000000059e-05, 5.0915999999998074e-05, 5.197200000000082e-05, 5.094500000000016e-05, 5.000000000000143e-05, 4.997199999999882e-05, 5.102800000000157e-05, 4.999999999999796e-05, 5.006899999999981e-05, 5.286100000000127e-05, 5.481899999999762e-05, 5.5708000000001534e-05, 5.483400000000013e-05, 5.291700000000302e-05, 4.998599999999839e-05, 5.5694000000001964e-05, 5.195900000000073e-05, 5.287500000000084e-05, 5.2957999999998784e-05, 5.570899999999754e-05, 5.297200000000182e-05, 4.995899999999873e-05, 5.28340000000016e-05, 5.483300000000066e-05, 5.188899999999941e-05, 5.008300000000285e-05, 5.093100000000059e-05, 5.388900000000141e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.725" endtime="20201029 18:16:04.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.720" endtime="20201029 18:16:04.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.731" endtime="20201029 18:16:04.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.730" endtime="20201029 18:16:04.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.728" endtime="20201029 18:16:04.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.343" endtime="20201029 18:16:04.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.342" endtime="20201029 18:16:04.752"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.761" endtime="20201029 18:16:04.784"></status>
</kw>
<msg timestamp="20201029 18:16:04.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.760" endtime="20201029 18:16:04.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.785" endtime="20201029 18:16:04.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.788" endtime="20201029 18:16:04.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.757" endtime="20201029 18:16:04.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.755" endtime="20201029 18:16:04.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.797" endtime="20201029 18:16:05.084"></status>
</kw>
<msg timestamp="20201029 18:16:05.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024708472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.796" endtime="20201029 18:16:05.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024708472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.089" endtime="20201029 18:16:05.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.097" endtime="20201029 18:16:05.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.793" endtime="20201029 18:16:05.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.791" endtime="20201029 18:16:05.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.104" level="INFO">${RESULT} = [{'diff': 5.00409999999972e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.483300000000066e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.484700000000023e-05}, {'diff': 5.1929999999998644e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:05.101" endtime="20201029 18:16:05.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.108" level="INFO">${ACCURACY} = {'diff': [5.00409999999972e-05, 5.387499999999837e-05, 5.483300000000066e-05, 5.4777999999998384e-05, 5.484700000000023e-05, 5.1929999999998644e-05, 5.093100000000059e-05, 5.2929999999999644e-05, 5.00...</msg>
<status status="PASS" starttime="20201029 18:16:05.105" endtime="20201029 18:16:05.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.113" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.112" endtime="20201029 18:16:05.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.116" level="INFO">VALUE: [5.00409999999972e-05, 5.387499999999837e-05, 5.483300000000066e-05, 5.4777999999998384e-05, 5.484700000000023e-05, 5.1929999999998644e-05, 5.093100000000059e-05, 5.2929999999999644e-05, 5.002800000000057e-05, 5.091700000000102e-05, 5.097199999999982e-05, 5.187499999999984e-05, 5.194500000000116e-05, 5.379200000000042e-05, 5.005500000000024e-05, 5.2916000000000074e-05, 5.5736000000000674e-05, 5.290299999999998e-05, 5.5777999999999384e-05, 5.472299999999958e-05, 5.004200000000014e-05, 5.5763999999999814e-05, 5.290299999999998e-05, 5.48609999999998e-05, 5.100000000000243e-05, 5.6652000000000785e-05, 5.102800000000157e-05, 5.099999999999896e-05, 5.5693999999998495e-05, 5.666699999999983e-05, 5.094500000000016e-05, 5.19730000000003e-05, 5.191700000000202e-05, 5.188899999999941e-05, 5.48609999999998e-05, 5.477800000000185e-05, 5.480600000000099e-05, 5.379200000000042e-05, 5.4777999999998384e-05, 5.287499999999737e-05, 5.097199999999982e-05, 5.4735999999999674e-05, 5.48609999999998e-05, 5.5722000000001104e-05, 5.186199999999974e-05, 5.383399999999913e-05, 5.1901999999999504e-05, 5.1957999999997784e-05, 5.48609999999998e-05, 5.383299999999966e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.114" endtime="20201029 18:16:05.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.109" endtime="20201029 18:16:05.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.122" endtime="20201029 18:16:05.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.120" endtime="20201029 18:16:05.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.119" endtime="20201029 18:16:05.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.753" endtime="20201029 18:16:05.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.753" endtime="20201029 18:16:05.143"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.152" endtime="20201029 18:16:05.171"></status>
</kw>
<msg timestamp="20201029 18:16:05.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.150" endtime="20201029 18:16:05.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.172" endtime="20201029 18:16:05.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.175" endtime="20201029 18:16:05.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.148" endtime="20201029 18:16:05.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.146" endtime="20201029 18:16:05.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.184" endtime="20201029 18:16:05.470"></status>
</kw>
<msg timestamp="20201029 18:16:05.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020740694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020778236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.183" endtime="20201029 18:16:05.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020740694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020778236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.475" endtime="20201029 18:16:05.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.483" endtime="20201029 18:16:05.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.180" endtime="20201029 18:16:05.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.178" endtime="20201029 18:16:05.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.490" level="INFO">${RESULT} = [{'diff': 3.754199999999805e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.005599999999971e-05}, {'diff': 5.2930000000003113e-05}, {'diff': 5.097199999999982e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:05.487" endtime="20201029 18:16:05.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.495" level="INFO">${ACCURACY} = {'diff': [3.754199999999805e-05, 5.287500000000084e-05, 5.4777999999998384e-05, 5.005599999999971e-05, 5.2930000000003113e-05, 5.097199999999982e-05, 5.091700000000102e-05, 5.000000000000143e-05, 5.19...</msg>
<status status="PASS" starttime="20201029 18:16:05.491" endtime="20201029 18:16:05.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.500" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.499" endtime="20201029 18:16:05.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.503" level="INFO">VALUE: [3.754199999999805e-05, 5.287500000000084e-05, 5.4777999999998384e-05, 5.005599999999971e-05, 5.2930000000003113e-05, 5.097199999999982e-05, 5.091700000000102e-05, 5.000000000000143e-05, 5.193100000000159e-05, 5.1901999999999504e-05, 5.193100000000159e-05, 5.097199999999982e-05, 5.279199999999942e-05, 5.293099999999912e-05, 5.286100000000127e-05, 5.665300000000026e-05, 5.0014000000001e-05, 5.386200000000174e-05, 5.3693999999999964e-05, 5.0014000000001e-05, 5.5750000000000244e-05, 5.187499999999984e-05, 5.193100000000159e-05, 5.5750000000000244e-05, 5.288900000000041e-05, 5.000000000000143e-05, 5.376400000000128e-05, 5.279199999999942e-05, 5.099999999999896e-05, 5.5736000000000674e-05, 4.995799999999925e-05, 5.097199999999982e-05, 5.094400000000068e-05, 5.187499999999984e-05, 5.08469999999997e-05, 5.480600000000099e-05, 5.279199999999942e-05, 5.277799999999985e-05, 5.186100000000027e-05, 4.994399999999968e-05, 5.570899999999754e-05, 5.281999999999856e-05, 4.999999999999796e-05, 5.286100000000127e-05, 5.088900000000188e-05, 5.5763999999999814e-05, 5.186100000000027e-05, 5.281899999999909e-05, 4.9986999999997866e-05, 5.570900000000101e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.501" endtime="20201029 18:16:05.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.496" endtime="20201029 18:16:05.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.508" endtime="20201029 18:16:05.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.506" endtime="20201029 18:16:05.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.505" endtime="20201029 18:16:05.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.144" endtime="20201029 18:16:05.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.143" endtime="20201029 18:16:05.529"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.538" endtime="20201029 18:16:05.557"></status>
</kw>
<msg timestamp="20201029 18:16:05.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.536" endtime="20201029 18:16:05.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.559" endtime="20201029 18:16:05.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.561" endtime="20201029 18:16:05.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.533" endtime="20201029 18:16:05.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.531" endtime="20201029 18:16:05.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.571" endtime="20201029 18:16:05.859"></status>
</kw>
<msg timestamp="20201029 18:16:05.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.569" endtime="20201029 18:16:05.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.863" endtime="20201029 18:16:05.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.872" endtime="20201029 18:16:05.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.566" endtime="20201029 18:16:05.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.565" endtime="20201029 18:16:05.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.879" level="INFO">${RESULT} = [{'diff': 4.61939999999994e-05}, {'diff': 5.480600000000099e-05}, {'diff': 5.381900000000009e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.5763999999999814e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:05.875" endtime="20201029 18:16:05.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.883" level="INFO">${ACCURACY} = {'diff': [4.61939999999994e-05, 5.480600000000099e-05, 5.381900000000009e-05, 5.291699999999955e-05, 5.000000000000143e-05, 5.5763999999999814e-05, 5.5791999999998954e-05, 5.291699999999955e-05, 5.187...</msg>
<status status="PASS" starttime="20201029 18:16:05.880" endtime="20201029 18:16:05.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.888" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.887" endtime="20201029 18:16:05.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.890" level="INFO">VALUE: [4.61939999999994e-05, 5.480600000000099e-05, 5.381900000000009e-05, 5.291699999999955e-05, 5.000000000000143e-05, 5.5763999999999814e-05, 5.5791999999998954e-05, 5.291699999999955e-05, 5.187499999999984e-05, 5.5763999999999814e-05, 5.293100000000259e-05, 5.477800000000185e-05, 5.480500000000152e-05, 5.479200000000142e-05, 5.3777999999997383e-05, 5.384800000000217e-05, 5.00409999999972e-05, 5.187499999999984e-05, 5.5763999999999814e-05, 5.483400000000013e-05, 5.283299999999866e-05, 5.38609999999988e-05, 5.193100000000159e-05, 5.5707999999998065e-05, 5.483400000000013e-05, 5.38609999999988e-05, 5.379199999999695e-05, 5.191699999999855e-05, 5.580499999999905e-05, 5.284800000000117e-05, 5.383299999999966e-05, 5.483400000000013e-05, 5.484700000000023e-05, 5.4722000000000104e-05, 5.4763999999998814e-05, 5.390300000000098e-05, 5.573700000000015e-05, 5.387500000000184e-05, 5.187499999999984e-05, 5.004200000000014e-05, 5.581899999999862e-05, 5.091700000000102e-05, 5.09729999999993e-05, 5.091700000000102e-05, 5.28340000000016e-05, 5.379200000000042e-05, 5.577800000000285e-05, 5.090300000000145e-05, 5.480600000000099e-05, 5.5777999999999384e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.889" endtime="20201029 18:16:05.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.884" endtime="20201029 18:16:05.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.896" endtime="20201029 18:16:05.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.894" endtime="20201029 18:16:05.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.893" endtime="20201029 18:16:05.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.530" endtime="20201029 18:16:05.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.529" endtime="20201029 18:16:05.917"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.926" endtime="20201029 18:16:05.950"></status>
</kw>
<msg timestamp="20201029 18:16:05.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.924" endtime="20201029 18:16:05.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.951" endtime="20201029 18:16:05.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.954" endtime="20201029 18:16:05.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.922" endtime="20201029 18:16:05.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.919" endtime="20201029 18:16:05.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.964" endtime="20201029 18:16:06.250"></status>
</kw>
<msg timestamp="20201029 18:16:06.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025889597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025950181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.962" endtime="20201029 18:16:06.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025889597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025950181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.255" endtime="20201029 18:16:06.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.263" endtime="20201029 18:16:06.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.959" endtime="20201029 18:16:06.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.957" endtime="20201029 18:16:06.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.270" level="INFO">${RESULT} = [{'diff': 6.0583999999998944e-05}, {'diff': 5.194499999999769e-05}, {'diff': 5.477699999999891e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.576400000000328e-05}, {'diff': 5.097199999999982e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:06.267" endtime="20201029 18:16:06.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.275" level="INFO">${ACCURACY} = {'diff': [6.0583999999998944e-05, 5.194499999999769e-05, 5.477699999999891e-05, 5.4777999999998384e-05, 5.576400000000328e-05, 5.097199999999982e-05, 5.480500000000152e-05, 5.193100000000159e-05, 5.66...</msg>
<status status="PASS" starttime="20201029 18:16:06.271" endtime="20201029 18:16:06.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.279" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.278" endtime="20201029 18:16:06.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.282" level="INFO">VALUE: [6.0583999999998944e-05, 5.194499999999769e-05, 5.477699999999891e-05, 5.4777999999998384e-05, 5.576400000000328e-05, 5.097199999999982e-05, 5.480500000000152e-05, 5.193100000000159e-05, 5.6665999999996886e-05, 5.477699999999891e-05, 5.290299999999998e-05, 5.4722000000000104e-05, 5.194499999999769e-05, 5.1971999999997354e-05, 5.186100000000027e-05, 5.482000000000056e-05, 5.101399999999853e-05, 5.5736000000000674e-05, 5.381999999999956e-05, 5.097199999999982e-05, 5.579099999999948e-05, 5.387499999999837e-05, 5.0957999999996784e-05, 5.099999999999896e-05, 5.386199999999827e-05, 5.194400000000168e-05, 5.5750000000000244e-05, 5.577699999999991e-05, 5.383299999999966e-05, 5.379100000000095e-05, 5.483400000000013e-05, 5.5750000000000244e-05, 5.379200000000042e-05, 5.194400000000168e-05, 5.5763999999999814e-05, 5.0987000000002336e-05, 5.387499999999837e-05, 4.994399999999968e-05, 5.091699999999755e-05, 5.38470000000027e-05, 5.28470000000017e-05, 5.004200000000014e-05, 5.381900000000009e-05, 5.195900000000073e-05, 5.384699999999923e-05, 5.195899999999726e-05, 5.288900000000041e-05, 4.998600000000186e-05, 5.100000000000243e-05, 5.28470000000017e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.280" endtime="20201029 18:16:06.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.276" endtime="20201029 18:16:06.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.288" endtime="20201029 18:16:06.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.287" endtime="20201029 18:16:06.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.285" endtime="20201029 18:16:06.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.918" endtime="20201029 18:16:06.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.917" endtime="20201029 18:16:06.309"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.318" endtime="20201029 18:16:06.343"></status>
</kw>
<msg timestamp="20201029 18:16:06.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.317" endtime="20201029 18:16:06.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.344" endtime="20201029 18:16:06.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.347" endtime="20201029 18:16:06.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.314" endtime="20201029 18:16:06.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.312" endtime="20201029 18:16:06.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.356" endtime="20201029 18:16:06.642"></status>
</kw>
<msg timestamp="20201029 18:16:06.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025343597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025407028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.355" endtime="20201029 18:16:06.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025343597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025407028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.647" endtime="20201029 18:16:06.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.655" endtime="20201029 18:16:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.352" endtime="20201029 18:16:06.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.350" endtime="20201029 18:16:06.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.662" level="INFO">${RESULT} = [{'diff': 6.343100000000268e-05}, {'diff': 5.280599999999899e-05}, {'diff': 5.5680000000002394e-05}, {'diff': 5.195800000000125e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.4735999999999674e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:06.659" endtime="20201029 18:16:06.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.670" level="INFO">${ACCURACY} = {'diff': [6.343100000000268e-05, 5.280599999999899e-05, 5.5680000000002394e-05, 5.195800000000125e-05, 5.5708000000001534e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.1014000000002e-05, 5.18...</msg>
<status status="PASS" starttime="20201029 18:16:06.663" endtime="20201029 18:16:06.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.675" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.674" endtime="20201029 18:16:06.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.677" level="INFO">VALUE: [6.343100000000268e-05, 5.280599999999899e-05, 5.5680000000002394e-05, 5.195800000000125e-05, 5.5708000000001534e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.1014000000002e-05, 5.186100000000027e-05, 5.4735999999999674e-05, 4.987499999999784e-05, 5.379200000000042e-05, 5.484700000000023e-05, 4.995899999999873e-05, 5.091600000000154e-05, 5.46809999999974e-05, 4.9986999999997866e-05, 4.997199999999882e-05, 5.291699999999955e-05, 5.280599999999899e-05, 5.091700000000102e-05, 5.190299999999898e-05, 5.388900000000141e-05, 5.0901999999998504e-05, 5.5679999999998925e-05, 5.282000000000203e-05, 5.188899999999941e-05, 5.005500000000024e-05, 5.090299999999798e-05, 5.091600000000154e-05, 5.377800000000085e-05, 5.569499999999797e-05, 5.287500000000084e-05, 5.376400000000128e-05, 5.370900000000248e-05, 5.094400000000068e-05, 5.677699999999744e-05, 5.375000000000171e-05, 5.281900000000256e-05, 5.281900000000256e-05, 4.995800000000272e-05, 5.101399999999853e-05, 5.5708000000001534e-05, 5.4735999999999674e-05, 5.08469999999997e-05, 5.101399999999853e-05, 5.377800000000085e-05, 5.666699999999983e-05, 5.38609999999988e-05, 5.094400000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.676" endtime="20201029 18:16:06.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.671" endtime="20201029 18:16:06.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.683" endtime="20201029 18:16:06.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.681" endtime="20201029 18:16:06.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.680" endtime="20201029 18:16:06.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.310" endtime="20201029 18:16:06.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.309" endtime="20201029 18:16:06.704"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.714" endtime="20201029 18:16:06.733"></status>
</kw>
<msg timestamp="20201029 18:16:06.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.712" endtime="20201029 18:16:06.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.735" endtime="20201029 18:16:06.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.737" endtime="20201029 18:16:06.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.709" endtime="20201029 18:16:06.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.707" endtime="20201029 18:16:06.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.747" endtime="20201029 18:16:07.034"></status>
</kw>
<msg timestamp="20201029 18:16:07.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022778028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.745" endtime="20201029 18:16:07.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022778028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.038" endtime="20201029 18:16:07.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.047" endtime="20201029 18:16:07.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.743" endtime="20201029 18:16:07.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.741" endtime="20201029 18:16:07.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.054" level="INFO">${RESULT} = [{'diff': 4.0389000000001785e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.6778000000000384e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.5722000000001104e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:07.050" endtime="20201029 18:16:07.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.058" level="INFO">${ACCURACY} = {'diff': [4.0389000000001785e-05, 5.187499999999984e-05, 5.290299999999998e-05, 5.6778000000000384e-05, 5.380599999999999e-05, 5.5722000000001104e-05, 5.087499999999884e-05, 5.000000000000143e-05, 5.2...</msg>
<status status="PASS" starttime="20201029 18:16:07.055" endtime="20201029 18:16:07.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.062" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.061" endtime="20201029 18:16:07.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.065" level="INFO">VALUE: [4.0389000000001785e-05, 5.187499999999984e-05, 5.290299999999998e-05, 5.6778000000000384e-05, 5.380599999999999e-05, 5.5722000000001104e-05, 5.087499999999884e-05, 5.000000000000143e-05, 5.284800000000117e-05, 5.28470000000017e-05, 5.282000000000203e-05, 5.193099999999812e-05, 4.999999999999796e-05, 5.005500000000024e-05, 5.5722000000001104e-05, 5.5735999999997204e-05, 5.387499999999837e-05, 5.287500000000084e-05, 5.662500000000112e-05, 5.4694000000000964e-05, 5.383300000000313e-05, 5.6707999999999065e-05, 5.1915999999999074e-05, 5.28340000000016e-05, 5.383299999999966e-05, 5.000000000000143e-05, 5.4735999999999674e-05, 5.186100000000027e-05, 4.998599999999839e-05, 5.098599999999939e-05, 5.188900000000288e-05, 5.663899999999722e-05, 5.0014000000001e-05, 5.002800000000057e-05, 5.187499999999984e-05, 5.28470000000017e-05, 5.2916000000000074e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.194500000000116e-05, 5.095800000000025e-05, 5.193000000000211e-05, 5.287499999999737e-05, 5.090299999999798e-05, 5.004200000000014e-05, 5.5736000000000674e-05, 5.56809999999984e-05, 5.380499999999705e-05, 5.095800000000025e-05, 5.287499999999737e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.064" endtime="20201029 18:16:07.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.059" endtime="20201029 18:16:07.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.070" endtime="20201029 18:16:07.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.069" endtime="20201029 18:16:07.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.067" endtime="20201029 18:16:07.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.705" endtime="20201029 18:16:07.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.704" endtime="20201029 18:16:07.091"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.100" endtime="20201029 18:16:07.120"></status>
</kw>
<msg timestamp="20201029 18:16:07.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.099" endtime="20201029 18:16:07.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.121" endtime="20201029 18:16:07.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.124" endtime="20201029 18:16:07.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.096" endtime="20201029 18:16:07.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.094" endtime="20201029 18:16:07.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.134" endtime="20201029 18:16:07.420"></status>
</kw>
<msg timestamp="20201029 18:16:07.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.132" endtime="20201029 18:16:07.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.424" endtime="20201029 18:16:07.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.433" endtime="20201029 18:16:07.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.129" endtime="20201029 18:16:07.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.127" endtime="20201029 18:16:07.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.440" level="INFO">${RESULT} = [{'diff': 4.522199999999754e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.379100000000095e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.004200000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:07.436" endtime="20201029 18:16:07.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.444" level="INFO">${ACCURACY} = {'diff': [4.522199999999754e-05, 5.286100000000127e-05, 5.379100000000095e-05, 5.288900000000041e-05, 5.000000000000143e-05, 5.004200000000014e-05, 5.005599999999971e-05, 5.4694000000000964e-05, 5.575...</msg>
<status status="PASS" starttime="20201029 18:16:07.441" endtime="20201029 18:16:07.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.449" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.448" endtime="20201029 18:16:07.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.451" level="INFO">VALUE: [4.522199999999754e-05, 5.286100000000127e-05, 5.379100000000095e-05, 5.288900000000041e-05, 5.000000000000143e-05, 5.004200000000014e-05, 5.005599999999971e-05, 5.4694000000000964e-05, 5.5750000000000244e-05, 5.570899999999754e-05, 5.376400000000128e-05, 5.386199999999827e-05, 5.379100000000095e-05, 5.663900000000069e-05, 5.195800000000125e-05, 5.188899999999941e-05, 5.5680000000002394e-05, 5.568100000000187e-05, 5.383299999999966e-05, 5.091600000000154e-05, 5.480600000000099e-05, 5.288900000000041e-05, 5.4763999999998814e-05, 5.00409999999972e-05, 5.381999999999956e-05, 5.187499999999984e-05, 5.5777999999999384e-05, 5.281900000000256e-05, 5.4680000000001394e-05, 5.3749999999998244e-05, 5.098599999999939e-05, 5.38609999999988e-05, 5.291699999999955e-05, 5.4749999999999244e-05, 5.102800000000157e-05, 5.090299999999798e-05, 5.094400000000068e-05, 5.481900000000109e-05, 5.66809999999994e-05, 5.2888000000000934e-05, 5.5693999999998495e-05, 5.3777999999997383e-05, 5.190299999999898e-05, 5.090299999999798e-05, 5.005599999999971e-05, 5.0915999999998074e-05, 5.473600000000314e-05, 5.197200000000082e-05, 4.990300000000045e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.450" endtime="20201029 18:16:07.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.445" endtime="20201029 18:16:07.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.463" endtime="20201029 18:16:07.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.461" endtime="20201029 18:16:07.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.460" endtime="20201029 18:16:07.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.092" endtime="20201029 18:16:07.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.091" endtime="20201029 18:16:07.484"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.493" endtime="20201029 18:16:07.513"></status>
</kw>
<msg timestamp="20201029 18:16:07.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.491" endtime="20201029 18:16:07.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.515" endtime="20201029 18:16:07.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.518" endtime="20201029 18:16:07.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.488" endtime="20201029 18:16:07.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.486" endtime="20201029 18:16:07.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.527" endtime="20201029 18:16:07.815"></status>
</kw>
<msg timestamp="20201029 18:16:07.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021343847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.526" endtime="20201029 18:16:07.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021343847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.819" endtime="20201029 18:16:07.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.828" endtime="20201029 18:16:07.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.523" endtime="20201029 18:16:07.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.521" endtime="20201029 18:16:07.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.835" level="INFO">${RESULT} = [{'diff': 5.379200000000042e-05}, {'diff': 5.000000000000143e-05}, {'diff': 4.993000000000011e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.194499999999769e-05}, {'diff': 5.187499999999984e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:07.831" endtime="20201029 18:16:07.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.840" level="INFO">${ACCURACY} = {'diff': [5.379200000000042e-05, 5.000000000000143e-05, 4.993000000000011e-05, 5.380599999999999e-05, 5.194499999999769e-05, 5.187499999999984e-05, 5.476299999999934e-05, 5.002800000000057e-05, 5.4749...</msg>
<status status="PASS" starttime="20201029 18:16:07.836" endtime="20201029 18:16:07.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.844" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.843" endtime="20201029 18:16:07.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.847" level="INFO">VALUE: [5.379200000000042e-05, 5.000000000000143e-05, 4.993000000000011e-05, 5.380599999999999e-05, 5.194499999999769e-05, 5.187499999999984e-05, 5.476299999999934e-05, 5.002800000000057e-05, 5.4749999999999244e-05, 5.191699999999855e-05, 5.38470000000027e-05, 5.095899999999973e-05, 5.390299999999751e-05, 5.283300000000213e-05, 5.191700000000202e-05, 5.566699999999883e-05, 5.38470000000027e-05, 5.193000000000211e-05, 5.570900000000101e-05, 5.1916000000002543e-05, 5.0014000000001e-05, 5.5763999999999814e-05, 5.5777999999999384e-05, 5.38479999999987e-05, 5.194500000000116e-05, 5.190299999999898e-05, 5.000000000000143e-05, 5.669499999999897e-05, 5.287500000000084e-05, 5.479200000000142e-05, 5.281900000000256e-05, 5.481900000000109e-05, 5.288900000000041e-05, 5.001300000000153e-05, 5.193100000000159e-05, 5.476400000000228e-05, 5.5763999999999814e-05, 5.484800000000317e-05, 5.5736000000000674e-05, 5.383299999999966e-05, 5.5777999999999384e-05, 5.4708000000000534e-05, 5.193100000000159e-05, 5.194500000000116e-05, 5.665300000000026e-05, 5.000000000000143e-05, 5.480599999999752e-05, 5.097199999999982e-05, 5.5736000000000674e-05, 5.191699999999855e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.846" endtime="20201029 18:16:07.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.841" endtime="20201029 18:16:07.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.852" endtime="20201029 18:16:07.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.851" endtime="20201029 18:16:07.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.849" endtime="20201029 18:16:07.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.485" endtime="20201029 18:16:07.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.484" endtime="20201029 18:16:07.873"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.882" endtime="20201029 18:16:07.904"></status>
</kw>
<msg timestamp="20201029 18:16:07.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.881" endtime="20201029 18:16:07.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.906" endtime="20201029 18:16:07.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.908" endtime="20201029 18:16:07.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.878" endtime="20201029 18:16:07.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.876" endtime="20201029 18:16:07.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.918" endtime="20201029 18:16:08.217"></status>
</kw>
<msg timestamp="20201029 18:16:08.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.916" endtime="20201029 18:16:08.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.221" endtime="20201029 18:16:08.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.230" endtime="20201029 18:16:08.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.914" endtime="20201029 18:16:08.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.912" endtime="20201029 18:16:08.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.236" level="INFO">${RESULT} = [{'diff': 5.6764000000000814e-05}, {'diff': 4.998600000000186e-05}, {'diff': 5.284699999999823e-05}, {'diff': 5.479100000000195e-05}, {'diff': 5.388900000000141e-05}, {'diff': 5.18470000000007e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:08.233" endtime="20201029 18:16:08.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.240" level="INFO">${ACCURACY} = {'diff': [5.6764000000000814e-05, 4.998600000000186e-05, 5.284699999999823e-05, 5.479100000000195e-05, 5.388900000000141e-05, 5.18470000000007e-05, 5.283300000000213e-05, 5.186100000000027e-05, 5.0999...</msg>
<status status="PASS" starttime="20201029 18:16:08.237" endtime="20201029 18:16:08.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.245" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.244" endtime="20201029 18:16:08.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.247" level="INFO">VALUE: [5.6764000000000814e-05, 4.998600000000186e-05, 5.284699999999823e-05, 5.479100000000195e-05, 5.388900000000141e-05, 5.18470000000007e-05, 5.283300000000213e-05, 5.186100000000027e-05, 5.099999999999896e-05, 5.087500000000231e-05, 5.562500000000012e-05, 5.281899999999909e-05, 5.377800000000085e-05, 5.099999999999896e-05, 5.086099999999927e-05, 5.101399999999853e-05, 5.3763999999997814e-05, 5.375000000000171e-05, 5.5777999999999384e-05, 4.995899999999873e-05, 5.1957999999997784e-05, 5.477800000000185e-05, 5.583299999999819e-05, 5.18609999999968e-05, 5.199999999999996e-05, 5.091600000000154e-05, 5.188899999999941e-05, 5.093100000000059e-05, 5.579099999999948e-05, 5.475000000000271e-05, 5.0901999999998504e-05, 4.994399999999968e-05, 5.388900000000141e-05, 5.5679999999998925e-05, 5.5680000000002394e-05, 5.099999999999896e-05, 5.4722000000000104e-05, 5.56670000000023e-05, 5.2916000000000074e-05, 5.18479999999967e-05, 5.563899999999969e-05, 5.5777999999999384e-05, 5.090299999999798e-05, 5.483400000000013e-05, 5.4708000000000534e-05, 5.088900000000188e-05, 5.2929999999999644e-05, 5.473699999999915e-05, 5.280599999999899e-05, 5.6764000000000814e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.246" endtime="20201029 18:16:08.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.241" endtime="20201029 18:16:08.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.252" endtime="20201029 18:16:08.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.251" endtime="20201029 18:16:08.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.249" endtime="20201029 18:16:08.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.874" endtime="20201029 18:16:08.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.874" endtime="20201029 18:16:08.273"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.282" endtime="20201029 18:16:08.306"></status>
</kw>
<msg timestamp="20201029 18:16:08.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.280" endtime="20201029 18:16:08.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.307" endtime="20201029 18:16:08.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.310" endtime="20201029 18:16:08.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.278" endtime="20201029 18:16:08.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.276" endtime="20201029 18:16:08.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.319" endtime="20201029 18:16:08.604"></status>
</kw>
<msg timestamp="20201029 18:16:08.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025616806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.317" endtime="20201029 18:16:08.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025616806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.608" endtime="20201029 18:16:08.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.616" endtime="20201029 18:16:08.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.315" endtime="20201029 18:16:08.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.313" endtime="20201029 18:16:08.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.623" level="INFO">${RESULT} = [{'diff': 6.430500000000061e-05}, {'diff': 5.284699999999823e-05}, {'diff': 5.3749999999998244e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.5679999999998925e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:08.620" endtime="20201029 18:16:08.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.627" level="INFO">${ACCURACY} = {'diff': [6.430500000000061e-05, 5.284699999999823e-05, 5.3749999999998244e-05, 5.5791999999998954e-05, 5.188899999999941e-05, 5.5679999999998925e-05, 5.381999999999956e-05, 5.4735999999999674e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:08.624" endtime="20201029 18:16:08.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.632" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.631" endtime="20201029 18:16:08.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.634" level="INFO">VALUE: [6.430500000000061e-05, 5.284699999999823e-05, 5.3749999999998244e-05, 5.5791999999998954e-05, 5.188899999999941e-05, 5.5679999999998925e-05, 5.381999999999956e-05, 5.4735999999999674e-05, 5.572300000000058e-05, 5.0943999999997214e-05, 5.004200000000014e-05, 5.091700000000102e-05, 5.281999999999856e-05, 5.0887999999998934e-05, 5.5680000000002394e-05, 5.286100000000127e-05, 5.102800000000157e-05, 4.9959000000002196e-05, 5.38470000000027e-05, 5.281899999999909e-05, 5.5693999999998495e-05, 5.187499999999984e-05, 5.66809999999994e-05, 4.995799999999925e-05, 5.6764000000000814e-05, 5.4763999999998814e-05, 5.4763999999998814e-05, 5.38609999999988e-05, 5.569500000000144e-05, 5.376400000000128e-05, 5.4749999999999244e-05, 5.487499999999937e-05, 5.377800000000085e-05, 5.4749999999999244e-05, 5.5708000000001534e-05, 5.187499999999984e-05, 5.187499999999984e-05, 4.998600000000186e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.197200000000082e-05, 5.375000000000171e-05, 5.100000000000243e-05, 5.380599999999999e-05, 5.093100000000059e-05, 5.5707999999998065e-05, 5.088899999999841e-05, 5.379100000000095e-05, 5.481899999999762e-05, 5.6736000000001674e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.633" endtime="20201029 18:16:08.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.628" endtime="20201029 18:16:08.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.640" endtime="20201029 18:16:08.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.639" endtime="20201029 18:16:08.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.637" endtime="20201029 18:16:08.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.274" endtime="20201029 18:16:08.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.274" endtime="20201029 18:16:08.661"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.669" endtime="20201029 18:16:08.692"></status>
</kw>
<msg timestamp="20201029 18:16:08.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.668" endtime="20201029 18:16:08.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.694" endtime="20201029 18:16:08.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.696" endtime="20201029 18:16:08.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.665" endtime="20201029 18:16:08.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.663" endtime="20201029 18:16:08.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.705" endtime="20201029 18:16:09.018"></status>
</kw>
<msg timestamp="20201029 18:16:09.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024693375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024742431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.704" endtime="20201029 18:16:09.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024693375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024742431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.022" endtime="20201029 18:16:09.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.031" endtime="20201029 18:16:09.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.701" endtime="20201029 18:16:09.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.700" endtime="20201029 18:16:09.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.038" level="INFO">${RESULT} = [{'diff': 4.905599999999871e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.391700000000055e-05}, {'diff': 5.187499999999984e-05}, {'diff': 4.994499999999916e-05}, {'diff': 5.101399999999853e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:09.034" endtime="20201029 18:16:09.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.043" level="INFO">${ACCURACY} = {'diff': [4.905599999999871e-05, 5.4749999999999244e-05, 5.391700000000055e-05, 5.187499999999984e-05, 4.994499999999916e-05, 5.101399999999853e-05, 5.283299999999866e-05, 5.391700000000055e-05, 5.280...</msg>
<status status="PASS" starttime="20201029 18:16:09.039" endtime="20201029 18:16:09.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.048" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.047" endtime="20201029 18:16:09.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.050" level="INFO">VALUE: [4.905599999999871e-05, 5.4749999999999244e-05, 5.391700000000055e-05, 5.187499999999984e-05, 4.994499999999916e-05, 5.101399999999853e-05, 5.283299999999866e-05, 5.391700000000055e-05, 5.280599999999899e-05, 5.477800000000185e-05, 5.294499999999869e-05, 5.187499999999984e-05, 5.290300000000345e-05, 5.566699999999883e-05, 5.568100000000187e-05, 5.387499999999837e-05, 5.28470000000017e-05, 5.487499999999937e-05, 5.4735999999999674e-05, 4.9972999999998297e-05, 5.393100000000012e-05, 5.6749999999997774e-05, 5.569499999999797e-05, 5.294500000000216e-05, 5.086099999999927e-05, 5.005599999999971e-05, 5.376299999999834e-05, 5.580499999999905e-05, 5.379200000000042e-05, 5.18470000000007e-05, 5.199999999999996e-05, 5.0901999999998504e-05, 5.48609999999998e-05, 5.091600000000154e-05, 5.099999999999896e-05, 5.561100000000055e-05, 5.290299999999998e-05, 5.288900000000041e-05, 5.5791999999998954e-05, 5.566699999999883e-05, 5.294499999999869e-05, 5.288900000000041e-05, 5.2930000000003113e-05, 5.283299999999866e-05, 5.195900000000073e-05, 5.562500000000012e-05, 5.293099999999912e-05, 5.0014000000001e-05, 5.094500000000016e-05, 5.094500000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.049" endtime="20201029 18:16:09.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.044" endtime="20201029 18:16:09.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.056" endtime="20201029 18:16:09.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.054" endtime="20201029 18:16:09.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.053" endtime="20201029 18:16:09.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.662" endtime="20201029 18:16:09.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.661" endtime="20201029 18:16:09.077"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.086" endtime="20201029 18:16:09.104"></status>
</kw>
<msg timestamp="20201029 18:16:09.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.084" endtime="20201029 18:16:09.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.106" endtime="20201029 18:16:09.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.108" endtime="20201029 18:16:09.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.081" endtime="20201029 18:16:09.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.079" endtime="20201029 18:16:09.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.118" endtime="20201029 18:16:09.405"></status>
</kw>
<msg timestamp="20201029 18:16:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02123625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:09.116" endtime="20201029 18:16:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02123625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:09.410" endtime="20201029 18:16:09.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.418" endtime="20201029 18:16:09.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.114" endtime="20201029 18:16:09.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.112" endtime="20201029 18:16:09.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.425" level="INFO">${RESULT} = [{'diff': 6.244400000000178e-05}, {'diff': 5.5721999999997635e-05}, {'diff': 5.381999999999956e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.190300000000245e-05}, {'diff': 5.097200000000329e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:09.422" endtime="20201029 18:16:09.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.430" level="INFO">${ACCURACY} = {'diff': [6.244400000000178e-05, 5.5721999999997635e-05, 5.381999999999956e-05, 5.290299999999998e-05, 5.190300000000245e-05, 5.097200000000329e-05, 5.287500000000084e-05, 5.098599999999939e-05, 5.576...</msg>
<status status="PASS" starttime="20201029 18:16:09.426" endtime="20201029 18:16:09.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.434" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.433" endtime="20201029 18:16:09.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.437" level="INFO">VALUE: [6.244400000000178e-05, 5.5721999999997635e-05, 5.381999999999956e-05, 5.290299999999998e-05, 5.190300000000245e-05, 5.097200000000329e-05, 5.287500000000084e-05, 5.098599999999939e-05, 5.576299999999687e-05, 5.5679999999998925e-05, 5.5777999999999384e-05, 5.095899999999973e-05, 5.097199999999982e-05, 5.102699999999863e-05, 5.573700000000015e-05, 5.481899999999762e-05, 5.287500000000084e-05, 5.0915999999998074e-05, 5.479099999999848e-05, 5.094500000000016e-05, 5.384699999999923e-05, 5.387499999999837e-05, 5.284699999999823e-05, 5.38609999999988e-05, 5.480600000000099e-05, 5.095899999999973e-05, 5.379199999999695e-05, 5.097199999999982e-05, 5.383299999999966e-05, 5.098599999999939e-05, 5.286199999999727e-05, 5.6735999999998205e-05, 5.583399999999766e-05, 5.193000000000211e-05, 5.186100000000027e-05, 5.5750000000000244e-05, 5.201399999999953e-05, 4.998600000000186e-05, 5.194400000000168e-05, 5.088899999999841e-05, 5.194400000000168e-05, 5.094500000000016e-05, 5.5777999999999384e-05, 5.188899999999941e-05, 5.098599999999939e-05, 5.384699999999923e-05, 5.483400000000013e-05, 5.0915999999998074e-05, 5.5750000000000244e-05, 5.104200000000114e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.435" endtime="20201029 18:16:09.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.430" endtime="20201029 18:16:09.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.442" endtime="20201029 18:16:09.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.440" endtime="20201029 18:16:09.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.439" endtime="20201029 18:16:09.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.077" endtime="20201029 18:16:09.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.077" endtime="20201029 18:16:09.463"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.472" endtime="20201029 18:16:09.500"></status>
</kw>
<msg timestamp="20201029 18:16:09.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.470" endtime="20201029 18:16:09.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.502" endtime="20201029 18:16:09.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.505" endtime="20201029 18:16:09.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.468" endtime="20201029 18:16:09.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.465" endtime="20201029 18:16:09.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.514" endtime="20201029 18:16:09.801"></status>
</kw>
<msg timestamp="20201029 18:16:09.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026574569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026614042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.512" endtime="20201029 18:16:09.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026574569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026614042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.805" endtime="20201029 18:16:09.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.814" endtime="20201029 18:16:09.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.510" endtime="20201029 18:16:09.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.508" endtime="20201029 18:16:09.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.820" level="INFO">${RESULT} = [{'diff': 3.9473000000001673e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.193100000000159e-05}, {'diff': 5.5750000000000244e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.5763999999999814e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:09.817" endtime="20201029 18:16:09.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.825" level="INFO">${ACCURACY} = {'diff': [3.9473000000001673e-05, 5.380599999999999e-05, 5.193100000000159e-05, 5.5750000000000244e-05, 5.000000000000143e-05, 5.5763999999999814e-05, 5.1916000000002543e-05, 5.5694000000001964e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:16:09.821" endtime="20201029 18:16:09.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.829" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.828" endtime="20201029 18:16:09.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.832" level="INFO">VALUE: [3.9473000000001673e-05, 5.380599999999999e-05, 5.193100000000159e-05, 5.5750000000000244e-05, 5.000000000000143e-05, 5.5763999999999814e-05, 5.1916000000002543e-05, 5.5694000000001964e-05, 5.482000000000056e-05, 5.4735999999999674e-05, 5.283299999999866e-05, 5.288900000000041e-05, 5.5736000000000674e-05, 5.383299999999966e-05, 4.998600000000186e-05, 5.098599999999939e-05, 5.288900000000041e-05, 5.283299999999866e-05, 5.004200000000014e-05, 5.669500000000244e-05, 5.568100000000187e-05, 5.099999999999896e-05, 5.095800000000025e-05, 5.099999999999896e-05, 5.287500000000084e-05, 5.088899999999841e-05, 5.5763999999999814e-05, 5.286200000000074e-05, 5.188899999999941e-05, 5.2916000000000074e-05, 5.1901999999999504e-05, 5.28470000000017e-05, 5.202699999999963e-05, 5.380599999999999e-05, 5.004100000000067e-05, 5.380499999999705e-05, 4.997199999999882e-05, 5.101399999999853e-05, 5.287500000000084e-05, 5.4735999999999674e-05, 5.286100000000127e-05, 5.5693999999998495e-05, 5.577699999999991e-05, 5.380500000000052e-05, 5.1985999999996924e-05, 5.5722000000001104e-05, 5.581899999999862e-05, 5.380500000000052e-05, 5.5679999999998925e-05, 5.6722000000002104e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.831" endtime="20201029 18:16:09.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.826" endtime="20201029 18:16:09.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.838" endtime="20201029 18:16:09.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.837" endtime="20201029 18:16:09.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.835" endtime="20201029 18:16:09.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.464" endtime="20201029 18:16:09.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.463" endtime="20201029 18:16:09.859"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.868" endtime="20201029 18:16:09.889"></status>
</kw>
<msg timestamp="20201029 18:16:09.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.867" endtime="20201029 18:16:09.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.890" endtime="20201029 18:16:09.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.893" endtime="20201029 18:16:09.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.864" endtime="20201029 18:16:09.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.862" endtime="20201029 18:16:09.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.903" endtime="20201029 18:16:10.189"></status>
</kw>
<msg timestamp="20201029 18:16:10.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:09.901" endtime="20201029 18:16:10.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:10.193" endtime="20201029 18:16:10.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.201" endtime="20201029 18:16:10.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.898" endtime="20201029 18:16:10.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.896" endtime="20201029 18:16:10.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.208" level="INFO">${RESULT} = [{'diff': 5.284699999999823e-05}, {'diff': 5.294400000000268e-05}, {'diff': 5.572300000000058e-05}, {'diff': 5.482000000000056e-05}, {'diff': 4.993099999999959e-05}, {'diff': 5.579200000000242e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:10.205" endtime="20201029 18:16:10.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.216" level="INFO">${ACCURACY} = {'diff': [5.284699999999823e-05, 5.294400000000268e-05, 5.572300000000058e-05, 5.482000000000056e-05, 4.993099999999959e-05, 5.579200000000242e-05, 5.379200000000042e-05, 5.5777999999999384e-05, 5.295...</msg>
<status status="PASS" starttime="20201029 18:16:10.209" endtime="20201029 18:16:10.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.221" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.220" endtime="20201029 18:16:10.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.223" level="INFO">VALUE: [5.284699999999823e-05, 5.294400000000268e-05, 5.572300000000058e-05, 5.482000000000056e-05, 4.993099999999959e-05, 5.579200000000242e-05, 5.379200000000042e-05, 5.5777999999999384e-05, 5.295800000000225e-05, 5.286100000000127e-05, 5.1915999999999074e-05, 4.9986999999997866e-05, 5.291700000000302e-05, 4.9014e-05, 5.5777999999999384e-05, 5.283300000000213e-05, 5.004200000000014e-05, 5.56809999999984e-05, 5.288900000000041e-05, 5.283399999999813e-05, 5.10279999999981e-05, 5.570899999999754e-05, 5.5693999999998495e-05, 5.48479999999997e-05, 5.186100000000027e-05, 5.198600000000039e-05, 5.383300000000313e-05, 5.106999999999681e-05, 5.4763999999998814e-05, 5.38609999999988e-05, 5.583400000000113e-05, 5.186100000000027e-05, 5.2943999999999214e-05, 5.48609999999998e-05, 5.091600000000154e-05, 5.0929999999997644e-05, 5.2929999999999644e-05, 5.4763999999998814e-05, 5.386100000000227e-05, 5.570900000000101e-05, 5.093100000000059e-05, 4.998600000000186e-05, 5.6764000000000814e-05, 5.380599999999999e-05, 4.911100000000099e-05, 5.379099999999748e-05, 5.373700000000162e-05, 5.2916000000000074e-05, 5.665300000000026e-05, 5.098600000000286e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.222" endtime="20201029 18:16:10.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.217" endtime="20201029 18:16:10.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.229" endtime="20201029 18:16:10.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.227" endtime="20201029 18:16:10.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.226" endtime="20201029 18:16:10.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.860" endtime="20201029 18:16:10.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.859" endtime="20201029 18:16:10.250"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.259" endtime="20201029 18:16:10.280"></status>
</kw>
<msg timestamp="20201029 18:16:10.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.257" endtime="20201029 18:16:10.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.282" endtime="20201029 18:16:10.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.285" endtime="20201029 18:16:10.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.254" endtime="20201029 18:16:10.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.252" endtime="20201029 18:16:10.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.294" endtime="20201029 18:16:10.581"></status>
</kw>
<msg timestamp="20201029 18:16:10.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.293" endtime="20201029 18:16:10.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.586" endtime="20201029 18:16:10.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.594" endtime="20201029 18:16:10.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.290" endtime="20201029 18:16:10.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.288" endtime="20201029 18:16:10.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.601" level="INFO">${RESULT} = [{'diff': 5.291699999999955e-05}, {'diff': 5.387500000000184e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.480600000000099e-05}, {'diff': 5.2916000000000074e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:10.598" endtime="20201029 18:16:10.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.605" level="INFO">${ACCURACY} = {'diff': [5.291699999999955e-05, 5.387500000000184e-05, 5.5708000000001534e-05, 5.482000000000056e-05, 5.480600000000099e-05, 5.2916000000000074e-05, 5.379100000000095e-05, 5.001399999999753e-05, 5.28...</msg>
<status status="PASS" starttime="20201029 18:16:10.602" endtime="20201029 18:16:10.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.610" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.609" endtime="20201029 18:16:10.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.612" level="INFO">VALUE: [5.291699999999955e-05, 5.387500000000184e-05, 5.5708000000001534e-05, 5.482000000000056e-05, 5.480600000000099e-05, 5.2916000000000074e-05, 5.379100000000095e-05, 5.001399999999753e-05, 5.281899999999909e-05, 5.087499999999884e-05, 5.099999999999896e-05, 5.475000000000271e-05, 5.570900000000101e-05, 5.099999999999896e-05, 5.28470000000017e-05, 5.187499999999984e-05, 5.390300000000098e-05, 5.28479999999977e-05, 5.088900000000188e-05, 5.388899999999794e-05, 5.4749999999999244e-05, 5.5707999999998065e-05, 5.1957999999997784e-05, 5.56809999999984e-05, 5.483300000000066e-05, 5.188899999999941e-05, 5.572299999999711e-05, 5.568100000000187e-05, 5.387500000000184e-05, 5.088899999999841e-05, 5.087499999999884e-05, 5.587500000000037e-05, 5.187499999999984e-05, 5.00409999999972e-05, 5.377800000000085e-05, 5.281900000000256e-05, 5.6791999999999954e-05, 5.4735999999999674e-05, 5.006999999999928e-05, 5.187499999999984e-05, 5.005599999999971e-05, 5.284699999999823e-05, 5.191700000000202e-05, 5.4708000000000534e-05, 5.484800000000317e-05, 4.9987000000001336e-05, 5.6819999999999093e-05, 5.4722000000000104e-05, 5.4722000000000104e-05, 5.484700000000023e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.611" endtime="20201029 18:16:10.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.606" endtime="20201029 18:16:10.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.618" endtime="20201029 18:16:10.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.616" endtime="20201029 18:16:10.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.615" endtime="20201029 18:16:10.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.251" endtime="20201029 18:16:10.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.250" endtime="20201029 18:16:10.639"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.648" endtime="20201029 18:16:10.673"></status>
</kw>
<msg timestamp="20201029 18:16:10.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.646" endtime="20201029 18:16:10.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.674" endtime="20201029 18:16:10.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.677" endtime="20201029 18:16:10.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.643" endtime="20201029 18:16:10.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.641" endtime="20201029 18:16:10.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.686" endtime="20201029 18:16:10.973"></status>
</kw>
<msg timestamp="20201029 18:16:10.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:10.685" endtime="20201029 18:16:10.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:10.977" endtime="20201029 18:16:10.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.986" endtime="20201029 18:16:10.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.682" endtime="20201029 18:16:10.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.680" endtime="20201029 18:16:10.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.992" level="INFO">${RESULT} = [{'diff': 9.580600000000036e-05}, {'diff': 8.347199999999763e-05}, {'diff': 8.144499999999943e-05}, {'diff': 8.354199999999895e-05}, {'diff': 8.14719999999991e-05}, {'diff': 8.243100000000086e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:10.989" endtime="20201029 18:16:10.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.997" level="INFO">${ACCURACY} = {'diff': [9.580600000000036e-05, 8.347199999999763e-05, 8.144499999999943e-05, 8.354199999999895e-05, 8.14719999999991e-05, 8.243100000000086e-05, 8.154200000000042e-05, 8.723599999999748e-05, 8.33610...</msg>
<status status="PASS" starttime="20201029 18:16:10.994" endtime="20201029 18:16:10.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.001" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.000" endtime="20201029 18:16:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.004" level="INFO">VALUE: [9.580600000000036e-05, 8.347199999999763e-05, 8.144499999999943e-05, 8.354199999999895e-05, 8.14719999999991e-05, 8.243100000000086e-05, 8.154200000000042e-05, 8.723599999999748e-05, 8.336100000000055e-05, 8.547199999999963e-05, 8.52920000000007e-05, 8.145799999999953e-05, 8.447199999999863e-05, 8.156999999999956e-05, 8.341599999999935e-05, 8.445899999999854e-05, 8.444399999999949e-05, 8.152700000000138e-05, 8.433399999999841e-05, 8.356899999999862e-05, 8.337500000000012e-05, 8.630499999999833e-05, 8.527800000000113e-05, 8.543099999999693e-05, 8.24170000000013e-05, 8.052799999999985e-05, 8.638799999999974e-05, 8.338899999999969e-05, 8.433299999999894e-05, 8.066600000000007e-05, 8.340199999999978e-05, 8.626399999999909e-05, 8.251400000000228e-05, 8.355500000000252e-05, 8.350000000000024e-05, 8.051400000000028e-05, 8.526299999999862e-05, 8.341699999999883e-05, 8.052799999999985e-05, 8.71250000000004e-05, 8.066600000000007e-05, 8.24170000000013e-05, 8.533299999999994e-05, 8.434700000000198e-05, 8.243100000000086e-05, 8.340299999999926e-05, 8.254200000000142e-05, 8.431999999999884e-05, 8.624999999999952e-05, 8.2459e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.003" endtime="20201029 18:16:11.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.998" endtime="20201029 18:16:11.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.010" endtime="20201029 18:16:11.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.009" endtime="20201029 18:16:11.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.007" endtime="20201029 18:16:11.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.639" endtime="20201029 18:16:11.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.639" endtime="20201029 18:16:11.031"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.040" endtime="20201029 18:16:11.060"></status>
</kw>
<msg timestamp="20201029 18:16:11.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.039" endtime="20201029 18:16:11.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.061" endtime="20201029 18:16:11.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.064" endtime="20201029 18:16:11.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.036" endtime="20201029 18:16:11.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.034" endtime="20201029 18:16:11.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.073" endtime="20201029 18:16:11.359"></status>
</kw>
<msg timestamp="20201029 18:16:11.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020771833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.072" endtime="20201029 18:16:11.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020771833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.364" endtime="20201029 18:16:11.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.372" endtime="20201029 18:16:11.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.069" endtime="20201029 18:16:11.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.067" endtime="20201029 18:16:11.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.379" level="INFO">${RESULT} = [{'diff': 6.912499999999974e-05}, {'diff': 8.054199999999942e-05}, {'diff': 8.444399999999949e-05}, {'diff': 8.444399999999949e-05}, {'diff': 8.632000000000084e-05}, {'diff': 8.536099999999908e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:11.375" endtime="20201029 18:16:11.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.384" level="INFO">${ACCURACY} = {'diff': [6.912499999999974e-05, 8.054199999999942e-05, 8.444399999999949e-05, 8.444399999999949e-05, 8.632000000000084e-05, 8.536099999999908e-05, 8.249999999999924e-05, 8.626299999999962e-05, 8.2527...</msg>
<status status="PASS" starttime="20201029 18:16:11.380" endtime="20201029 18:16:11.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.389" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.388" endtime="20201029 18:16:11.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.392" level="INFO">VALUE: [6.912499999999974e-05, 8.054199999999942e-05, 8.444399999999949e-05, 8.444399999999949e-05, 8.632000000000084e-05, 8.536099999999908e-05, 8.249999999999924e-05, 8.626299999999962e-05, 8.252799999999838e-05, 8.338899999999969e-05, 8.536100000000255e-05, 8.149999999999824e-05, 8.623599999999995e-05, 8.148599999999867e-05, 8.248599999999967e-05, 8.531999999999984e-05, 8.251399999999881e-05, 8.438899999999722e-05, 8.427800000000013e-05, 8.252700000000238e-05, 8.056899999999909e-05, 8.24720000000001e-05, 8.251399999999881e-05, 8.545800000000006e-05, 8.624999999999952e-05, 8.052799999999985e-05, 8.630499999999833e-05, 8.437500000000112e-05, 8.445799999999906e-05, 8.43469999999985e-05, 8.347199999999763e-05, 8.049999999999724e-05, 8.341699999999883e-05, 8.544499999999997e-05, 8.433299999999894e-05, 8.348600000000067e-05, 8.255499999999805e-05, 8.627799999999866e-05, 8.545899999999954e-05, 8.16109999999988e-05, 8.24170000000013e-05, 8.159699999999923e-05, 8.151399999999781e-05, 8.445799999999906e-05, 8.350000000000024e-05, 8.34729999999971e-05, 8.441699999999983e-05, 8.637499999999965e-05, 8.618099999999768e-05, 8.351400000000328e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.390" endtime="20201029 18:16:11.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.385" endtime="20201029 18:16:11.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.397" endtime="20201029 18:16:11.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.395" endtime="20201029 18:16:11.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.394" endtime="20201029 18:16:11.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.032" endtime="20201029 18:16:11.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.032" endtime="20201029 18:16:11.418"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.427" endtime="20201029 18:16:11.446"></status>
</kw>
<msg timestamp="20201029 18:16:11.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.425" endtime="20201029 18:16:11.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.448" endtime="20201029 18:16:11.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.450" endtime="20201029 18:16:11.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.422" endtime="20201029 18:16:11.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.420" endtime="20201029 18:16:11.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.460" endtime="20201029 18:16:11.747"></status>
</kw>
<msg timestamp="20201029 18:16:11.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021152806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.458" endtime="20201029 18:16:11.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021152806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.752" endtime="20201029 18:16:11.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.760" endtime="20201029 18:16:11.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.456" endtime="20201029 18:16:11.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.454" endtime="20201029 18:16:11.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.767" level="INFO">${RESULT} = [{'diff': 9.113800000000102e-05}, {'diff': 8.433399999999841e-05}, {'diff': 8.055499999999952e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.337499999999665e-05}, {'diff': 8.050000000000071e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:11.764" endtime="20201029 18:16:11.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.772" level="INFO">${ACCURACY} = {'diff': [9.113800000000102e-05, 8.433399999999841e-05, 8.055499999999952e-05, 8.351399999999981e-05, 8.337499999999665e-05, 8.050000000000071e-05, 8.633399999999694e-05, 8.632000000000084e-05, 8.1471...</msg>
<status status="PASS" starttime="20201029 18:16:11.768" endtime="20201029 18:16:11.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.777" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.776" endtime="20201029 18:16:11.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.780" level="INFO">VALUE: [9.113800000000102e-05, 8.433399999999841e-05, 8.055499999999952e-05, 8.351399999999981e-05, 8.337499999999665e-05, 8.050000000000071e-05, 8.633399999999694e-05, 8.632000000000084e-05, 8.14719999999991e-05, 8.166700000000054e-05, 8.530600000000027e-05, 8.158299999999966e-05, 8.244399999999749e-05, 8.629199999999823e-05, 8.538799999999874e-05, 8.162499999999837e-05, 8.434700000000198e-05, 8.52920000000007e-05, 8.530600000000027e-05, 8.44729999999981e-05, 8.051400000000028e-05, 8.243000000000139e-05, 8.244500000000043e-05, 8.434700000000198e-05, 8.240299999999826e-05, 8.062500000000083e-05, 8.527700000000166e-05, 8.630499999999833e-05, 8.440300000000026e-05, 8.623600000000342e-05, 8.53050000000008e-05, 8.548600000000267e-05, 8.338899999999969e-05, 8.058300000000213e-05, 8.537499999999865e-05, 8.624999999999952e-05, 8.640299999999879e-05, 8.241599999999835e-05, 8.341599999999935e-05, 8.152800000000085e-05, 8.629199999999823e-05, 8.544400000000049e-05, 8.436200000000102e-05, 8.536099999999908e-05, 8.154200000000042e-05, 8.526399999999809e-05, 8.055499999999952e-05, 8.243100000000086e-05, 8.16109999999988e-05, 8.054099999999995e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.778" endtime="20201029 18:16:11.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.773" endtime="20201029 18:16:11.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.786" endtime="20201029 18:16:11.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.784" endtime="20201029 18:16:11.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.783" endtime="20201029 18:16:11.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.419" endtime="20201029 18:16:11.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.418" endtime="20201029 18:16:11.807"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.816" endtime="20201029 18:16:11.838"></status>
</kw>
<msg timestamp="20201029 18:16:11.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.814" endtime="20201029 18:16:11.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.840" endtime="20201029 18:16:11.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.842" endtime="20201029 18:16:11.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.812" endtime="20201029 18:16:11.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.809" endtime="20201029 18:16:11.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.852" endtime="20201029 18:16:12.138"></status>
</kw>
<msg timestamp="20201029 18:16:12.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023905722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.850" endtime="20201029 18:16:12.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023833833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023905722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.142" endtime="20201029 18:16:12.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.151" endtime="20201029 18:16:12.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.848" endtime="20201029 18:16:12.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.846" endtime="20201029 18:16:12.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.158" level="INFO">${RESULT} = [{'diff': 7.188900000000206e-05}, {'diff': 8.248699999999914e-05}, {'diff': 8.244400000000096e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.434800000000145e-05}, {'diff': 8.538899999999822e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:12.154" endtime="20201029 18:16:12.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.162" level="INFO">${ACCURACY} = {'diff': [7.188900000000206e-05, 8.248699999999914e-05, 8.244400000000096e-05, 8.636100000000008e-05, 8.434800000000145e-05, 8.538899999999822e-05, 8.627799999999866e-05, 8.243000000000139e-05, 8.2528...</msg>
<status status="PASS" starttime="20201029 18:16:12.159" endtime="20201029 18:16:12.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.166" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.165" endtime="20201029 18:16:12.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.169" level="INFO">VALUE: [7.188900000000206e-05, 8.248699999999914e-05, 8.244400000000096e-05, 8.636100000000008e-05, 8.434800000000145e-05, 8.538899999999822e-05, 8.627799999999866e-05, 8.243000000000139e-05, 8.252800000000185e-05, 8.541700000000083e-05, 8.722299999999739e-05, 8.442999999999992e-05, 8.338899999999969e-05, 8.634799999999998e-05, 8.626299999999962e-05, 8.155599999999999e-05, 8.256899999999762e-05, 8.529100000000123e-05, 8.158299999999966e-05, 8.43469999999985e-05, 8.156900000000009e-05, 8.144499999999943e-05, 8.354199999999895e-05, 8.243000000000139e-05, 8.630600000000127e-05, 8.345800000000153e-05, 8.337500000000012e-05, 8.345800000000153e-05, 8.438799999999774e-05, 8.052799999999985e-05, 8.351399999999981e-05, 8.725000000000052e-05, 8.540199999999831e-05, 8.541600000000135e-05, 8.145799999999953e-05, 8.636100000000008e-05, 8.241599999999835e-05, 8.048600000000114e-05, 8.151399999999781e-05, 8.63470000000005e-05, 8.537500000000212e-05, 8.252800000000185e-05, 8.630600000000127e-05, 8.624999999999952e-05, 8.445899999999854e-05, 8.443100000000286e-05, 8.242999999999792e-05, 8.348600000000067e-05, 8.627699999999919e-05, 8.345899999999754e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.168" endtime="20201029 18:16:12.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.163" endtime="20201029 18:16:12.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.175" endtime="20201029 18:16:12.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.174" endtime="20201029 18:16:12.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.172" endtime="20201029 18:16:12.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.808" endtime="20201029 18:16:12.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.807" endtime="20201029 18:16:12.196"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.205" endtime="20201029 18:16:12.226"></status>
</kw>
<msg timestamp="20201029 18:16:12.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.204" endtime="20201029 18:16:12.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.227" endtime="20201029 18:16:12.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.230" endtime="20201029 18:16:12.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.201" endtime="20201029 18:16:12.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.199" endtime="20201029 18:16:12.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.239" endtime="20201029 18:16:12.526"></status>
</kw>
<msg timestamp="20201029 18:16:12.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.238" endtime="20201029 18:16:12.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021409569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.530" endtime="20201029 18:16:12.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.539" endtime="20201029 18:16:12.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.235" endtime="20201029 18:16:12.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.233" endtime="20201029 18:16:12.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.545" level="INFO">${RESULT} = [{'diff': 6.916599999999898e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.151400000000128e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.52920000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:12.542" endtime="20201029 18:16:12.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.551" level="INFO">${ACCURACY} = {'diff': [6.916599999999898e-05, 8.736100000000108e-05, 8.152800000000085e-05, 8.151400000000128e-05, 8.249999999999924e-05, 8.52920000000007e-05, 8.358400000000113e-05, 8.725000000000052e-05, 8.54169...</msg>
<status status="PASS" starttime="20201029 18:16:12.546" endtime="20201029 18:16:12.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.555" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.554" endtime="20201029 18:16:12.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.558" level="INFO">VALUE: [6.916599999999898e-05, 8.736100000000108e-05, 8.152800000000085e-05, 8.151400000000128e-05, 8.249999999999924e-05, 8.52920000000007e-05, 8.358400000000113e-05, 8.725000000000052e-05, 8.541699999999736e-05, 8.352799999999938e-05, 8.437500000000112e-05, 8.248600000000314e-05, 8.063899999999694e-05, 8.350000000000024e-05, 8.154200000000042e-05, 8.341699999999883e-05, 8.05970000000017e-05, 8.148600000000214e-05, 8.442999999999992e-05, 8.636100000000008e-05, 8.152800000000085e-05, 8.527700000000166e-05, 8.249999999999924e-05, 8.536099999999908e-05, 8.351399999999981e-05, 8.62920000000017e-05, 8.14719999999991e-05, 8.255500000000152e-05, 8.527800000000113e-05, 8.152799999999738e-05, 8.251399999999881e-05, 8.53059999999968e-05, 8.352800000000285e-05, 8.052799999999985e-05, 8.252799999999838e-05, 8.352699999999991e-05, 8.437500000000112e-05, 8.154200000000042e-05, 8.441699999999983e-05, 8.536100000000255e-05, 8.448699999999768e-05, 8.62920000000017e-05, 8.630600000000127e-05, 8.24720000000001e-05, 8.3459000000001e-05, 8.348600000000067e-05, 8.156900000000009e-05, 8.44720000000021e-05, 8.150000000000171e-05, 8.347300000000057e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.557" endtime="20201029 18:16:12.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.552" endtime="20201029 18:16:12.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.568" endtime="20201029 18:16:12.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.566" endtime="20201029 18:16:12.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.565" endtime="20201029 18:16:12.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.197" endtime="20201029 18:16:12.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.197" endtime="20201029 18:16:12.589"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.598" endtime="20201029 18:16:12.617"></status>
</kw>
<msg timestamp="20201029 18:16:12.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.596" endtime="20201029 18:16:12.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.619" endtime="20201029 18:16:12.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.621" endtime="20201029 18:16:12.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.593" endtime="20201029 18:16:12.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.591" endtime="20201029 18:16:12.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.631" endtime="20201029 18:16:12.919"></status>
</kw>
<msg timestamp="20201029 18:16:12.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.629" endtime="20201029 18:16:12.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.923" endtime="20201029 18:16:12.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.931" endtime="20201029 18:16:12.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.627" endtime="20201029 18:16:12.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.625" endtime="20201029 18:16:12.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.939" level="INFO">${RESULT} = [{'diff': 7.488900000000159e-05}, {'diff': 8.15840000000026e-05}, {'diff': 8.431999999999884e-05}, {'diff': 8.444399999999949e-05}, {'diff': 8.541600000000135e-05}, {'diff': 8.633400000000041e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:12.935" endtime="20201029 18:16:12.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.943" level="INFO">${ACCURACY} = {'diff': [7.488900000000159e-05, 8.15840000000026e-05, 8.431999999999884e-05, 8.444399999999949e-05, 8.541600000000135e-05, 8.633400000000041e-05, 8.344500000000143e-05, 8.44720000000021e-05, 8.629199...</msg>
<status status="PASS" starttime="20201029 18:16:12.940" endtime="20201029 18:16:12.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.948" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.947" endtime="20201029 18:16:12.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.950" level="INFO">VALUE: [7.488900000000159e-05, 8.15840000000026e-05, 8.431999999999884e-05, 8.444399999999949e-05, 8.541600000000135e-05, 8.633400000000041e-05, 8.344500000000143e-05, 8.44720000000021e-05, 8.629199999999823e-05, 8.340199999999978e-05, 8.448600000000167e-05, 8.441600000000035e-05, 8.345800000000153e-05, 8.441600000000035e-05, 8.63050000000018e-05, 8.633299999999747e-05, 8.149999999999824e-05, 8.536199999999855e-05, 8.636100000000008e-05, 8.248599999999967e-05, 8.341699999999883e-05, 8.156900000000009e-05, 8.543000000000092e-05, 8.531900000000037e-05, 8.065299999999997e-05, 8.543000000000092e-05, 8.244399999999749e-05, 8.54310000000004e-05, 8.344399999999849e-05, 8.155599999999999e-05, 8.540300000000126e-05, 8.636100000000008e-05, 8.244500000000043e-05, 8.362500000000037e-05, 8.344399999999849e-05, 8.345899999999754e-05, 8.248599999999967e-05, 8.545800000000006e-05, 8.249999999999924e-05, 7.962499999999983e-05, 8.444400000000296e-05, 8.158399999999913e-05, 8.342999999999892e-05, 8.441699999999983e-05, 8.255500000000152e-05, 8.149999999999824e-05, 8.344400000000196e-05, 8.255600000000099e-05, 8.344400000000196e-05, 8.547199999999963e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.949" endtime="20201029 18:16:12.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.944" endtime="20201029 18:16:12.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.955" endtime="20201029 18:16:12.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.954" endtime="20201029 18:16:12.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.953" endtime="20201029 18:16:12.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.590" endtime="20201029 18:16:12.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.589" endtime="20201029 18:16:12.976"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.985" endtime="20201029 18:16:13.009"></status>
</kw>
<msg timestamp="20201029 18:16:13.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.984" endtime="20201029 18:16:13.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.015" endtime="20201029 18:16:13.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.019" endtime="20201029 18:16:13.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.981" endtime="20201029 18:16:13.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.979" endtime="20201029 18:16:13.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.030" endtime="20201029 18:16:13.315"></status>
</kw>
<msg timestamp="20201029 18:16:13.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025034833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.028" endtime="20201029 18:16:13.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025034833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.319" endtime="20201029 18:16:13.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.328" endtime="20201029 18:16:13.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.025" endtime="20201029 18:16:13.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.023" endtime="20201029 18:16:13.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.335" level="INFO">${RESULT} = [{'diff': 8.054199999999942e-05}, {'diff': 8.155500000000052e-05}, {'diff': 8.26109999999998e-05}, {'diff': 8.538899999999822e-05}, {'diff': 8.62920000000017e-05}, {'diff': 8.05970000000017e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:13.331" endtime="20201029 18:16:13.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.339" level="INFO">${ACCURACY} = {'diff': [8.054199999999942e-05, 8.155500000000052e-05, 8.26109999999998e-05, 8.538899999999822e-05, 8.62920000000017e-05, 8.05970000000017e-05, 8.249999999999924e-05, 8.34720000000011e-05, 8.34440000...</msg>
<status status="PASS" starttime="20201029 18:16:13.336" endtime="20201029 18:16:13.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.344" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.343" endtime="20201029 18:16:13.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.347" level="INFO">VALUE: [8.054199999999942e-05, 8.155500000000052e-05, 8.26109999999998e-05, 8.538899999999822e-05, 8.62920000000017e-05, 8.05970000000017e-05, 8.249999999999924e-05, 8.34720000000011e-05, 8.344400000000196e-05, 8.255599999999752e-05, 8.340299999999926e-05, 8.056900000000256e-05, 8.159699999999923e-05, 8.249999999999924e-05, 8.070799999999878e-05, 8.066700000000301e-05, 8.247299999999957e-05, 8.248599999999967e-05, 8.252800000000185e-05, 8.444499999999897e-05, 8.247299999999957e-05, 8.34720000000011e-05, 8.341699999999883e-05, 8.058299999999866e-05, 8.448600000000167e-05, 8.444499999999897e-05, 8.533299999999994e-05, 8.248599999999967e-05, 8.350000000000024e-05, 8.633400000000041e-05, 8.241699999999783e-05, 8.733400000000141e-05, 8.527800000000113e-05, 8.352799999999938e-05, 8.533299999999994e-05, 8.249999999999924e-05, 8.255500000000152e-05, 8.338899999999969e-05, 8.440300000000026e-05, 8.63050000000018e-05, 8.623599999999995e-05, 8.531900000000037e-05, 8.63050000000018e-05, 8.437500000000112e-05, 8.066699999999954e-05, 8.352699999999991e-05, 8.351399999999981e-05, 8.636100000000008e-05, 8.726400000000009e-05, 8.338900000000316e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.345" endtime="20201029 18:16:13.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.340" endtime="20201029 18:16:13.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.353" endtime="20201029 18:16:13.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.351" endtime="20201029 18:16:13.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.350" endtime="20201029 18:16:13.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.977" endtime="20201029 18:16:13.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.977" endtime="20201029 18:16:13.374"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.383" endtime="20201029 18:16:13.406"></status>
</kw>
<msg timestamp="20201029 18:16:13.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.381" endtime="20201029 18:16:13.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.407" endtime="20201029 18:16:13.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.410" endtime="20201029 18:16:13.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.378" endtime="20201029 18:16:13.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.376" endtime="20201029 18:16:13.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.419" endtime="20201029 18:16:13.705"></status>
</kw>
<msg timestamp="20201029 18:16:13.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024663069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.418" endtime="20201029 18:16:13.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024593097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024663069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.709" endtime="20201029 18:16:13.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.717" endtime="20201029 18:16:13.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.415" endtime="20201029 18:16:13.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.413" endtime="20201029 18:16:13.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.724" level="INFO">${RESULT} = [{'diff': 6.997199999999801e-05}, {'diff': 8.148700000000161e-05}, {'diff': 8.341699999999883e-05}, {'diff': 8.627699999999919e-05}, {'diff': 8.150000000000171e-05}, {'diff': 8.433399999999841e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:13.721" endtime="20201029 18:16:13.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.732" level="INFO">${ACCURACY} = {'diff': [6.997199999999801e-05, 8.148700000000161e-05, 8.341699999999883e-05, 8.627699999999919e-05, 8.150000000000171e-05, 8.433399999999841e-05, 8.337500000000012e-05, 8.159699999999923e-05, 8.0500...</msg>
<status status="PASS" starttime="20201029 18:16:13.725" endtime="20201029 18:16:13.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.737" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.736" endtime="20201029 18:16:13.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.739" level="INFO">VALUE: [6.997199999999801e-05, 8.148700000000161e-05, 8.341699999999883e-05, 8.627699999999919e-05, 8.150000000000171e-05, 8.433399999999841e-05, 8.337500000000012e-05, 8.159699999999923e-05, 8.050000000000071e-05, 8.150000000000171e-05, 8.537499999999865e-05, 8.156900000000009e-05, 8.245800000000053e-05, 8.636100000000008e-05, 8.53050000000008e-05, 8.165300000000097e-05, 8.433400000000188e-05, 8.629199999999823e-05, 8.247299999999957e-05, 8.63059999999978e-05, 8.245799999999706e-05, 8.52920000000007e-05, 8.434800000000145e-05, 8.34720000000011e-05, 8.251399999999881e-05, 8.624999999999952e-05, 8.547199999999963e-05, 8.052700000000038e-05, 8.433299999999894e-05, 8.437500000000112e-05, 8.431999999999884e-05, 8.34859999999972e-05, 8.623599999999995e-05, 8.624999999999952e-05, 8.144499999999943e-05, 8.058300000000213e-05, 8.527800000000113e-05, 8.624999999999952e-05, 8.638899999999922e-05, 8.1458999999999e-05, 8.337500000000012e-05, 8.531900000000037e-05, 8.349999999999677e-05, 8.338900000000316e-05, 8.525000000000199e-05, 8.441699999999983e-05, 8.055600000000246e-05, 8.148599999999867e-05, 8.333299999999794e-05, 8.340300000000272e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.738" endtime="20201029 18:16:13.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.733" endtime="20201029 18:16:13.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.745" endtime="20201029 18:16:13.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.743" endtime="20201029 18:16:13.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.742" endtime="20201029 18:16:13.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.375" endtime="20201029 18:16:13.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.374" endtime="20201029 18:16:13.766"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.775" endtime="20201029 18:16:13.797"></status>
</kw>
<msg timestamp="20201029 18:16:13.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.773" endtime="20201029 18:16:13.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.799" endtime="20201029 18:16:13.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.802" endtime="20201029 18:16:13.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.770" endtime="20201029 18:16:13.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.768" endtime="20201029 18:16:13.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.812" endtime="20201029 18:16:14.101"></status>
</kw>
<msg timestamp="20201029 18:16:14.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024450792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.811" endtime="20201029 18:16:14.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024450792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.105" endtime="20201029 18:16:14.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.114" endtime="20201029 18:16:14.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.808" endtime="20201029 18:16:14.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.806" endtime="20201029 18:16:14.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.121" level="INFO">${RESULT} = [{'diff': 9.680500000000189e-05}, {'diff': 8.052700000000038e-05}, {'diff': 8.350000000000024e-05}, {'diff': 8.531900000000037e-05}, {'diff': 8.53050000000008e-05}, {'diff': 8.627799999999866e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:14.117" endtime="20201029 18:16:14.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.125" level="INFO">${ACCURACY} = {'diff': [9.680500000000189e-05, 8.052700000000038e-05, 8.350000000000024e-05, 8.531900000000037e-05, 8.53050000000008e-05, 8.627799999999866e-05, 8.047200000000157e-05, 8.626399999999909e-05, 8.24859...</msg>
<status status="PASS" starttime="20201029 18:16:14.122" endtime="20201029 18:16:14.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.130" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.129" endtime="20201029 18:16:14.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.132" level="INFO">VALUE: [9.680500000000189e-05, 8.052700000000038e-05, 8.350000000000024e-05, 8.531900000000037e-05, 8.53050000000008e-05, 8.627799999999866e-05, 8.047200000000157e-05, 8.626399999999909e-05, 8.248599999999967e-05, 8.247299999999957e-05, 8.340199999999978e-05, 8.725000000000052e-05, 8.529100000000123e-05, 8.544400000000049e-05, 8.719500000000172e-05, 8.350000000000024e-05, 8.1458999999999e-05, 8.722199999999791e-05, 8.055499999999952e-05, 8.249999999999924e-05, 8.244500000000043e-05, 8.333400000000088e-05, 8.44720000000021e-05, 8.533299999999994e-05, 8.249999999999924e-05, 8.340300000000272e-05, 8.155599999999999e-05, 8.341599999999935e-05, 8.350000000000024e-05, 8.52920000000007e-05, 8.150000000000171e-05, 8.626400000000256e-05, 8.537499999999865e-05, 8.633400000000041e-05, 8.533399999999941e-05, 8.547300000000257e-05, 8.142999999999692e-05, 8.437500000000112e-05, 8.347199999999763e-05, 8.24720000000001e-05, 8.63059999999978e-05, 8.16109999999988e-05, 8.438899999999722e-05, 8.738900000000022e-05, 8.334800000000045e-05, 8.740299999999979e-05, 8.623599999999995e-05, 8.534799999999898e-05, 8.254199999999795e-05, 8.14719999999991e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.131" endtime="20201029 18:16:14.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.126" endtime="20201029 18:16:14.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.138" endtime="20201029 18:16:14.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.136" endtime="20201029 18:16:14.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.135" endtime="20201029 18:16:14.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.767" endtime="20201029 18:16:14.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.766" endtime="20201029 18:16:14.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.045" endtime="20201029 18:16:14.159"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:34.965" endtime="20201029 18:16:14.159" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.166" endtime="20201029 18:16:14.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.165" endtime="20201029 18:16:14.186"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.201" endtime="20201029 18:16:14.223"></status>
</kw>
<msg timestamp="20201029 18:16:14.223" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.199" endtime="20201029 18:16:14.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.224" endtime="20201029 18:16:14.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.229" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:14.227" endtime="20201029 18:16:14.229"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:14.197" endtime="20201029 18:16:14.230"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:14.194" endtime="20201029 18:16:14.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.192" endtime="20201029 18:16:14.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:14.235" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:14.234" endtime="20201029 18:16:14.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.232" endtime="20201029 18:16:14.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.191" endtime="20201029 18:16:14.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.190" endtime="20201029 18:16:14.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.237" endtime="20201029 18:16:14.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.189" endtime="20201029 18:16:14.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.187" endtime="20201029 18:16:14.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.163" endtime="20201029 18:16:14.239"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.249" endtime="20201029 18:16:14.266"></status>
</kw>
<msg timestamp="20201029 18:16:14.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.248" endtime="20201029 18:16:14.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.269" endtime="20201029 18:16:14.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.272" endtime="20201029 18:16:14.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.245" endtime="20201029 18:16:14.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.243" endtime="20201029 18:16:14.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.281" endtime="20201029 18:16:14.569"></status>
</kw>
<msg timestamp="20201029 18:16:14.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075468972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075477694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.280" endtime="20201029 18:16:14.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075468972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075477694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.573" endtime="20201029 18:16:14.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.582" endtime="20201029 18:16:14.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.277" endtime="20201029 18:16:14.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.275" endtime="20201029 18:16:14.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.589" level="INFO">${RESULT} = [{'diff': 8.722000000002672e-06}, {'diff': 8.679999999997023e-06}, {'diff': 8.694000000003532e-06}, {'diff': 8.680999999996497e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.652999999997357e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:14.585" endtime="20201029 18:16:14.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.594" level="INFO">${ACCURACY} = {'diff': [8.722000000002672e-06, 8.679999999997023e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.652999999997357e-06, 8.667000000003866e-06, 8.679999999997023e-06, 8.6659...</msg>
<status status="PASS" starttime="20201029 18:16:14.590" endtime="20201029 18:16:14.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.601" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.599" endtime="20201029 18:16:14.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.610" level="INFO">VALUE: [8.722000000002672e-06, 8.679999999997023e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.652999999997357e-06, 8.667000000003866e-06, 8.679999999997023e-06, 8.665999999990515e-06, 8.666999999989988e-06, 8.736000000009181e-06, 8.695000000003006e-06, 8.694999999989128e-06, 8.694000000003532e-06, 8.708000000010041e-06, 8.722000000002672e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.694000000003532e-06, 8.681000000010375e-06, 8.679999999997023e-06, 8.667000000003866e-06, 8.680999999996497e-06, 8.680000000010901e-06, 8.667000000003866e-06, 8.638999999990848e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.723000000002146e-06, 8.735999999995303e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.681000000010375e-06, 8.653000000011235e-06, 8.722000000002672e-06, 8.679999999997023e-06, 8.667000000003866e-06, 8.679999999997023e-06, 8.694000000003532e-06, 8.708999999995637e-06, 8.652999999997357e-06, 8.707999999996163e-06, 8.667000000003866e-06, 8.695000000003006e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.679999999997023e-06, 8.680999999996497e-06, 8.694000000003532e-06, 8.695000000003006e-06]</msg>
<status status="PASS" starttime="20201029 18:16:14.607" endtime="20201029 18:16:14.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.596" endtime="20201029 18:16:14.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.619" endtime="20201029 18:16:14.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.616" endtime="20201029 18:16:14.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.613" endtime="20201029 18:16:14.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.241" endtime="20201029 18:16:14.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.240" endtime="20201029 18:16:14.641"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.651" endtime="20201029 18:16:14.672"></status>
</kw>
<msg timestamp="20201029 18:16:14.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.649" endtime="20201029 18:16:14.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.674" endtime="20201029 18:16:14.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.678" endtime="20201029 18:16:14.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.646" endtime="20201029 18:16:14.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.644" endtime="20201029 18:16:14.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.693" endtime="20201029 18:16:14.983"></status>
</kw>
<msg timestamp="20201029 18:16:14.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02352875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023537472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:14.691" endtime="20201029 18:16:14.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02352875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023537472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:14.987" endtime="20201029 18:16:14.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.996" endtime="20201029 18:16:14.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.687" endtime="20201029 18:16:14.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.684" endtime="20201029 18:16:14.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.003" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:14.999" endtime="20201029 18:16:15.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.007" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.7219...</msg>
<status status="PASS" starttime="20201029 18:16:15.004" endtime="20201029 18:16:15.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.013" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.011" endtime="20201029 18:16:15.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.016" level="INFO">VALUE: [8.721999999999203e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.695000000003006e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.652000000001353e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.61200000000159e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.762999999998439e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.763000000001908e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201029 18:16:15.014" endtime="20201029 18:16:15.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.008" endtime="20201029 18:16:15.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.020" endtime="20201029 18:16:15.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.019" endtime="20201029 18:16:15.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.017" endtime="20201029 18:16:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.642" endtime="20201029 18:16:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.641" endtime="20201029 18:16:15.041"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.051" endtime="20201029 18:16:15.069"></status>
</kw>
<msg timestamp="20201029 18:16:15.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.049" endtime="20201029 18:16:15.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.071" endtime="20201029 18:16:15.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.073" endtime="20201029 18:16:15.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.046" endtime="20201029 18:16:15.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.044" endtime="20201029 18:16:15.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.083" endtime="20201029 18:16:15.370"></status>
</kw>
<msg timestamp="20201029 18:16:15.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025137597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.081" endtime="20201029 18:16:15.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025128889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025137597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.374" endtime="20201029 18:16:15.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.383" endtime="20201029 18:16:15.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.078" endtime="20201029 18:16:15.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.077" endtime="20201029 18:16:15.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.390" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.679999999997023e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.386" endtime="20201029 18:16:15.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.395" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 18:16:15.391" endtime="20201029 18:16:15.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.400" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.399" endtime="20201029 18:16:15.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.402" level="INFO">VALUE: [8.707999999999633e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.665999999997454e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.722999999998676e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 18:16:15.401" endtime="20201029 18:16:15.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.396" endtime="20201029 18:16:15.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.407" endtime="20201029 18:16:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.405" endtime="20201029 18:16:15.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.404" endtime="20201029 18:16:15.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.042" endtime="20201029 18:16:15.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.042" endtime="20201029 18:16:15.428"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.437" endtime="20201029 18:16:15.457"></status>
</kw>
<msg timestamp="20201029 18:16:15.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.436" endtime="20201029 18:16:15.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.458" endtime="20201029 18:16:15.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.461" endtime="20201029 18:16:15.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.433" endtime="20201029 18:16:15.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.431" endtime="20201029 18:16:15.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.470" endtime="20201029 18:16:15.756"></status>
</kw>
<msg timestamp="20201029 18:16:15.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025247153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.469" endtime="20201029 18:16:15.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025247153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.761" endtime="20201029 18:16:15.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.769" endtime="20201029 18:16:15.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.466" endtime="20201029 18:16:15.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.464" endtime="20201029 18:16:15.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.776" level="INFO">${RESULT} = [{'diff': 8.679999999997023e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.652999999997357e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.773" endtime="20201029 18:16:15.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.780" level="INFO">${ACCURACY} = {'diff': [8.679999999997023e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.6670...</msg>
<status status="PASS" starttime="20201029 18:16:15.777" endtime="20201029 18:16:15.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.785" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.784" endtime="20201029 18:16:15.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.788" level="INFO">VALUE: [8.679999999997023e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.723000000002146e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.665999999997454e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.624999999998217e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.764000000001382e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.625000000001687e-06]</msg>
<status status="PASS" starttime="20201029 18:16:15.786" endtime="20201029 18:16:15.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.781" endtime="20201029 18:16:15.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.793" endtime="20201029 18:16:15.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.791" endtime="20201029 18:16:15.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.790" endtime="20201029 18:16:15.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.429" endtime="20201029 18:16:15.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.429" endtime="20201029 18:16:15.814"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.823" endtime="20201029 18:16:15.848"></status>
</kw>
<msg timestamp="20201029 18:16:15.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.821" endtime="20201029 18:16:15.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.849" endtime="20201029 18:16:15.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.852" endtime="20201029 18:16:15.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.819" endtime="20201029 18:16:15.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.816" endtime="20201029 18:16:15.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.862" endtime="20201029 18:16:16.150"></status>
</kw>
<msg timestamp="20201029 18:16:16.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025938986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025947694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.860" endtime="20201029 18:16:16.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025938986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025947694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.154" endtime="20201029 18:16:16.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.163" endtime="20201029 18:16:16.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.857" endtime="20201029 18:16:16.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.856" endtime="20201029 18:16:16.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.170" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:16.166" endtime="20201029 18:16:16.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.174" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 18:16:16.171" endtime="20201029 18:16:16.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.179" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.178" endtime="20201029 18:16:16.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.181" level="INFO">VALUE: [8.707999999999633e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.736999999998246e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 18:16:16.180" endtime="20201029 18:16:16.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.175" endtime="20201029 18:16:16.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.187" endtime="20201029 18:16:16.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.186" endtime="20201029 18:16:16.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.185" endtime="20201029 18:16:16.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.815" endtime="20201029 18:16:16.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.814" endtime="20201029 18:16:16.208"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.217" endtime="20201029 18:16:16.235"></status>
</kw>
<msg timestamp="20201029 18:16:16.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.216" endtime="20201029 18:16:16.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.236" endtime="20201029 18:16:16.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.239" endtime="20201029 18:16:16.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.213" endtime="20201029 18:16:16.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.211" endtime="20201029 18:16:16.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.249" endtime="20201029 18:16:16.534"></status>
</kw>
<msg timestamp="20201029 18:16:16.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.247" endtime="20201029 18:16:16.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.539" endtime="20201029 18:16:16.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.547" endtime="20201029 18:16:16.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.244" endtime="20201029 18:16:16.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.243" endtime="20201029 18:16:16.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.554" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:16.551" endtime="20201029 18:16:16.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.559" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.6389...</msg>
<status status="PASS" starttime="20201029 18:16:16.555" endtime="20201029 18:16:16.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.564" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.563" endtime="20201029 18:16:16.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.567" level="INFO">VALUE: [8.721999999999203e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.776999999998009e-06, 8.679999999997023e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.777000000001478e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.736999999998246e-06]</msg>
<status status="PASS" starttime="20201029 18:16:16.565" endtime="20201029 18:16:16.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.560" endtime="20201029 18:16:16.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.572" endtime="20201029 18:16:16.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.570" endtime="20201029 18:16:16.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.569" endtime="20201029 18:16:16.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.209" endtime="20201029 18:16:16.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.209" endtime="20201029 18:16:16.593"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.602" endtime="20201029 18:16:16.616"></status>
</kw>
<msg timestamp="20201029 18:16:16.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.600" endtime="20201029 18:16:16.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.618" endtime="20201029 18:16:16.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.621" endtime="20201029 18:16:16.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.598" endtime="20201029 18:16:16.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.596" endtime="20201029 18:16:16.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.635" endtime="20201029 18:16:16.923"></status>
</kw>
<msg timestamp="20201029 18:16:16.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020743264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020751944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.633" endtime="20201029 18:16:16.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020743264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020751944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.928" endtime="20201029 18:16:16.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.936" endtime="20201029 18:16:16.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.629" endtime="20201029 18:16:16.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.626" endtime="20201029 18:16:16.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.943" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.625000000001687e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.749999999998342e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:16.940" endtime="20201029 18:16:16.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.948" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.625000000001687e-06, 8.708000000003102e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.7500...</msg>
<status status="PASS" starttime="20201029 18:16:16.944" endtime="20201029 18:16:16.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.952" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.951" endtime="20201029 18:16:16.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.955" level="INFO">VALUE: [8.680000000000493e-06, 8.625000000001687e-06, 8.708000000003102e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.638000000001783e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201029 18:16:16.954" endtime="20201029 18:16:16.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.948" endtime="20201029 18:16:16.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.960" endtime="20201029 18:16:16.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.959" endtime="20201029 18:16:16.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.957" endtime="20201029 18:16:16.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.594" endtime="20201029 18:16:16.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.593" endtime="20201029 18:16:16.981"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.990" endtime="20201029 18:16:17.009"></status>
</kw>
<msg timestamp="20201029 18:16:17.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.989" endtime="20201029 18:16:17.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.011" endtime="20201029 18:16:17.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.014" endtime="20201029 18:16:17.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.986" endtime="20201029 18:16:17.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.984" endtime="20201029 18:16:17.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.023" endtime="20201029 18:16:17.309"></status>
</kw>
<msg timestamp="20201029 18:16:17.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024447681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.022" endtime="20201029 18:16:17.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024447681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.314" endtime="20201029 18:16:17.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.324" endtime="20201029 18:16:17.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.019" endtime="20201029 18:16:17.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.017" endtime="20201029 18:16:17.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.331" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.723000000002146e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:17.328" endtime="20201029 18:16:17.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.335" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.7219...</msg>
<status status="PASS" starttime="20201029 18:16:17.332" endtime="20201029 18:16:17.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.340" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.339" endtime="20201029 18:16:17.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.343" level="INFO">VALUE: [8.694999999999536e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 18:16:17.341" endtime="20201029 18:16:17.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.336" endtime="20201029 18:16:17.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.349" endtime="20201029 18:16:17.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.347" endtime="20201029 18:16:17.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.346" endtime="20201029 18:16:17.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.982" endtime="20201029 18:16:17.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.981" endtime="20201029 18:16:17.370"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.379" endtime="20201029 18:16:17.396"></status>
</kw>
<msg timestamp="20201029 18:16:17.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.377" endtime="20201029 18:16:17.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.397" endtime="20201029 18:16:17.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.400" endtime="20201029 18:16:17.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.375" endtime="20201029 18:16:17.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.372" endtime="20201029 18:16:17.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.409" endtime="20201029 18:16:17.694"></status>
</kw>
<msg timestamp="20201029 18:16:17.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.408" endtime="20201029 18:16:17.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.698" endtime="20201029 18:16:17.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.707" endtime="20201029 18:16:17.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.405" endtime="20201029 18:16:17.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.403" endtime="20201029 18:16:17.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.714" level="INFO">${RESULT} = [{'diff': 8.723000000002146e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.653000000000827e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:17.710" endtime="20201029 18:16:17.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.719" level="INFO">${ACCURACY} = {'diff': [8.723000000002146e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 18:16:17.715" endtime="20201029 18:16:17.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.724" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.723" endtime="20201029 18:16:17.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.726" level="INFO">VALUE: [8.723000000002146e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.763999999997912e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201029 18:16:17.725" endtime="20201029 18:16:17.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.720" endtime="20201029 18:16:17.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.736" endtime="20201029 18:16:17.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.734" endtime="20201029 18:16:17.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.733" endtime="20201029 18:16:17.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.371" endtime="20201029 18:16:17.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.370" endtime="20201029 18:16:17.757"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.766" endtime="20201029 18:16:17.782"></status>
</kw>
<msg timestamp="20201029 18:16:17.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.764" endtime="20201029 18:16:17.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.784" endtime="20201029 18:16:17.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.786" endtime="20201029 18:16:17.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.762" endtime="20201029 18:16:17.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.759" endtime="20201029 18:16:17.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.796" endtime="20201029 18:16:18.083"></status>
</kw>
<msg timestamp="20201029 18:16:18.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.794" endtime="20201029 18:16:18.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.089" endtime="20201029 18:16:18.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.100" endtime="20201029 18:16:18.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.792" endtime="20201029 18:16:18.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.790" endtime="20201029 18:16:18.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.108" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:18.105" endtime="20201029 18:16:18.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.113" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 18:16:18.109" endtime="20201029 18:16:18.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.117" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.116" endtime="20201029 18:16:18.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.120" level="INFO">VALUE: [8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.723000000002146e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.776999999998009e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201029 18:16:18.118" endtime="20201029 18:16:18.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.114" endtime="20201029 18:16:18.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.125" endtime="20201029 18:16:18.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.124" endtime="20201029 18:16:18.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.122" endtime="20201029 18:16:18.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.758" endtime="20201029 18:16:18.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.757" endtime="20201029 18:16:18.146"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.155" endtime="20201029 18:16:18.176"></status>
</kw>
<msg timestamp="20201029 18:16:18.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.154" endtime="20201029 18:16:18.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.178" endtime="20201029 18:16:18.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.181" endtime="20201029 18:16:18.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.151" endtime="20201029 18:16:18.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.149" endtime="20201029 18:16:18.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.190" endtime="20201029 18:16:18.475"></status>
</kw>
<msg timestamp="20201029 18:16:18.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025101653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.189" endtime="20201029 18:16:18.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025101653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.480" endtime="20201029 18:16:18.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.488" endtime="20201029 18:16:18.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.186" endtime="20201029 18:16:18.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.184" endtime="20201029 18:16:18.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.495" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.679999999997023e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.653000000000827e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:18.492" endtime="20201029 18:16:18.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.500" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.679999999997023e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 18:16:18.496" endtime="20201029 18:16:18.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.504" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.503" endtime="20201029 18:16:18.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.507" level="INFO">VALUE: [8.735999999998773e-06, 8.679999999997023e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.610999999998648e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 18:16:18.505" endtime="20201029 18:16:18.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.501" endtime="20201029 18:16:18.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.513" endtime="20201029 18:16:18.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.511" endtime="20201029 18:16:18.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.510" endtime="20201029 18:16:18.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.147" endtime="20201029 18:16:18.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.147" endtime="20201029 18:16:18.534"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.543" endtime="20201029 18:16:18.562"></status>
</kw>
<msg timestamp="20201029 18:16:18.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.541" endtime="20201029 18:16:18.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.563" endtime="20201029 18:16:18.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.566" endtime="20201029 18:16:18.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.539" endtime="20201029 18:16:18.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.536" endtime="20201029 18:16:18.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.576" endtime="20201029 18:16:18.862"></status>
</kw>
<msg timestamp="20201029 18:16:18.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.574" endtime="20201029 18:16:18.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.866" endtime="20201029 18:16:18.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.875" endtime="20201029 18:16:18.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.571" endtime="20201029 18:16:18.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.569" endtime="20201029 18:16:18.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.882" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.651999999997884e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:18.878" endtime="20201029 18:16:18.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.888" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.7080...</msg>
<status status="PASS" starttime="20201029 18:16:18.883" endtime="20201029 18:16:18.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.893" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.891" endtime="20201029 18:16:18.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.895" level="INFO">VALUE: [8.694999999999536e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.708000000003102e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201029 18:16:18.894" endtime="20201029 18:16:18.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.889" endtime="20201029 18:16:18.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.900" endtime="20201029 18:16:18.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.899" endtime="20201029 18:16:18.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.898" endtime="20201029 18:16:18.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.535" endtime="20201029 18:16:18.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.534" endtime="20201029 18:16:18.921"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.930" endtime="20201029 18:16:18.951"></status>
</kw>
<msg timestamp="20201029 18:16:18.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.929" endtime="20201029 18:16:18.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.953" endtime="20201029 18:16:18.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.955" endtime="20201029 18:16:18.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.926" endtime="20201029 18:16:18.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.924" endtime="20201029 18:16:18.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.965" endtime="20201029 18:16:19.252"></status>
</kw>
<msg timestamp="20201029 18:16:19.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023692403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.963" endtime="20201029 18:16:19.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023692403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.257" endtime="20201029 18:16:19.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.265" endtime="20201029 18:16:19.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.960" endtime="20201029 18:16:19.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.959" endtime="20201029 18:16:19.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.272" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:19.269" endtime="20201029 18:16:19.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.276" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.6799...</msg>
<status status="PASS" starttime="20201029 18:16:19.273" endtime="20201029 18:16:19.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.281" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.280" endtime="20201029 18:16:19.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.284" level="INFO">VALUE: [8.694000000000063e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.791000000001048e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.652000000001353e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.652000000001353e-06]</msg>
<status status="PASS" starttime="20201029 18:16:19.282" endtime="20201029 18:16:19.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.277" endtime="20201029 18:16:19.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.289" endtime="20201029 18:16:19.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.287" endtime="20201029 18:16:19.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.286" endtime="20201029 18:16:19.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.922" endtime="20201029 18:16:19.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.922" endtime="20201029 18:16:19.310"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.319" endtime="20201029 18:16:19.335"></status>
</kw>
<msg timestamp="20201029 18:16:19.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.317" endtime="20201029 18:16:19.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.336" endtime="20201029 18:16:19.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.339" endtime="20201029 18:16:19.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.314" endtime="20201029 18:16:19.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.312" endtime="20201029 18:16:19.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.349" endtime="20201029 18:16:19.636"></status>
</kw>
<msg timestamp="20201029 18:16:19.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.347" endtime="20201029 18:16:19.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.640" endtime="20201029 18:16:19.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.648" endtime="20201029 18:16:19.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.344" endtime="20201029 18:16:19.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.342" endtime="20201029 18:16:19.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.655" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.625000000001687e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:19.652" endtime="20201029 18:16:19.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.660" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.6530...</msg>
<status status="PASS" starttime="20201029 18:16:19.656" endtime="20201029 18:16:19.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.664" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.663" endtime="20201029 18:16:19.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.667" level="INFO">VALUE: [8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.737000000001716e-06, 8.666000000000923e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.763999999997912e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.637999999998314e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.666999999996927e-06, 8.707999999999633e-06, 8.610999999998648e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.625000000001687e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 18:16:19.665" endtime="20201029 18:16:19.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.661" endtime="20201029 18:16:19.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.673" endtime="20201029 18:16:19.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.671" endtime="20201029 18:16:19.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.670" endtime="20201029 18:16:19.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.311" endtime="20201029 18:16:19.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.310" endtime="20201029 18:16:19.694"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.703" endtime="20201029 18:16:19.721"></status>
</kw>
<msg timestamp="20201029 18:16:19.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.702" endtime="20201029 18:16:19.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.723" endtime="20201029 18:16:19.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.725" endtime="20201029 18:16:19.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.699" endtime="20201029 18:16:19.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.696" endtime="20201029 18:16:19.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.735" endtime="20201029 18:16:20.021"></status>
</kw>
<msg timestamp="20201029 18:16:20.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.733" endtime="20201029 18:16:20.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024620875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.026" endtime="20201029 18:16:20.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.034" endtime="20201029 18:16:20.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.731" endtime="20201029 18:16:20.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.729" endtime="20201029 18:16:20.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.041" level="INFO">${RESULT} = [{'diff': 8.749999999998342e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.639000000001257e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:20.038" endtime="20201029 18:16:20.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.046" level="INFO">${ACCURACY} = {'diff': [8.749999999998342e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 18:16:20.042" endtime="20201029 18:16:20.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.051" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.050" endtime="20201029 18:16:20.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.054" level="INFO">VALUE: [8.749999999998342e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.610999999998648e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.723000000002146e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.695000000003006e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.764000000001382e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 18:16:20.052" endtime="20201029 18:16:20.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.047" endtime="20201029 18:16:20.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.059" endtime="20201029 18:16:20.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.057" endtime="20201029 18:16:20.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.056" endtime="20201029 18:16:20.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.695" endtime="20201029 18:16:20.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.694" endtime="20201029 18:16:20.080"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.089" endtime="20201029 18:16:20.109"></status>
</kw>
<msg timestamp="20201029 18:16:20.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.087" endtime="20201029 18:16:20.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.111" endtime="20201029 18:16:20.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.115" endtime="20201029 18:16:20.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.085" endtime="20201029 18:16:20.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.082" endtime="20201029 18:16:20.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.130" endtime="20201029 18:16:20.419"></status>
</kw>
<msg timestamp="20201029 18:16:20.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020712889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020721583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.128" endtime="20201029 18:16:20.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020712889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020721583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.423" endtime="20201029 18:16:20.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.431" endtime="20201029 18:16:20.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.124" endtime="20201029 18:16:20.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.120" endtime="20201029 18:16:20.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.438" level="INFO">${RESULT} = [{'diff': 8.693999999996593e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.667000000000397e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:20.435" endtime="20201029 18:16:20.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.443" level="INFO">${ACCURACY} = {'diff': [8.693999999996593e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 18:16:20.439" endtime="20201029 18:16:20.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.447" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.446" endtime="20201029 18:16:20.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.450" level="INFO">VALUE: [8.693999999996593e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.693999999996593e-06, 8.694000000000063e-06, 8.736999999998246e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.763999999997912e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.638999999997787e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.679999999997023e-06, 8.736000000002242e-06, 8.639000000001257e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 18:16:20.448" endtime="20201029 18:16:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.443" endtime="20201029 18:16:20.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.455" endtime="20201029 18:16:20.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.454" endtime="20201029 18:16:20.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.452" endtime="20201029 18:16:20.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.081" endtime="20201029 18:16:20.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.080" endtime="20201029 18:16:20.476"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.485" endtime="20201029 18:16:20.506"></status>
</kw>
<msg timestamp="20201029 18:16:20.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.484" endtime="20201029 18:16:20.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.507" endtime="20201029 18:16:20.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.510" endtime="20201029 18:16:20.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.481" endtime="20201029 18:16:20.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.479" endtime="20201029 18:16:20.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.519" endtime="20201029 18:16:20.806"></status>
</kw>
<msg timestamp="20201029 18:16:20.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026239403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026248097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.518" endtime="20201029 18:16:20.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026239403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026248097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.810" endtime="20201029 18:16:20.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.818" endtime="20201029 18:16:20.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.515" endtime="20201029 18:16:20.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.513" endtime="20201029 18:16:20.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.825" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.652999999997357e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:20.821" endtime="20201029 18:16:20.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.829" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.639000000001257e-06, 8.6800...</msg>
<status status="PASS" starttime="20201029 18:16:20.826" endtime="20201029 18:16:20.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.833" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.832" endtime="20201029 18:16:20.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.837" level="INFO">VALUE: [8.694000000000063e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.778000000000952e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.625000000001687e-06, 8.750000000001812e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.736000000002242e-06, 8.653000000000827e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201029 18:16:20.835" endtime="20201029 18:16:20.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.830" endtime="20201029 18:16:20.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.843" endtime="20201029 18:16:20.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.842" endtime="20201029 18:16:20.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.840" endtime="20201029 18:16:20.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.477" endtime="20201029 18:16:20.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.477" endtime="20201029 18:16:20.865"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.873" endtime="20201029 18:16:20.892"></status>
</kw>
<msg timestamp="20201029 18:16:20.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.872" endtime="20201029 18:16:20.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.894" endtime="20201029 18:16:20.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.896" endtime="20201029 18:16:20.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.869" endtime="20201029 18:16:20.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.867" endtime="20201029 18:16:20.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.906" endtime="20201029 18:16:21.215"></status>
</kw>
<msg timestamp="20201029 18:16:21.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024692819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.904" endtime="20201029 18:16:21.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024692819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.219" endtime="20201029 18:16:21.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.228" endtime="20201029 18:16:21.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.901" endtime="20201029 18:16:21.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.899" endtime="20201029 18:16:21.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.234" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.666999999996927e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:21.231" endtime="20201029 18:16:21.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.239" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 18:16:21.235" endtime="20201029 18:16:21.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.244" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.243" endtime="20201029 18:16:21.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.246" level="INFO">VALUE: [8.680000000000493e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.777000000001478e-06, 8.667000000000397e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.776999999998009e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201029 18:16:21.245" endtime="20201029 18:16:21.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.240" endtime="20201029 18:16:21.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.251" endtime="20201029 18:16:21.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.250" endtime="20201029 18:16:21.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.249" endtime="20201029 18:16:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.865" endtime="20201029 18:16:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.865" endtime="20201029 18:16:21.272"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.281" endtime="20201029 18:16:21.300"></status>
</kw>
<msg timestamp="20201029 18:16:21.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.279" endtime="20201029 18:16:21.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.302" endtime="20201029 18:16:21.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.304" endtime="20201029 18:16:21.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.277" endtime="20201029 18:16:21.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.275" endtime="20201029 18:16:21.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.313" endtime="20201029 18:16:21.602"></status>
</kw>
<msg timestamp="20201029 18:16:21.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023900139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023908875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.312" endtime="20201029 18:16:21.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023900139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023908875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.606" endtime="20201029 18:16:21.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.615" endtime="20201029 18:16:21.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.309" endtime="20201029 18:16:21.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.307" endtime="20201029 18:16:21.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.622" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.777999999997482e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:21.618" endtime="20201029 18:16:21.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.626" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.777999999997482e-06, 8.695000000003006e-06, 8.637999999998314e-06, 8.7640...</msg>
<status status="PASS" starttime="20201029 18:16:21.623" endtime="20201029 18:16:21.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.631" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.630" endtime="20201029 18:16:21.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.633" level="INFO">VALUE: [8.735999999998773e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.777999999997482e-06, 8.695000000003006e-06, 8.637999999998314e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.778000000000952e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.679999999997023e-06, 8.695000000003006e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.624999999998217e-06, 8.722000000002672e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.652999999997357e-06, 8.721999999999203e-06, 8.695000000003006e-06]</msg>
<status status="PASS" starttime="20201029 18:16:21.632" endtime="20201029 18:16:21.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.627" endtime="20201029 18:16:21.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.639" endtime="20201029 18:16:21.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.637" endtime="20201029 18:16:21.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.636" endtime="20201029 18:16:21.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.273" endtime="20201029 18:16:21.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.273" endtime="20201029 18:16:21.659"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.668" endtime="20201029 18:16:21.686"></status>
</kw>
<msg timestamp="20201029 18:16:21.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.667" endtime="20201029 18:16:21.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.688" endtime="20201029 18:16:21.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.690" endtime="20201029 18:16:21.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.664" endtime="20201029 18:16:21.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.662" endtime="20201029 18:16:21.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.700" endtime="20201029 18:16:22.007"></status>
</kw>
<msg timestamp="20201029 18:16:22.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023624056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.698" endtime="20201029 18:16:22.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023624056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.011" endtime="20201029 18:16:22.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.020" endtime="20201029 18:16:22.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.696" endtime="20201029 18:16:22.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.694" endtime="20201029 18:16:22.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.027" level="INFO">${RESULT} = [{'diff': 8.665999999997454e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.667000000000397e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:22.023" endtime="20201029 18:16:22.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.031" level="INFO">${ACCURACY} = {'diff': [8.665999999997454e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 18:16:22.028" endtime="20201029 18:16:22.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.036" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.035" endtime="20201029 18:16:22.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.039" level="INFO">VALUE: [8.665999999997454e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 18:16:22.037" endtime="20201029 18:16:22.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.032" endtime="20201029 18:16:22.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.045" endtime="20201029 18:16:22.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.043" endtime="20201029 18:16:22.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.042" endtime="20201029 18:16:22.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.660" endtime="20201029 18:16:22.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.660" endtime="20201029 18:16:22.066"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.075" endtime="20201029 18:16:22.093"></status>
</kw>
<msg timestamp="20201029 18:16:22.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.073" endtime="20201029 18:16:22.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.095" endtime="20201029 18:16:22.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.097" endtime="20201029 18:16:22.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.070" endtime="20201029 18:16:22.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.068" endtime="20201029 18:16:22.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.107" endtime="20201029 18:16:22.392"></status>
</kw>
<msg timestamp="20201029 18:16:22.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024423597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024432264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.105" endtime="20201029 18:16:22.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024423597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024432264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.396" endtime="20201029 18:16:22.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.405" endtime="20201029 18:16:22.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.102" endtime="20201029 18:16:22.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.100" endtime="20201029 18:16:22.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.411" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.777999999997482e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:22.408" endtime="20201029 18:16:22.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.417" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.777999999997482e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.6390...</msg>
<status status="PASS" starttime="20201029 18:16:22.412" endtime="20201029 18:16:22.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.421" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.420" endtime="20201029 18:16:22.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.424" level="INFO">VALUE: [8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.777999999997482e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.722999999998676e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.624999999998217e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.652999999997357e-06]</msg>
<status status="PASS" starttime="20201029 18:16:22.423" endtime="20201029 18:16:22.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.418" endtime="20201029 18:16:22.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.429" endtime="20201029 18:16:22.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.428" endtime="20201029 18:16:22.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.426" endtime="20201029 18:16:22.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.066" endtime="20201029 18:16:22.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.066" endtime="20201029 18:16:22.450"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.459" endtime="20201029 18:16:22.477"></status>
</kw>
<msg timestamp="20201029 18:16:22.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.457" endtime="20201029 18:16:22.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.479" endtime="20201029 18:16:22.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.481" endtime="20201029 18:16:22.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.455" endtime="20201029 18:16:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.453" endtime="20201029 18:16:22.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.491" endtime="20201029 18:16:22.777"></status>
</kw>
<msg timestamp="20201029 18:16:22.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.489" endtime="20201029 18:16:22.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.782" endtime="20201029 18:16:22.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.790" endtime="20201029 18:16:22.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.487" endtime="20201029 18:16:22.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.485" endtime="20201029 18:16:22.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.797" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:22.794" endtime="20201029 18:16:22.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.801" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.625000000001687e-06, 8.679999999997023e-06, 8.6660...</msg>
<status status="PASS" starttime="20201029 18:16:22.798" endtime="20201029 18:16:22.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.806" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.805" endtime="20201029 18:16:22.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.809" level="INFO">VALUE: [8.707999999999633e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.625000000001687e-06, 8.679999999997023e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.638999999997787e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.611000000002117e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 18:16:22.807" endtime="20201029 18:16:22.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.802" endtime="20201029 18:16:22.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.818" endtime="20201029 18:16:22.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.817" endtime="20201029 18:16:22.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.815" endtime="20201029 18:16:22.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.451" endtime="20201029 18:16:22.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.450" endtime="20201029 18:16:22.839"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.848" endtime="20201029 18:16:22.867"></status>
</kw>
<msg timestamp="20201029 18:16:22.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.847" endtime="20201029 18:16:22.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.869" endtime="20201029 18:16:22.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.872" endtime="20201029 18:16:22.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.844" endtime="20201029 18:16:22.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.841" endtime="20201029 18:16:22.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.881" endtime="20201029 18:16:23.169"></status>
</kw>
<msg timestamp="20201029 18:16:23.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024617472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024626153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.879" endtime="20201029 18:16:23.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024617472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024626153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.173" endtime="20201029 18:16:23.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.181" endtime="20201029 18:16:23.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.877" endtime="20201029 18:16:23.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.875" endtime="20201029 18:16:23.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.188" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.653000000000827e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:23.185" endtime="20201029 18:16:23.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.193" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 18:16:23.189" endtime="20201029 18:16:23.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.198" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.197" endtime="20201029 18:16:23.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.200" level="INFO">VALUE: [8.680999999999967e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.695000000003006e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.639000000001257e-06, 8.695000000003006e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201029 18:16:23.199" endtime="20201029 18:16:23.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.194" endtime="20201029 18:16:23.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.206" endtime="20201029 18:16:23.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.205" endtime="20201029 18:16:23.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.204" endtime="20201029 18:16:23.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.840" endtime="20201029 18:16:23.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.839" endtime="20201029 18:16:23.227"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.236" endtime="20201029 18:16:23.257"></status>
</kw>
<msg timestamp="20201029 18:16:23.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.235" endtime="20201029 18:16:23.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.259" endtime="20201029 18:16:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.261" endtime="20201029 18:16:23.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.232" endtime="20201029 18:16:23.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.230" endtime="20201029 18:16:23.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.271" endtime="20201029 18:16:23.557"></status>
</kw>
<msg timestamp="20201029 18:16:23.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023225319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.269" endtime="20201029 18:16:23.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023216611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023225319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.561" endtime="20201029 18:16:23.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.569" endtime="20201029 18:16:23.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.266" endtime="20201029 18:16:23.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.265" endtime="20201029 18:16:23.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.576" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.680000000000493e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:23.573" endtime="20201029 18:16:23.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.581" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 18:16:23.577" endtime="20201029 18:16:23.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.586" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.585" endtime="20201029 18:16:23.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.589" level="INFO">VALUE: [8.707999999999633e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.736999999998246e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.707999999999633e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201029 18:16:23.587" endtime="20201029 18:16:23.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.582" endtime="20201029 18:16:23.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.594" endtime="20201029 18:16:23.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.592" endtime="20201029 18:16:23.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.591" endtime="20201029 18:16:23.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.228" endtime="20201029 18:16:23.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.228" endtime="20201029 18:16:23.615"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.624" endtime="20201029 18:16:23.640"></status>
</kw>
<msg timestamp="20201029 18:16:23.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.623" endtime="20201029 18:16:23.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.642" endtime="20201029 18:16:23.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.645" endtime="20201029 18:16:23.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.620" endtime="20201029 18:16:23.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.618" endtime="20201029 18:16:23.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.654" endtime="20201029 18:16:23.941"></status>
</kw>
<msg timestamp="20201029 18:16:23.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:23.652" endtime="20201029 18:16:23.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:23.946" endtime="20201029 18:16:23.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.955" endtime="20201029 18:16:23.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.650" endtime="20201029 18:16:23.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.648" endtime="20201029 18:16:23.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.962" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.639000000001257e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:23.959" endtime="20201029 18:16:23.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.967" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.6949...</msg>
<status status="PASS" starttime="20201029 18:16:23.963" endtime="20201029 18:16:23.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.971" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.970" endtime="20201029 18:16:23.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.974" level="INFO">VALUE: [8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.680000000000493e-06, 8.722999999998676e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.737000000001716e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.638999999997787e-06, 8.750000000001812e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.679999999997023e-06, 8.749999999998342e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201029 18:16:23.972" endtime="20201029 18:16:23.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.967" endtime="20201029 18:16:23.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.979" endtime="20201029 18:16:23.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.977" endtime="20201029 18:16:23.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.976" endtime="20201029 18:16:24.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.616" endtime="20201029 18:16:24.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.615" endtime="20201029 18:16:24.000"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.009" endtime="20201029 18:16:24.032"></status>
</kw>
<msg timestamp="20201029 18:16:24.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.008" endtime="20201029 18:16:24.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.033" endtime="20201029 18:16:24.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.036" endtime="20201029 18:16:24.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.005" endtime="20201029 18:16:24.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.003" endtime="20201029 18:16:24.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.046" endtime="20201029 18:16:24.333"></status>
</kw>
<msg timestamp="20201029 18:16:24.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029219389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029228042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.044" endtime="20201029 18:16:24.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029219389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029228042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.337" endtime="20201029 18:16:24.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.345" endtime="20201029 18:16:24.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.041" endtime="20201029 18:16:24.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.039" endtime="20201029 18:16:24.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.352" level="INFO">${RESULT} = [{'diff': 8.653000000000827e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.666000000000923e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:24.349" endtime="20201029 18:16:24.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.357" level="INFO">${ACCURACY} = {'diff': [8.653000000000827e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.736999999998246e-06, 8.7640...</msg>
<status status="PASS" starttime="20201029 18:16:24.353" endtime="20201029 18:16:24.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.361" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.360" endtime="20201029 18:16:24.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.364" level="INFO">VALUE: [8.653000000000827e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.709000000002576e-06, 8.708000000003102e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.610999999998648e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.723000000002146e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.610999999998648e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.709000000002576e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201029 18:16:24.362" endtime="20201029 18:16:24.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.358" endtime="20201029 18:16:24.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.370" endtime="20201029 18:16:24.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.368" endtime="20201029 18:16:24.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.367" endtime="20201029 18:16:24.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.001" endtime="20201029 18:16:24.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.000" endtime="20201029 18:16:24.391"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.400" endtime="20201029 18:16:24.424"></status>
</kw>
<msg timestamp="20201029 18:16:24.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.398" endtime="20201029 18:16:24.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.426" endtime="20201029 18:16:24.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.428" endtime="20201029 18:16:24.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.396" endtime="20201029 18:16:24.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.393" endtime="20201029 18:16:24.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.438" endtime="20201029 18:16:24.724"></status>
</kw>
<msg timestamp="20201029 18:16:24.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025176347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.436" endtime="20201029 18:16:24.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025176347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.728" endtime="20201029 18:16:24.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.737" endtime="20201029 18:16:24.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.434" endtime="20201029 18:16:24.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.432" endtime="20201029 18:16:24.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.744" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.665999999997454e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:24.740" endtime="20201029 18:16:24.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.749" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 18:16:24.745" endtime="20201029 18:16:24.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.754" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.753" endtime="20201029 18:16:24.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.756" level="INFO">VALUE: [8.694000000000063e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201029 18:16:24.755" endtime="20201029 18:16:24.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.750" endtime="20201029 18:16:24.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.761" endtime="20201029 18:16:24.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.760" endtime="20201029 18:16:24.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.759" endtime="20201029 18:16:24.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.392" endtime="20201029 18:16:24.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.391" endtime="20201029 18:16:24.782"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.792" endtime="20201029 18:16:24.811"></status>
</kw>
<msg timestamp="20201029 18:16:24.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.790" endtime="20201029 18:16:24.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.813" endtime="20201029 18:16:24.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.815" endtime="20201029 18:16:24.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.787" endtime="20201029 18:16:24.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.785" endtime="20201029 18:16:24.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.825" endtime="20201029 18:16:25.113"></status>
</kw>
<msg timestamp="20201029 18:16:25.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025659972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.823" endtime="20201029 18:16:25.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025659972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.117" endtime="20201029 18:16:25.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.126" endtime="20201029 18:16:25.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.821" endtime="20201029 18:16:25.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.819" endtime="20201029 18:16:25.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.133" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.652999999997357e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:25.129" endtime="20201029 18:16:25.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.137" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.610999999998648e-06, 8.708000000003102e-06, 8.7090...</msg>
<status status="PASS" starttime="20201029 18:16:25.134" endtime="20201029 18:16:25.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.142" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.141" endtime="20201029 18:16:25.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.144" level="INFO">VALUE: [8.680999999999967e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.610999999998648e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.625000000001687e-06, 8.680000000000493e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.638999999997787e-06]</msg>
<status status="PASS" starttime="20201029 18:16:25.143" endtime="20201029 18:16:25.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.138" endtime="20201029 18:16:25.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.149" endtime="20201029 18:16:25.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.148" endtime="20201029 18:16:25.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.147" endtime="20201029 18:16:25.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.783" endtime="20201029 18:16:25.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.783" endtime="20201029 18:16:25.170"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.179" endtime="20201029 18:16:25.198"></status>
</kw>
<msg timestamp="20201029 18:16:25.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.178" endtime="20201029 18:16:25.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.199" endtime="20201029 18:16:25.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.202" endtime="20201029 18:16:25.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.175" endtime="20201029 18:16:25.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.173" endtime="20201029 18:16:25.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.212" endtime="20201029 18:16:25.497"></status>
</kw>
<msg timestamp="20201029 18:16:25.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024420903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.210" endtime="20201029 18:16:25.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024420903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024429583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.502" endtime="20201029 18:16:25.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.510" endtime="20201029 18:16:25.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.207" endtime="20201029 18:16:25.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.205" endtime="20201029 18:16:25.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.517" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.708999999999106e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:25.514" endtime="20201029 18:16:25.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.522" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.6670...</msg>
<status status="PASS" starttime="20201029 18:16:25.518" endtime="20201029 18:16:25.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.526" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.525" endtime="20201029 18:16:25.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.529" level="INFO">VALUE: [8.680000000000493e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.736000000002242e-06, 8.652000000001353e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.723000000002146e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.695000000003006e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201029 18:16:25.527" endtime="20201029 18:16:25.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.523" endtime="20201029 18:16:25.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.535" endtime="20201029 18:16:25.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.533" endtime="20201029 18:16:25.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.532" endtime="20201029 18:16:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.171" endtime="20201029 18:16:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.171" endtime="20201029 18:16:25.556"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.565" endtime="20201029 18:16:25.586"></status>
</kw>
<msg timestamp="20201029 18:16:25.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.563" endtime="20201029 18:16:25.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.588" endtime="20201029 18:16:25.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.590" endtime="20201029 18:16:25.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.561" endtime="20201029 18:16:25.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.559" endtime="20201029 18:16:25.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.600" endtime="20201029 18:16:25.886"></status>
</kw>
<msg timestamp="20201029 18:16:25.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025671125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025679819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.598" endtime="20201029 18:16:25.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025671125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025679819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.891" endtime="20201029 18:16:25.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.899" endtime="20201029 18:16:25.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.595" endtime="20201029 18:16:25.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.594" endtime="20201029 18:16:25.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.906" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.639000000001257e-06}, {'diff': 8.667000000000397e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:25.902" endtime="20201029 18:16:25.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.911" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.6669...</msg>
<status status="PASS" starttime="20201029 18:16:25.907" endtime="20201029 18:16:25.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.916" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.915" endtime="20201029 18:16:25.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.918" level="INFO">VALUE: [8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.624999999998217e-06, 8.708000000003102e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.693999999996593e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201029 18:16:25.917" endtime="20201029 18:16:25.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.912" endtime="20201029 18:16:25.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.924" endtime="20201029 18:16:25.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.922" endtime="20201029 18:16:25.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.921" endtime="20201029 18:16:25.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.557" endtime="20201029 18:16:25.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.556" endtime="20201029 18:16:25.945"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.954" endtime="20201029 18:16:25.975"></status>
</kw>
<msg timestamp="20201029 18:16:25.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.952" endtime="20201029 18:16:25.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.976" endtime="20201029 18:16:25.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.979" endtime="20201029 18:16:25.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.949" endtime="20201029 18:16:25.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.947" endtime="20201029 18:16:25.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.990" endtime="20201029 18:16:26.278"></status>
</kw>
<msg timestamp="20201029 18:16:26.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023915556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.988" endtime="20201029 18:16:26.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023915556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.282" endtime="20201029 18:16:26.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.292" endtime="20201029 18:16:26.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.985" endtime="20201029 18:16:26.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.983" endtime="20201029 18:16:26.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.299" level="INFO">${RESULT} = [{'diff': 2.3999999999999716e-05}, {'diff': 2.2098000000001644e-05}, {'diff': 2.4013999999999286e-05}, {'diff': 2.3943999999997967e-05}, {'diff': 2.587500000000159e-05}, {'diff': 2.397300000000005e-05...</msg>
<status status="PASS" starttime="20201029 18:16:26.296" endtime="20201029 18:16:26.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.304" level="INFO">${ACCURACY} = {'diff': [2.3999999999999716e-05, 2.2098000000001644e-05, 2.4013999999999286e-05, 2.3943999999997967e-05, 2.587500000000159e-05, 2.397300000000005e-05, 2.3999999999999716e-05, 2.10830000000016e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:26.300" endtime="20201029 18:16:26.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.308" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.307" endtime="20201029 18:16:26.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.311" level="INFO">VALUE: [2.3999999999999716e-05, 2.2098000000001644e-05, 2.4013999999999286e-05, 2.3943999999997967e-05, 2.587500000000159e-05, 2.397300000000005e-05, 2.3999999999999716e-05, 2.10830000000016e-05, 2.5847999999998456e-05, 2.118099999999859e-05, 2.305500000000099e-05, 2.4985999999997677e-05, 2.497300000000105e-05, 2.5860999999998552e-05, 2.4915999999999827e-05, 2.5832999999999412e-05, 2.10969999999977e-05, 2.20969999999987e-05, 2.0166000000002016e-05, 2.015299999999845e-05, 2.3957999999997537e-05, 2.3042000000000895e-05, 2.4027999999998856e-05, 2.5847999999998456e-05, 2.1069999999998035e-05, 2.4943999999998967e-05, 2.4986000000001146e-05, 2.10830000000016e-05, 2.109700000000117e-05, 2.205499999999999e-05, 2.1151999999999976e-05, 2.2027999999996856e-05, 2.10969999999977e-05, 2.4014000000002755e-05, 2.4943999999998967e-05, 2.583300000000288e-05, 2.4943999999998967e-05, 2.018099999999759e-05, 2.590300000000073e-05, 2.3944000000001436e-05, 2.488900000000016e-05, 2.5832999999999412e-05, 2.5874999999998122e-05, 2.4014000000002755e-05, 2.3986000000000146e-05, 2.4915999999999827e-05, 2.3986000000000146e-05, 2.6833999999999886e-05, 2.4042000000001895e-05, 2.306900000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.309" endtime="20201029 18:16:26.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.304" endtime="20201029 18:16:26.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.316" endtime="20201029 18:16:26.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.314" endtime="20201029 18:16:26.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.313" endtime="20201029 18:16:26.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.945" endtime="20201029 18:16:26.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.945" endtime="20201029 18:16:26.337"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.346" endtime="20201029 18:16:26.367"></status>
</kw>
<msg timestamp="20201029 18:16:26.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.345" endtime="20201029 18:16:26.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.368" endtime="20201029 18:16:26.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.371" endtime="20201029 18:16:26.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.342" endtime="20201029 18:16:26.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.340" endtime="20201029 18:16:26.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.380" endtime="20201029 18:16:26.666"></status>
</kw>
<msg timestamp="20201029 18:16:26.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.379" endtime="20201029 18:16:26.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.671" endtime="20201029 18:16:26.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.679" endtime="20201029 18:16:26.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.376" endtime="20201029 18:16:26.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.374" endtime="20201029 18:16:26.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.686" level="INFO">${RESULT} = [{'diff': 2.588900000000116e-05}, {'diff': 2.494500000000191e-05}, {'diff': 2.105500000000246e-05}, {'diff': 2.394500000000091e-05}, {'diff': 2.6792000000001176e-05}, {'diff': 2.4915999999999827e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:26.683" endtime="20201029 18:16:26.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.690" level="INFO">${ACCURACY} = {'diff': [2.588900000000116e-05, 2.494500000000191e-05, 2.105500000000246e-05, 2.394500000000091e-05, 2.6792000000001176e-05, 2.4915999999999827e-05, 2.2027999999996856e-05, 2.1971999999998576e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:26.687" endtime="20201029 18:16:26.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.695" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.694" endtime="20201029 18:16:26.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.698" level="INFO">VALUE: [2.588900000000116e-05, 2.494500000000191e-05, 2.105500000000246e-05, 2.394500000000091e-05, 2.6792000000001176e-05, 2.4915999999999827e-05, 2.2027999999996856e-05, 2.1971999999998576e-05, 2.2985999999999146e-05, 2.0042000000001364e-05, 2.395900000000048e-05, 2.108299999999813e-05, 2.2014000000000755e-05, 2.206899999999956e-05, 2.4915999999999827e-05, 2.111099999999727e-05, 2.109700000000117e-05, 2.488900000000016e-05, 2.3944000000001436e-05, 2.3042000000000895e-05, 2.112500000000031e-05, 2.2985999999999146e-05, 2.297300000000252e-05, 2.109700000000117e-05, 2.109700000000117e-05, 2.4929999999999397e-05, 2.587500000000159e-05, 2.2999999999998716e-05, 2.390299999999873e-05, 2.3014000000001755e-05, 2.5846999999998982e-05, 2.39169999999983e-05, 2.2014000000000755e-05, 2.2999999999998716e-05, 2.590299999999726e-05, 2.395900000000048e-05, 2.109700000000117e-05, 2.204100000000042e-05, 2.5860999999998552e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.3000000000002185e-05, 2.4014000000002755e-05, 2.3999999999999716e-05, 2.106899999999856e-05, 2.105500000000246e-05, 2.10969999999977e-05, 2.011099999999974e-05, 2.3944000000001436e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.696" endtime="20201029 18:16:26.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.691" endtime="20201029 18:16:26.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.704" endtime="20201029 18:16:26.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.702" endtime="20201029 18:16:26.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.701" endtime="20201029 18:16:26.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.338" endtime="20201029 18:16:26.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.337" endtime="20201029 18:16:26.725"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.734" endtime="20201029 18:16:26.753"></status>
</kw>
<msg timestamp="20201029 18:16:26.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.732" endtime="20201029 18:16:26.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.755" endtime="20201029 18:16:26.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.757" endtime="20201029 18:16:26.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.729" endtime="20201029 18:16:26.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.727" endtime="20201029 18:16:26.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.767" endtime="20201029 18:16:27.052"></status>
</kw>
<msg timestamp="20201029 18:16:27.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.765" endtime="20201029 18:16:27.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.056" endtime="20201029 18:16:27.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.065" endtime="20201029 18:16:27.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.763" endtime="20201029 18:16:27.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.761" endtime="20201029 18:16:27.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.072" level="INFO">${RESULT} = [{'diff': 3.6389000000001254e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.494499999999844e-05}, {'diff': 2.3930000000001866e-05}, {'diff': 2.587500000000159e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:27.068" endtime="20201029 18:16:27.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.077" level="INFO">${ACCURACY} = {'diff': [3.6389000000001254e-05, 2.59170000000003e-05, 2.593099999999987e-05, 2.494499999999844e-05, 2.3930000000001866e-05, 2.587500000000159e-05, 2.20830000000026e-05, 2.494499999999844e-05, 2.6804...</msg>
<status status="PASS" starttime="20201029 18:16:27.073" endtime="20201029 18:16:27.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.081" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.080" endtime="20201029 18:16:27.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.084" level="INFO">VALUE: [3.6389000000001254e-05, 2.59170000000003e-05, 2.593099999999987e-05, 2.494499999999844e-05, 2.3930000000001866e-05, 2.587500000000159e-05, 2.20830000000026e-05, 2.494499999999844e-05, 2.6804999999997803e-05, 2.2986000000002615e-05, 2.3000000000002185e-05, 2.012499999999931e-05, 2.2028000000000325e-05, 2.4944000000002436e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.113900000000335e-05, 2.6833000000000412e-05, 2.111099999999727e-05, 2.586100000000202e-05, 2.2041999999999895e-05, 2.011099999999974e-05, 2.488900000000016e-05, 2.3944000000001436e-05, 2.2999999999998716e-05, 2.587500000000159e-05, 2.3957999999997537e-05, 2.2041999999999895e-05, 2.3986000000000146e-05, 2.016700000000149e-05, 2.488900000000016e-05, 2.3070000000000035e-05, 2.308300000000013e-05, 2.2055999999999465e-05, 2.1084000000001074e-05, 2.3027999999997856e-05, 2.4013999999999286e-05, 2.10969999999977e-05, 2.2971999999999576e-05, 2.202700000000085e-05, 2.108299999999813e-05, 1.916700000000049e-05, 2.2027999999996856e-05, 2.590299999999726e-05, 2.6874999999999122e-05, 2.2056000000002934e-05, 2.488900000000016e-05, 2.394499999999744e-05, 2.590299999999726e-05, 2.5874999999998122e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.083" endtime="20201029 18:16:27.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.078" endtime="20201029 18:16:27.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.089" endtime="20201029 18:16:27.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.088" endtime="20201029 18:16:27.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.087" endtime="20201029 18:16:27.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.726" endtime="20201029 18:16:27.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.725" endtime="20201029 18:16:27.110"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.119" endtime="20201029 18:16:27.141"></status>
</kw>
<msg timestamp="20201029 18:16:27.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.118" endtime="20201029 18:16:27.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.143" endtime="20201029 18:16:27.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.146" endtime="20201029 18:16:27.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.115" endtime="20201029 18:16:27.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.113" endtime="20201029 18:16:27.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.159" endtime="20201029 18:16:27.447"></status>
</kw>
<msg timestamp="20201029 18:16:27.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023783472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.157" endtime="20201029 18:16:27.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023783472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.451" endtime="20201029 18:16:27.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.460" endtime="20201029 18:16:27.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.153" endtime="20201029 18:16:27.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.151" endtime="20201029 18:16:27.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.467" level="INFO">${RESULT} = [{'diff': 3.444400000000153e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.688900000000216e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.5846999999998982e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:27.463" endtime="20201029 18:16:27.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.471" level="INFO">${ACCURACY} = {'diff': [3.444400000000153e-05, 2.488900000000016e-05, 2.688900000000216e-05, 2.3013999999998286e-05, 2.5930000000000397e-05, 2.5846999999998982e-05, 2.584700000000245e-05, 2.111100000000074e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 18:16:27.468" endtime="20201029 18:16:27.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.476" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.474" endtime="20201029 18:16:27.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.478" level="INFO">VALUE: [3.444400000000153e-05, 2.488900000000016e-05, 2.688900000000216e-05, 2.3013999999998286e-05, 2.5930000000000397e-05, 2.5846999999998982e-05, 2.584700000000245e-05, 2.111100000000074e-05, 2.3014000000001755e-05, 2.306900000000056e-05, 2.39030000000022e-05, 2.586100000000202e-05, 2.015299999999845e-05, 2.6819000000000842e-05, 2.3056000000000465e-05, 2.4013999999999286e-05, 2.6860999999999552e-05, 2.2041999999999895e-05, 2.0152000000002446e-05, 2.6819000000000842e-05, 2.49169999999993e-05, 2.206900000000303e-05, 2.4971999999998107e-05, 2.687500000000259e-05, 2.1056000000001934e-05, 2.111100000000074e-05, 2.488900000000016e-05, 2.5847999999998456e-05, 2.395900000000048e-05, 1.916700000000049e-05, 2.3042000000000895e-05, 2.1084000000001074e-05, 2.109700000000117e-05, 2.4888000000000687e-05, 2.4915999999999827e-05, 2.591699999999683e-05, 2.105500000000246e-05, 2.2055999999999465e-05, 2.39169999999983e-05, 2.4915999999999827e-05, 2.587500000000159e-05, 2.488900000000016e-05, 2.2985999999999146e-05, 2.2958000000000006e-05, 2.490299999999973e-05, 2.204100000000042e-05, 2.391700000000177e-05, 2.1165999999999546e-05, 2.2985999999999146e-05, 2.3083999999999605e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.477" endtime="20201029 18:16:27.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.472" endtime="20201029 18:16:27.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.484" endtime="20201029 18:16:27.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.482" endtime="20201029 18:16:27.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.481" endtime="20201029 18:16:27.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.111" endtime="20201029 18:16:27.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.111" endtime="20201029 18:16:27.504"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.514" endtime="20201029 18:16:27.537"></status>
</kw>
<msg timestamp="20201029 18:16:27.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.512" endtime="20201029 18:16:27.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.539" endtime="20201029 18:16:27.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.541" endtime="20201029 18:16:27.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.509" endtime="20201029 18:16:27.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.507" endtime="20201029 18:16:27.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.551" endtime="20201029 18:16:27.838"></status>
</kw>
<msg timestamp="20201029 18:16:27.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026545653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026565778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.549" endtime="20201029 18:16:27.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026545653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026565778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.842" endtime="20201029 18:16:27.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.851" endtime="20201029 18:16:27.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.547" endtime="20201029 18:16:27.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.545" endtime="20201029 18:16:27.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.858" level="INFO">${RESULT} = [{'diff': 2.012500000000278e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.1084000000001074e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.3070000000000035e-05}, {'diff': 2.113899999999988e-05...</msg>
<status status="PASS" starttime="20201029 18:16:27.854" endtime="20201029 18:16:27.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.862" level="INFO">${ACCURACY} = {'diff': [2.012500000000278e-05, 2.5860999999998552e-05, 2.1084000000001074e-05, 2.3013999999998286e-05, 2.3070000000000035e-05, 2.113899999999988e-05, 2.4915999999999827e-05, 2.108299999999813e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:27.859" endtime="20201029 18:16:27.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.867" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.866" endtime="20201029 18:16:27.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.869" level="INFO">VALUE: [2.012500000000278e-05, 2.5860999999998552e-05, 2.1084000000001074e-05, 2.3013999999998286e-05, 2.3070000000000035e-05, 2.113899999999988e-05, 2.4915999999999827e-05, 2.108299999999813e-05, 2.2944000000000436e-05, 2.106900000000203e-05, 2.4943999999998967e-05, 2.106899999999856e-05, 2.488900000000016e-05, 2.306900000000056e-05, 2.393099999999787e-05, 2.1069999999998035e-05, 2.2041999999999895e-05, 2.494499999999844e-05, 2.6820000000000316e-05, 2.3943999999997967e-05, 2.2971999999999576e-05, 2.6819000000000842e-05, 2.015299999999845e-05, 2.4846999999997982e-05, 2.687500000000259e-05, 2.012500000000278e-05, 2.3957999999997537e-05, 2.116699999999902e-05, 2.3957999999997537e-05, 2.3958000000001006e-05, 2.6805999999997276e-05, 2.204100000000042e-05, 2.3026999999998382e-05, 2.2097999999998175e-05, 2.10830000000016e-05, 2.5805999999999746e-05, 2.1151999999999976e-05, 2.211099999999827e-05, 2.105500000000246e-05, 2.108299999999813e-05, 2.5860999999998552e-05, 2.5874999999998122e-05, 2.5860999999998552e-05, 2.1027999999999325e-05, 2.3986000000000146e-05, 2.3999999999999716e-05, 2.10830000000016e-05, 2.6818999999997373e-05, 2.3958000000001006e-05, 2.5846999999998982e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.868" endtime="20201029 18:16:27.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.863" endtime="20201029 18:16:27.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.883" endtime="20201029 18:16:27.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.881" endtime="20201029 18:16:27.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.880" endtime="20201029 18:16:27.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.505" endtime="20201029 18:16:27.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.505" endtime="20201029 18:16:27.904"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.913" endtime="20201029 18:16:27.934"></status>
</kw>
<msg timestamp="20201029 18:16:27.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.911" endtime="20201029 18:16:27.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.936" endtime="20201029 18:16:27.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.939" endtime="20201029 18:16:27.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.909" endtime="20201029 18:16:27.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.907" endtime="20201029 18:16:27.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.948" endtime="20201029 18:16:28.235"></status>
</kw>
<msg timestamp="20201029 18:16:28.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.946" endtime="20201029 18:16:28.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023891347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.239" endtime="20201029 18:16:28.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.248" endtime="20201029 18:16:28.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.944" endtime="20201029 18:16:28.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.942" endtime="20201029 18:16:28.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.255" level="INFO">${RESULT} = [{'diff': 2.484700000000145e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.5818999999999842e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.209700000000217e-05}, {'diff': 2.4943999999998967e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:28.251" endtime="20201029 18:16:28.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.260" level="INFO">${ACCURACY} = {'diff': [2.484700000000145e-05, 2.112500000000031e-05, 2.5818999999999842e-05, 2.10969999999977e-05, 2.209700000000217e-05, 2.4943999999998967e-05, 2.012499999999931e-05, 2.3943999999997967e-05, 2.20...</msg>
<status status="PASS" starttime="20201029 18:16:28.256" endtime="20201029 18:16:28.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.265" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.264" endtime="20201029 18:16:28.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.267" level="INFO">VALUE: [2.484700000000145e-05, 2.112500000000031e-05, 2.5818999999999842e-05, 2.10969999999977e-05, 2.209700000000217e-05, 2.4943999999998967e-05, 2.012499999999931e-05, 2.3943999999997967e-05, 2.2028000000000325e-05, 2.015299999999845e-05, 2.4915999999999827e-05, 2.1098000000000644e-05, 2.4929999999999397e-05, 2.5943999999999967e-05, 2.012499999999931e-05, 2.393099999999787e-05, 2.3972000000000576e-05, 2.395900000000048e-05, 2.012499999999931e-05, 2.2055999999999465e-05, 2.6806000000000746e-05, 2.493099999999887e-05, 2.3012999999998812e-05, 2.1112000000000214e-05, 2.3026999999998382e-05, 2.10830000000016e-05, 2.0193999999997686e-05, 2.2999999999998716e-05, 2.205499999999999e-05, 2.0070000000000504e-05, 2.205499999999999e-05, 2.6846999999999982e-05, 2.3944000000001436e-05, 2.3930000000001866e-05, 2.3041999999997426e-05, 2.6888999999998692e-05, 2.012499999999931e-05, 2.108299999999813e-05, 2.394499999999744e-05, 2.10830000000016e-05, 2.686100000000302e-05, 2.2985999999999146e-05, 2.1084000000001074e-05, 2.3000000000002185e-05, 2.397300000000005e-05, 2.2013999999997286e-05, 2.2999999999998716e-05, 2.395900000000048e-05, 2.3070000000000035e-05, 2.4944000000002436e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.266" endtime="20201029 18:16:28.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.261" endtime="20201029 18:16:28.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.273" endtime="20201029 18:16:28.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.271" endtime="20201029 18:16:28.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.270" endtime="20201029 18:16:28.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.905" endtime="20201029 18:16:28.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.904" endtime="20201029 18:16:28.293"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.302" endtime="20201029 18:16:28.321"></status>
</kw>
<msg timestamp="20201029 18:16:28.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.301" endtime="20201029 18:16:28.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.323" endtime="20201029 18:16:28.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.325" endtime="20201029 18:16:28.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.298" endtime="20201029 18:16:28.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.296" endtime="20201029 18:16:28.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.335" endtime="20201029 18:16:28.623"></status>
</kw>
<msg timestamp="20201029 18:16:28.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021328792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.333" endtime="20201029 18:16:28.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021328792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.627" endtime="20201029 18:16:28.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.636" endtime="20201029 18:16:28.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.330" endtime="20201029 18:16:28.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.329" endtime="20201029 18:16:28.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.643" level="INFO">${RESULT} = [{'diff': 2.9652999999997542e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.4929999999999397e-05}, {'diff': 2.493100000000234e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.494499999999844e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:28.639" endtime="20201029 18:16:28.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.647" level="INFO">${ACCURACY} = {'diff': [2.9652999999997542e-05, 2.488900000000016e-05, 2.4929999999999397e-05, 2.493100000000234e-05, 2.5860999999998552e-05, 2.494499999999844e-05, 2.213900000000088e-05, 2.490299999999973e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 18:16:28.644" endtime="20201029 18:16:28.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.651" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.650" endtime="20201029 18:16:28.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.654" level="INFO">VALUE: [2.9652999999997542e-05, 2.488900000000016e-05, 2.4929999999999397e-05, 2.493100000000234e-05, 2.5860999999998552e-05, 2.494499999999844e-05, 2.213900000000088e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.587500000000159e-05, 2.1069999999998035e-05, 2.1986000000001615e-05, 2.013899999999888e-05, 2.3014000000001755e-05, 2.5930000000000397e-05, 2.016699999999802e-05, 2.109700000000117e-05, 2.3028000000001325e-05, 2.3026999999998382e-05, 2.112500000000031e-05, 2.393099999999787e-05, 2.49169999999993e-05, 2.590300000000073e-05, 2.2041999999999895e-05, 2.018099999999759e-05, 2.4972000000001576e-05, 2.488900000000016e-05, 2.013899999999888e-05, 2.493099999999887e-05, 2.6833000000000412e-05, 2.106899999999856e-05, 2.2041999999999895e-05, 2.015300000000192e-05, 2.5902000000001257e-05, 2.5846999999998982e-05, 2.494499999999844e-05, 2.20969999999987e-05, 2.3972000000000576e-05, 2.3014000000001755e-05, 2.2999999999998716e-05, 2.209700000000217e-05, 2.208299999999913e-05, 2.011099999999974e-05, 2.391700000000177e-05, 2.390299999999873e-05, 2.2041999999999895e-05, 2.2985999999999146e-05, 2.6860999999999552e-05, 2.5846999999998982e-05, 2.2985999999999146e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.653" endtime="20201029 18:16:28.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.648" endtime="20201029 18:16:28.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.659" endtime="20201029 18:16:28.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.658" endtime="20201029 18:16:28.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.657" endtime="20201029 18:16:28.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.294" endtime="20201029 18:16:28.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.294" endtime="20201029 18:16:28.680"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.689" endtime="20201029 18:16:28.714"></status>
</kw>
<msg timestamp="20201029 18:16:28.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.688" endtime="20201029 18:16:28.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.716" endtime="20201029 18:16:28.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.719" endtime="20201029 18:16:28.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.685" endtime="20201029 18:16:28.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.683" endtime="20201029 18:16:28.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.728" endtime="20201029 18:16:29.015"></status>
</kw>
<msg timestamp="20201029 18:16:29.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026356389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026370806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.727" endtime="20201029 18:16:29.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026356389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026370806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.019" endtime="20201029 18:16:29.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.028" endtime="20201029 18:16:29.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.724" endtime="20201029 18:16:29.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.722" endtime="20201029 18:16:29.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.035" level="INFO">${RESULT} = [{'diff': 1.4416999999999208e-05}, {'diff': 2.6804999999997803e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.4958000000002006e-05}, {'diff': 2.2055999999999465e-...</msg>
<status status="PASS" starttime="20201029 18:16:29.032" endtime="20201029 18:16:29.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.040" level="INFO">${ACCURACY} = {'diff': [1.4416999999999208e-05, 2.6804999999997803e-05, 2.2985999999999146e-05, 2.3042000000000895e-05, 2.4958000000002006e-05, 2.2055999999999465e-05, 2.1084000000001074e-05, 2.4915999999999827e-05...</msg>
<status status="PASS" starttime="20201029 18:16:29.037" endtime="20201029 18:16:29.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.045" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.044" endtime="20201029 18:16:29.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.047" level="INFO">VALUE: [1.4416999999999208e-05, 2.6804999999997803e-05, 2.2985999999999146e-05, 2.3042000000000895e-05, 2.4958000000002006e-05, 2.2055999999999465e-05, 2.1084000000001074e-05, 2.4915999999999827e-05, 2.2055999999999465e-05, 2.497300000000105e-05, 2.488899999999669e-05, 2.588900000000116e-05, 2.3013999999998286e-05, 2.3042000000000895e-05, 2.4958000000002006e-05, 2.2070000000002504e-05, 2.394500000000091e-05, 2.3028000000001325e-05, 2.3999999999999716e-05, 2.4957999999998537e-05, 2.012499999999931e-05, 2.5901999999997788e-05, 2.113899999999988e-05, 2.2999999999998716e-05, 2.2041999999999895e-05, 2.112500000000031e-05, 2.4958000000002006e-05, 2.3986000000000146e-05, 2.1070000000001504e-05, 2.2985999999999146e-05, 2.2014000000000755e-05, 2.590300000000073e-05, 2.5930000000000397e-05, 2.590300000000073e-05, 2.204100000000042e-05, 2.3054999999997522e-05, 2.3070000000000035e-05, 2.4014000000002755e-05, 2.6833000000000412e-05, 2.106899999999856e-05, 2.2985999999999146e-05, 2.206899999999956e-05, 2.3068999999997092e-05, 2.491700000000277e-05, 2.4012999999999812e-05, 2.3013999999998286e-05, 2.391700000000177e-05, 2.6833000000000412e-05, 2.491700000000277e-05, 2.3013999999998286e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.046" endtime="20201029 18:16:29.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.041" endtime="20201029 18:16:29.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.054" endtime="20201029 18:16:29.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.052" endtime="20201029 18:16:29.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.051" endtime="20201029 18:16:29.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.681" endtime="20201029 18:16:29.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.681" endtime="20201029 18:16:29.075"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.084" endtime="20201029 18:16:29.104"></status>
</kw>
<msg timestamp="20201029 18:16:29.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.082" endtime="20201029 18:16:29.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.106" endtime="20201029 18:16:29.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.108" endtime="20201029 18:16:29.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.079" endtime="20201029 18:16:29.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.077" endtime="20201029 18:16:29.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.118" endtime="20201029 18:16:29.405"></status>
</kw>
<msg timestamp="20201029 18:16:29.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.116" endtime="20201029 18:16:29.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023945667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.409" endtime="20201029 18:16:29.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.418" endtime="20201029 18:16:29.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.114" endtime="20201029 18:16:29.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.112" endtime="20201029 18:16:29.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.425" level="INFO">${RESULT} = [{'diff': 2.106899999999856e-05}, {'diff': 2.012500000000278e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.302700000000185e-05}, {'diff': 2.5860999999998552e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:29.421" endtime="20201029 18:16:29.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.430" level="INFO">${ACCURACY} = {'diff': [2.106899999999856e-05, 2.012500000000278e-05, 2.3027999999997856e-05, 2.3028000000001325e-05, 2.302700000000185e-05, 2.5860999999998552e-05, 2.3958000000001006e-05, 2.2028000000000325e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:29.426" endtime="20201029 18:16:29.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.435" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.434" endtime="20201029 18:16:29.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.437" level="INFO">VALUE: [2.106899999999856e-05, 2.012500000000278e-05, 2.3027999999997856e-05, 2.3028000000001325e-05, 2.302700000000185e-05, 2.5860999999998552e-05, 2.3958000000001006e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.486100000000102e-05, 2.113899999999988e-05, 2.590299999999726e-05, 2.013899999999888e-05, 2.5846999999998982e-05, 2.49169999999993e-05, 2.491700000000277e-05, 2.208299999999913e-05, 2.4958000000002006e-05, 2.3000000000002185e-05, 2.3972000000000576e-05, 2.5874999999998122e-05, 2.2055999999999465e-05, 2.311100000000274e-05, 2.111099999999727e-05, 2.3929999999998397e-05, 2.2986000000002615e-05, 2.1083999999997605e-05, 2.49169999999993e-05, 2.206899999999956e-05, 2.016699999999802e-05, 2.6790999999998233e-05, 2.013899999999888e-05, 2.3971999999997107e-05, 2.013900000000235e-05, 2.587500000000159e-05, 2.5860999999998552e-05, 2.59170000000003e-05, 2.0194000000001155e-05, 2.6820000000000316e-05, 2.1041999999998895e-05, 2.490299999999973e-05, 2.109700000000117e-05, 2.011099999999974e-05, 2.49169999999993e-05, 2.3027999999997856e-05, 2.590300000000073e-05, 2.486100000000102e-05, 2.4902000000000257e-05, 2.4915999999999827e-05, 2.2055999999999465e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.436" endtime="20201029 18:16:29.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.431" endtime="20201029 18:16:29.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.443" endtime="20201029 18:16:29.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.441" endtime="20201029 18:16:29.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.440" endtime="20201029 18:16:29.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.075" endtime="20201029 18:16:29.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.075" endtime="20201029 18:16:29.464"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.473" endtime="20201029 18:16:29.491"></status>
</kw>
<msg timestamp="20201029 18:16:29.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.471" endtime="20201029 18:16:29.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.493" endtime="20201029 18:16:29.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.495" endtime="20201029 18:16:29.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.468" endtime="20201029 18:16:29.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.466" endtime="20201029 18:16:29.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.505" endtime="20201029 18:16:29.792"></status>
</kw>
<msg timestamp="20201029 18:16:29.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.503" endtime="20201029 18:16:29.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.796" endtime="20201029 18:16:29.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.805" endtime="20201029 18:16:29.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.500" endtime="20201029 18:16:29.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.498" endtime="20201029 18:16:29.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.811" level="INFO">${RESULT} = [{'diff': 3.7388999999998784e-05}, {'diff': 2.0180000000001586e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.494500000000191e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.395899999999701e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:29.808" endtime="20201029 18:16:29.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.816" level="INFO">${ACCURACY} = {'diff': [3.7388999999998784e-05, 2.0180000000001586e-05, 2.590300000000073e-05, 2.494500000000191e-05, 2.490299999999973e-05, 2.395899999999701e-05, 2.5874999999998122e-05, 2.3957999999997537e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:29.813" endtime="20201029 18:16:29.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.821" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.819" endtime="20201029 18:16:29.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.823" level="INFO">VALUE: [3.7388999999998784e-05, 2.0180000000001586e-05, 2.590300000000073e-05, 2.494500000000191e-05, 2.490299999999973e-05, 2.395899999999701e-05, 2.5874999999998122e-05, 2.3957999999997537e-05, 2.206899999999956e-05, 2.6874999999999122e-05, 2.587500000000159e-05, 2.4915999999999827e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.490299999999973e-05, 2.2027999999996856e-05, 2.3013999999998286e-05, 2.2944000000000436e-05, 2.493099999999887e-05, 2.5846999999998982e-05, 2.111100000000074e-05, 2.016700000000149e-05, 2.2986000000002615e-05, 2.2999999999998716e-05, 2.5832999999999412e-05, 2.5846999999998982e-05, 2.3957999999997537e-05, 2.3014000000001755e-05, 2.1070000000001504e-05, 2.59170000000003e-05, 2.4860999999997552e-05, 2.488900000000016e-05, 2.202700000000085e-05, 2.3957999999997537e-05, 2.1027999999999325e-05, 2.3930000000001866e-05, 2.3013999999998286e-05, 2.5860999999998552e-05, 2.206899999999956e-05, 2.106900000000203e-05, 2.6847999999999456e-05, 2.491700000000277e-05, 2.205499999999999e-05, 2.5901999999997788e-05, 2.011099999999974e-05, 2.10830000000016e-05, 2.106899999999856e-05, 2.49169999999993e-05, 2.6819000000000842e-05, 2.1055999999998465e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.822" endtime="20201029 18:16:29.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.817" endtime="20201029 18:16:29.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.828" endtime="20201029 18:16:29.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.827" endtime="20201029 18:16:29.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.826" endtime="20201029 18:16:29.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.465" endtime="20201029 18:16:29.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.464" endtime="20201029 18:16:29.849"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.858" endtime="20201029 18:16:29.878"></status>
</kw>
<msg timestamp="20201029 18:16:29.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.857" endtime="20201029 18:16:29.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.879" endtime="20201029 18:16:29.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.882" endtime="20201029 18:16:29.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.854" endtime="20201029 18:16:29.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.852" endtime="20201029 18:16:29.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.891" endtime="20201029 18:16:30.184"></status>
</kw>
<msg timestamp="20201029 18:16:30.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.890" endtime="20201029 18:16:30.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.188" endtime="20201029 18:16:30.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.204" endtime="20201029 18:16:30.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.887" endtime="20201029 18:16:30.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.885" endtime="20201029 18:16:30.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.223" level="INFO">${RESULT} = [{'diff': 9.681000000000967e-06}, {'diff': 2.105500000000246e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.312499999999884e-05}, {'diff': 2.3068999999997092e-05}, {'diff': 2.4958000000002006e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:30.214" endtime="20201029 18:16:30.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.234" level="INFO">${ACCURACY} = {'diff': [9.681000000000967e-06, 2.105500000000246e-05, 2.2999999999998716e-05, 2.312499999999884e-05, 2.3068999999997092e-05, 2.4958000000002006e-05, 2.016699999999802e-05, 2.5860999999998552e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:30.226" endtime="20201029 18:16:30.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.247" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.244" endtime="20201029 18:16:30.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.254" level="INFO">VALUE: [9.681000000000967e-06, 2.105500000000246e-05, 2.2999999999998716e-05, 2.312499999999884e-05, 2.3068999999997092e-05, 2.4958000000002006e-05, 2.016699999999802e-05, 2.5860999999998552e-05, 2.3014000000001755e-05, 2.5014000000000286e-05, 2.3999999999999716e-05, 2.3000000000002185e-05, 2.0152000000002446e-05, 2.6792000000001176e-05, 2.586100000000202e-05, 2.593099999999987e-05, 2.4985999999997677e-05, 2.2999999999998716e-05, 2.5848000000001925e-05, 2.3028000000001325e-05, 2.4915999999999827e-05, 2.2986000000002615e-05, 2.584700000000245e-05, 2.3056000000000465e-05, 2.4943999999998967e-05, 2.2056000000002934e-05, 2.109700000000117e-05, 2.3000000000002185e-05, 2.302700000000185e-05, 2.4943999999998967e-05, 2.108299999999813e-05, 2.106900000000203e-05, 2.584700000000245e-05, 2.013899999999888e-05, 2.2027999999996856e-05, 2.015299999999845e-05, 2.0137999999999406e-05, 2.486100000000102e-05, 2.2999999999998716e-05, 2.011099999999974e-05, 2.49169999999993e-05, 2.018100000000106e-05, 2.487500000000059e-05, 2.5846999999998982e-05, 2.2971999999999576e-05, 2.4944000000002436e-05, 2.5916000000000827e-05, 2.5846999999998982e-05, 2.011099999999974e-05, 2.395900000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.251" endtime="20201029 18:16:30.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.236" endtime="20201029 18:16:30.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.270" endtime="20201029 18:16:30.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.265" endtime="20201029 18:16:30.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.262" endtime="20201029 18:16:30.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.850" endtime="20201029 18:16:30.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.850" endtime="20201029 18:16:30.296"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.314" endtime="20201029 18:16:30.336"></status>
</kw>
<msg timestamp="20201029 18:16:30.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.311" endtime="20201029 18:16:30.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.337" endtime="20201029 18:16:30.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.340" endtime="20201029 18:16:30.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.308" endtime="20201029 18:16:30.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.302" endtime="20201029 18:16:30.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.349" endtime="20201029 18:16:30.635"></status>
</kw>
<msg timestamp="20201029 18:16:30.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037222389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037254, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:30.348" endtime="20201029 18:16:30.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037222389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037254, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:30.639" endtime="20201029 18:16:30.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.647" endtime="20201029 18:16:30.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.345" endtime="20201029 18:16:30.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.343" endtime="20201029 18:16:30.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.654" level="INFO">${RESULT} = [{'diff': 3.161100000000083e-05}, {'diff': 2.4902000000000257e-05}, {'diff': 2.4902000000000257e-05}, {'diff': 2.111100000000421e-05}, {'diff': 2.3986000000003616e-05}, {'diff': 2.111100000000421e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:30.651" endtime="20201029 18:16:30.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.659" level="INFO">${ACCURACY} = {'diff': [3.161100000000083e-05, 2.4902000000000257e-05, 2.4902000000000257e-05, 2.111100000000421e-05, 2.3986000000003616e-05, 2.111100000000421e-05, 2.490300000000667e-05, 2.583300000000288e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 18:16:30.655" endtime="20201029 18:16:30.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.664" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.663" endtime="20201029 18:16:30.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.667" level="INFO">VALUE: [3.161100000000083e-05, 2.4902000000000257e-05, 2.4902000000000257e-05, 2.111100000000421e-05, 2.3986000000003616e-05, 2.111100000000421e-05, 2.490300000000667e-05, 2.583300000000288e-05, 2.486100000000102e-05, 2.109700000000464e-05, 2.3013999999994816e-05, 2.4958000000005476e-05, 2.686100000000302e-05, 2.011100000000321e-05, 2.488900000000016e-05, 2.2041999999999895e-05, 2.5832999999995943e-05, 2.3042000000000895e-05, 2.20969999999987e-05, 2.3056000000000465e-05, 2.2028000000000325e-05, 2.586100000000202e-05, 2.2986000000002615e-05, 2.5848000000001925e-05, 2.2000000000001185e-05, 2.4000000000003185e-05, 2.590300000000073e-05, 2.3000000000002185e-05, 2.6806000000004215e-05, 2.4985999999997677e-05, 2.2041999999999895e-05, 2.584700000000245e-05, 2.2028000000000325e-05, 2.681900000000431e-05, 2.106899999999856e-05, 2.684700000000345e-05, 2.20969999999987e-05, 2.3930000000005336e-05, 2.2944000000003906e-05, 2.3000000000002185e-05, 2.49169999999993e-05, 2.206899999999956e-05, 2.0166000000002016e-05, 2.493100000000581e-05, 2.2999999999995246e-05, 2.011099999999627e-05, 2.3000000000002185e-05, 2.6791999999997707e-05, 2.2972000000003046e-05, 2.306900000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.665" endtime="20201029 18:16:30.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.660" endtime="20201029 18:16:30.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.672" endtime="20201029 18:16:30.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.671" endtime="20201029 18:16:30.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.669" endtime="20201029 18:16:30.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.299" endtime="20201029 18:16:30.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.297" endtime="20201029 18:16:30.693"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.702" endtime="20201029 18:16:30.722"></status>
</kw>
<msg timestamp="20201029 18:16:30.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.700" endtime="20201029 18:16:30.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.724" endtime="20201029 18:16:30.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.726" endtime="20201029 18:16:30.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.698" endtime="20201029 18:16:30.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.696" endtime="20201029 18:16:30.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.736" endtime="20201029 18:16:31.024"></status>
</kw>
<msg timestamp="20201029 18:16:31.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02316, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:16:30.734" endtime="20201029 18:16:31.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02316, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:16:31.029" endtime="20201029 18:16:31.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.038" endtime="20201029 18:16:31.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.731" endtime="20201029 18:16:31.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.730" endtime="20201029 18:16:31.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.045" level="INFO">${RESULT} = [{'diff': 3.547200000000167e-05}, {'diff': 2.6819000000000842e-05}, {'diff': 2.297300000000252e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.2958000000000006e-05}, {'diff': 2.2958000000000006e-05...</msg>
<status status="PASS" starttime="20201029 18:16:31.042" endtime="20201029 18:16:31.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.049" level="INFO">${ACCURACY} = {'diff': [3.547200000000167e-05, 2.6819000000000842e-05, 2.297300000000252e-05, 2.5846999999998982e-05, 2.2958000000000006e-05, 2.2958000000000006e-05, 2.2985999999999146e-05, 2.3999999999999716e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:31.046" endtime="20201029 18:16:31.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.054" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.053" endtime="20201029 18:16:31.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.057" level="INFO">VALUE: [3.547200000000167e-05, 2.6819000000000842e-05, 2.297300000000252e-05, 2.5846999999998982e-05, 2.2958000000000006e-05, 2.2958000000000006e-05, 2.2985999999999146e-05, 2.3999999999999716e-05, 2.306900000000056e-05, 2.395900000000048e-05, 2.3027999999997856e-05, 2.493099999999887e-05, 2.2985999999999146e-05, 2.113899999999988e-05, 2.0165999999998546e-05, 2.2971999999999576e-05, 2.011099999999974e-05, 2.4943999999998967e-05, 2.3986000000000146e-05, 2.104099999999942e-05, 2.0055999999997465e-05, 2.5916000000000827e-05, 2.3999999999999716e-05, 2.2999999999998716e-05, 2.2069999999999035e-05, 2.1083999999997605e-05, 2.10830000000016e-05, 2.4957999999998537e-05, 2.2028000000000325e-05, 2.3028000000001325e-05, 2.4013999999999286e-05, 2.584700000000245e-05, 2.10969999999977e-05, 2.4957999999998537e-05, 2.2069999999999035e-05, 2.588899999999769e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.111099999999727e-05, 2.3027999999997856e-05, 2.3999999999999716e-05, 2.2028000000000325e-05, 2.6874999999999122e-05, 2.394500000000091e-05, 2.5874999999998122e-05, 2.3027999999997856e-05, 2.4944000000002436e-05, 2.49169999999993e-05, 2.2000000000001185e-05, 2.112500000000031e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.055" endtime="20201029 18:16:31.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.050" endtime="20201029 18:16:31.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.063" endtime="20201029 18:16:31.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.061" endtime="20201029 18:16:31.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.060" endtime="20201029 18:16:31.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.694" endtime="20201029 18:16:31.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.693" endtime="20201029 18:16:31.084"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.093" endtime="20201029 18:16:31.119"></status>
</kw>
<msg timestamp="20201029 18:16:31.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.091" endtime="20201029 18:16:31.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.120" endtime="20201029 18:16:31.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.123" endtime="20201029 18:16:31.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.089" endtime="20201029 18:16:31.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.087" endtime="20201029 18:16:31.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.133" endtime="20201029 18:16:31.418"></status>
</kw>
<msg timestamp="20201029 18:16:31.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029099403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029117667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.131" endtime="20201029 18:16:31.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029099403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029117667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.423" endtime="20201029 18:16:31.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.431" endtime="20201029 18:16:31.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.128" endtime="20201029 18:16:31.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.126" endtime="20201029 18:16:31.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.438" level="INFO">${RESULT} = [{'diff': 1.8264000000000474e-05}, {'diff': 2.394500000000091e-05}, {'diff': 2.391700000000177e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.106899999999856e-05}, {'diff': 2.395900000000048e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:31.435" endtime="20201029 18:16:31.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.442" level="INFO">${ACCURACY} = {'diff': [1.8264000000000474e-05, 2.394500000000091e-05, 2.391700000000177e-05, 2.204100000000042e-05, 2.106899999999856e-05, 2.395900000000048e-05, 2.3999999999999716e-05, 2.4985999999997677e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 18:16:31.439" endtime="20201029 18:16:31.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.447" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.446" endtime="20201029 18:16:31.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.449" level="INFO">VALUE: [1.8264000000000474e-05, 2.394500000000091e-05, 2.391700000000177e-05, 2.204100000000042e-05, 2.106899999999856e-05, 2.395900000000048e-05, 2.3999999999999716e-05, 2.4985999999997677e-05, 2.1098000000000644e-05, 2.2985999999999146e-05, 2.10969999999977e-05, 2.2041999999999895e-05, 2.112500000000031e-05, 2.2098000000001644e-05, 2.111100000000074e-05, 2.488900000000016e-05, 2.2028000000000325e-05, 2.2971999999999576e-05, 2.3971999999997107e-05, 2.4028000000002325e-05, 2.3930000000001866e-05, 2.3944000000001436e-05, 2.4986000000001146e-05, 2.113899999999988e-05, 2.108299999999813e-05, 2.3000000000002185e-05, 2.206899999999956e-05, 2.015299999999845e-05, 2.2971999999999576e-05, 2.491700000000277e-05, 2.3000000000002185e-05, 2.3957999999997537e-05, 2.2999999999998716e-05, 2.0165999999998546e-05, 2.109700000000117e-05, 2.488900000000016e-05, 2.301300000000228e-05, 2.3014000000001755e-05, 2.498700000000062e-05, 2.688900000000216e-05, 2.488900000000016e-05, 2.112499999999684e-05, 2.205499999999999e-05, 2.1138000000000406e-05, 2.590300000000073e-05, 2.111100000000074e-05, 2.10830000000016e-05, 2.487500000000059e-05, 2.1151999999999976e-05, 2.018100000000106e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.448" endtime="20201029 18:16:31.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.443" endtime="20201029 18:16:31.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.456" endtime="20201029 18:16:31.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.454" endtime="20201029 18:16:31.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.453" endtime="20201029 18:16:31.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.085" endtime="20201029 18:16:31.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.084" endtime="20201029 18:16:31.476"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.485" endtime="20201029 18:16:31.507"></status>
</kw>
<msg timestamp="20201029 18:16:31.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.484" endtime="20201029 18:16:31.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.508" endtime="20201029 18:16:31.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.511" endtime="20201029 18:16:31.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.481" endtime="20201029 18:16:31.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.479" endtime="20201029 18:16:31.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.520" endtime="20201029 18:16:31.806"></status>
</kw>
<msg timestamp="20201029 18:16:31.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023538764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.519" endtime="20201029 18:16:31.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023538764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.810" endtime="20201029 18:16:31.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.819" endtime="20201029 18:16:31.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.516" endtime="20201029 18:16:31.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.514" endtime="20201029 18:16:31.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.826" level="INFO">${RESULT} = [{'diff': 1.7306000000001653e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.4000000000003185e-05}, {'diff': 2.3041999999997426e-05}, {'diff': 2.4915999999999827e-05}, {'diff': 2.394500000000091e-05...</msg>
<status status="PASS" starttime="20201029 18:16:31.822" endtime="20201029 18:16:31.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.831" level="INFO">${ACCURACY} = {'diff': [1.7306000000001653e-05, 2.204100000000042e-05, 2.4000000000003185e-05, 2.3041999999997426e-05, 2.4915999999999827e-05, 2.394500000000091e-05, 2.016699999999802e-05, 2.305500000000099e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:31.827" endtime="20201029 18:16:31.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.836" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.835" endtime="20201029 18:16:31.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.838" level="INFO">VALUE: [1.7306000000001653e-05, 2.204100000000042e-05, 2.4000000000003185e-05, 2.3041999999997426e-05, 2.4915999999999827e-05, 2.394500000000091e-05, 2.016699999999802e-05, 2.305500000000099e-05, 2.208299999999913e-05, 2.3013999999998286e-05, 2.015299999999845e-05, 2.2055999999999465e-05, 2.4929999999999397e-05, 2.3000000000002185e-05, 2.20830000000026e-05, 2.3042000000000895e-05, 2.0084000000000074e-05, 2.488900000000016e-05, 2.111100000000074e-05, 2.4056000000001465e-05, 2.5833999999998886e-05, 2.205499999999999e-05, 2.2985999999999146e-05, 2.4972000000001576e-05, 2.4013999999999286e-05, 2.0235999999999865e-05, 2.111100000000074e-05, 2.112500000000031e-05, 2.587500000000159e-05, 2.298699999999862e-05, 2.5887999999998218e-05, 2.402700000000285e-05, 2.588899999999769e-05, 2.3000000000002185e-05, 2.49169999999993e-05, 2.3915999999998827e-05, 2.586100000000202e-05, 2.5848000000001925e-05, 2.5888000000001687e-05, 2.5999999999998247e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.395900000000048e-05, 2.4957999999998537e-05, 2.10969999999977e-05, 2.2028000000000325e-05, 2.4944000000002436e-05, 2.4902000000000257e-05, 2.4944000000002436e-05, 2.3042000000000895e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.837" endtime="20201029 18:16:31.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.832" endtime="20201029 18:16:31.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.843" endtime="20201029 18:16:31.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.842" endtime="20201029 18:16:31.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.841" endtime="20201029 18:16:31.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.477" endtime="20201029 18:16:31.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.477" endtime="20201029 18:16:31.864"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.873" endtime="20201029 18:16:31.894"></status>
</kw>
<msg timestamp="20201029 18:16:31.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.872" endtime="20201029 18:16:31.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.896" endtime="20201029 18:16:31.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.898" endtime="20201029 18:16:31.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.869" endtime="20201029 18:16:31.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.867" endtime="20201029 18:16:31.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.908" endtime="20201029 18:16:32.195"></status>
</kw>
<msg timestamp="20201029 18:16:32.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.906" endtime="20201029 18:16:32.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.200" endtime="20201029 18:16:32.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.208" endtime="20201029 18:16:32.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.904" endtime="20201029 18:16:32.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.902" endtime="20201029 18:16:32.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.215" level="INFO">${RESULT} = [{'diff': 1.4431000000002248e-05}, {'diff': 2.209700000000217e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.6749999999998997e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.584700000000245e-05...</msg>
<status status="PASS" starttime="20201029 18:16:32.211" endtime="20201029 18:16:32.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.219" level="INFO">${ACCURACY} = {'diff': [1.4431000000002248e-05, 2.209700000000217e-05, 2.3972000000000576e-05, 2.6749999999998997e-05, 2.5846999999998982e-05, 2.584700000000245e-05, 2.3958000000001006e-05, 2.2028000000000325e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:32.216" endtime="20201029 18:16:32.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.224" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.223" endtime="20201029 18:16:32.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.226" level="INFO">VALUE: [1.4431000000002248e-05, 2.209700000000217e-05, 2.3972000000000576e-05, 2.6749999999998997e-05, 2.5846999999998982e-05, 2.584700000000245e-05, 2.3958000000001006e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.211099999999827e-05, 2.304100000000142e-05, 2.49030000000032e-05, 2.487499999999712e-05, 2.015299999999845e-05, 2.2985999999999146e-05, 2.1041999999998895e-05, 2.2028000000000325e-05, 2.588899999999769e-05, 2.3971999999997107e-05, 2.490299999999973e-05, 2.10830000000016e-05, 2.5013999999996817e-05, 2.3041999999997426e-05, 2.1098000000000644e-05, 2.3929999999998397e-05, 2.204100000000042e-05, 2.2041999999999895e-05, 2.397300000000005e-05, 2.112499999999684e-05, 2.2028000000000325e-05, 2.2999999999998716e-05, 2.5846999999998982e-05, 2.587500000000159e-05, 2.115299999999945e-05, 2.208299999999913e-05, 2.3000000000002185e-05, 2.494499999999844e-05, 2.211099999999827e-05, 2.5888000000001687e-05, 2.3916000000002297e-05, 2.3014000000001755e-05, 2.0180000000001586e-05, 2.4014000000002755e-05, 2.6833000000000412e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.016699999999802e-05, 2.111100000000074e-05, 2.588900000000116e-05, 2.297299999999905e-05]</msg>
<status status="PASS" starttime="20201029 18:16:32.225" endtime="20201029 18:16:32.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.220" endtime="20201029 18:16:32.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.232" endtime="20201029 18:16:32.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.230" endtime="20201029 18:16:32.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.229" endtime="20201029 18:16:32.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.865" endtime="20201029 18:16:32.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.865" endtime="20201029 18:16:32.253"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.262" endtime="20201029 18:16:32.285"></status>
</kw>
<msg timestamp="20201029 18:16:32.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.260" endtime="20201029 18:16:32.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.286" endtime="20201029 18:16:32.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.289" endtime="20201029 18:16:32.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.257" endtime="20201029 18:16:32.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.255" endtime="20201029 18:16:32.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.300" endtime="20201029 18:16:32.587"></status>
</kw>
<msg timestamp="20201029 18:16:32.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026041194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026054653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.298" endtime="20201029 18:16:32.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026041194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026054653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.591" endtime="20201029 18:16:32.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.600" endtime="20201029 18:16:32.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.294" endtime="20201029 18:16:32.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.292" endtime="20201029 18:16:32.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.606" level="INFO">${RESULT} = [{'diff': 1.3459000000000387e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.5833999999998886e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.4943999999998967e-0...</msg>
<status status="PASS" starttime="20201029 18:16:32.603" endtime="20201029 18:16:32.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.611" level="INFO">${ACCURACY} = {'diff': [1.3459000000000387e-05, 2.016699999999802e-05, 2.2999999999998716e-05, 2.5833999999998886e-05, 2.2041999999999895e-05, 2.4943999999998967e-05, 2.20830000000026e-05, 2.49169999999993e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:16:32.607" endtime="20201029 18:16:32.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.615" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.614" endtime="20201029 18:16:32.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.618" level="INFO">VALUE: [1.3459000000000387e-05, 2.016699999999802e-05, 2.2999999999998716e-05, 2.5833999999998886e-05, 2.2041999999999895e-05, 2.4943999999998967e-05, 2.20830000000026e-05, 2.49169999999993e-05, 2.2028000000000325e-05, 2.590299999999726e-05, 2.5943999999999967e-05, 2.5860999999998552e-05, 2.3958000000001006e-05, 2.3944000000001436e-05, 2.3944000000001436e-05, 2.013899999999888e-05, 2.493099999999887e-05, 2.387499999999959e-05, 2.5874999999998122e-05, 2.290299999999773e-05, 2.3028000000001325e-05, 2.20830000000026e-05, 2.206899999999956e-05, 2.3944000000001436e-05, 2.488899999999669e-05, 2.2042000000003364e-05, 2.2958000000000006e-05, 2.112500000000031e-05, 2.213900000000088e-05, 2.3986000000000146e-05, 2.5777999999997137e-05, 2.5847999999998456e-05, 2.3012999999998812e-05, 2.5832999999999412e-05, 2.391700000000177e-05, 2.1055999999998465e-05, 2.112500000000031e-05, 2.2986000000002615e-05, 2.394499999999744e-05, 2.5860999999998552e-05, 2.6819000000000842e-05, 2.112499999999684e-05, 2.113899999999988e-05, 2.2055999999999465e-05, 2.5874999999998122e-05, 2.2013999999997286e-05, 2.3014000000001755e-05, 2.3042000000000895e-05, 2.3014000000001755e-05, 2.2986000000002615e-05]</msg>
<status status="PASS" starttime="20201029 18:16:32.617" endtime="20201029 18:16:32.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.612" endtime="20201029 18:16:32.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.624" endtime="20201029 18:16:32.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.623" endtime="20201029 18:16:32.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.621" endtime="20201029 18:16:32.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.254" endtime="20201029 18:16:32.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.253" endtime="20201029 18:16:32.645"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.654" endtime="20201029 18:16:32.677"></status>
</kw>
<msg timestamp="20201029 18:16:32.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.653" endtime="20201029 18:16:32.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.678" endtime="20201029 18:16:32.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.681" endtime="20201029 18:16:32.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.650" endtime="20201029 18:16:32.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.648" endtime="20201029 18:16:32.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.690" endtime="20201029 18:16:32.975"></status>
</kw>
<msg timestamp="20201029 18:16:32.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025456722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025481639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.688" endtime="20201029 18:16:32.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025456722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025481639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.979" endtime="20201029 18:16:32.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.988" endtime="20201029 18:16:32.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.686" endtime="20201029 18:16:32.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.684" endtime="20201029 18:16:32.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.995" level="INFO">${RESULT} = [{'diff': 2.49169999999993e-05}, {'diff': 2.011099999999974e-05}, {'diff': 2.2070000000002504e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.5916000000000827e-05}, {'diff': 2.111100000000074e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:32.991" endtime="20201029 18:16:32.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.000" level="INFO">${ACCURACY} = {'diff': [2.49169999999993e-05, 2.011099999999974e-05, 2.2070000000002504e-05, 2.3999999999999716e-05, 2.5916000000000827e-05, 2.111100000000074e-05, 2.204100000000042e-05, 2.2014000000000755e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 18:16:32.996" endtime="20201029 18:16:33.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.005" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.004" endtime="20201029 18:16:33.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.007" level="INFO">VALUE: [2.49169999999993e-05, 2.011099999999974e-05, 2.2070000000002504e-05, 2.3999999999999716e-05, 2.5916000000000827e-05, 2.111100000000074e-05, 2.204100000000042e-05, 2.2014000000000755e-05, 2.013900000000235e-05, 2.206899999999956e-05, 2.2000000000001185e-05, 2.2069999999999035e-05, 2.3971999999997107e-05, 2.590300000000073e-05, 2.3014000000001755e-05, 2.205499999999999e-05, 2.1098000000000644e-05, 2.5832999999999412e-05, 2.4027999999998856e-05, 2.112500000000031e-05, 2.395900000000048e-05, 2.490299999999973e-05, 2.113899999999988e-05, 2.59170000000003e-05, 2.4957999999998537e-05, 2.588900000000116e-05, 2.016700000000149e-05, 2.2055999999999465e-05, 2.2084000000002074e-05, 2.20969999999987e-05, 2.3986000000000146e-05, 2.0180000000001586e-05, 2.011099999999974e-05, 2.2985999999999146e-05, 2.583300000000288e-05, 2.6944000000000967e-05, 2.1055999999998465e-05, 2.3929999999998397e-05, 2.112500000000031e-05, 2.3999999999999716e-05, 2.1083999999997605e-05, 2.490299999999973e-05, 2.115299999999945e-05, 2.111100000000074e-05, 2.3958000000001006e-05, 2.5833999999998886e-05, 2.586100000000202e-05, 2.2985999999999146e-05, 2.113899999999988e-05, 2.494499999999844e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.006" endtime="20201029 18:16:33.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.001" endtime="20201029 18:16:33.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.017" endtime="20201029 18:16:33.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.015" endtime="20201029 18:16:33.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.014" endtime="20201029 18:16:33.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.646" endtime="20201029 18:16:33.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.645" endtime="20201029 18:16:33.038"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.047" endtime="20201029 18:16:33.070"></status>
</kw>
<msg timestamp="20201029 18:16:33.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.045" endtime="20201029 18:16:33.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.072" endtime="20201029 18:16:33.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.075" endtime="20201029 18:16:33.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.042" endtime="20201029 18:16:33.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.040" endtime="20201029 18:16:33.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.084" endtime="20201029 18:16:33.373"></status>
</kw>
<msg timestamp="20201029 18:16:33.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024816028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.083" endtime="20201029 18:16:33.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024816028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.377" endtime="20201029 18:16:33.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.386" endtime="20201029 18:16:33.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.080" endtime="20201029 18:16:33.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.078" endtime="20201029 18:16:33.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.393" level="INFO">${RESULT} = [{'diff': 3.830600000000184e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.4818999999998842e-05}, {'diff': 2.487500000000059e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:33.389" endtime="20201029 18:16:33.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.397" level="INFO">${ACCURACY} = {'diff': [3.830600000000184e-05, 2.204100000000042e-05, 2.590300000000073e-05, 2.488900000000016e-05, 2.4818999999998842e-05, 2.487500000000059e-05, 2.6819000000000842e-05, 2.3056000000000465e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 18:16:33.394" endtime="20201029 18:16:33.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.402" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.401" endtime="20201029 18:16:33.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.404" level="INFO">VALUE: [3.830600000000184e-05, 2.204100000000042e-05, 2.590300000000073e-05, 2.488900000000016e-05, 2.4818999999998842e-05, 2.487500000000059e-05, 2.6819000000000842e-05, 2.3056000000000465e-05, 2.490299999999973e-05, 2.304100000000142e-05, 2.397300000000005e-05, 2.588899999999769e-05, 2.49030000000032e-05, 2.1986000000001615e-05, 2.3943999999997967e-05, 2.2055999999999465e-05, 2.3070000000000035e-05, 2.2971999999999576e-05, 2.5820000000002785e-05, 2.012499999999931e-05, 2.0097999999999644e-05, 2.4014000000002755e-05, 2.59170000000003e-05, 2.202700000000085e-05, 2.012499999999931e-05, 2.111100000000074e-05, 2.3014000000001755e-05, 2.3000000000002185e-05, 2.490299999999973e-05, 2.494500000000191e-05, 2.0180000000001586e-05, 2.49169999999993e-05, 2.2069999999999035e-05, 2.6805000000001272e-05, 2.491700000000277e-05, 2.4972000000001576e-05, 2.5874999999998122e-05, 2.493100000000234e-05, 2.3929999999998397e-05, 2.591699999999683e-05, 2.206899999999956e-05, 2.2985999999999146e-05, 2.590300000000073e-05, 2.2028000000000325e-05, 2.5860999999998552e-05, 2.3040999999997952e-05, 2.112500000000031e-05, 2.393100000000134e-05, 2.109700000000117e-05, 2.393100000000134e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.403" endtime="20201029 18:16:33.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.398" endtime="20201029 18:16:33.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.410" endtime="20201029 18:16:33.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.408" endtime="20201029 18:16:33.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.407" endtime="20201029 18:16:33.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.039" endtime="20201029 18:16:33.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.038" endtime="20201029 18:16:33.430"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.440" endtime="20201029 18:16:33.460"></status>
</kw>
<msg timestamp="20201029 18:16:33.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.438" endtime="20201029 18:16:33.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.461" endtime="20201029 18:16:33.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.464" endtime="20201029 18:16:33.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.435" endtime="20201029 18:16:33.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.433" endtime="20201029 18:16:33.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.474" endtime="20201029 18:16:33.760"></status>
</kw>
<msg timestamp="20201029 18:16:33.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023876125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.472" endtime="20201029 18:16:33.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023876125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.764" endtime="20201029 18:16:33.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.773" endtime="20201029 18:16:33.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.469" endtime="20201029 18:16:33.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.467" endtime="20201029 18:16:33.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.780" level="INFO">${RESULT} = [{'diff': 3.8333000000001505e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.487499999999712e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.3929999999998397e-05}, {'diff': 2.0151999999998976e-05...</msg>
<status status="PASS" starttime="20201029 18:16:33.776" endtime="20201029 18:16:33.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.784" level="INFO">${ACCURACY} = {'diff': [3.8333000000001505e-05, 2.112500000000031e-05, 2.487499999999712e-05, 2.5846999999998982e-05, 2.3929999999998397e-05, 2.0151999999998976e-05, 2.687500000000259e-05, 2.5930000000000397e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:33.781" endtime="20201029 18:16:33.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.789" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.788" endtime="20201029 18:16:33.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.791" level="INFO">VALUE: [3.8333000000001505e-05, 2.112500000000031e-05, 2.487499999999712e-05, 2.5846999999998982e-05, 2.3929999999998397e-05, 2.0151999999998976e-05, 2.687500000000259e-05, 2.5930000000000397e-05, 2.312500000000231e-05, 2.211099999999827e-05, 2.593099999999987e-05, 2.1138000000000406e-05, 2.013899999999888e-05, 2.6792000000001176e-05, 2.012499999999931e-05, 2.30969999999997e-05, 2.2041999999999895e-05, 2.49030000000032e-05, 2.2944000000000436e-05, 2.208299999999913e-05, 2.588900000000116e-05, 2.3957999999997537e-05, 2.1056000000001934e-05, 2.3986000000000146e-05, 2.3056000000000465e-05, 2.5916000000000827e-05, 2.2055999999999465e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.10969999999977e-05, 2.206900000000303e-05, 2.2041999999999895e-05, 2.298699999999862e-05, 2.4055999999997996e-05, 2.4000000000003185e-05, 2.204100000000042e-05, 2.587500000000159e-05, 2.2985999999999146e-05, 2.109700000000117e-05, 2.106899999999856e-05, 2.115299999999945e-05, 2.5778000000000606e-05, 2.3972000000000576e-05, 2.488900000000016e-05, 2.112500000000031e-05, 2.39169999999983e-05, 2.3012999999998812e-05, 2.111100000000074e-05, 2.208299999999913e-05, 2.109700000000117e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.790" endtime="20201029 18:16:33.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.785" endtime="20201029 18:16:33.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.798" endtime="20201029 18:16:33.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.796" endtime="20201029 18:16:33.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.795" endtime="20201029 18:16:33.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.431" endtime="20201029 18:16:33.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.431" endtime="20201029 18:16:33.818"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.828" endtime="20201029 18:16:33.848"></status>
</kw>
<msg timestamp="20201029 18:16:33.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.826" endtime="20201029 18:16:33.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.849" endtime="20201029 18:16:33.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.852" endtime="20201029 18:16:33.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.823" endtime="20201029 18:16:33.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.821" endtime="20201029 18:16:33.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.861" endtime="20201029 18:16:34.148"></status>
</kw>
<msg timestamp="20201029 18:16:34.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.860" endtime="20201029 18:16:34.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.152" endtime="20201029 18:16:34.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.161" endtime="20201029 18:16:34.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.857" endtime="20201029 18:16:34.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.855" endtime="20201029 18:16:34.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.168" level="INFO">${RESULT} = [{'diff': 1.0513000000000189e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.4957999999998537e-05}, {'diff': 2.3054999999997522e-05}, {'diff': 2.4972000000001576e-0...</msg>
<status status="PASS" starttime="20201029 18:16:34.164" endtime="20201029 18:16:34.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.173" level="INFO">${ACCURACY} = {'diff': [1.0513000000000189e-05, 2.2999999999998716e-05, 2.206899999999956e-05, 2.4957999999998537e-05, 2.3054999999997522e-05, 2.4972000000001576e-05, 2.2985999999999146e-05, 2.4862000000000495e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:34.169" endtime="20201029 18:16:34.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.178" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.177" endtime="20201029 18:16:34.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.180" level="INFO">VALUE: [1.0513000000000189e-05, 2.2999999999998716e-05, 2.206899999999956e-05, 2.4957999999998537e-05, 2.3054999999997522e-05, 2.4972000000001576e-05, 2.2985999999999146e-05, 2.4862000000000495e-05, 2.0151999999998976e-05, 2.308300000000013e-05, 2.4013999999999286e-05, 2.3944000000001436e-05, 2.4929999999999397e-05, 2.111100000000074e-05, 2.4027999999998856e-05, 2.016700000000149e-05, 2.6806000000000746e-05, 2.2014000000000755e-05, 2.6944000000000967e-05, 2.498699999999715e-05, 2.3986000000000146e-05, 2.3028000000001325e-05, 2.2070000000002504e-05, 2.4915999999999827e-05, 2.3027999999997856e-05, 2.4012999999999812e-05, 2.3056000000000465e-05, 2.115299999999945e-05, 2.3958000000001006e-05, 2.2014000000000755e-05, 2.206900000000303e-05, 2.0166000000002016e-05, 2.5902000000001257e-05, 2.015299999999845e-05, 2.2028000000000325e-05, 2.394500000000091e-05, 2.5916000000000827e-05, 2.3999999999999716e-05, 2.2028000000000325e-05, 2.3986000000000146e-05, 2.2097999999998175e-05, 2.016699999999802e-05, 2.3958000000001006e-05, 2.10830000000016e-05, 2.593099999999987e-05, 2.211099999999827e-05, 2.3083999999999605e-05, 2.3056000000000465e-05, 2.0193999999997686e-05, 2.3943999999997967e-05]</msg>
<status status="PASS" starttime="20201029 18:16:34.179" endtime="20201029 18:16:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.174" endtime="20201029 18:16:34.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.185" endtime="20201029 18:16:34.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.184" endtime="20201029 18:16:34.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.183" endtime="20201029 18:16:34.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.819" endtime="20201029 18:16:34.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.819" endtime="20201029 18:16:34.206"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.216" endtime="20201029 18:16:34.234"></status>
</kw>
<msg timestamp="20201029 18:16:34.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.214" endtime="20201029 18:16:34.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.236" endtime="20201029 18:16:34.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.238" endtime="20201029 18:16:34.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.211" endtime="20201029 18:16:34.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.209" endtime="20201029 18:16:34.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.248" endtime="20201029 18:16:34.535"></status>
</kw>
<msg timestamp="20201029 18:16:34.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.246" endtime="20201029 18:16:34.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.539" endtime="20201029 18:16:34.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.547" endtime="20201029 18:16:34.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.244" endtime="20201029 18:16:34.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.242" endtime="20201029 18:16:34.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.554" level="INFO">${RESULT} = [{'diff': 2.588899999999769e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.4957999999998537e-05}, {'diff': 2.3944000000001436e-05...</msg>
<status status="PASS" starttime="20201029 18:16:34.551" endtime="20201029 18:16:34.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.559" level="INFO">${ACCURACY} = {'diff': [2.588899999999769e-05, 2.2971999999999576e-05, 2.3000000000002185e-05, 2.208299999999913e-05, 2.4957999999998537e-05, 2.3944000000001436e-05, 2.1986000000001615e-05, 2.5846999999998982e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:34.555" endtime="20201029 18:16:34.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.563" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.562" endtime="20201029 18:16:34.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.566" level="INFO">VALUE: [2.588899999999769e-05, 2.2971999999999576e-05, 2.3000000000002185e-05, 2.208299999999913e-05, 2.4957999999998537e-05, 2.3944000000001436e-05, 2.1986000000001615e-05, 2.5846999999998982e-05, 2.2999999999998716e-05, 2.4012999999999812e-05, 2.1070000000001504e-05, 2.3014000000001755e-05, 2.2028000000000325e-05, 2.59170000000003e-05, 2.4957999999998537e-05, 2.1069999999998035e-05, 2.5846999999998982e-05, 2.013899999999888e-05, 2.6790999999998233e-05, 2.4943999999998967e-05, 2.012499999999931e-05, 2.5916000000000827e-05, 2.3972000000000576e-05, 2.3972000000000576e-05, 2.106899999999856e-05, 2.011099999999974e-05, 2.109700000000117e-05, 2.3972000000000576e-05, 2.013899999999888e-05, 2.590300000000073e-05, 2.6846999999999982e-05, 2.109700000000117e-05, 2.298700000000209e-05, 2.205499999999999e-05, 2.106899999999856e-05, 2.3013999999998286e-05, 2.20830000000026e-05, 2.3986000000000146e-05, 2.2999999999998716e-05, 2.6820000000000316e-05, 2.112500000000031e-05, 2.5860999999998552e-05, 2.1084000000001074e-05, 2.5971999999999107e-05, 2.208299999999913e-05, 2.3999999999999716e-05, 2.2041999999999895e-05, 2.3056000000000465e-05, 2.112500000000031e-05, 2.108299999999813e-05]</msg>
<status status="PASS" starttime="20201029 18:16:34.565" endtime="20201029 18:16:34.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.560" endtime="20201029 18:16:34.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.571" endtime="20201029 18:16:34.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.570" endtime="20201029 18:16:34.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.568" endtime="20201029 18:16:34.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.207" endtime="20201029 18:16:34.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.207" endtime="20201029 18:16:34.592"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.601" endtime="20201029 18:16:34.626"></status>
</kw>
<msg timestamp="20201029 18:16:34.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.600" endtime="20201029 18:16:34.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.628" endtime="20201029 18:16:34.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.630" endtime="20201029 18:16:34.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.597" endtime="20201029 18:16:34.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.595" endtime="20201029 18:16:34.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.640" endtime="20201029 18:16:34.927"></status>
</kw>
<msg timestamp="20201029 18:16:34.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027559153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.638" endtime="20201029 18:16:34.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027524611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027559153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.931" endtime="20201029 18:16:34.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.940" endtime="20201029 18:16:34.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.635" endtime="20201029 18:16:34.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.634" endtime="20201029 18:16:34.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.947" level="INFO">${RESULT} = [{'diff': 3.454199999999852e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.3958000000001006e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.487500000000059e-05}, {'diff': 2.5957999999999537e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:34.943" endtime="20201029 18:16:34.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.951" level="INFO">${ACCURACY} = {'diff': [3.454199999999852e-05, 2.3999999999999716e-05, 2.3958000000001006e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.5957999999999537e-05, 2.5848000000001925e-05, 2.015299999999845e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:34.948" endtime="20201029 18:16:34.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.956" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.954" endtime="20201029 18:16:34.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.958" level="INFO">VALUE: [3.454199999999852e-05, 2.3999999999999716e-05, 2.3958000000001006e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.5957999999999537e-05, 2.5848000000001925e-05, 2.015299999999845e-05, 2.590300000000073e-05, 2.3972000000000576e-05, 2.3958000000001006e-05, 2.393100000000134e-05, 2.5874999999998122e-05, 2.011099999999974e-05, 2.304100000000142e-05, 2.593100000000334e-05, 2.6806000000000746e-05, 2.5819999999999316e-05, 2.312499999999884e-05, 2.5874999999998122e-05, 2.3972000000000576e-05, 2.495899999999801e-05, 2.0193999999997686e-05, 2.013899999999888e-05, 2.4957999999998537e-05, 2.4944000000002436e-05, 2.4986000000001146e-05, 2.1070000000001504e-05, 2.011100000000321e-05, 2.1098000000000644e-05, 2.3013999999998286e-05, 2.6860999999999552e-05, 2.1056000000001934e-05, 2.49169999999993e-05, 2.3986000000000146e-05, 2.6860999999999552e-05, 2.5846999999998982e-05, 2.10830000000016e-05, 2.3972000000000576e-05, 2.3986000000000146e-05, 2.113899999999988e-05, 2.3027999999997856e-05, 2.013900000000235e-05, 2.2014000000000755e-05, 2.4943999999998967e-05, 2.0112000000002683e-05, 2.4902000000000257e-05, 2.306900000000056e-05, 2.588900000000116e-05, 2.013899999999888e-05]</msg>
<status status="PASS" starttime="20201029 18:16:34.957" endtime="20201029 18:16:34.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.952" endtime="20201029 18:16:34.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.964" endtime="20201029 18:16:34.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.963" endtime="20201029 18:16:34.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.961" endtime="20201029 18:16:34.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.593" endtime="20201029 18:16:34.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.593" endtime="20201029 18:16:34.985"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.994" endtime="20201029 18:16:35.013"></status>
</kw>
<msg timestamp="20201029 18:16:35.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.992" endtime="20201029 18:16:35.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.015" endtime="20201029 18:16:35.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.017" endtime="20201029 18:16:35.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.990" endtime="20201029 18:16:35.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.988" endtime="20201029 18:16:35.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.027" endtime="20201029 18:16:35.323"></status>
</kw>
<msg timestamp="20201029 18:16:35.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.025" endtime="20201029 18:16:35.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.332" endtime="20201029 18:16:35.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.351" endtime="20201029 18:16:35.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.023" endtime="20201029 18:16:35.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.021" endtime="20201029 18:16:35.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.365" level="INFO">${RESULT} = [{'diff': 3.8276999999999756e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.2999999999998716e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:35.358" endtime="20201029 18:16:35.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.375" level="INFO">${ACCURACY} = {'diff': [3.8276999999999756e-05, 2.204100000000042e-05, 2.204100000000042e-05, 2.20969999999987e-05, 2.113899999999988e-05, 2.2999999999998716e-05, 2.5846999999998982e-05, 2.488900000000016e-05, 2.29...</msg>
<status status="PASS" starttime="20201029 18:16:35.367" endtime="20201029 18:16:35.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.384" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.382" endtime="20201029 18:16:35.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.386" level="INFO">VALUE: [3.8276999999999756e-05, 2.204100000000042e-05, 2.204100000000042e-05, 2.20969999999987e-05, 2.113899999999988e-05, 2.2999999999998716e-05, 2.5846999999998982e-05, 2.488900000000016e-05, 2.2999999999998716e-05, 2.005500000000146e-05, 2.391700000000177e-05, 2.3042000000000895e-05, 2.4943999999998967e-05, 2.391700000000177e-05, 2.106900000000203e-05, 2.112499999999684e-05, 2.4957999999998537e-05, 2.2971999999999576e-05, 2.115299999999945e-05, 2.2055999999999465e-05, 2.015299999999845e-05, 2.013899999999888e-05, 2.3958000000001006e-05, 2.490299999999973e-05, 2.586100000000202e-05, 2.687500000000259e-05, 2.3929999999998397e-05, 2.6888999999998692e-05, 2.113899999999988e-05, 2.2999999999998716e-05, 2.6820000000000316e-05, 2.0151999999998976e-05, 2.211100000000174e-05, 2.687500000000259e-05, 2.2055999999999465e-05, 2.5902000000001257e-05, 2.59170000000003e-05, 2.49169999999993e-05, 2.2041999999999895e-05, 2.39169999999983e-05, 2.208299999999913e-05, 2.2070000000002504e-05, 2.3944000000001436e-05, 2.3000000000002185e-05, 2.49169999999993e-05, 2.111100000000074e-05, 2.6833999999999886e-05, 2.2971999999999576e-05, 2.205499999999999e-05, 2.1027999999999325e-05]</msg>
<status status="PASS" starttime="20201029 18:16:35.385" endtime="20201029 18:16:35.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.377" endtime="20201029 18:16:35.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.391" endtime="20201029 18:16:35.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.390" endtime="20201029 18:16:35.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.389" endtime="20201029 18:16:35.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.986" endtime="20201029 18:16:35.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.985" endtime="20201029 18:16:35.412"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.420" endtime="20201029 18:16:35.439"></status>
</kw>
<msg timestamp="20201029 18:16:35.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.419" endtime="20201029 18:16:35.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.441" endtime="20201029 18:16:35.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.443" endtime="20201029 18:16:35.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.416" endtime="20201029 18:16:35.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.414" endtime="20201029 18:16:35.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.452" endtime="20201029 18:16:35.738"></status>
</kw>
<msg timestamp="20201029 18:16:35.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.451" endtime="20201029 18:16:35.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.743" endtime="20201029 18:16:35.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.751" endtime="20201029 18:16:35.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.448" endtime="20201029 18:16:35.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.447" endtime="20201029 18:16:35.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.757" level="INFO">${RESULT} = [{'diff': 2.5860999999998552e-05}, {'diff': 2.106899999999856e-05}, {'diff': 2.10830000000016e-05}, {'diff': 2.3944000000001436e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.6846999999999982e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:35.754" endtime="20201029 18:16:35.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.761" level="INFO">${ACCURACY} = {'diff': [2.5860999999998552e-05, 2.106899999999856e-05, 2.10830000000016e-05, 2.3944000000001436e-05, 2.3972000000000576e-05, 2.6846999999999982e-05, 2.2013999999997286e-05, 2.109700000000117e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:35.758" endtime="20201029 18:16:35.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.766" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.765" endtime="20201029 18:16:35.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.768" level="INFO">VALUE: [2.5860999999998552e-05, 2.106899999999856e-05, 2.10830000000016e-05, 2.3944000000001436e-05, 2.3972000000000576e-05, 2.6846999999999982e-05, 2.2013999999997286e-05, 2.109700000000117e-05, 2.3014000000001755e-05, 2.394500000000091e-05, 2.2986000000002615e-05, 2.395900000000048e-05, 2.112500000000031e-05, 2.012499999999931e-05, 2.106899999999856e-05, 2.491700000000277e-05, 2.586100000000202e-05, 2.6860999999999552e-05, 2.013899999999888e-05, 2.395899999999701e-05, 2.204100000000042e-05, 2.394500000000091e-05, 2.4943999999998967e-05, 2.2083999999998605e-05, 2.205499999999999e-05, 2.0137999999999406e-05, 2.3972000000000576e-05, 2.2041999999999895e-05, 2.011100000000321e-05, 2.493100000000234e-05, 2.3972000000000576e-05, 2.5874999999998122e-05, 2.20969999999987e-05, 2.112500000000031e-05, 2.488900000000016e-05, 2.394500000000091e-05, 2.49169999999993e-05, 2.205499999999999e-05, 2.3000000000002185e-05, 2.4902000000000257e-05, 2.016700000000149e-05, 2.308300000000013e-05, 2.3028000000001325e-05, 2.5874999999998122e-05, 2.0151999999998976e-05, 2.6874999999999122e-05, 2.305500000000099e-05, 2.5874999999998122e-05, 2.10969999999977e-05, 2.493099999999887e-05]</msg>
<status status="PASS" starttime="20201029 18:16:35.767" endtime="20201029 18:16:35.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.762" endtime="20201029 18:16:35.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.773" endtime="20201029 18:16:35.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.772" endtime="20201029 18:16:35.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.770" endtime="20201029 18:16:35.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.413" endtime="20201029 18:16:35.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.412" endtime="20201029 18:16:35.794"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.802" endtime="20201029 18:16:35.822"></status>
</kw>
<msg timestamp="20201029 18:16:35.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.801" endtime="20201029 18:16:35.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.824" endtime="20201029 18:16:35.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.826" endtime="20201029 18:16:35.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.798" endtime="20201029 18:16:35.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.796" endtime="20201029 18:16:35.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.835" endtime="20201029 18:16:36.121"></status>
</kw>
<msg timestamp="20201029 18:16:36.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021562083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.834" endtime="20201029 18:16:36.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021562083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.125" endtime="20201029 18:16:36.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.134" endtime="20201029 18:16:36.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.831" endtime="20201029 18:16:36.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.829" endtime="20201029 18:16:36.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.141" level="INFO">${RESULT} = [{'diff': 9.651999999998884e-06}, {'diff': 2.013899999999888e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.206900000000303e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.3014000000001755e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:36.137" endtime="20201029 18:16:36.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.145" level="INFO">${ACCURACY} = {'diff': [9.651999999998884e-06, 2.013899999999888e-05, 2.205499999999999e-05, 2.206900000000303e-05, 2.206899999999956e-05, 2.3014000000001755e-05, 2.2028000000000325e-05, 2.111100000000074e-05, 2.58...</msg>
<status status="PASS" starttime="20201029 18:16:36.142" endtime="20201029 18:16:36.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.151" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.149" endtime="20201029 18:16:36.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.154" level="INFO">VALUE: [9.651999999998884e-06, 2.013899999999888e-05, 2.205499999999999e-05, 2.206900000000303e-05, 2.206899999999956e-05, 2.3014000000001755e-05, 2.2028000000000325e-05, 2.111100000000074e-05, 2.5888000000001687e-05, 2.293099999999687e-05, 2.106899999999856e-05, 2.49169999999993e-05, 2.015299999999845e-05, 2.111100000000074e-05, 2.3999999999999716e-05, 2.5862000000001495e-05, 2.4929999999999397e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.5860999999998552e-05, 2.2041999999999895e-05, 2.588900000000116e-05, 2.593099999999987e-05, 2.2985999999999146e-05, 2.5846999999998982e-05, 2.3943999999997967e-05, 2.488900000000016e-05, 2.3930000000001866e-05, 2.5848000000001925e-05, 2.4957999999998537e-05, 2.112500000000031e-05, 2.1042000000002364e-05, 2.105499999999899e-05, 2.588900000000116e-05, 2.211100000000174e-05, 2.2999999999998716e-05, 2.488900000000016e-05, 2.494499999999844e-05, 2.4000000000003185e-05, 2.4832999999998412e-05, 2.3068999999997092e-05, 2.015299999999845e-05, 2.6805000000001272e-05, 2.4957999999998537e-05, 2.015300000000192e-05, 2.5846999999998982e-05, 2.488900000000016e-05, 2.0180000000001586e-05, 2.3957999999997537e-05, 2.587500000000159e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.152" endtime="20201029 18:16:36.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.146" endtime="20201029 18:16:36.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.160" endtime="20201029 18:16:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.158" endtime="20201029 18:16:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.157" endtime="20201029 18:16:36.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.795" endtime="20201029 18:16:36.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.794" endtime="20201029 18:16:36.181"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.190" endtime="20201029 18:16:36.210"></status>
</kw>
<msg timestamp="20201029 18:16:36.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.188" endtime="20201029 18:16:36.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.212" endtime="20201029 18:16:36.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.214" endtime="20201029 18:16:36.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.186" endtime="20201029 18:16:36.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.184" endtime="20201029 18:16:36.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.224" endtime="20201029 18:16:36.509"></status>
</kw>
<msg timestamp="20201029 18:16:36.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.222" endtime="20201029 18:16:36.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.513" endtime="20201029 18:16:36.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.521" endtime="20201029 18:16:36.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.219" endtime="20201029 18:16:36.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.218" endtime="20201029 18:16:36.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.528" level="INFO">${RESULT} = [{'diff': 1.638900000000207e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.013900000000235e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.6860999999999552e-05}, {'diff': 2.012500000000278e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:36.525" endtime="20201029 18:16:36.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.533" level="INFO">${ACCURACY} = {'diff': [1.638900000000207e-05, 2.2028000000000325e-05, 2.013900000000235e-05, 2.593099999999987e-05, 2.6860999999999552e-05, 2.012500000000278e-05, 2.3013999999998286e-05, 2.2986000000002615e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:36.529" endtime="20201029 18:16:36.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.537" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.536" endtime="20201029 18:16:36.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.540" level="INFO">VALUE: [1.638900000000207e-05, 2.2028000000000325e-05, 2.013900000000235e-05, 2.593099999999987e-05, 2.6860999999999552e-05, 2.012500000000278e-05, 2.3013999999998286e-05, 2.2986000000002615e-05, 2.208299999999913e-05, 2.49169999999993e-05, 2.5846999999998982e-05, 2.112499999999684e-05, 2.493100000000234e-05, 2.49169999999993e-05, 2.3986000000000146e-05, 2.393099999999787e-05, 2.488900000000016e-05, 2.10830000000016e-05, 2.6791999999997707e-05, 2.2986000000002615e-05, 2.204100000000042e-05, 2.2041999999999895e-05, 2.4958000000002006e-05, 2.011099999999974e-05, 2.588900000000116e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.206899999999956e-05, 2.59170000000003e-05, 2.6846999999999982e-05, 2.2986000000002615e-05, 2.3013999999998286e-05, 2.1041999999998895e-05, 2.1208000000001725e-05, 2.115299999999945e-05, 2.205499999999999e-05, 2.587500000000159e-05, 2.0111999999999214e-05, 2.2999999999998716e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.2055999999999465e-05, 2.3028000000001325e-05, 2.493100000000234e-05, 2.6874999999999122e-05, 2.108299999999813e-05, 2.6833000000000412e-05, 2.2013999999997286e-05, 2.206900000000303e-05, 2.5860999999998552e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.538" endtime="20201029 18:16:36.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.534" endtime="20201029 18:16:36.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.545" endtime="20201029 18:16:36.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.543" endtime="20201029 18:16:36.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.542" endtime="20201029 18:16:36.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.182" endtime="20201029 18:16:36.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.181" endtime="20201029 18:16:36.566"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.574" endtime="20201029 18:16:36.595"></status>
</kw>
<msg timestamp="20201029 18:16:36.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.573" endtime="20201029 18:16:36.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.597" endtime="20201029 18:16:36.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.599" endtime="20201029 18:16:36.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.570" endtime="20201029 18:16:36.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.568" endtime="20201029 18:16:36.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.608" endtime="20201029 18:16:36.915"></status>
</kw>
<msg timestamp="20201029 18:16:36.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023644875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023682208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.607" endtime="20201029 18:16:36.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023644875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023682208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.919" endtime="20201029 18:16:36.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.927" endtime="20201029 18:16:36.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.604" endtime="20201029 18:16:36.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.603" endtime="20201029 18:16:36.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.934" level="INFO">${RESULT} = [{'diff': 3.7333000000000505e-05}, {'diff': 2.688900000000216e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.5860999999998552e-05...</msg>
<status status="PASS" starttime="20201029 18:16:36.931" endtime="20201029 18:16:36.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.938" level="INFO">${ACCURACY} = {'diff': [3.7333000000000505e-05, 2.688900000000216e-05, 2.2069999999999035e-05, 2.2999999999998716e-05, 2.111100000000074e-05, 2.5860999999998552e-05, 2.3972000000000576e-05, 2.6792000000001176e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:36.935" endtime="20201029 18:16:36.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.942" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.941" endtime="20201029 18:16:36.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.945" level="INFO">VALUE: [3.7333000000000505e-05, 2.688900000000216e-05, 2.2069999999999035e-05, 2.2999999999998716e-05, 2.111100000000074e-05, 2.5860999999998552e-05, 2.3972000000000576e-05, 2.6792000000001176e-05, 2.395900000000048e-05, 2.00969999999967e-05, 2.394500000000091e-05, 2.012499999999931e-05, 2.013899999999888e-05, 2.5888000000001687e-05, 2.4957999999998537e-05, 2.4848000000000925e-05, 2.584700000000245e-05, 2.3999999999999716e-05, 2.59170000000003e-05, 2.490299999999973e-05, 2.5860999999998552e-05, 2.20969999999987e-05, 2.4013999999999286e-05, 2.490299999999973e-05, 2.2069999999999035e-05, 2.5804999999996803e-05, 2.587500000000159e-05, 2.394499999999744e-05, 2.6805000000001272e-05, 2.4888000000000687e-05, 2.3013999999998286e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.593099999999987e-05, 2.116699999999902e-05, 2.105499999999899e-05, 2.0111999999999214e-05, 2.015300000000192e-05, 2.5860999999998552e-05, 2.3999999999999716e-05, 2.2069999999999035e-05, 2.5860999999998552e-05, 2.013899999999888e-05, 2.4888000000000687e-05, 2.3000000000002185e-05, 2.2041999999999895e-05, 2.109700000000117e-05, 2.4943999999998967e-05, 2.113899999999988e-05, 2.5862000000001495e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.943" endtime="20201029 18:16:36.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.939" endtime="20201029 18:16:36.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.950" endtime="20201029 18:16:36.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.948" endtime="20201029 18:16:36.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.947" endtime="20201029 18:16:36.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.566" endtime="20201029 18:16:36.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.566" endtime="20201029 18:16:36.971"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.979" endtime="20201029 18:16:37.002"></status>
</kw>
<msg timestamp="20201029 18:16:37.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.978" endtime="20201029 18:16:37.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.004" endtime="20201029 18:16:37.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.006" endtime="20201029 18:16:37.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.975" endtime="20201029 18:16:37.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.973" endtime="20201029 18:16:37.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.015" endtime="20201029 18:16:37.307"></status>
</kw>
<msg timestamp="20201029 18:16:37.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025653528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025670792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.014" endtime="20201029 18:16:37.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025653528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025670792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.311" endtime="20201029 18:16:37.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.320" endtime="20201029 18:16:37.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.011" endtime="20201029 18:16:37.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.009" endtime="20201029 18:16:37.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.326" level="INFO">${RESULT} = [{'diff': 1.7264000000002944e-05}, {'diff': 2.4902000000000257e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.1070000000001504e-...</msg>
<status status="PASS" starttime="20201029 18:16:37.323" endtime="20201029 18:16:37.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:37.331" level="INFO">${ACCURACY} = {'diff': [1.7264000000002944e-05, 2.4902000000000257e-05, 2.5846999999998982e-05, 2.3972000000000576e-05, 2.5930000000000397e-05, 2.1070000000001504e-05, 2.487500000000059e-05, 2.015299999999845e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:37.328" endtime="20201029 18:16:37.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.336" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:16:37.334" endtime="20201029 18:16:37.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.338" level="INFO">VALUE: [1.7264000000002944e-05, 2.4902000000000257e-05, 2.5846999999998982e-05, 2.3972000000000576e-05, 2.5930000000000397e-05, 2.1070000000001504e-05, 2.487500000000059e-05, 2.015299999999845e-05, 2.1069999999998035e-05, 2.4929999999999397e-05, 2.590300000000073e-05, 2.4943999999998967e-05, 2.20969999999987e-05, 2.2055999999999465e-05, 2.395900000000048e-05, 2.108299999999813e-05, 2.013899999999888e-05, 2.4958000000002006e-05, 2.398700000000309e-05, 2.112500000000031e-05, 2.20969999999987e-05, 2.6791000000001702e-05, 2.588900000000116e-05, 2.2097999999998175e-05, 2.3986000000000146e-05, 2.3971999999997107e-05, 2.5874999999998122e-05, 2.2041999999999895e-05, 2.2971999999999576e-05, 2.108299999999813e-05, 2.4915999999999827e-05, 2.5930000000000397e-05, 2.1112000000000214e-05, 2.2958000000000006e-05, 2.106899999999856e-05, 2.590300000000073e-05, 2.488900000000016e-05, 2.011100000000321e-05, 2.490299999999973e-05, 2.10969999999977e-05, 2.113899999999988e-05, 2.6833000000000412e-05, 2.015299999999845e-05, 2.586100000000202e-05, 2.0166000000002016e-05, 2.6846999999999982e-05, 2.013899999999888e-05, 2.106900000000203e-05, 2.112500000000031e-05, 2.212499999999784e-05]</msg>
<status status="PASS" starttime="20201029 18:16:37.337" endtime="20201029 18:16:37.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.332" endtime="20201029 18:16:37.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.344" endtime="20201029 18:16:37.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.343" endtime="20201029 18:16:37.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.341" endtime="20201029 18:16:37.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.971" endtime="20201029 18:16:37.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.971" endtime="20201029 18:16:37.365"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.374" endtime="20201029 18:16:37.396"></status>
</kw>
<msg timestamp="20201029 18:16:37.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.373" endtime="20201029 18:16:37.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.398" endtime="20201029 18:16:37.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.400" endtime="20201029 18:16:37.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.370" endtime="20201029 18:16:37.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.368" endtime="20201029 18:16:37.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.410" endtime="20201029 18:16:37.710"></status>
</kw>
<msg timestamp="20201029 18:16:37.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.408" endtime="20201029 18:16:37.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.714" endtime="20201029 18:16:37.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.722" endtime="20201029 18:16:37.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.405" endtime="20201029 18:16:37.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.404" endtime="20201029 18:16:37.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.728" level="INFO">${RESULT} = [{'diff': 2.9721999999999388e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.5887999999998218e-05}, {'diff': 2.5833999999998886e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.0166000000002016e-0...</msg>
<status status="PASS" starttime="20201029 18:16:37.725" endtime="20201029 18:16:37.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:37.734" level="INFO">${ACCURACY} = {'diff': [2.9721999999999388e-05, 2.116699999999902e-05, 2.5887999999998218e-05, 2.5833999999998886e-05, 2.4943999999998967e-05, 2.0166000000002016e-05, 2.5833999999998886e-05, 2.5834000000002355e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:37.729" endtime="20201029 18:16:37.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.738" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:16:37.737" endtime="20201029 18:16:37.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.740" level="INFO">VALUE: [2.9721999999999388e-05, 2.116699999999902e-05, 2.5887999999998218e-05, 2.5833999999998886e-05, 2.4943999999998967e-05, 2.0166000000002016e-05, 2.5833999999998886e-05, 2.5834000000002355e-05, 2.4958000000002006e-05, 2.112500000000031e-05, 2.494500000000191e-05, 2.3999999999999716e-05, 2.391700000000177e-05, 2.2013999999997286e-05, 2.3930000000001866e-05, 2.012500000000278e-05, 2.20969999999987e-05, 2.3013999999998286e-05, 2.204100000000042e-05, 2.011099999999974e-05, 2.6820000000000316e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.2014000000000755e-05, 2.3000000000002185e-05, 2.3013999999998286e-05, 2.1985999999998146e-05, 2.106899999999856e-05, 2.3972000000000576e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.2958000000000006e-05, 2.391700000000177e-05, 2.593099999999987e-05, 2.1111999999996744e-05, 2.0180000000001586e-05, 2.2971999999999576e-05, 2.011099999999974e-05, 2.49169999999993e-05, 2.494500000000191e-05, 2.6860999999999552e-05, 2.3999999999999716e-05, 2.112500000000031e-05, 2.3999999999999716e-05, 2.2055999999999465e-05, 2.2028000000000325e-05, 2.590300000000073e-05, 2.013899999999888e-05, 2.49169999999993e-05, 2.387499999999959e-05]</msg>
<status status="PASS" starttime="20201029 18:16:37.739" endtime="20201029 18:16:37.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.734" endtime="20201029 18:16:37.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.745" endtime="20201029 18:16:37.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.744" endtime="20201029 18:16:37.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.743" endtime="20201029 18:16:37.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.366" endtime="20201029 18:16:37.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.366" endtime="20201029 18:16:37.766"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.775" endtime="20201029 18:16:37.796"></status>
</kw>
<msg timestamp="20201029 18:16:37.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.773" endtime="20201029 18:16:37.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.798" endtime="20201029 18:16:37.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.800" endtime="20201029 18:16:37.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.771" endtime="20201029 18:16:37.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.769" endtime="20201029 18:16:37.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.809" endtime="20201029 18:16:38.096"></status>
</kw>
<msg timestamp="20201029 18:16:38.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023826861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023850778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.808" endtime="20201029 18:16:38.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023826861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023850778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.100" endtime="20201029 18:16:38.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.109" endtime="20201029 18:16:38.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.805" endtime="20201029 18:16:38.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.804" endtime="20201029 18:16:38.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.115" level="INFO">${RESULT} = [{'diff': 2.39169999999983e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.3014000000001755e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.1055999999998465e-05}, {'diff': 2.011100000000321e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:38.112" endtime="20201029 18:16:38.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.119" level="INFO">${ACCURACY} = {'diff': [2.39169999999983e-05, 2.490299999999973e-05, 2.3014000000001755e-05, 2.3013999999998286e-05, 2.1055999999998465e-05, 2.011100000000321e-05, 2.3999999999999716e-05, 2.4000000000003185e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:38.116" endtime="20201029 18:16:38.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.124" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.123" endtime="20201029 18:16:38.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.126" level="INFO">VALUE: [2.39169999999983e-05, 2.490299999999973e-05, 2.3014000000001755e-05, 2.3013999999998286e-05, 2.1055999999998465e-05, 2.011100000000321e-05, 2.3999999999999716e-05, 2.4000000000003185e-05, 2.2041999999999895e-05, 2.6806000000000746e-05, 2.3028000000001325e-05, 2.112500000000031e-05, 2.106899999999856e-05, 2.5860999999998552e-05, 2.0151999999998976e-05, 2.305500000000099e-05, 2.10830000000016e-05, 2.3957999999997537e-05, 2.109700000000117e-05, 2.3054999999997522e-05, 2.2028000000000325e-05, 2.5846999999998982e-05, 2.3986000000000146e-05, 2.4943999999998967e-05, 2.2971999999999576e-05, 2.5860999999998552e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.5861999999998025e-05, 2.59170000000003e-05, 2.3999999999999716e-05, 2.5846999999998982e-05, 2.3929999999998397e-05, 2.3027999999997856e-05, 2.2084000000002074e-05, 2.0180000000001586e-05, 2.006900000000103e-05, 2.6860999999999552e-05, 2.3986000000000146e-05, 2.2985999999999146e-05, 2.5805999999999746e-05, 2.4985999999997677e-05, 2.5971999999999107e-05, 2.2999999999998716e-05, 2.3943999999997967e-05, 2.211099999999827e-05, 2.395900000000048e-05, 2.3042000000000895e-05, 2.011099999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.125" endtime="20201029 18:16:38.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.120" endtime="20201029 18:16:38.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.136" endtime="20201029 18:16:38.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.134" endtime="20201029 18:16:38.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.133" endtime="20201029 18:16:38.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.767" endtime="20201029 18:16:38.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.767" endtime="20201029 18:16:38.157"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.165" endtime="20201029 18:16:38.189"></status>
</kw>
<msg timestamp="20201029 18:16:38.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.164" endtime="20201029 18:16:38.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.190" endtime="20201029 18:16:38.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.193" endtime="20201029 18:16:38.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.161" endtime="20201029 18:16:38.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.159" endtime="20201029 18:16:38.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.202" endtime="20201029 18:16:38.488"></status>
</kw>
<msg timestamp="20201029 18:16:38.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025194375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.201" endtime="20201029 18:16:38.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025194375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025260417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.492" endtime="20201029 18:16:38.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.501" endtime="20201029 18:16:38.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.198" endtime="20201029 18:16:38.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.196" endtime="20201029 18:16:38.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.507" level="INFO">${RESULT} = [{'diff': 6.60419999999988e-05}, {'diff': 5.647300000000133e-05}, {'diff': 5.269500000000191e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.359799999999845e-05}, {'diff': 5.077699999999838e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:38.504" endtime="20201029 18:16:38.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.511" level="INFO">${ACCURACY} = {'diff': [6.60419999999988e-05, 5.647300000000133e-05, 5.269500000000191e-05, 5.262500000000059e-05, 5.359799999999845e-05, 5.077699999999838e-05, 5.2679999999999394e-05, 5.5527999999999134e-05, 5.652...</msg>
<status status="PASS" starttime="20201029 18:16:38.508" endtime="20201029 18:16:38.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.516" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.515" endtime="20201029 18:16:38.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.518" level="INFO">VALUE: [6.60419999999988e-05, 5.647300000000133e-05, 5.269500000000191e-05, 5.262500000000059e-05, 5.359799999999845e-05, 5.077699999999838e-05, 5.2679999999999394e-05, 5.5527999999999134e-05, 5.6528000000000134e-05, 5.169400000000143e-05, 5.1707999999997534e-05, 5.173600000000014e-05, 5.073600000000261e-05, 5.45280000000016e-05, 5.455599999999727e-05, 5.5527999999999134e-05, 5.6485999999997955e-05, 5.644500000000219e-05, 5.454200000000117e-05, 5.269400000000243e-05, 5.741700000000058e-05, 5.556999999999784e-05, 5.451299999999909e-05, 5.459799999999945e-05, 5.65549999999998e-05, 5.169500000000091e-05, 5.552699999999966e-05, 5.654100000000023e-05, 5.455600000000074e-05, 5.4527999999998134e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.1693999999997964e-05, 5.7485999999998955e-05, 5.261100000000102e-05, 5.554099999999923e-05, 5.6443999999999245e-05, 5.6500000000000994e-05, 5.072199999999957e-05, 5.6485999999997955e-05, 5.555600000000174e-05, 5.262500000000059e-05, 5.262500000000059e-05, 5.5513999999999564e-05, 5.6471999999998385e-05, 5.5499999999999994e-05, 5.641699999999958e-05, 5.458300000000041e-05, 5.6514000000000564e-05, 5.261100000000102e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.517" endtime="20201029 18:16:38.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.512" endtime="20201029 18:16:38.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.569" endtime="20201029 18:16:38.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.567" endtime="20201029 18:16:38.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.566" endtime="20201029 18:16:38.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.158" endtime="20201029 18:16:38.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.157" endtime="20201029 18:16:38.589"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.598" endtime="20201029 18:16:38.620"></status>
</kw>
<msg timestamp="20201029 18:16:38.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.596" endtime="20201029 18:16:38.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.622" endtime="20201029 18:16:38.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.624" endtime="20201029 18:16:38.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.594" endtime="20201029 18:16:38.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.592" endtime="20201029 18:16:38.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.634" endtime="20201029 18:16:38.919"></status>
</kw>
<msg timestamp="20201029 18:16:38.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024622986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.632" endtime="20201029 18:16:38.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024622986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.924" endtime="20201029 18:16:38.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.932" endtime="20201029 18:16:38.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.629" endtime="20201029 18:16:38.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.628" endtime="20201029 18:16:38.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.939" level="INFO">${RESULT} = [{'diff': 5.840300000000201e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.6457999999998815e-05}, {'diff': 5.54869999999999e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.1707999999997534e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:38.935" endtime="20201029 18:16:38.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.943" level="INFO">${ACCURACY} = {'diff': [5.840300000000201e-05, 5.5472000000000854e-05, 5.6457999999998815e-05, 5.54869999999999e-05, 5.354200000000017e-05, 5.1707999999997534e-05, 5.7457999999999815e-05, 5.5458000000001284e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:38.940" endtime="20201029 18:16:38.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.948" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.947" endtime="20201029 18:16:38.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.950" level="INFO">VALUE: [5.840300000000201e-05, 5.5472000000000854e-05, 5.6457999999998815e-05, 5.54869999999999e-05, 5.354200000000017e-05, 5.1707999999997534e-05, 5.7457999999999815e-05, 5.5458000000001284e-05, 5.358299999999941e-05, 5.458300000000041e-05, 5.5458000000001284e-05, 5.5472000000000854e-05, 5.355500000000027e-05, 5.7471999999999385e-05, 5.4499999999998994e-05, 5.265299999999973e-05, 5.452699999999866e-05, 5.5513999999999564e-05, 5.074999999999871e-05, 5.258300000000188e-05, 5.6541999999999704e-05, 5.0708e-05, 5.361099999999855e-05, 5.25409999999997e-05, 5.073600000000261e-05, 5.258299999999841e-05, 5.644499999999872e-05, 5.554200000000217e-05, 5.6471999999998385e-05, 5.1666000000002293e-05, 5.1708000000001e-05, 5.4513999999998564e-05, 5.173600000000014e-05, 5.4541999999997703e-05, 5.456900000000084e-05, 5.259699999999798e-05, 5.544499999999772e-05, 5.7513999999998094e-05, 5.5472000000000854e-05, 5.355599999999974e-05, 5.45280000000016e-05, 5.4499999999998994e-05, 5.268099999999887e-05, 5.35549999999968e-05, 5.263899999999669e-05, 5.269499999999844e-05, 5.261100000000102e-05, 5.541699999999858e-05, 5.362499999999812e-05, 5.5458000000001284e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.949" endtime="20201029 18:16:38.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.944" endtime="20201029 18:16:38.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.955" endtime="20201029 18:16:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.954" endtime="20201029 18:16:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.952" endtime="20201029 18:16:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.590" endtime="20201029 18:16:38.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.590" endtime="20201029 18:16:38.976"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.985" endtime="20201029 18:16:39.007"></status>
</kw>
<msg timestamp="20201029 18:16:39.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.983" endtime="20201029 18:16:39.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.009" endtime="20201029 18:16:39.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.011" endtime="20201029 18:16:39.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.980" endtime="20201029 18:16:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.978" endtime="20201029 18:16:39.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.020" endtime="20201029 18:16:39.306"></status>
</kw>
<msg timestamp="20201029 18:16:39.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024932444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.019" endtime="20201029 18:16:39.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024876917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024932444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.310" endtime="20201029 18:16:39.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.319" endtime="20201029 18:16:39.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.016" endtime="20201029 18:16:39.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.015" endtime="20201029 18:16:39.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.325" level="INFO">${RESULT} = [{'diff': 5.552700000000313e-05}, {'diff': 5.454200000000117e-05}, {'diff': 5.5485999999996954e-05}, {'diff': 5.0695000000003376e-05}, {'diff': 5.5513999999999564e-05}, {'diff': 5.6457999999998815e-05...</msg>
<status status="PASS" starttime="20201029 18:16:39.322" endtime="20201029 18:16:39.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.329" level="INFO">${ACCURACY} = {'diff': [5.552700000000313e-05, 5.454200000000117e-05, 5.5485999999996954e-05, 5.0695000000003376e-05, 5.5513999999999564e-05, 5.6457999999998815e-05, 5.35280000000006e-05, 5.165299999999873e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:16:39.326" endtime="20201029 18:16:39.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.334" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.333" endtime="20201029 18:16:39.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.337" level="INFO">VALUE: [5.552700000000313e-05, 5.454200000000117e-05, 5.5485999999996954e-05, 5.0695000000003376e-05, 5.5513999999999564e-05, 5.6457999999998815e-05, 5.35280000000006e-05, 5.165299999999873e-05, 5.6500000000000994e-05, 5.169500000000091e-05, 5.6429999999999675e-05, 5.454099999999823e-05, 5.1708000000001e-05, 5.451400000000203e-05, 5.640300000000001e-05, 5.6429999999999675e-05, 5.5527999999999134e-05, 5.168000000000186e-05, 5.356899999999984e-05, 5.172200000000057e-05, 5.6443999999999245e-05, 5.1708000000001e-05, 5.5513999999999564e-05, 5.259700000000145e-05, 5.456899999999737e-05, 5.166700000000177e-05, 5.640300000000001e-05, 5.4485999999999424e-05, 5.077799999999785e-05, 5.6471999999998385e-05, 5.641700000000305e-05, 5.6514000000000564e-05, 5.45410000000017e-05, 5.6471999999998385e-05, 5.5444000000001714e-05, 5.0708e-05, 5.26669999999993e-05, 5.45410000000017e-05, 5.259800000000092e-05, 5.457000000000031e-05, 5.6485999999997955e-05, 5.259700000000145e-05, 5.451300000000256e-05, 5.258299999999841e-05, 5.173600000000014e-05, 5.4527999999998134e-05, 5.066700000000077e-05, 5.64870000000009e-05, 5.1651999999999254e-05, 5.163899999999916e-05]</msg>
<status status="PASS" starttime="20201029 18:16:39.335" endtime="20201029 18:16:39.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.330" endtime="20201029 18:16:39.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.342" endtime="20201029 18:16:39.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.340" endtime="20201029 18:16:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.339" endtime="20201029 18:16:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.977" endtime="20201029 18:16:39.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.976" endtime="20201029 18:16:39.363"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.371" endtime="20201029 18:16:39.400"></status>
</kw>
<msg timestamp="20201029 18:16:39.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.370" endtime="20201029 18:16:39.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.401" endtime="20201029 18:16:39.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.404" endtime="20201029 18:16:39.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.367" endtime="20201029 18:16:39.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.365" endtime="20201029 18:16:39.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.413" endtime="20201029 18:16:39.699"></status>
</kw>
<msg timestamp="20201029 18:16:39.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025031236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.411" endtime="20201029 18:16:39.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025031236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.703" endtime="20201029 18:16:39.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.711" endtime="20201029 18:16:39.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.409" endtime="20201029 18:16:39.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.407" endtime="20201029 18:16:39.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.718" level="INFO">${RESULT} = [{'diff': 4.972199999999857e-05}, {'diff': 5.355500000000027e-05}, {'diff': 5.733299999999969e-05}, {'diff': 5.6485999999997955e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.074999999999871e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:39.715" endtime="20201029 18:16:39.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.723" level="INFO">${ACCURACY} = {'diff': [4.972199999999857e-05, 5.355500000000027e-05, 5.733299999999969e-05, 5.6485999999997955e-05, 5.5486000000000424e-05, 5.074999999999871e-05, 5.7513999999998094e-05, 5.069499999999991e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:16:39.719" endtime="20201029 18:16:39.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.727" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.726" endtime="20201029 18:16:39.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.730" level="INFO">VALUE: [4.972199999999857e-05, 5.355500000000027e-05, 5.733299999999969e-05, 5.6485999999997955e-05, 5.5486000000000424e-05, 5.074999999999871e-05, 5.7513999999998094e-05, 5.069499999999991e-05, 5.641699999999958e-05, 5.356899999999984e-05, 5.554200000000217e-05, 5.1666000000002293e-05, 5.069400000000043e-05, 5.358399999999888e-05, 5.363899999999769e-05, 5.1651999999999254e-05, 5.5541999999998704e-05, 5.545900000000076e-05, 5.452699999999866e-05, 5.461099999999955e-05, 5.066700000000077e-05, 5.541700000000205e-05, 5.170900000000048e-05, 5.16530000000022e-05, 5.6416000000000105e-05, 5.173600000000014e-05, 5.6402000000000535e-05, 5.554099999999923e-05, 5.358400000000235e-05, 5.161100000000002e-05, 5.452700000000213e-05, 5.359700000000245e-05, 5.162499999999959e-05, 5.456900000000084e-05, 5.2679999999999394e-05, 5.5458000000001284e-05, 5.076400000000175e-05, 5.6430000000003144e-05, 5.2638000000000684e-05, 5.543100000000162e-05, 5.1651999999999254e-05, 5.072199999999957e-05, 5.7443999999996775e-05, 5.069400000000043e-05, 5.261100000000102e-05, 5.2680000000002863e-05, 5.162499999999959e-05, 5.258300000000188e-05, 5.263900000000016e-05, 5.173600000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:16:39.728" endtime="20201029 18:16:39.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.724" endtime="20201029 18:16:39.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.735" endtime="20201029 18:16:39.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.733" endtime="20201029 18:16:39.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.732" endtime="20201029 18:16:39.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.364" endtime="20201029 18:16:39.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.363" endtime="20201029 18:16:39.756"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.764" endtime="20201029 18:16:39.787"></status>
</kw>
<msg timestamp="20201029 18:16:39.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.763" endtime="20201029 18:16:39.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.788" endtime="20201029 18:16:39.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.791" endtime="20201029 18:16:39.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.760" endtime="20201029 18:16:39.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.758" endtime="20201029 18:16:39.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.800" endtime="20201029 18:16:40.086"></status>
</kw>
<msg timestamp="20201029 18:16:40.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02388075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023938208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:39.798" endtime="20201029 18:16:40.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02388075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023938208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:40.090" endtime="20201029 18:16:40.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.098" endtime="20201029 18:16:40.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.796" endtime="20201029 18:16:40.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.794" endtime="20201029 18:16:40.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.105" level="INFO">${RESULT} = [{'diff': 5.7457999999999815e-05}, {'diff': 5.166700000000177e-05}, {'diff': 5.0708e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.358400000000235e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5...</msg>
<status status="PASS" starttime="20201029 18:16:40.101" endtime="20201029 18:16:40.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.109" level="INFO">${ACCURACY} = {'diff': [5.7457999999999815e-05, 5.166700000000177e-05, 5.0708e-05, 5.6472000000001854e-05, 5.358400000000235e-05, 5.163899999999916e-05, 5.455599999999727e-05, 5.455600000000074e-05, 5.3596999999998...</msg>
<status status="PASS" starttime="20201029 18:16:40.106" endtime="20201029 18:16:40.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.113" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.112" endtime="20201029 18:16:40.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.116" level="INFO">VALUE: [5.7457999999999815e-05, 5.166700000000177e-05, 5.0708e-05, 5.6472000000001854e-05, 5.358400000000235e-05, 5.163899999999916e-05, 5.455599999999727e-05, 5.455600000000074e-05, 5.359699999999898e-05, 5.455600000000074e-05, 5.261099999999755e-05, 5.362500000000159e-05, 5.259699999999798e-05, 5.644499999999872e-05, 5.644500000000219e-05, 5.269499999999844e-05, 5.644499999999872e-05, 5.361099999999855e-05, 5.358399999999888e-05, 5.162499999999959e-05, 5.458399999999988e-05, 5.262500000000059e-05, 5.16669999999983e-05, 5.456899999999737e-05, 5.554200000000217e-05, 5.257000000000178e-05, 5.7388000000001965e-05, 5.454099999999823e-05, 5.643099999999915e-05, 5.1651999999999254e-05, 5.1708000000001e-05, 5.5513999999999564e-05, 5.6429999999999675e-05, 5.26669999999993e-05, 5.073600000000261e-05, 5.269400000000243e-05, 5.168100000000134e-05, 5.6402000000000535e-05, 5.6416000000000105e-05, 5.265299999999973e-05, 5.356999999999931e-05, 5.073599999999914e-05, 5.5499999999999994e-05, 5.163900000000263e-05, 5.643100000000262e-05, 5.363899999999769e-05, 5.451400000000203e-05, 5.7387999999998496e-05, 5.554099999999923e-05, 5.16669999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:16:40.114" endtime="20201029 18:16:40.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.110" endtime="20201029 18:16:40.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.121" endtime="20201029 18:16:40.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.119" endtime="20201029 18:16:40.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.118" endtime="20201029 18:16:40.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.756" endtime="20201029 18:16:40.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.756" endtime="20201029 18:16:40.141"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.150" endtime="20201029 18:16:40.173"></status>
</kw>
<msg timestamp="20201029 18:16:40.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.148" endtime="20201029 18:16:40.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.175" endtime="20201029 18:16:40.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.177" endtime="20201029 18:16:40.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.146" endtime="20201029 18:16:40.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.144" endtime="20201029 18:16:40.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.186" endtime="20201029 18:16:40.471"></status>
</kw>
<msg timestamp="20201029 18:16:40.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024903917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02495275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:40.185" endtime="20201029 18:16:40.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024903917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02495275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:40.475" endtime="20201029 18:16:40.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.484" endtime="20201029 18:16:40.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.182" endtime="20201029 18:16:40.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.180" endtime="20201029 18:16:40.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.490" level="INFO">${RESULT} = [{'diff': 4.883299999999813e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.076399999999828e-05}, {'diff': 5.7486000000002424e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.5527999999999134e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:40.487" endtime="20201029 18:16:40.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.494" level="INFO">${ACCURACY} = {'diff': [4.883299999999813e-05, 5.261100000000102e-05, 5.076399999999828e-05, 5.7486000000002424e-05, 5.259700000000145e-05, 5.5527999999999134e-05, 5.459699999999998e-05, 5.174999999999971e-05, 5.45...</msg>
<status status="PASS" starttime="20201029 18:16:40.491" endtime="20201029 18:16:40.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.499" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.498" endtime="20201029 18:16:40.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.502" level="INFO">VALUE: [4.883299999999813e-05, 5.261100000000102e-05, 5.076399999999828e-05, 5.7486000000002424e-05, 5.259700000000145e-05, 5.5527999999999134e-05, 5.459699999999998e-05, 5.174999999999971e-05, 5.4513999999998564e-05, 5.1721999999997104e-05, 5.6457999999998815e-05, 5.176399999999928e-05, 5.2708000000002e-05, 5.363900000000116e-05, 5.259700000000145e-05, 5.457000000000031e-05, 5.45549999999978e-05, 5.547300000000033e-05, 5.177799999999885e-05, 5.4513999999998564e-05, 5.554200000000217e-05, 5.176400000000275e-05, 5.068100000000034e-05, 5.174999999999971e-05, 5.5555999999998273e-05, 5.258400000000135e-05, 5.654200000000317e-05, 5.25409999999997e-05, 5.082000000000003e-05, 5.162499999999959e-05, 5.557000000000131e-05, 5.463900000000216e-05, 5.161100000000002e-05, 5.2707999999998534e-05, 5.54869999999999e-05, 5.083300000000013e-05, 5.558300000000141e-05, 5.259699999999798e-05, 5.558400000000088e-05, 5.5458000000001284e-05, 5.365300000000073e-05, 5.259699999999798e-05, 5.643099999999915e-05, 5.458399999999988e-05, 5.159700000000045e-05, 5.461099999999955e-05, 5.066700000000077e-05, 5.363899999999769e-05, 5.5472000000000854e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201029 18:16:40.500" endtime="20201029 18:16:40.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.495" endtime="20201029 18:16:40.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.507" endtime="20201029 18:16:40.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.506" endtime="20201029 18:16:40.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.504" endtime="20201029 18:16:40.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.142" endtime="20201029 18:16:40.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.142" endtime="20201029 18:16:40.528"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.537" endtime="20201029 18:16:40.561"></status>
</kw>
<msg timestamp="20201029 18:16:40.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.535" endtime="20201029 18:16:40.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.562" endtime="20201029 18:16:40.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.565" endtime="20201029 18:16:40.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.532" endtime="20201029 18:16:40.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.530" endtime="20201029 18:16:40.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.574" endtime="20201029 18:16:40.860"></status>
</kw>
<msg timestamp="20201029 18:16:40.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025301389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025356792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.572" endtime="20201029 18:16:40.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025301389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025356792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.864" endtime="20201029 18:16:40.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.873" endtime="20201029 18:16:40.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.570" endtime="20201029 18:16:40.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.568" endtime="20201029 18:16:40.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.879" level="INFO">${RESULT} = [{'diff': 5.540299999999901e-05}, {'diff': 5.168099999999787e-05}, {'diff': 5.163900000000263e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.358299999999941e-05}, {'diff': 5.5513999999999564e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:40.876" endtime="20201029 18:16:40.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.884" level="INFO">${ACCURACY} = {'diff': [5.540299999999901e-05, 5.168099999999787e-05, 5.163900000000263e-05, 5.459699999999998e-05, 5.358299999999941e-05, 5.5513999999999564e-05, 5.162499999999959e-05, 5.3457999999999284e-05, 5.55...</msg>
<status status="PASS" starttime="20201029 18:16:40.880" endtime="20201029 18:16:40.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.889" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.888" endtime="20201029 18:16:40.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.891" level="INFO">VALUE: [5.540299999999901e-05, 5.168099999999787e-05, 5.163900000000263e-05, 5.459699999999998e-05, 5.358299999999941e-05, 5.5513999999999564e-05, 5.162499999999959e-05, 5.3457999999999284e-05, 5.5541999999998704e-05, 5.066700000000077e-05, 5.5486000000000424e-05, 5.363900000000116e-05, 5.069400000000043e-05, 5.457000000000031e-05, 5.4527999999998134e-05, 5.162499999999959e-05, 5.5541999999998704e-05, 5.173600000000014e-05, 5.26669999999993e-05, 5.5499999999999994e-05, 5.172200000000057e-05, 5.6416000000000105e-05, 5.368099999999987e-05, 5.358299999999941e-05, 5.544500000000119e-05, 5.459699999999998e-05, 5.163899999999916e-05, 5.544499999999772e-05, 5.744499999999972e-05, 5.643099999999915e-05, 5.5527999999999134e-05, 5.5485999999996954e-05, 5.359700000000245e-05, 5.7457999999999815e-05, 5.356899999999984e-05, 5.2693999999998964e-05, 5.262500000000059e-05, 5.256999999999831e-05, 5.162500000000306e-05, 5.356899999999984e-05, 5.162499999999959e-05, 5.643100000000262e-05, 5.5458000000001284e-05, 5.461099999999955e-05, 5.2637999999997215e-05, 5.35280000000006e-05, 5.258300000000188e-05, 5.556900000000184e-05, 5.06530000000012e-05, 5.461099999999955e-05]</msg>
<status status="PASS" starttime="20201029 18:16:40.890" endtime="20201029 18:16:40.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.885" endtime="20201029 18:16:40.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.896" endtime="20201029 18:16:40.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.895" endtime="20201029 18:16:40.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.894" endtime="20201029 18:16:40.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.529" endtime="20201029 18:16:40.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.528" endtime="20201029 18:16:40.917"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.926" endtime="20201029 18:16:40.947"></status>
</kw>
<msg timestamp="20201029 18:16:40.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.924" endtime="20201029 18:16:40.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.948" endtime="20201029 18:16:40.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.951" endtime="20201029 18:16:40.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.922" endtime="20201029 18:16:40.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.919" endtime="20201029 18:16:40.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.960" endtime="20201029 18:16:41.248"></status>
</kw>
<msg timestamp="20201029 18:16:41.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.958" endtime="20201029 18:16:41.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023124722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.252" endtime="20201029 18:16:41.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.260" endtime="20201029 18:16:41.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.956" endtime="20201029 18:16:41.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.954" endtime="20201029 18:16:41.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.267" level="INFO">${RESULT} = [{'diff': 4.1124999999999495e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5.270899999999801e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.641699999999958e-05}, {'diff': 5.3652000000001254e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:41.264" endtime="20201029 18:16:41.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.271" level="INFO">${ACCURACY} = {'diff': [4.1124999999999495e-05, 5.163899999999916e-05, 5.270899999999801e-05, 5.354200000000017e-05, 5.641699999999958e-05, 5.3652000000001254e-05, 5.5486000000000424e-05, 5.643100000000262e-05, 5.1...</msg>
<status status="PASS" starttime="20201029 18:16:41.268" endtime="20201029 18:16:41.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.276" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.275" endtime="20201029 18:16:41.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.278" level="INFO">VALUE: [4.1124999999999495e-05, 5.163899999999916e-05, 5.270899999999801e-05, 5.354200000000017e-05, 5.641699999999958e-05, 5.3652000000001254e-05, 5.5486000000000424e-05, 5.643100000000262e-05, 5.16530000000022e-05, 5.459699999999998e-05, 5.545900000000076e-05, 5.262499999999712e-05, 5.7430000000000675e-05, 5.462499999999912e-05, 5.5471999999997385e-05, 5.065299999999773e-05, 5.361100000000202e-05, 5.4513999999998564e-05, 5.538899999999944e-05, 5.082000000000003e-05, 5.166700000000177e-05, 5.258300000000188e-05, 5.4499999999998994e-05, 5.068100000000034e-05, 5.638899999999697e-05, 5.162499999999959e-05, 5.448600000000289e-05, 5.5457999999997815e-05, 5.556899999999837e-05, 5.163899999999916e-05, 5.357000000000278e-05, 5.547300000000033e-05, 5.643099999999915e-05, 5.080600000000046e-05, 5.7388000000001965e-05, 5.259699999999798e-05, 5.545900000000076e-05, 5.356999999999931e-05, 5.354200000000017e-05, 5.451400000000203e-05, 5.462499999999912e-05, 5.162499999999959e-05, 5.0708e-05, 5.269500000000191e-05, 5.163899999999916e-05, 5.165299999999873e-05, 5.556900000000184e-05, 5.163899999999916e-05, 5.183300000000113e-05, 5.5485999999996954e-05]</msg>
<status status="PASS" starttime="20201029 18:16:41.277" endtime="20201029 18:16:41.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.272" endtime="20201029 18:16:41.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.283" endtime="20201029 18:16:41.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.282" endtime="20201029 18:16:41.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.280" endtime="20201029 18:16:41.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.918" endtime="20201029 18:16:41.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.917" endtime="20201029 18:16:41.304"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.313" endtime="20201029 18:16:41.333"></status>
</kw>
<msg timestamp="20201029 18:16:41.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.311" endtime="20201029 18:16:41.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.335" endtime="20201029 18:16:41.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.337" endtime="20201029 18:16:41.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.308" endtime="20201029 18:16:41.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.306" endtime="20201029 18:16:41.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.347" endtime="20201029 18:16:41.631"></status>
</kw>
<msg timestamp="20201029 18:16:41.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02300125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:41.345" endtime="20201029 18:16:41.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02300125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:41.636" endtime="20201029 18:16:41.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.644" endtime="20201029 18:16:41.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.342" endtime="20201029 18:16:41.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.341" endtime="20201029 18:16:41.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.650" level="INFO">${RESULT} = [{'diff': 4.9707999999999e-05}, {'diff': 5.079099999999795e-05}, {'diff': 5.451400000000203e-05}, {'diff': 5.269499999999844e-05}, {'diff': 5.258299999999841e-05}, {'diff': 4.983299999999913e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:41.647" endtime="20201029 18:16:41.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.655" level="INFO">${ACCURACY} = {'diff': [4.9707999999999e-05, 5.079099999999795e-05, 5.451400000000203e-05, 5.269499999999844e-05, 5.258299999999841e-05, 4.983299999999913e-05, 5.277799999999985e-05, 5.258299999999841e-05, 5.638900...</msg>
<status status="PASS" starttime="20201029 18:16:41.651" endtime="20201029 18:16:41.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.659" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.658" endtime="20201029 18:16:41.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.662" level="INFO">VALUE: [4.9707999999999e-05, 5.079099999999795e-05, 5.451400000000203e-05, 5.269499999999844e-05, 5.258299999999841e-05, 4.983299999999913e-05, 5.277799999999985e-05, 5.258299999999841e-05, 5.638900000000044e-05, 5.6486000000001424e-05, 5.262499999999712e-05, 5.5444000000001714e-05, 5.555600000000174e-05, 5.163899999999916e-05, 5.069499999999991e-05, 5.173600000000014e-05, 5.5472000000000854e-05, 5.461099999999955e-05, 5.259700000000145e-05, 5.268099999999887e-05, 5.355599999999974e-05, 5.2665999999999824e-05, 5.640300000000001e-05, 5.258399999999788e-05, 5.461099999999955e-05, 5.541699999999858e-05, 5.35280000000006e-05, 5.4513999999998564e-05, 5.075000000000218e-05, 5.545900000000076e-05, 5.461099999999955e-05, 5.168000000000186e-05, 5.4471999999999854e-05, 5.462499999999912e-05, 5.162499999999959e-05, 5.163900000000263e-05, 5.461100000000302e-05, 5.35280000000006e-05, 5.358300000000288e-05, 5.170900000000048e-05, 5.44869999999989e-05, 5.158300000000088e-05, 5.6486000000001424e-05, 5.455600000000074e-05, 5.2693999999998964e-05, 5.6444000000002714e-05, 5.163899999999916e-05, 5.455600000000074e-05, 5.354099999999723e-05, 5.4513999999998564e-05]</msg>
<status status="PASS" starttime="20201029 18:16:41.660" endtime="20201029 18:16:41.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.656" endtime="20201029 18:16:41.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.667" endtime="20201029 18:16:41.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.666" endtime="20201029 18:16:41.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.665" endtime="20201029 18:16:41.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.305" endtime="20201029 18:16:41.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.304" endtime="20201029 18:16:41.688"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.697" endtime="20201029 18:16:41.718"></status>
</kw>
<msg timestamp="20201029 18:16:41.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.695" endtime="20201029 18:16:41.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.719" endtime="20201029 18:16:41.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.722" endtime="20201029 18:16:41.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.693" endtime="20201029 18:16:41.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.690" endtime="20201029 18:16:41.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.731" endtime="20201029 18:16:42.045"></status>
</kw>
<msg timestamp="20201029 18:16:42.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020577764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:41.729" endtime="20201029 18:16:42.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020577764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:42.053" endtime="20201029 18:16:42.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.061" endtime="20201029 18:16:42.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.727" endtime="20201029 18:16:42.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.725" endtime="20201029 18:16:42.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.068" level="INFO">${RESULT} = [{'diff': 3.923600000000152e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.258299999999841e-05}, {'diff': 5.173600000000014e-05}, {'diff': 5.070899999999948e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:42.065" endtime="20201029 18:16:42.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.075" level="INFO">${ACCURACY} = {'diff': [3.923600000000152e-05, 5.459699999999998e-05, 5.459699999999998e-05, 5.258299999999841e-05, 5.173600000000014e-05, 5.070899999999948e-05, 5.451400000000203e-05, 5.1651999999999254e-05, 5.276...</msg>
<status status="PASS" starttime="20201029 18:16:42.069" endtime="20201029 18:16:42.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.080" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.079" endtime="20201029 18:16:42.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.083" level="INFO">VALUE: [3.923600000000152e-05, 5.459699999999998e-05, 5.459699999999998e-05, 5.258299999999841e-05, 5.173600000000014e-05, 5.070899999999948e-05, 5.451400000000203e-05, 5.1651999999999254e-05, 5.276400000000028e-05, 5.261099999999755e-05, 5.2679999999999394e-05, 5.5472000000000854e-05, 5.55549999999988e-05, 4.987500000000131e-05, 5.361099999999855e-05, 5.1637999999999684e-05, 5.5443999999998245e-05, 5.358299999999941e-05, 5.448600000000289e-05, 5.55549999999988e-05, 5.358299999999941e-05, 5.355500000000027e-05, 5.651299999999762e-05, 5.6485999999997955e-05, 5.176400000000275e-05, 5.557000000000131e-05, 5.6416000000000105e-05, 5.5541999999998704e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.5541999999998704e-05, 5.166700000000177e-05, 5.461100000000302e-05, 5.258400000000135e-05, 5.5430000000002144e-05, 5.363900000000116e-05, 5.352699999999766e-05, 5.1652000000002724e-05, 5.077699999999838e-05, 5.462500000000259e-05, 5.070899999999948e-05, 5.163900000000263e-05, 5.355599999999974e-05, 5.258299999999841e-05, 5.176400000000275e-05, 5.163899999999916e-05, 5.4513999999998564e-05, 5.174999999999971e-05, 5.45280000000016e-05, 5.068099999999687e-05]</msg>
<status status="PASS" starttime="20201029 18:16:42.081" endtime="20201029 18:16:42.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.076" endtime="20201029 18:16:42.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.088" endtime="20201029 18:16:42.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.086" endtime="20201029 18:16:42.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.085" endtime="20201029 18:16:42.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.689" endtime="20201029 18:16:42.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.688" endtime="20201029 18:16:42.109"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.118" endtime="20201029 18:16:42.138"></status>
</kw>
<msg timestamp="20201029 18:16:42.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.116" endtime="20201029 18:16:42.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.139" endtime="20201029 18:16:42.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.142" endtime="20201029 18:16:42.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.114" endtime="20201029 18:16:42.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.111" endtime="20201029 18:16:42.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.151" endtime="20201029 18:16:42.438"></status>
</kw>
<msg timestamp="20201029 18:16:42.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.150" endtime="20201029 18:16:42.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.443" endtime="20201029 18:16:42.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.451" endtime="20201029 18:16:42.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.147" endtime="20201029 18:16:42.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.145" endtime="20201029 18:16:42.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.458" level="INFO">${RESULT} = [{'diff': 4.5875000000000776e-05}, {'diff': 5.077800000000132e-05}, {'diff': 5.166700000000177e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.540299999999901e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:42.455" endtime="20201029 18:16:42.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.462" level="INFO">${ACCURACY} = {'diff': [4.5875000000000776e-05, 5.077800000000132e-05, 5.166700000000177e-05, 5.261100000000102e-05, 5.365300000000073e-05, 5.540299999999901e-05, 5.072199999999957e-05, 5.3527999999997133e-05, 5.37...</msg>
<status status="PASS" starttime="20201029 18:16:42.459" endtime="20201029 18:16:42.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.467" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.466" endtime="20201029 18:16:42.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.470" level="INFO">VALUE: [4.5875000000000776e-05, 5.077800000000132e-05, 5.166700000000177e-05, 5.261100000000102e-05, 5.365300000000073e-05, 5.540299999999901e-05, 5.072199999999957e-05, 5.3527999999997133e-05, 5.3721999999999104e-05, 5.5513999999999564e-05, 5.261100000000102e-05, 5.5471999999997385e-05, 5.463900000000216e-05, 5.356999999999931e-05, 5.356899999999984e-05, 5.072299999999905e-05, 5.356899999999984e-05, 5.163899999999916e-05, 5.173699999999962e-05, 5.165299999999873e-05, 5.4499999999998994e-05, 5.162499999999959e-05, 5.452700000000213e-05, 5.558300000000141e-05, 5.16669999999983e-05, 5.4513999999998564e-05, 5.174999999999971e-05, 5.262500000000059e-05, 5.4513999999998564e-05, 5.355599999999974e-05, 5.6514000000000564e-05, 5.6429999999999675e-05, 5.5443999999998245e-05, 5.454099999999823e-05, 5.355599999999974e-05, 5.736099999999883e-05, 5.2708000000002e-05, 5.45280000000016e-05, 5.162500000000306e-05, 5.068100000000034e-05, 5.262499999999712e-05, 5.163899999999916e-05, 5.455600000000074e-05, 5.0679999999997394e-05, 5.2708000000002e-05, 5.361099999999855e-05, 5.062499999999859e-05, 5.558400000000088e-05, 5.5499999999999994e-05, 5.5443999999998245e-05]</msg>
<status status="PASS" starttime="20201029 18:16:42.468" endtime="20201029 18:16:42.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.463" endtime="20201029 18:16:42.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.475" endtime="20201029 18:16:42.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.473" endtime="20201029 18:16:42.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.472" endtime="20201029 18:16:42.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.110" endtime="20201029 18:16:42.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.109" endtime="20201029 18:16:42.496"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.506" endtime="20201029 18:16:42.529"></status>
</kw>
<msg timestamp="20201029 18:16:42.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.503" endtime="20201029 18:16:42.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.531" endtime="20201029 18:16:42.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.534" endtime="20201029 18:16:42.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.500" endtime="20201029 18:16:42.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.498" endtime="20201029 18:16:42.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.543" endtime="20201029 18:16:42.830"></status>
</kw>
<msg timestamp="20201029 18:16:42.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026888681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026943236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.542" endtime="20201029 18:16:42.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026888681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026943236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.834" endtime="20201029 18:16:42.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.843" endtime="20201029 18:16:42.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.539" endtime="20201029 18:16:42.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.537" endtime="20201029 18:16:42.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.850" level="INFO">${RESULT} = [{'diff': 5.45549999999978e-05}, {'diff': 5.359699999999898e-05}, {'diff': 5.6499999999997524e-05}, {'diff': 5.1651999999999254e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.169400000000143e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:42.846" endtime="20201029 18:16:42.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.854" level="INFO">${ACCURACY} = {'diff': [5.45549999999978e-05, 5.359699999999898e-05, 5.6499999999997524e-05, 5.1651999999999254e-05, 5.262500000000059e-05, 5.169400000000143e-05, 5.070899999999948e-05, 5.258299999999841e-05, 5.074...</msg>
<status status="PASS" starttime="20201029 18:16:42.851" endtime="20201029 18:16:42.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.859" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.857" endtime="20201029 18:16:42.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.861" level="INFO">VALUE: [5.45549999999978e-05, 5.359699999999898e-05, 5.6499999999997524e-05, 5.1651999999999254e-05, 5.262500000000059e-05, 5.169400000000143e-05, 5.070899999999948e-05, 5.258299999999841e-05, 5.074999999999871e-05, 5.5513999999999564e-05, 5.068000000000086e-05, 5.6500000000000994e-05, 5.356999999999931e-05, 5.259700000000145e-05, 5.556900000000184e-05, 5.166700000000177e-05, 5.261099999999755e-05, 5.1651999999999254e-05, 5.073599999999914e-05, 5.073600000000261e-05, 5.158400000000035e-05, 5.169499999999744e-05, 5.644500000000219e-05, 5.069400000000043e-05, 5.555600000000174e-05, 5.5444000000001714e-05, 5.643099999999915e-05, 5.6429999999999675e-05, 5.5458000000001284e-05, 5.066600000000129e-05, 5.643099999999915e-05, 5.461099999999955e-05, 5.358300000000288e-05, 5.736099999999883e-05, 5.55549999999988e-05, 5.2652000000000254e-05, 5.163899999999916e-05, 5.35280000000006e-05, 5.6471999999998385e-05, 5.6443999999999245e-05, 5.558400000000088e-05, 5.644500000000219e-05, 5.458300000000041e-05, 5.362500000000159e-05, 5.737500000000187e-05, 5.6485999999997955e-05, 5.55280000000026e-05, 5.16530000000022e-05, 5.075000000000218e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:16:42.860" endtime="20201029 18:16:42.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.855" endtime="20201029 18:16:42.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.867" endtime="20201029 18:16:42.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.866" endtime="20201029 18:16:42.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.864" endtime="20201029 18:16:42.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.497" endtime="20201029 18:16:42.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.496" endtime="20201029 18:16:42.888"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.897" endtime="20201029 18:16:42.916"></status>
</kw>
<msg timestamp="20201029 18:16:42.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.896" endtime="20201029 18:16:42.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.918" endtime="20201029 18:16:42.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.920" endtime="20201029 18:16:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.893" endtime="20201029 18:16:42.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.891" endtime="20201029 18:16:42.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.930" endtime="20201029 18:16:43.217"></status>
</kw>
<msg timestamp="20201029 18:16:43.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021414542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.928" endtime="20201029 18:16:43.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021414542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021455736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.221" endtime="20201029 18:16:43.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.230" endtime="20201029 18:16:43.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.925" endtime="20201029 18:16:43.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.924" endtime="20201029 18:16:43.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.237" level="INFO">${RESULT} = [{'diff': 4.119399999999787e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.63610000000013e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.641699999999958e-05}, {'diff': 5.6402000000000535e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:43.234" endtime="20201029 18:16:43.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.242" level="INFO">${ACCURACY} = {'diff': [4.119399999999787e-05, 5.4499999999998994e-05, 5.63610000000013e-05, 5.6514000000000564e-05, 5.641699999999958e-05, 5.6402000000000535e-05, 5.461099999999955e-05, 5.261100000000102e-05, 5.45...</msg>
<status status="PASS" starttime="20201029 18:16:43.238" endtime="20201029 18:16:43.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.247" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.246" endtime="20201029 18:16:43.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.250" level="INFO">VALUE: [4.119399999999787e-05, 5.4499999999998994e-05, 5.63610000000013e-05, 5.6514000000000564e-05, 5.641699999999958e-05, 5.6402000000000535e-05, 5.461099999999955e-05, 5.261100000000102e-05, 5.458300000000041e-05, 5.5430000000002144e-05, 5.357000000000278e-05, 5.461099999999955e-05, 5.066600000000129e-05, 5.1651999999999254e-05, 5.268099999999887e-05, 5.545900000000076e-05, 5.545900000000076e-05, 5.26530000000032e-05, 5.451299999999909e-05, 5.556899999999837e-05, 4.967999999999986e-05, 5.5429999999998675e-05, 5.068100000000034e-05, 5.554099999999923e-05, 5.268099999999887e-05, 5.6514000000000564e-05, 5.545900000000076e-05, 5.451400000000203e-05, 5.069400000000043e-05, 5.363899999999769e-05, 5.355500000000027e-05, 5.262500000000059e-05, 5.265299999999973e-05, 5.162499999999959e-05, 5.4527999999998134e-05, 5.6514000000000564e-05, 5.5471999999997385e-05, 5.35280000000006e-05, 5.259800000000092e-05, 5.2652000000000254e-05, 5.552699999999966e-05, 5.641699999999958e-05, 5.263900000000016e-05, 5.170900000000048e-05, 5.640300000000001e-05, 5.070899999999948e-05, 5.362499999999812e-05, 5.643100000000262e-05, 5.2638000000000684e-05, 5.259700000000145e-05]</msg>
<status status="PASS" starttime="20201029 18:16:43.248" endtime="20201029 18:16:43.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.243" endtime="20201029 18:16:43.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.261" endtime="20201029 18:16:43.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.259" endtime="20201029 18:16:43.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.258" endtime="20201029 18:16:43.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.889" endtime="20201029 18:16:43.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.889" endtime="20201029 18:16:43.283"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.292" endtime="20201029 18:16:43.313"></status>
</kw>
<msg timestamp="20201029 18:16:43.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.290" endtime="20201029 18:16:43.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.315" endtime="20201029 18:16:43.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.317" endtime="20201029 18:16:43.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.287" endtime="20201029 18:16:43.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.285" endtime="20201029 18:16:43.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.327" endtime="20201029 18:16:43.615"></status>
</kw>
<msg timestamp="20201029 18:16:43.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024026861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.325" endtime="20201029 18:16:43.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024026861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.619" endtime="20201029 18:16:43.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.627" endtime="20201029 18:16:43.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.322" endtime="20201029 18:16:43.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.320" endtime="20201029 18:16:43.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.634" level="INFO">${RESULT} = [{'diff': 5.936100000000083e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.6513999999997094e-05}, {'diff': 5.359800000000192e-05}, {'diff': 5.544500000000119e-05}, {'diff': 5.7333999999999163e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:43.631" endtime="20201029 18:16:43.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.639" level="INFO">${ACCURACY} = {'diff': [5.936100000000083e-05, 5.638900000000044e-05, 5.6513999999997094e-05, 5.359800000000192e-05, 5.544500000000119e-05, 5.7333999999999163e-05, 5.363899999999769e-05, 5.638900000000044e-05, 5.07...</msg>
<status status="PASS" starttime="20201029 18:16:43.635" endtime="20201029 18:16:43.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.644" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.642" endtime="20201029 18:16:43.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.646" level="INFO">VALUE: [5.936100000000083e-05, 5.638900000000044e-05, 5.6513999999997094e-05, 5.359800000000192e-05, 5.544500000000119e-05, 5.7333999999999163e-05, 5.363899999999769e-05, 5.638900000000044e-05, 5.077799999999785e-05, 5.4499999999998994e-05, 5.461099999999955e-05, 5.73610000000023e-05, 5.461099999999955e-05, 5.35280000000006e-05, 5.077699999999838e-05, 5.355599999999974e-05, 5.079100000000142e-05, 5.7401999999998066e-05, 5.066700000000077e-05, 5.363900000000116e-05, 5.066600000000129e-05, 5.6499999999997524e-05, 5.256999999999831e-05, 5.6402000000000535e-05, 5.1721999999997104e-05, 5.459699999999998e-05, 5.450000000000246e-05, 5.6500000000000994e-05, 5.258299999999841e-05, 5.641699999999958e-05, 5.5541999999998704e-05, 5.1637999999999684e-05, 5.462499999999912e-05, 5.6416000000000105e-05, 5.556999999999784e-05, 5.4485999999999424e-05, 5.355500000000027e-05, 5.6514000000000564e-05, 5.543100000000162e-05, 5.7485999999998955e-05, 5.1637999999999684e-05, 5.163899999999916e-05, 5.465300000000173e-05, 5.643100000000262e-05, 5.556899999999837e-05, 5.3499999999997994e-05, 5.6402000000000535e-05, 5.654100000000023e-05, 5.35410000000007e-05, 5.6319999999998593e-05]</msg>
<status status="PASS" starttime="20201029 18:16:43.645" endtime="20201029 18:16:43.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.640" endtime="20201029 18:16:43.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.651" endtime="20201029 18:16:43.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.650" endtime="20201029 18:16:43.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.648" endtime="20201029 18:16:43.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.284" endtime="20201029 18:16:43.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.283" endtime="20201029 18:16:43.672"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.681" endtime="20201029 18:16:43.711"></status>
</kw>
<msg timestamp="20201029 18:16:43.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.680" endtime="20201029 18:16:43.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.712" endtime="20201029 18:16:43.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.715" endtime="20201029 18:16:43.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.677" endtime="20201029 18:16:43.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.675" endtime="20201029 18:16:43.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.724" endtime="20201029 18:16:44.011"></status>
</kw>
<msg timestamp="20201029 18:16:44.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026123083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026168153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.723" endtime="20201029 18:16:44.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026123083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026168153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.015" endtime="20201029 18:16:44.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.024" endtime="20201029 18:16:44.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.720" endtime="20201029 18:16:44.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.718" endtime="20201029 18:16:44.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.031" level="INFO">${RESULT} = [{'diff': 4.507000000000122e-05}, {'diff': 5.5555999999998273e-05}, {'diff': 5.163900000000263e-05}, {'diff': 5.443100000000062e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.16669999999983e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:44.027" endtime="20201029 18:16:44.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.035" level="INFO">${ACCURACY} = {'diff': [4.507000000000122e-05, 5.5555999999998273e-05, 5.163900000000263e-05, 5.443100000000062e-05, 5.6486000000001424e-05, 5.16669999999983e-05, 5.355500000000027e-05, 5.462499999999912e-05, 5.261...</msg>
<status status="PASS" starttime="20201029 18:16:44.032" endtime="20201029 18:16:44.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.040" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.039" endtime="20201029 18:16:44.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.043" level="INFO">VALUE: [4.507000000000122e-05, 5.5555999999998273e-05, 5.163900000000263e-05, 5.443100000000062e-05, 5.6486000000001424e-05, 5.16669999999983e-05, 5.355500000000027e-05, 5.462499999999912e-05, 5.261099999999755e-05, 5.16530000000022e-05, 5.068000000000086e-05, 5.268099999999887e-05, 5.161100000000002e-05, 5.448600000000289e-05, 5.461099999999955e-05, 5.06530000000012e-05, 5.362500000000159e-05, 5.4485999999999424e-05, 5.359799999999845e-05, 5.077799999999785e-05, 5.4444000000000714e-05, 5.073599999999914e-05, 5.455600000000074e-05, 5.163899999999916e-05, 5.3666000000000824e-05, 5.262500000000059e-05, 5.35280000000006e-05, 5.258399999999788e-05, 5.637500000000087e-05, 5.365300000000073e-05, 5.4513999999998564e-05, 5.634700000000173e-05, 5.651299999999762e-05, 5.161100000000002e-05, 5.4527999999998134e-05, 5.6485999999997955e-05, 5.261100000000102e-05, 5.070899999999948e-05, 5.363900000000116e-05, 5.5444000000001714e-05, 5.641699999999958e-05, 4.974999999999771e-05, 5.65549999999998e-05, 5.355599999999974e-05, 5.544499999999772e-05, 5.357000000000278e-05, 5.6429999999999675e-05, 5.5444000000001714e-05, 5.173600000000014e-05, 5.258300000000188e-05]</msg>
<status status="PASS" starttime="20201029 18:16:44.041" endtime="20201029 18:16:44.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.036" endtime="20201029 18:16:44.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.049" endtime="20201029 18:16:44.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.047" endtime="20201029 18:16:44.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.046" endtime="20201029 18:16:44.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.673" endtime="20201029 18:16:44.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.673" endtime="20201029 18:16:44.069"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.078" endtime="20201029 18:16:44.097"></status>
</kw>
<msg timestamp="20201029 18:16:44.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.077" endtime="20201029 18:16:44.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.099" endtime="20201029 18:16:44.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.101" endtime="20201029 18:16:44.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.074" endtime="20201029 18:16:44.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.072" endtime="20201029 18:16:44.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.112" endtime="20201029 18:16:44.400"></status>
</kw>
<msg timestamp="20201029 18:16:44.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020772375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.111" endtime="20201029 18:16:44.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020772375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.404" endtime="20201029 18:16:44.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.413" endtime="20201029 18:16:44.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.108" endtime="20201029 18:16:44.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.106" endtime="20201029 18:16:44.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.419" level="INFO">${RESULT} = [{'diff': 5.174999999999971e-05}, {'diff': 5.356899999999984e-05}, {'diff': 5.5541999999998704e-05}, {'diff': 5.462500000000259e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.638900000000044e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:44.416" endtime="20201029 18:16:44.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.425" level="INFO">${ACCURACY} = {'diff': [5.174999999999971e-05, 5.356899999999984e-05, 5.5541999999998704e-05, 5.462500000000259e-05, 5.259700000000145e-05, 5.638900000000044e-05, 5.5499999999999994e-05, 5.6486000000001424e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 18:16:44.420" endtime="20201029 18:16:44.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.429" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.428" endtime="20201029 18:16:44.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.432" level="INFO">VALUE: [5.174999999999971e-05, 5.356899999999984e-05, 5.5541999999998704e-05, 5.462500000000259e-05, 5.259700000000145e-05, 5.638900000000044e-05, 5.5499999999999994e-05, 5.6486000000001424e-05, 5.4513999999998564e-05, 5.6443999999999245e-05, 5.552699999999966e-05, 5.262500000000059e-05, 5.255599999999874e-05, 5.1693999999997964e-05, 5.361099999999855e-05, 5.356899999999984e-05, 5.069499999999991e-05, 5.7402000000001535e-05, 4.979099999999695e-05, 5.640300000000001e-05, 5.268099999999887e-05, 5.2665999999999824e-05, 5.166700000000177e-05, 5.356899999999984e-05, 5.358399999999888e-05, 5.6429999999999675e-05, 5.361099999999855e-05, 5.5486000000000424e-05, 5.358299999999941e-05, 5.738900000000144e-05, 5.6429999999999675e-05, 5.261200000000049e-05, 5.354200000000017e-05, 5.456900000000084e-05, 5.454200000000117e-05, 5.262500000000059e-05, 5.158400000000035e-05, 5.357000000000278e-05, 5.262499999999712e-05, 5.455500000000127e-05, 5.1637999999999684e-05, 5.647299999999786e-05, 5.168100000000134e-05, 5.5486000000000424e-05, 5.458399999999988e-05, 5.554200000000217e-05, 5.456900000000084e-05, 5.266700000000277e-05, 5.16530000000022e-05, 5.6443999999999245e-05]</msg>
<status status="PASS" starttime="20201029 18:16:44.430" endtime="20201029 18:16:44.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.426" endtime="20201029 18:16:44.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.437" endtime="20201029 18:16:44.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.436" endtime="20201029 18:16:44.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.434" endtime="20201029 18:16:44.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.070" endtime="20201029 18:16:44.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.070" endtime="20201029 18:16:44.458"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.467" endtime="20201029 18:16:44.489"></status>
</kw>
<msg timestamp="20201029 18:16:44.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.466" endtime="20201029 18:16:44.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.491" endtime="20201029 18:16:44.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.494" endtime="20201029 18:16:44.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.463" endtime="20201029 18:16:44.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.461" endtime="20201029 18:16:44.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.503" endtime="20201029 18:16:44.791"></status>
</kw>
<msg timestamp="20201029 18:16:44.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024044236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.501" endtime="20201029 18:16:44.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024044236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.795" endtime="20201029 18:16:44.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.804" endtime="20201029 18:16:44.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.499" endtime="20201029 18:16:44.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.497" endtime="20201029 18:16:44.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.810" level="INFO">${RESULT} = [{'diff': 5.7499999999998525e-05}, {'diff': 5.545900000000076e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.461099999999955e-05}, {'diff': 5.069499999999991e-05}, {'diff': 5.259700000000145e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:44.807" endtime="20201029 18:16:44.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.815" level="INFO">${ACCURACY} = {'diff': [5.7499999999998525e-05, 5.545900000000076e-05, 5.259700000000145e-05, 5.461099999999955e-05, 5.069499999999991e-05, 5.259700000000145e-05, 5.461099999999955e-05, 5.069499999999991e-05, 5.262...</msg>
<status status="PASS" starttime="20201029 18:16:44.811" endtime="20201029 18:16:44.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.819" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.818" endtime="20201029 18:16:44.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.822" level="INFO">VALUE: [5.7499999999998525e-05, 5.545900000000076e-05, 5.259700000000145e-05, 5.461099999999955e-05, 5.069499999999991e-05, 5.259700000000145e-05, 5.461099999999955e-05, 5.069499999999991e-05, 5.262500000000059e-05, 5.450000000000246e-05, 5.272300000000105e-05, 5.169500000000091e-05, 5.359799999999845e-05, 5.3666000000000824e-05, 5.644499999999872e-05, 5.641699999999958e-05, 5.265299999999973e-05, 5.558299999999794e-05, 5.163899999999916e-05, 5.262500000000059e-05, 5.462499999999912e-05, 5.354200000000017e-05, 5.4513999999998564e-05, 5.355599999999974e-05, 5.451400000000203e-05, 5.6402000000000535e-05, 5.068100000000034e-05, 5.454200000000117e-05, 5.176399999999928e-05, 5.0723000000002516e-05, 5.738900000000144e-05, 5.169400000000143e-05, 5.556900000000184e-05, 5.163899999999916e-05, 5.6429999999999675e-05, 5.4527999999998134e-05, 5.6429999999999675e-05, 5.0708e-05, 5.3637999999998215e-05, 5.740300000000101e-05, 5.5486000000000424e-05, 5.6486000000001424e-05, 5.275000000000071e-05, 5.355500000000027e-05, 5.6443999999999245e-05, 5.363900000000116e-05, 5.168100000000134e-05, 5.5485999999996954e-05, 5.4499999999998994e-05, 5.6471999999998385e-05]</msg>
<status status="PASS" starttime="20201029 18:16:44.821" endtime="20201029 18:16:44.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.816" endtime="20201029 18:16:44.823"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.827" endtime="20201029 18:16:44.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.826" endtime="20201029 18:16:44.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.824" endtime="20201029 18:16:44.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.459" endtime="20201029 18:16:44.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.458" endtime="20201029 18:16:44.848"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.857" endtime="20201029 18:16:44.882"></status>
</kw>
<msg timestamp="20201029 18:16:44.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.856" endtime="20201029 18:16:44.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.883" endtime="20201029 18:16:44.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.886" endtime="20201029 18:16:44.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.853" endtime="20201029 18:16:44.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.851" endtime="20201029 18:16:44.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.896" endtime="20201029 18:16:45.181"></status>
</kw>
<msg timestamp="20201029 18:16:45.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025720875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025789722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.894" endtime="20201029 18:16:45.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025720875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025789722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.185" endtime="20201029 18:16:45.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.194" endtime="20201029 18:16:45.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.891" endtime="20201029 18:16:45.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.889" endtime="20201029 18:16:45.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.201" level="INFO">${RESULT} = [{'diff': 6.884700000000035e-05}, {'diff': 5.077799999999785e-05}, {'diff': 5.6429999999999675e-05}, {'diff': 5.5541999999998704e-05}, {'diff': 5.3637999999998215e-05}, {'diff': 5.262499999999712e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:45.198" endtime="20201029 18:16:45.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.205" level="INFO">${ACCURACY} = {'diff': [6.884700000000035e-05, 5.077799999999785e-05, 5.6429999999999675e-05, 5.5541999999998704e-05, 5.3637999999998215e-05, 5.262499999999712e-05, 5.459699999999998e-05, 5.1708000000001e-05, 5.075...</msg>
<status status="PASS" starttime="20201029 18:16:45.202" endtime="20201029 18:16:45.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.210" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.209" endtime="20201029 18:16:45.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.213" level="INFO">VALUE: [6.884700000000035e-05, 5.077799999999785e-05, 5.6429999999999675e-05, 5.5541999999998704e-05, 5.3637999999998215e-05, 5.262499999999712e-05, 5.459699999999998e-05, 5.1708000000001e-05, 5.075000000000218e-05, 5.073600000000261e-05, 5.450000000000246e-05, 5.454099999999823e-05, 5.358299999999941e-05, 5.455500000000127e-05, 5.268100000000234e-05, 5.263900000000016e-05, 5.079199999999742e-05, 5.355500000000027e-05, 5.351400000000103e-05, 5.555600000000174e-05, 5.455599999999727e-05, 5.55280000000026e-05, 5.4527999999998134e-05, 5.076400000000175e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.16669999999983e-05, 5.082000000000003e-05, 5.1665999999998824e-05, 5.561100000000055e-05, 5.261100000000102e-05, 5.259800000000092e-05, 5.458300000000041e-05, 5.645900000000176e-05, 5.458399999999988e-05, 5.358299999999941e-05, 5.362499999999812e-05, 5.5499999999999994e-05, 5.077800000000132e-05, 5.356899999999984e-05, 5.5486000000000424e-05, 5.2665999999999824e-05, 5.457000000000031e-05, 5.545900000000076e-05, 5.6486000000001424e-05, 5.263900000000016e-05, 5.5555999999998273e-05, 5.256999999999831e-05, 5.455599999999727e-05, 5.5555999999998273e-05]</msg>
<status status="PASS" starttime="20201029 18:16:45.211" endtime="20201029 18:16:45.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.206" endtime="20201029 18:16:45.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.219" endtime="20201029 18:16:45.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.217" endtime="20201029 18:16:45.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.216" endtime="20201029 18:16:45.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.849" endtime="20201029 18:16:45.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.849" endtime="20201029 18:16:45.239"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.249" endtime="20201029 18:16:45.267"></status>
</kw>
<msg timestamp="20201029 18:16:45.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.247" endtime="20201029 18:16:45.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.269" endtime="20201029 18:16:45.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.272" endtime="20201029 18:16:45.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.244" endtime="20201029 18:16:45.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.242" endtime="20201029 18:16:45.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.282" endtime="20201029 18:16:45.569"></status>
</kw>
<msg timestamp="20201029 18:16:45.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021342056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.280" endtime="20201029 18:16:45.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021342056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.573" endtime="20201029 18:16:45.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.582" endtime="20201029 18:16:45.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.277" endtime="20201029 18:16:45.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.275" endtime="20201029 18:16:45.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.588" level="INFO">${RESULT} = [{'diff': 6.029099999999704e-05}, {'diff': 5.070899999999948e-05}, {'diff': 5.557000000000131e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.6541999999999704e-05}, {'diff': 5.6541999999999704e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:45.585" endtime="20201029 18:16:45.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.596" level="INFO">${ACCURACY} = {'diff': [6.029099999999704e-05, 5.070899999999948e-05, 5.557000000000131e-05, 5.161100000000002e-05, 5.6541999999999704e-05, 5.6541999999999704e-05, 5.5499999999999994e-05, 5.459699999999998e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 18:16:45.589" endtime="20201029 18:16:45.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.601" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.600" endtime="20201029 18:16:45.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.604" level="INFO">VALUE: [6.029099999999704e-05, 5.070899999999948e-05, 5.557000000000131e-05, 5.161100000000002e-05, 5.6541999999999704e-05, 5.6541999999999704e-05, 5.5499999999999994e-05, 5.459699999999998e-05, 5.544499999999772e-05, 5.4651999999998785e-05, 5.256900000000231e-05, 5.555600000000174e-05, 5.4457999999996815e-05, 5.462499999999912e-05, 5.350000000000146e-05, 5.462500000000259e-05, 5.544500000000119e-05, 5.462499999999912e-05, 5.159799999999992e-05, 5.174999999999971e-05, 5.162499999999959e-05, 5.556900000000184e-05, 5.6528000000000134e-05, 5.6429999999999675e-05, 5.365300000000073e-05, 5.166700000000177e-05, 5.7542000000000704e-05, 5.16530000000022e-05, 5.3721999999999104e-05, 5.358400000000235e-05, 5.0708e-05, 5.2707999999998534e-05, 5.258300000000188e-05, 5.272300000000105e-05, 5.644500000000219e-05, 5.173600000000014e-05, 5.5457999999997815e-05, 5.658399999999841e-05, 5.368099999999987e-05, 5.068100000000034e-05, 5.268099999999887e-05, 5.641699999999958e-05, 5.463899999999869e-05, 5.1651999999999254e-05, 5.269500000000191e-05, 5.165299999999873e-05, 5.65549999999998e-05, 5.6401999999997066e-05, 5.258400000000135e-05, 5.2707999999998534e-05]</msg>
<status status="PASS" starttime="20201029 18:16:45.602" endtime="20201029 18:16:45.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.597" endtime="20201029 18:16:45.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.609" endtime="20201029 18:16:45.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.607" endtime="20201029 18:16:45.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.606" endtime="20201029 18:16:45.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.240" endtime="20201029 18:16:45.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.240" endtime="20201029 18:16:45.630"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.639" endtime="20201029 18:16:45.659"></status>
</kw>
<msg timestamp="20201029 18:16:45.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.637" endtime="20201029 18:16:45.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.661" endtime="20201029 18:16:45.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.663" endtime="20201029 18:16:45.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.634" endtime="20201029 18:16:45.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.632" endtime="20201029 18:16:45.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.673" endtime="20201029 18:16:45.961"></status>
</kw>
<msg timestamp="20201029 18:16:45.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02308675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:45.671" endtime="20201029 18:16:45.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02308675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:45.965" endtime="20201029 18:16:45.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.974" endtime="20201029 18:16:45.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.668" endtime="20201029 18:16:45.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.667" endtime="20201029 18:16:45.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.981" level="INFO">${RESULT} = [{'diff': 5.643099999999915e-05}, {'diff': 5.455600000000074e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.4513999999998564e-05}, {'diff': 5.16669999999983e-05}, {'diff': 5.06530000000012e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:45.977" endtime="20201029 18:16:45.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.985" level="INFO">${ACCURACY} = {'diff': [5.643099999999915e-05, 5.455600000000074e-05, 5.4499999999998994e-05, 5.4513999999998564e-05, 5.16669999999983e-05, 5.06530000000012e-05, 5.169400000000143e-05, 5.4444000000000714e-05, 5.454...</msg>
<status status="PASS" starttime="20201029 18:16:45.982" endtime="20201029 18:16:45.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.990" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.989" endtime="20201029 18:16:45.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.992" level="INFO">VALUE: [5.643099999999915e-05, 5.455600000000074e-05, 5.4499999999998994e-05, 5.4513999999998564e-05, 5.16669999999983e-05, 5.06530000000012e-05, 5.169400000000143e-05, 5.4444000000000714e-05, 5.454200000000117e-05, 5.450000000000246e-05, 5.259700000000145e-05, 5.068100000000034e-05, 5.076299999999881e-05, 5.73749999999984e-05, 5.5443999999998245e-05, 5.079199999999742e-05, 5.554200000000217e-05, 5.4513999999998564e-05, 5.26669999999993e-05, 5.4499999999998994e-05, 5.640300000000001e-05, 5.544500000000119e-05, 5.2652000000000254e-05, 5.356999999999931e-05, 5.5527999999999134e-05, 5.2665999999999824e-05, 5.4499999999998994e-05, 5.5513999999999564e-05, 5.640300000000001e-05, 5.6472000000001854e-05, 5.7457999999999815e-05, 5.545900000000076e-05, 5.6429999999999675e-05, 5.261100000000102e-05, 5.172200000000057e-05, 5.4458000000000284e-05, 5.641699999999958e-05, 5.072199999999957e-05, 5.359799999999845e-05, 5.1708000000001e-05, 5.08469999999997e-05, 5.537499999999987e-05, 5.254199999999917e-05, 5.538899999999944e-05, 5.355599999999974e-05, 5.740300000000101e-05, 5.557000000000131e-05, 5.159700000000045e-05, 5.169400000000143e-05, 5.365300000000073e-05]</msg>
<status status="PASS" starttime="20201029 18:16:45.991" endtime="20201029 18:16:45.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.986" endtime="20201029 18:16:45.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.998" endtime="20201029 18:16:46.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.996" endtime="20201029 18:16:46.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.995" endtime="20201029 18:16:46.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.631" endtime="20201029 18:16:46.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.630" endtime="20201029 18:16:46.019"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.028" endtime="20201029 18:16:46.052"></status>
</kw>
<msg timestamp="20201029 18:16:46.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.026" endtime="20201029 18:16:46.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.054" endtime="20201029 18:16:46.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.056" endtime="20201029 18:16:46.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.024" endtime="20201029 18:16:46.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.021" endtime="20201029 18:16:46.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.065" endtime="20201029 18:16:46.352"></status>
</kw>
<msg timestamp="20201029 18:16:46.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025801722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025870694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.064" endtime="20201029 18:16:46.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025801722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025870694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.357" endtime="20201029 18:16:46.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.365" endtime="20201029 18:16:46.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.061" endtime="20201029 18:16:46.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.059" endtime="20201029 18:16:46.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.372" level="INFO">${RESULT} = [{'diff': 6.897200000000048e-05}, {'diff': 5.35280000000006e-05}, {'diff': 5.358300000000288e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5.263900000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:46.369" endtime="20201029 18:16:46.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:46.376" level="INFO">${ACCURACY} = {'diff': [6.897200000000048e-05, 5.35280000000006e-05, 5.358300000000288e-05, 5.459699999999998e-05, 5.163899999999916e-05, 5.263900000000016e-05, 5.076400000000175e-05, 5.4513999999998564e-05, 5.4555...</msg>
<status status="PASS" starttime="20201029 18:16:46.373" endtime="20201029 18:16:46.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.381" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:46.380" endtime="20201029 18:16:46.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.384" level="INFO">VALUE: [6.897200000000048e-05, 5.35280000000006e-05, 5.358300000000288e-05, 5.459699999999998e-05, 5.163899999999916e-05, 5.263900000000016e-05, 5.076400000000175e-05, 5.4513999999998564e-05, 5.455599999999727e-05, 5.359699999999898e-05, 5.169500000000091e-05, 5.637500000000087e-05, 5.072199999999957e-05, 5.258399999999788e-05, 5.458300000000041e-05, 5.361100000000202e-05, 5.259699999999798e-05, 5.4541999999997703e-05, 5.354200000000017e-05, 5.06530000000012e-05, 5.5513999999999564e-05, 5.5513999999999564e-05, 5.63749999999974e-05, 5.1638000000003154e-05, 5.261100000000102e-05, 5.5444000000001714e-05, 5.545899999999729e-05, 5.169500000000091e-05, 5.6486000000001424e-05, 5.256899999999884e-05, 5.1679999999998394e-05, 5.163899999999916e-05, 5.172300000000005e-05, 5.5513999999999564e-05, 5.6416000000000105e-05, 5.261100000000102e-05, 5.174999999999971e-05, 5.259800000000092e-05, 5.451400000000203e-05, 5.165299999999873e-05, 5.455500000000127e-05, 5.168100000000134e-05, 5.163900000000263e-05, 5.352700000000113e-05, 5.265299999999973e-05, 5.068100000000034e-05, 5.072199999999957e-05, 5.355500000000027e-05, 5.5471999999997385e-05, 5.5486000000000424e-05]</msg>
<status status="PASS" starttime="20201029 18:16:46.382" endtime="20201029 18:16:46.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.377" endtime="20201029 18:16:46.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:46.390" endtime="20201029 18:16:46.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.388" endtime="20201029 18:16:46.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.387" endtime="20201029 18:16:46.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.020" endtime="20201029 18:16:46.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.019" endtime="20201029 18:16:46.411"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.420" endtime="20201029 18:16:46.438"></status>
</kw>
<msg timestamp="20201029 18:16:46.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.418" endtime="20201029 18:16:46.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.440" endtime="20201029 18:16:46.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.443" endtime="20201029 18:16:46.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.415" endtime="20201029 18:16:46.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.413" endtime="20201029 18:16:46.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.452" endtime="20201029 18:16:46.739"></status>
</kw>
<msg timestamp="20201029 18:16:46.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020794417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020841389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.451" endtime="20201029 18:16:46.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020794417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020841389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.744" endtime="20201029 18:16:46.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.752" endtime="20201029 18:16:46.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.448" endtime="20201029 18:16:46.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.446" endtime="20201029 18:16:46.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.759" level="INFO">${RESULT} = [{'diff': 4.697199999999929e-05}, {'diff': 5.5457999999997815e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.641699999999958e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.558300000000141e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:46.756" endtime="20201029 18:16:46.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:46.764" level="INFO">${ACCURACY} = {'diff': [4.697199999999929e-05, 5.5457999999997815e-05, 5.459699999999998e-05, 5.641699999999958e-05, 5.162499999999959e-05, 5.558300000000141e-05, 5.45280000000016e-05, 5.068000000000086e-05, 5.1763...</msg>
<status status="PASS" starttime="20201029 18:16:46.760" endtime="20201029 18:16:46.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.769" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:46.768" endtime="20201029 18:16:46.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.772" level="INFO">VALUE: [4.697199999999929e-05, 5.5457999999997815e-05, 5.459699999999998e-05, 5.641699999999958e-05, 5.162499999999959e-05, 5.558300000000141e-05, 5.45280000000016e-05, 5.068000000000086e-05, 5.176399999999928e-05, 5.5458000000001284e-05, 5.3527999999997133e-05, 5.462499999999912e-05, 5.35280000000006e-05, 5.165299999999873e-05, 5.643099999999915e-05, 5.168100000000134e-05, 5.451400000000203e-05, 5.5555999999998273e-05, 5.458300000000041e-05, 5.256999999999831e-05, 5.261100000000102e-05, 5.3693999999999964e-05, 5.4513999999998564e-05, 5.2665999999999824e-05, 5.168099999999787e-05, 5.4485999999999424e-05, 5.459699999999998e-05, 5.259699999999798e-05, 5.269499999999844e-05, 5.161100000000002e-05, 5.6458000000002284e-05, 5.73610000000023e-05, 5.463899999999869e-05, 5.162499999999959e-05, 5.7402000000001535e-05, 5.4499999999998994e-05, 5.161100000000002e-05, 5.461099999999955e-05, 5.258400000000135e-05, 5.068100000000034e-05, 5.3485999999998424e-05, 5.463899999999869e-05, 5.066700000000077e-05, 5.356999999999931e-05, 5.269499999999844e-05, 5.640300000000001e-05, 5.0708e-05, 5.7499999999998525e-05, 5.641699999999958e-05, 5.734699999999926e-05]</msg>
<status status="PASS" starttime="20201029 18:16:46.770" endtime="20201029 18:16:46.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.765" endtime="20201029 18:16:46.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:46.777" endtime="20201029 18:16:46.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.775" endtime="20201029 18:16:46.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.774" endtime="20201029 18:16:46.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.411" endtime="20201029 18:16:46.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.411" endtime="20201029 18:16:46.798"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.807" endtime="20201029 18:16:46.830"></status>
</kw>
<msg timestamp="20201029 18:16:46.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.805" endtime="20201029 18:16:46.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.832" endtime="20201029 18:16:46.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.834" endtime="20201029 18:16:46.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.803" endtime="20201029 18:16:46.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.800" endtime="20201029 18:16:46.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.844" endtime="20201029 18:16:47.130"></status>
</kw>
<msg timestamp="20201029 18:16:47.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025517486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.842" endtime="20201029 18:16:47.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025517486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.135" endtime="20201029 18:16:47.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.144" endtime="20201029 18:16:47.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.840" endtime="20201029 18:16:47.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.838" endtime="20201029 18:16:47.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.151" level="INFO">${RESULT} = [{'diff': 4.974999999999771e-05}, {'diff': 5.45280000000016e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.355600000000321e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:47.147" endtime="20201029 18:16:47.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.155" level="INFO">${ACCURACY} = {'diff': [4.974999999999771e-05, 5.45280000000016e-05, 5.6472000000001854e-05, 5.076400000000175e-05, 5.6486000000001424e-05, 5.355600000000321e-05, 5.362499999999812e-05, 5.265299999999973e-05, 5.069...</msg>
<status status="PASS" starttime="20201029 18:16:47.152" endtime="20201029 18:16:47.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.159" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.158" endtime="20201029 18:16:47.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.162" level="INFO">VALUE: [4.974999999999771e-05, 5.45280000000016e-05, 5.6472000000001854e-05, 5.076400000000175e-05, 5.6486000000001424e-05, 5.355600000000321e-05, 5.362499999999812e-05, 5.265299999999973e-05, 5.069400000000043e-05, 5.173600000000014e-05, 5.359699999999898e-05, 5.352699999999766e-05, 5.355600000000321e-05, 5.076400000000175e-05, 5.358299999999941e-05, 5.159700000000045e-05, 5.259699999999798e-05, 5.456999999999684e-05, 5.269500000000191e-05, 5.069400000000043e-05, 5.363899999999769e-05, 5.169400000000143e-05, 5.165299999999873e-05, 5.362499999999812e-05, 5.358299999999941e-05, 5.4499999999998994e-05, 5.741700000000058e-05, 5.165299999999873e-05, 5.172200000000057e-05, 5.168000000000186e-05, 5.354200000000017e-05, 5.6457999999998815e-05, 5.075000000000218e-05, 5.451400000000203e-05, 5.4485999999999424e-05, 5.5486000000000424e-05, 5.55280000000026e-05, 5.6416000000000105e-05, 5.5458000000001284e-05, 5.36670000000003e-05, 5.4513999999998564e-05, 5.5472000000000854e-05, 5.554200000000217e-05, 5.1651999999999254e-05, 5.658400000000188e-05, 5.262500000000059e-05, 5.16530000000022e-05, 5.558299999999794e-05, 5.557000000000131e-05, 5.4527999999998134e-05]</msg>
<status status="PASS" starttime="20201029 18:16:47.161" endtime="20201029 18:16:47.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.156" endtime="20201029 18:16:47.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.167" endtime="20201029 18:16:47.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.166" endtime="20201029 18:16:47.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.164" endtime="20201029 18:16:47.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.799" endtime="20201029 18:16:47.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.798" endtime="20201029 18:16:47.188"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.198" endtime="20201029 18:16:47.217"></status>
</kw>
<msg timestamp="20201029 18:16:47.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.196" endtime="20201029 18:16:47.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.218" endtime="20201029 18:16:47.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.221" endtime="20201029 18:16:47.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.193" endtime="20201029 18:16:47.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.191" endtime="20201029 18:16:47.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.230" endtime="20201029 18:16:47.517"></status>
</kw>
<msg timestamp="20201029 18:16:47.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.229" endtime="20201029 18:16:47.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.521" endtime="20201029 18:16:47.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.530" endtime="20201029 18:16:47.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.226" endtime="20201029 18:16:47.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.224" endtime="20201029 18:16:47.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.537" level="INFO">${RESULT} = [{'diff': 4.6944999999999626e-05}, {'diff': 5.448600000000289e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.463900000000216e-05}, {'diff': 5.0708e-05}, {'diff': 5....</msg>
<status status="PASS" starttime="20201029 18:16:47.533" endtime="20201029 18:16:47.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.541" level="INFO">${ACCURACY} = {'diff': [4.6944999999999626e-05, 5.448600000000289e-05, 5.363900000000116e-05, 5.262500000000059e-05, 5.463900000000216e-05, 5.0708e-05, 5.6444000000002714e-05, 5.5541999999998704e-05, 5.643099999999...</msg>
<status status="PASS" starttime="20201029 18:16:47.538" endtime="20201029 18:16:47.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.546" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.545" endtime="20201029 18:16:47.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.549" level="INFO">VALUE: [4.6944999999999626e-05, 5.448600000000289e-05, 5.363900000000116e-05, 5.262500000000059e-05, 5.463900000000216e-05, 5.0708e-05, 5.6444000000002714e-05, 5.5541999999998704e-05, 5.643099999999915e-05, 5.6541999999999704e-05, 5.356899999999984e-05, 5.365300000000073e-05, 5.163899999999916e-05, 5.1666000000002293e-05, 5.173600000000014e-05, 5.068100000000034e-05, 5.5499999999999994e-05, 5.6500000000000994e-05, 5.0708e-05, 5.358400000000235e-05, 5.173600000000014e-05, 5.5486000000000424e-05, 5.2679999999999394e-05, 5.1651999999999254e-05, 5.269500000000191e-05, 5.259699999999798e-05, 5.458299999999694e-05, 5.458399999999988e-05, 5.356999999999931e-05, 5.261100000000102e-05, 5.554200000000217e-05, 5.55280000000026e-05, 5.077800000000132e-05, 5.06530000000012e-05, 5.554200000000217e-05, 5.6528000000000134e-05, 5.5555999999998273e-05, 5.5499999999999994e-05, 5.4527999999998134e-05, 5.5541999999998704e-05, 5.644499999999872e-05, 5.163899999999916e-05, 5.263900000000016e-05, 5.456900000000084e-05, 5.1693999999997964e-05, 5.556900000000184e-05, 5.265299999999973e-05, 5.6486000000001424e-05, 5.5485999999996954e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:16:47.547" endtime="20201029 18:16:47.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.542" endtime="20201029 18:16:47.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.555" endtime="20201029 18:16:47.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.553" endtime="20201029 18:16:47.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.552" endtime="20201029 18:16:47.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.189" endtime="20201029 18:16:47.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.189" endtime="20201029 18:16:47.576"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.585" endtime="20201029 18:16:47.603"></status>
</kw>
<msg timestamp="20201029 18:16:47.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.583" endtime="20201029 18:16:47.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.605" endtime="20201029 18:16:47.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.608" endtime="20201029 18:16:47.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.580" endtime="20201029 18:16:47.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.578" endtime="20201029 18:16:47.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.617" endtime="20201029 18:16:47.903"></status>
</kw>
<msg timestamp="20201029 18:16:47.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021441708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.616" endtime="20201029 18:16:47.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021441708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.909" endtime="20201029 18:16:47.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.917" endtime="20201029 18:16:47.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.613" endtime="20201029 18:16:47.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.611" endtime="20201029 18:16:47.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.924" level="INFO">${RESULT} = [{'diff': 4.4069000000000746e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.0708e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.7444000000000245e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5...</msg>
<status status="PASS" starttime="20201029 18:16:47.921" endtime="20201029 18:16:47.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.929" level="INFO">${ACCURACY} = {'diff': [4.4069000000000746e-05, 5.174999999999971e-05, 5.0708e-05, 5.365300000000073e-05, 5.7444000000000245e-05, 5.365300000000073e-05, 5.361100000000202e-05, 5.461099999999955e-05, 5.1693999999997...</msg>
<status status="PASS" starttime="20201029 18:16:47.925" endtime="20201029 18:16:47.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.934" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.933" endtime="20201029 18:16:47.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.936" level="INFO">VALUE: [4.4069000000000746e-05, 5.174999999999971e-05, 5.0708e-05, 5.365300000000073e-05, 5.7444000000000245e-05, 5.365300000000073e-05, 5.361100000000202e-05, 5.461099999999955e-05, 5.1693999999997964e-05, 5.456900000000084e-05, 5.6485999999997955e-05, 5.361100000000202e-05, 5.173600000000014e-05, 5.269499999999844e-05, 5.362500000000159e-05, 5.1708000000001e-05, 4.975000000000118e-05, 5.7444000000000245e-05, 5.262500000000059e-05, 5.459699999999998e-05, 5.262500000000059e-05, 5.457000000000031e-05, 5.5499999999999994e-05, 5.1708000000001e-05, 5.455599999999727e-05, 5.263900000000016e-05, 5.065299999999773e-05, 5.363900000000116e-05, 5.272300000000105e-05, 5.076399999999828e-05, 5.458300000000041e-05, 5.558300000000141e-05, 5.079100000000142e-05, 5.554200000000217e-05, 5.457000000000031e-05, 5.365300000000073e-05, 5.358299999999941e-05, 5.462499999999912e-05, 5.5486000000000424e-05, 5.7486000000002424e-05, 5.6472000000001854e-05, 5.173600000000014e-05, 5.263900000000016e-05, 5.275000000000071e-05, 5.54869999999999e-05, 5.362500000000159e-05, 5.368099999999987e-05, 5.552699999999966e-05, 5.173600000000014e-05, 5.454200000000117e-05]</msg>
<status status="PASS" starttime="20201029 18:16:47.935" endtime="20201029 18:16:47.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.930" endtime="20201029 18:16:47.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.942" endtime="20201029 18:16:47.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.940" endtime="20201029 18:16:47.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.939" endtime="20201029 18:16:47.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.576" endtime="20201029 18:16:47.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.576" endtime="20201029 18:16:47.963"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.972" endtime="20201029 18:16:47.990"></status>
</kw>
<msg timestamp="20201029 18:16:47.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.970" endtime="20201029 18:16:47.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.992" endtime="20201029 18:16:47.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.995" endtime="20201029 18:16:47.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.967" endtime="20201029 18:16:47.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.965" endtime="20201029 18:16:47.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.004" endtime="20201029 18:16:48.291"></status>
</kw>
<msg timestamp="20201029 18:16:48.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.003" endtime="20201029 18:16:48.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.296" endtime="20201029 18:16:48.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.305" endtime="20201029 18:16:48.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.000" endtime="20201029 18:16:48.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.998" endtime="20201029 18:16:48.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.313" level="INFO">${RESULT} = [{'diff': 6.32500000000008e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.737500000000187e-05}, {'diff': 5.447299999999933e-05}, {'diff': 5.554200000000217e-05}, {'diff': 5.26530000000032e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:48.309" endtime="20201029 18:16:48.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.317" level="INFO">${ACCURACY} = {'diff': [6.32500000000008e-05, 5.361099999999855e-05, 5.737500000000187e-05, 5.447299999999933e-05, 5.554200000000217e-05, 5.26530000000032e-05, 5.173600000000014e-05, 5.640300000000001e-05, 5.354200...</msg>
<status status="PASS" starttime="20201029 18:16:48.314" endtime="20201029 18:16:48.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.321" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.320" endtime="20201029 18:16:48.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.324" level="INFO">VALUE: [6.32500000000008e-05, 5.361099999999855e-05, 5.737500000000187e-05, 5.447299999999933e-05, 5.554200000000217e-05, 5.26530000000032e-05, 5.173600000000014e-05, 5.640300000000001e-05, 5.354200000000017e-05, 5.5471999999997385e-05, 5.26669999999993e-05, 5.454200000000117e-05, 5.5471999999997385e-05, 5.4444000000000714e-05, 5.459699999999998e-05, 5.073600000000261e-05, 5.644500000000219e-05, 5.179099999999895e-05, 5.741700000000058e-05, 5.261200000000049e-05, 5.4499999999998994e-05, 5.161100000000002e-05, 5.640300000000001e-05, 5.163899999999916e-05, 5.545900000000076e-05, 5.1693999999997964e-05, 5.169499999999744e-05, 5.6416000000000105e-05, 5.162499999999959e-05, 5.6429999999999675e-05, 5.163900000000263e-05, 4.976400000000075e-05, 5.557000000000131e-05, 5.070899999999948e-05, 5.455600000000074e-05, 5.259700000000145e-05, 5.737500000000187e-05, 5.459699999999998e-05, 5.5513999999999564e-05, 5.555600000000174e-05, 5.168100000000134e-05, 5.654200000000317e-05, 5.454099999999823e-05, 5.5486000000000424e-05, 5.4485999999999424e-05, 5.5541999999998704e-05, 5.5486000000000424e-05, 5.069400000000043e-05, 5.068000000000086e-05, 5.558300000000141e-05]</msg>
<status status="PASS" starttime="20201029 18:16:48.323" endtime="20201029 18:16:48.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.318" endtime="20201029 18:16:48.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.335" endtime="20201029 18:16:48.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.333" endtime="20201029 18:16:48.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.331" endtime="20201029 18:16:48.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.964" endtime="20201029 18:16:48.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.963" endtime="20201029 18:16:48.356"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.365" endtime="20201029 18:16:48.388"></status>
</kw>
<msg timestamp="20201029 18:16:48.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.363" endtime="20201029 18:16:48.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.390" endtime="20201029 18:16:48.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.392" endtime="20201029 18:16:48.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.361" endtime="20201029 18:16:48.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.358" endtime="20201029 18:16:48.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.402" endtime="20201029 18:16:48.688"></status>
</kw>
<msg timestamp="20201029 18:16:48.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024902444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024963653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.400" endtime="20201029 18:16:48.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024902444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024963653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.692" endtime="20201029 18:16:48.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.701" endtime="20201029 18:16:48.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.397" endtime="20201029 18:16:48.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.396" endtime="20201029 18:16:48.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.709" level="INFO">${RESULT} = [{'diff': 6.120899999999957e-05}, {'diff': 5.640300000000001e-05}, {'diff': 5.556999999999784e-05}, {'diff': 5.356999999999931e-05}, {'diff': 5.258299999999841e-05}, {'diff': 5.255500000000274e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:48.704" endtime="20201029 18:16:48.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.713" level="INFO">${ACCURACY} = {'diff': [6.120899999999957e-05, 5.640300000000001e-05, 5.556999999999784e-05, 5.356999999999931e-05, 5.258299999999841e-05, 5.255500000000274e-05, 5.6429999999999675e-05, 5.2708000000002e-05, 5.54999...</msg>
<status status="PASS" starttime="20201029 18:16:48.710" endtime="20201029 18:16:48.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.718" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.717" endtime="20201029 18:16:48.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.721" level="INFO">VALUE: [6.120899999999957e-05, 5.640300000000001e-05, 5.556999999999784e-05, 5.356999999999931e-05, 5.258299999999841e-05, 5.255500000000274e-05, 5.6429999999999675e-05, 5.2708000000002e-05, 5.5499999999999994e-05, 5.162499999999959e-05, 5.355599999999974e-05, 5.176299999999981e-05, 5.44869999999989e-05, 5.4499999999998994e-05, 5.165299999999873e-05, 5.269499999999844e-05, 5.738900000000144e-05, 5.355500000000027e-05, 5.643100000000262e-05, 5.6514000000000564e-05, 5.168000000000186e-05, 5.0679999999997394e-05, 5.165299999999873e-05, 5.4499999999998994e-05, 5.558300000000141e-05, 5.161100000000002e-05, 5.4513999999998564e-05, 5.641699999999958e-05, 5.559700000000098e-05, 5.356899999999984e-05, 5.356899999999984e-05, 5.166700000000177e-05, 5.354200000000017e-05, 5.16530000000022e-05, 5.080600000000046e-05, 5.16669999999983e-05, 5.068100000000034e-05, 5.069400000000043e-05, 5.16530000000022e-05, 5.268099999999887e-05, 5.166700000000177e-05, 5.655600000000274e-05, 5.070899999999948e-05, 5.356899999999984e-05, 5.545900000000076e-05, 5.638900000000044e-05, 5.261099999999755e-05, 5.163899999999916e-05, 5.077799999999785e-05, 5.641699999999958e-05]</msg>
<status status="PASS" starttime="20201029 18:16:48.719" endtime="20201029 18:16:48.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.714" endtime="20201029 18:16:48.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.727" endtime="20201029 18:16:48.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.725" endtime="20201029 18:16:48.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.724" endtime="20201029 18:16:48.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.357" endtime="20201029 18:16:48.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.356" endtime="20201029 18:16:48.747"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.757" endtime="20201029 18:16:48.780"></status>
</kw>
<msg timestamp="20201029 18:16:48.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.755" endtime="20201029 18:16:48.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.781" endtime="20201029 18:16:48.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.784" endtime="20201029 18:16:48.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.752" endtime="20201029 18:16:48.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.750" endtime="20201029 18:16:48.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.793" endtime="20201029 18:16:49.080"></status>
</kw>
<msg timestamp="20201029 18:16:49.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025214514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.792" endtime="20201029 18:16:49.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025214514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.084" endtime="20201029 18:16:49.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.092" endtime="20201029 18:16:49.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.789" endtime="20201029 18:16:49.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.787" endtime="20201029 18:16:49.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.099" level="INFO">${RESULT} = [{'diff': 6.50280000000017e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.554200000000217e-05}, {'diff': 5.1665999999998824e-05}, {'diff': 5.355599999999974e-05}, {'diff': 5.643099999999915e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:49.096" endtime="20201029 18:16:49.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:49.108" level="INFO">${ACCURACY} = {'diff': [6.50280000000017e-05, 5.362500000000159e-05, 5.554200000000217e-05, 5.1665999999998824e-05, 5.355599999999974e-05, 5.643099999999915e-05, 5.076399999999828e-05, 5.4651999999998785e-05, 5.259...</msg>
<status status="PASS" starttime="20201029 18:16:49.100" endtime="20201029 18:16:49.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.113" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:49.112" endtime="20201029 18:16:49.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.115" level="INFO">VALUE: [6.50280000000017e-05, 5.362500000000159e-05, 5.554200000000217e-05, 5.1665999999998824e-05, 5.355599999999974e-05, 5.643099999999915e-05, 5.076399999999828e-05, 5.4651999999998785e-05, 5.259799999999745e-05, 5.455500000000127e-05, 5.262500000000059e-05, 5.740300000000101e-05, 5.263900000000016e-05, 5.165299999999873e-05, 5.263900000000016e-05, 5.73749999999984e-05, 5.354200000000017e-05, 5.5486000000000424e-05, 5.5457999999997815e-05, 5.5457999999997815e-05, 5.545900000000076e-05, 5.16530000000022e-05, 5.461099999999955e-05, 5.173600000000014e-05, 5.55280000000026e-05, 5.261099999999755e-05, 5.5471999999997385e-05, 5.6443999999999245e-05, 5.070899999999948e-05, 5.259700000000145e-05, 5.5541999999998704e-05, 5.461099999999955e-05, 5.162499999999959e-05, 5.45280000000016e-05, 5.361100000000202e-05, 4.9737000000001086e-05, 5.363899999999769e-05, 5.359799999999845e-05, 5.6457999999998815e-05, 5.459699999999998e-05, 5.355500000000027e-05, 5.077700000000185e-05, 5.072199999999957e-05, 5.6416000000000105e-05, 5.451400000000203e-05, 5.2680000000002863e-05, 5.6486000000001424e-05, 5.456900000000084e-05, 5.361200000000149e-05, 5.5444000000001714e-05]</msg>
<status status="PASS" starttime="20201029 18:16:49.114" endtime="20201029 18:16:49.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.109" endtime="20201029 18:16:49.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:49.121" endtime="20201029 18:16:49.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.119" endtime="20201029 18:16:49.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.118" endtime="20201029 18:16:49.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.748" endtime="20201029 18:16:49.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.748" endtime="20201029 18:16:49.141"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.151" endtime="20201029 18:16:49.173"></status>
</kw>
<msg timestamp="20201029 18:16:49.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.149" endtime="20201029 18:16:49.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.174" endtime="20201029 18:16:49.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.177" endtime="20201029 18:16:49.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.146" endtime="20201029 18:16:49.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.144" endtime="20201029 18:16:49.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.186" endtime="20201029 18:16:49.474"></status>
</kw>
<msg timestamp="20201029 18:16:49.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023007944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023053778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.185" endtime="20201029 18:16:49.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023007944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023053778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.479" endtime="20201029 18:16:49.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.487" endtime="20201029 18:16:49.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.182" endtime="20201029 18:16:49.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.180" endtime="20201029 18:16:49.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.494" level="INFO">${RESULT} = [{'diff': 4.583400000000154e-05}, {'diff': 5.4485999999999424e-05}, {'diff': 5.558400000000088e-05}, {'diff': 5.259699999999798e-05}, {'diff': 5.5457999999997815e-05}, {'diff': 5.740300000000101e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:49.491" endtime="20201029 18:16:49.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:49.499" level="INFO">${ACCURACY} = {'diff': [4.583400000000154e-05, 5.4485999999999424e-05, 5.558400000000088e-05, 5.259699999999798e-05, 5.5457999999997815e-05, 5.740300000000101e-05, 5.45280000000016e-05, 5.4499999999998994e-05, 5.08...</msg>
<status status="PASS" starttime="20201029 18:16:49.495" endtime="20201029 18:16:49.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.503" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:49.502" endtime="20201029 18:16:49.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.507" level="INFO">VALUE: [4.583400000000154e-05, 5.4485999999999424e-05, 5.558400000000088e-05, 5.259699999999798e-05, 5.5457999999997815e-05, 5.740300000000101e-05, 5.45280000000016e-05, 5.4499999999998994e-05, 5.080500000000099e-05, 5.737500000000187e-05, 5.5429999999998675e-05, 5.451300000000256e-05, 5.173600000000014e-05, 5.355500000000027e-05, 5.6416000000000105e-05, 5.637500000000087e-05, 5.351400000000103e-05, 5.074999999999871e-05, 5.6443999999999245e-05, 5.4541999999997703e-05, 5.5471999999997385e-05, 5.644499999999872e-05, 5.355599999999974e-05, 5.173600000000014e-05, 5.359699999999898e-05, 5.1679999999998394e-05, 5.08469999999997e-05, 5.255599999999874e-05, 5.640300000000001e-05, 5.6416000000000105e-05, 5.077700000000185e-05, 5.261100000000102e-05, 5.5457999999997815e-05, 5.068000000000086e-05, 5.070899999999948e-05, 5.5486000000000424e-05, 5.2652000000000254e-05, 5.5443999999998245e-05, 5.5486000000000424e-05, 5.165299999999873e-05, 5.454099999999823e-05, 5.363900000000116e-05, 5.263900000000016e-05, 5.450000000000246e-05, 5.069499999999991e-05, 5.462499999999912e-05, 5.258400000000135e-05, 5.351400000000103e-05, 5.076399999999828e-05, 5.555600000000174e-05]</msg>
<status status="PASS" starttime="20201029 18:16:49.505" endtime="20201029 18:16:49.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.499" endtime="20201029 18:16:49.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:49.512" endtime="20201029 18:16:49.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.511" endtime="20201029 18:16:49.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.509" endtime="20201029 18:16:49.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.143" endtime="20201029 18:16:49.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.142" endtime="20201029 18:16:49.533"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.542" endtime="20201029 18:16:49.563"></status>
</kw>
<msg timestamp="20201029 18:16:49.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.541" endtime="20201029 18:16:49.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.565" endtime="20201029 18:16:49.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.567" endtime="20201029 18:16:49.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.538" endtime="20201029 18:16:49.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.536" endtime="20201029 18:16:49.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.577" endtime="20201029 18:16:49.863"></status>
</kw>
<msg timestamp="20201029 18:16:49.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.575" endtime="20201029 18:16:49.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.868" endtime="20201029 18:16:49.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.876" endtime="20201029 18:16:49.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.572" endtime="20201029 18:16:49.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.570" endtime="20201029 18:16:49.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.883" level="INFO">${RESULT} = [{'diff': 4.887500000000031e-05}, {'diff': 5.6457999999998815e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.273600000000114e-05}, {'diff': 5.068100000000034e-05}, {'diff': 5.163899999999916e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:49.880" endtime="20201029 18:16:49.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:49.887" level="INFO">${ACCURACY} = {'diff': [4.887500000000031e-05, 5.6457999999998815e-05, 5.6528000000000134e-05, 5.273600000000114e-05, 5.068100000000034e-05, 5.163899999999916e-05, 5.173600000000014e-05, 5.16669999999983e-05, 5.076...</msg>
<status status="PASS" starttime="20201029 18:16:49.884" endtime="20201029 18:16:49.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.892" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:49.891" endtime="20201029 18:16:49.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.895" level="INFO">VALUE: [4.887500000000031e-05, 5.6457999999998815e-05, 5.6528000000000134e-05, 5.273600000000114e-05, 5.068100000000034e-05, 5.163899999999916e-05, 5.173600000000014e-05, 5.16669999999983e-05, 5.076399999999828e-05, 5.169499999999744e-05, 5.076399999999828e-05, 5.16530000000022e-05, 5.079200000000089e-05, 5.6458000000002284e-05, 5.074999999999871e-05, 5.5499999999999994e-05, 5.172200000000057e-05, 5.358299999999941e-05, 5.5513999999999564e-05, 5.358400000000235e-05, 5.557000000000131e-05, 5.261100000000102e-05, 5.2707999999998534e-05, 5.2708000000002e-05, 5.6443999999999245e-05, 5.458399999999988e-05, 5.6500000000000994e-05, 5.44869999999989e-05, 5.451299999999909e-05, 5.458300000000041e-05, 5.0708e-05, 5.36670000000003e-05, 5.263900000000016e-05, 5.176399999999928e-05, 5.356999999999931e-05, 5.077799999999785e-05, 5.454200000000117e-05, 5.079200000000089e-05, 5.7444000000000245e-05, 5.2707999999998534e-05, 5.640300000000001e-05, 5.461200000000249e-05, 5.638900000000044e-05, 5.356999999999931e-05, 5.6443999999999245e-05, 5.358299999999941e-05, 5.180499999999852e-05, 5.6416000000000105e-05, 5.45410000000017e-05, 5.269400000000243e-05]</msg>
<status status="PASS" starttime="20201029 18:16:49.893" endtime="20201029 18:16:49.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.888" endtime="20201029 18:16:49.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:49.901" endtime="20201029 18:16:49.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.899" endtime="20201029 18:16:49.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.898" endtime="20201029 18:16:49.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.534" endtime="20201029 18:16:49.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.534" endtime="20201029 18:16:49.922"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.931" endtime="20201029 18:16:49.950"></status>
</kw>
<msg timestamp="20201029 18:16:49.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.929" endtime="20201029 18:16:49.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.952" endtime="20201029 18:16:49.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.955" endtime="20201029 18:16:49.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.926" endtime="20201029 18:16:49.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.924" endtime="20201029 18:16:49.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.964" endtime="20201029 18:16:50.251"></status>
</kw>
<msg timestamp="20201029 18:16:50.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021624847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.963" endtime="20201029 18:16:50.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021624847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021724278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.255" endtime="20201029 18:16:50.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.264" endtime="20201029 18:16:50.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.960" endtime="20201029 18:16:50.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.958" endtime="20201029 18:16:50.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.271" level="INFO">${RESULT} = [{'diff': 9.943100000000052e-05}, {'diff': 8.516599999999763e-05}, {'diff': 8.601399999999884e-05}, {'diff': 8.695800000000156e-05}, {'diff': 8.418100000000261e-05}, {'diff': 8.122200000000232e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:50.267" endtime="20201029 18:16:50.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:50.276" level="INFO">${ACCURACY} = {'diff': [9.943100000000052e-05, 8.516599999999763e-05, 8.601399999999884e-05, 8.695800000000156e-05, 8.418100000000261e-05, 8.122200000000232e-05, 8.416699999999958e-05, 8.409700000000173e-05, 8.1347...</msg>
<status status="PASS" starttime="20201029 18:16:50.272" endtime="20201029 18:16:50.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.281" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:50.280" endtime="20201029 18:16:50.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.283" level="INFO">VALUE: [9.943100000000052e-05, 8.516599999999763e-05, 8.601399999999884e-05, 8.695800000000156e-05, 8.418100000000261e-05, 8.122200000000232e-05, 8.416699999999958e-05, 8.409700000000173e-05, 8.134700000000245e-05, 8.692999999999895e-05, 8.518100000000015e-05, 8.694500000000147e-05, 8.612500000000287e-05, 8.601400000000231e-05, 8.518100000000015e-05, 8.504100000000098e-05, 8.423699999999743e-05, 8.695799999999809e-05, 8.134700000000245e-05, 8.701399999999984e-05, 8.13329999999994e-05, 8.505600000000002e-05, 8.230500000000127e-05, 8.422199999999838e-05, 8.511099999999883e-05, 8.599999999999927e-05, 8.423599999999795e-05, 8.694399999999852e-05, 8.601399999999884e-05, 8.615299999999854e-05, 8.130500000000027e-05, 8.413900000000044e-05, 8.695900000000104e-05, 8.231900000000084e-05, 8.508399999999916e-05, 8.505600000000002e-05, 8.708299999999822e-05, 8.597200000000013e-05, 8.708300000000169e-05, 8.119499999999918e-05, 8.134699999999898e-05, 8.509699999999926e-05, 8.422199999999838e-05, 8.505500000000055e-05, 8.709700000000126e-05, 8.220799999999681e-05, 8.61249999999994e-05, 8.21659999999981e-05, 8.505500000000055e-05, 8.137499999999812e-05]</msg>
<status status="PASS" starttime="20201029 18:16:50.282" endtime="20201029 18:16:50.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.277" endtime="20201029 18:16:50.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.289" endtime="20201029 18:16:50.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.287" endtime="20201029 18:16:50.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.286" endtime="20201029 18:16:50.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.923" endtime="20201029 18:16:50.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.922" endtime="20201029 18:16:50.309"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.319" endtime="20201029 18:16:50.343"></status>
</kw>
<msg timestamp="20201029 18:16:50.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.317" endtime="20201029 18:16:50.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.345" endtime="20201029 18:16:50.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.347" endtime="20201029 18:16:50.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.314" endtime="20201029 18:16:50.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.312" endtime="20201029 18:16:50.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.357" endtime="20201029 18:16:50.644"></status>
</kw>
<msg timestamp="20201029 18:16:50.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025624806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025697597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.355" endtime="20201029 18:16:50.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025624806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025697597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.649" endtime="20201029 18:16:50.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.657" endtime="20201029 18:16:50.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.353" endtime="20201029 18:16:50.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.351" endtime="20201029 18:16:50.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.664" level="INFO">${RESULT} = [{'diff': 7.279099999999913e-05}, {'diff': 8.51110000000023e-05}, {'diff': 8.426400000000056e-05}, {'diff': 8.605599999999755e-05}, {'diff': 8.520899999999929e-05}, {'diff': 8.6153000000002e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:50.661" endtime="20201029 18:16:50.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:50.669" level="INFO">${ACCURACY} = {'diff': [7.279099999999913e-05, 8.51110000000023e-05, 8.426400000000056e-05, 8.605599999999755e-05, 8.520899999999929e-05, 8.6153000000002e-05, 8.319500000000118e-05, 8.711100000000083e-05, 8.4110999...</msg>
<status status="PASS" starttime="20201029 18:16:50.665" endtime="20201029 18:16:50.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.673" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:50.672" endtime="20201029 18:16:50.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.676" level="INFO">VALUE: [7.279099999999913e-05, 8.51110000000023e-05, 8.426400000000056e-05, 8.605599999999755e-05, 8.520899999999929e-05, 8.6153000000002e-05, 8.319500000000118e-05, 8.711100000000083e-05, 8.411099999999783e-05, 8.326300000000009e-05, 8.141600000000082e-05, 8.417999999999967e-05, 8.51249999999984e-05, 8.6153000000002e-05, 8.50980000000022e-05, 8.422199999999838e-05, 8.32919999999987e-05, 8.705599999999855e-05, 8.512500000000187e-05, 8.133399999999888e-05, 8.416699999999958e-05, 8.234699999999998e-05, 8.797200000000213e-05, 8.61110000000033e-05, 8.705599999999855e-05, 8.320799999999781e-05, 8.140300000000072e-05, 8.418099999999915e-05, 8.413899999999697e-05, 8.227799999999813e-05, 8.4153e-05, 8.611099999999983e-05, 8.615299999999854e-05, 8.508399999999916e-05, 8.519400000000024e-05, 8.131999999999931e-05, 8.705499999999908e-05, 8.23330000000004e-05, 8.504100000000098e-05, 8.32919999999987e-05, 8.22780000000016e-05, 8.229099999999823e-05, 8.224999999999899e-05, 8.419399999999924e-05, 8.509799999999873e-05, 8.137500000000158e-05, 8.129099999999723e-05, 8.709700000000126e-05, 8.613899999999897e-05, 8.423599999999795e-05]</msg>
<status status="PASS" starttime="20201029 18:16:50.674" endtime="20201029 18:16:50.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.669" endtime="20201029 18:16:50.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.681" endtime="20201029 18:16:50.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.679" endtime="20201029 18:16:50.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.678" endtime="20201029 18:16:50.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.310" endtime="20201029 18:16:50.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.310" endtime="20201029 18:16:50.702"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.712" endtime="20201029 18:16:50.735"></status>
</kw>
<msg timestamp="20201029 18:16:50.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.711" endtime="20201029 18:16:50.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.736" endtime="20201029 18:16:50.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.739" endtime="20201029 18:16:50.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.708" endtime="20201029 18:16:50.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.705" endtime="20201029 18:16:50.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.748" endtime="20201029 18:16:51.035"></status>
</kw>
<msg timestamp="20201029 18:16:51.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.747" endtime="20201029 18:16:51.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024918264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.039" endtime="20201029 18:16:51.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.048" endtime="20201029 18:16:51.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.744" endtime="20201029 18:16:51.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.742" endtime="20201029 18:16:51.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:51.055" level="INFO">${RESULT} = [{'diff': 8.412500000000087e-05}, {'diff': 8.4153e-05}, {'diff': 8.608300000000069e-05}, {'diff': 8.220899999999975e-05}, {'diff': 8.609799999999973e-05}, {'diff': 8.51660000000011e-05}, {'diff': 8.41...</msg>
<status status="PASS" starttime="20201029 18:16:51.051" endtime="20201029 18:16:51.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:51.059" level="INFO">${ACCURACY} = {'diff': [8.412500000000087e-05, 8.4153e-05, 8.608300000000069e-05, 8.220899999999975e-05, 8.609799999999973e-05, 8.51660000000011e-05, 8.413900000000044e-05, 8.223599999999942e-05, 8.219500000000018e...</msg>
<status status="PASS" starttime="20201029 18:16:51.056" endtime="20201029 18:16:51.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.064" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:51.063" endtime="20201029 18:16:51.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.067" level="INFO">VALUE: [8.412500000000087e-05, 8.4153e-05, 8.608300000000069e-05, 8.220899999999975e-05, 8.609799999999973e-05, 8.51660000000011e-05, 8.413900000000044e-05, 8.223599999999942e-05, 8.219500000000018e-05, 8.700000000000027e-05, 8.234699999999998e-05, 8.594500000000047e-05, 8.413899999999697e-05, 8.222199999999985e-05, 8.327699999999966e-05, 8.602799999999841e-05, 8.23049999999978e-05, 8.420800000000228e-05, 8.601399999999884e-05, 8.218100000000061e-05, 8.616700000000158e-05, 8.131899999999984e-05, 8.227700000000213e-05, 8.694399999999852e-05, 8.427700000000066e-05, 8.219400000000071e-05, 8.406900000000259e-05, 8.430599999999927e-05, 8.130599999999974e-05, 8.609700000000026e-05, 8.129200000000017e-05, 8.608299999999722e-05, 8.411099999999783e-05, 8.695900000000104e-05, 8.226399999999856e-05, 8.513899999999797e-05, 8.219399999999724e-05, 8.700000000000027e-05, 8.709700000000126e-05, 8.223599999999942e-05, 8.4153e-05, 8.130600000000321e-05, 8.31659999999991e-05, 8.61249999999994e-05, 8.69860000000007e-05, 8.512500000000187e-05, 8.136200000000149e-05, 8.520799999999981e-05, 8.41110000000013e-05, 8.31659999999991e-05]</msg>
<status status="PASS" starttime="20201029 18:16:51.065" endtime="20201029 18:16:51.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.060" endtime="20201029 18:16:51.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:51.073" endtime="20201029 18:16:51.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.071" endtime="20201029 18:16:51.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.070" endtime="20201029 18:16:51.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.703" endtime="20201029 18:16:51.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.702" endtime="20201029 18:16:51.094"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.103" endtime="20201029 18:16:51.130"></status>
</kw>
<msg timestamp="20201029 18:16:51.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.101" endtime="20201029 18:16:51.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.132" endtime="20201029 18:16:51.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.134" endtime="20201029 18:16:51.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.098" endtime="20201029 18:16:51.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.096" endtime="20201029 18:16:51.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.144" endtime="20201029 18:16:51.432"></status>
</kw>
<msg timestamp="20201029 18:16:51.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025285028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025374903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.142" endtime="20201029 18:16:51.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025285028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025374903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.436" endtime="20201029 18:16:51.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.444" endtime="20201029 18:16:51.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.139" endtime="20201029 18:16:51.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.138" endtime="20201029 18:16:51.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:51.451" level="INFO">${RESULT} = [{'diff': 8.987499999999968e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.222199999999985e-05}, {'diff': 8.69860000000007e-05}, {'diff': 8.520799999999981e-05}, {'diff': 8.222199999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:51.448" endtime="20201029 18:16:51.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:51.457" level="INFO">${ACCURACY} = {'diff': [8.987499999999968e-05, 8.604200000000145e-05, 8.222199999999985e-05, 8.69860000000007e-05, 8.520799999999981e-05, 8.222199999999985e-05, 8.318000000000214e-05, 8.31110000000003e-05, 8.519499...</msg>
<status status="PASS" starttime="20201029 18:16:51.452" endtime="20201029 18:16:51.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.461" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:51.460" endtime="20201029 18:16:51.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.464" level="INFO">VALUE: [8.987499999999968e-05, 8.604200000000145e-05, 8.222199999999985e-05, 8.69860000000007e-05, 8.520799999999981e-05, 8.222199999999985e-05, 8.318000000000214e-05, 8.31110000000003e-05, 8.519499999999972e-05, 8.315199999999953e-05, 8.506900000000012e-05, 8.697199999999766e-05, 8.604199999999798e-05, 8.506900000000012e-05, 8.326399999999956e-05, 8.420800000000228e-05, 8.219400000000071e-05, 8.511099999999883e-05, 8.324999999999999e-05, 8.13329999999994e-05, 8.126299999999809e-05, 8.508299999999969e-05, 8.318099999999815e-05, 8.226400000000203e-05, 8.13329999999994e-05, 8.609699999999679e-05, 8.505600000000002e-05, 8.604200000000145e-05, 8.130599999999974e-05, 8.322200000000085e-05, 8.506900000000012e-05, 8.124999999999799e-05, 8.41660000000001e-05, 8.226399999999856e-05, 8.3152999999999e-05, 8.601399999999884e-05, 8.230500000000127e-05, 8.413800000000096e-05, 8.505600000000002e-05, 8.326399999999956e-05, 8.219400000000071e-05, 8.427800000000013e-05, 8.3152999999999e-05, 8.512500000000187e-05, 8.702800000000288e-05, 8.801400000000084e-05, 8.601399999999884e-05, 8.222199999999985e-05, 8.51119999999983e-05, 8.320900000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:16:51.463" endtime="20201029 18:16:51.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.458" endtime="20201029 18:16:51.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:51.469" endtime="20201029 18:16:51.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.468" endtime="20201029 18:16:51.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.466" endtime="20201029 18:16:51.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.095" endtime="20201029 18:16:51.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.094" endtime="20201029 18:16:51.490"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.499" endtime="20201029 18:16:51.523"></status>
</kw>
<msg timestamp="20201029 18:16:51.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.498" endtime="20201029 18:16:51.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.525" endtime="20201029 18:16:51.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.527" endtime="20201029 18:16:51.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.495" endtime="20201029 18:16:51.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.493" endtime="20201029 18:16:51.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.537" endtime="20201029 18:16:51.824"></status>
</kw>
<msg timestamp="20201029 18:16:51.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025503722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025594569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.535" endtime="20201029 18:16:51.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025503722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025594569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.828" endtime="20201029 18:16:51.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.837" endtime="20201029 18:16:51.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.533" endtime="20201029 18:16:51.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.531" endtime="20201029 18:16:51.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:51.844" level="INFO">${RESULT} = [{'diff': 9.084700000000154e-05}, {'diff': 8.711099999999736e-05}, {'diff': 8.315199999999953e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.134800000000192e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:51.840" endtime="20201029 18:16:51.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:51.848" level="INFO">${ACCURACY} = {'diff': [9.084700000000154e-05, 8.711099999999736e-05, 8.315199999999953e-05, 8.312499999999987e-05, 8.125000000000146e-05, 8.134800000000192e-05, 8.422199999999838e-05, 8.601399999999884e-05, 8.5069...</msg>
<status status="PASS" starttime="20201029 18:16:51.845" endtime="20201029 18:16:51.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.853" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:51.851" endtime="20201029 18:16:51.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.855" level="INFO">VALUE: [9.084700000000154e-05, 8.711099999999736e-05, 8.315199999999953e-05, 8.312499999999987e-05, 8.125000000000146e-05, 8.134800000000192e-05, 8.422199999999838e-05, 8.601399999999884e-05, 8.506900000000012e-05, 8.51799999999972e-05, 8.601399999999884e-05, 8.4153e-05, 8.324999999999999e-05, 8.318099999999815e-05, 8.413900000000044e-05, 8.31659999999991e-05, 8.506999999999959e-05, 8.416699999999958e-05, 8.51669999999971e-05, 8.417999999999967e-05, 8.608400000000016e-05, 8.4153e-05, 8.224999999999899e-05, 8.123600000000189e-05, 8.144399999999996e-05, 8.222299999999932e-05, 8.222299999999932e-05, 8.702699999999994e-05, 8.319399999999824e-05, 8.316699999999858e-05, 8.320800000000128e-05, 8.604100000000198e-05, 8.322299999999686e-05, 8.506999999999959e-05, 8.791699999999986e-05, 8.795799999999909e-05, 8.220800000000028e-05, 8.701399999999984e-05, 8.222299999999932e-05, 8.511099999999883e-05, 8.02909999999997e-05, 8.423600000000142e-05, 8.601399999999884e-05, 8.404199999999945e-05, 8.619400000000124e-05, 8.218100000000061e-05, 8.408400000000163e-05, 8.123599999999842e-05, 8.700000000000027e-05, 8.415200000000053e-05]</msg>
<status status="PASS" starttime="20201029 18:16:51.854" endtime="20201029 18:16:51.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.849" endtime="20201029 18:16:51.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:51.860" endtime="20201029 18:16:51.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.859" endtime="20201029 18:16:51.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.857" endtime="20201029 18:16:51.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.491" endtime="20201029 18:16:51.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.491" endtime="20201029 18:16:51.881"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.890" endtime="20201029 18:16:51.915"></status>
</kw>
<msg timestamp="20201029 18:16:51.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.889" endtime="20201029 18:16:51.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.916" endtime="20201029 18:16:51.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.919" endtime="20201029 18:16:51.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.886" endtime="20201029 18:16:51.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.884" endtime="20201029 18:16:51.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.928" endtime="20201029 18:16:52.215"></status>
</kw>
<msg timestamp="20201029 18:16:52.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026237167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026332875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.927" endtime="20201029 18:16:52.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026237167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026332875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.219" endtime="20201029 18:16:52.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.228" endtime="20201029 18:16:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.924" endtime="20201029 18:16:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.922" endtime="20201029 18:16:52.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:52.235" level="INFO">${RESULT} = [{'diff': 9.57079999999999e-05}, {'diff': 8.613899999999897e-05}, {'diff': 8.702800000000288e-05}, {'diff': 8.51249999999984e-05}, {'diff': 8.230600000000074e-05}, {'diff': 8.506900000000012e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:52.232" endtime="20201029 18:16:52.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:52.239" level="INFO">${ACCURACY} = {'diff': [9.57079999999999e-05, 8.613899999999897e-05, 8.702800000000288e-05, 8.51249999999984e-05, 8.230600000000074e-05, 8.506900000000012e-05, 8.797199999999866e-05, 8.79730000000016e-05, 8.6027999...</msg>
<status status="PASS" starttime="20201029 18:16:52.236" endtime="20201029 18:16:52.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.244" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:52.243" endtime="20201029 18:16:52.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.247" level="INFO">VALUE: [9.57079999999999e-05, 8.613899999999897e-05, 8.702800000000288e-05, 8.51249999999984e-05, 8.230600000000074e-05, 8.506900000000012e-05, 8.797199999999866e-05, 8.79730000000016e-05, 8.602799999999841e-05, 8.223599999999942e-05, 8.22780000000016e-05, 8.606900000000112e-05, 8.700000000000027e-05, 8.234799999999945e-05, 8.508399999999916e-05, 8.317999999999867e-05, 8.32780000000026e-05, 8.41249999999974e-05, 8.422199999999838e-05, 8.12780000000006e-05, 8.700000000000027e-05, 8.426400000000056e-05, 8.797199999999866e-05, 8.702799999999941e-05, 8.318100000000161e-05, 8.219400000000071e-05, 8.501300000000184e-05, 8.620799999999734e-05, 8.601400000000231e-05, 8.125000000000146e-05, 8.229099999999823e-05, 8.032000000000178e-05, 8.604199999999798e-05, 8.322300000000032e-05, 8.512500000000187e-05, 8.219399999999724e-05, 8.413900000000044e-05, 8.22910000000017e-05, 8.122200000000232e-05, 8.602800000000188e-05, 8.422199999999838e-05, 8.607000000000059e-05, 8.126400000000103e-05, 8.609700000000026e-05, 8.330500000000227e-05, 8.313799999999996e-05, 8.220800000000028e-05, 8.700000000000027e-05, 8.6153000000002e-05, 8.698599999999723e-05]</msg>
<status status="PASS" starttime="20201029 18:16:52.245" endtime="20201029 18:16:52.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.240" endtime="20201029 18:16:52.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.253" endtime="20201029 18:16:52.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.251" endtime="20201029 18:16:52.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.250" endtime="20201029 18:16:52.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.882" endtime="20201029 18:16:52.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.882" endtime="20201029 18:16:52.274"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.283" endtime="20201029 18:16:52.311"></status>
</kw>
<msg timestamp="20201029 18:16:52.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.281" endtime="20201029 18:16:52.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.313" endtime="20201029 18:16:52.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.316" endtime="20201029 18:16:52.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.278" endtime="20201029 18:16:52.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.276" endtime="20201029 18:16:52.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.325" endtime="20201029 18:16:52.612"></status>
</kw>
<msg timestamp="20201029 18:16:52.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025877958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02597275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:52.324" endtime="20201029 18:16:52.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025877958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02597275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:52.616" endtime="20201029 18:16:52.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.624" endtime="20201029 18:16:52.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.321" endtime="20201029 18:16:52.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.319" endtime="20201029 18:16:52.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:52.631" level="INFO">${RESULT} = [{'diff': 9.479199999999979e-05}, {'diff': 8.615299999999854e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.129200000000017e-05}, {'diff': 8.318100000000161e-05}, {'diff': 8.709700000000126e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:52.628" endtime="20201029 18:16:52.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:52.639" level="INFO">${ACCURACY} = {'diff': [9.479199999999979e-05, 8.615299999999854e-05, 8.312499999999987e-05, 8.129200000000017e-05, 8.318100000000161e-05, 8.709700000000126e-05, 8.225000000000246e-05, 8.216600000000157e-05, 8.3208...</msg>
<status status="PASS" starttime="20201029 18:16:52.632" endtime="20201029 18:16:52.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.644" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:52.643" endtime="20201029 18:16:52.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.646" level="INFO">VALUE: [9.479199999999979e-05, 8.615299999999854e-05, 8.312499999999987e-05, 8.129200000000017e-05, 8.318100000000161e-05, 8.709700000000126e-05, 8.225000000000246e-05, 8.216600000000157e-05, 8.320899999999729e-05, 8.520799999999981e-05, 8.130500000000027e-05, 8.708300000000169e-05, 8.418099999999915e-05, 8.226400000000203e-05, 8.697200000000113e-05, 8.713899999999997e-05, 8.420799999999881e-05, 8.137500000000158e-05, 8.411200000000077e-05, 8.222199999999985e-05, 8.426399999999709e-05, 8.509799999999873e-05, 8.426399999999709e-05, 8.231900000000084e-05, 8.224999999999899e-05, 8.420799999999881e-05, 8.711099999999736e-05, 8.220799999999681e-05, 8.71250000000004e-05, 8.220800000000028e-05, 8.329099999999923e-05, 8.61669999999981e-05, 8.708299999999822e-05, 8.237499999999912e-05, 8.224999999999899e-05, 8.320799999999781e-05, 8.136200000000149e-05, 8.708300000000169e-05, 8.226399999999856e-05, 8.704199999999898e-05, 8.227699999999866e-05, 8.708399999999769e-05, 8.608299999999722e-05, 8.608300000000069e-05, 8.513900000000144e-05, 8.71250000000004e-05, 8.4153e-05, 8.609700000000026e-05, 8.329200000000217e-05, 8.134700000000245e-05]</msg>
<status status="PASS" starttime="20201029 18:16:52.645" endtime="20201029 18:16:52.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.640" endtime="20201029 18:16:52.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.652" endtime="20201029 18:16:52.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.650" endtime="20201029 18:16:52.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.649" endtime="20201029 18:16:52.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.275" endtime="20201029 18:16:52.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.274" endtime="20201029 18:16:52.673"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.682" endtime="20201029 18:16:52.704"></status>
</kw>
<msg timestamp="20201029 18:16:52.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.680" endtime="20201029 18:16:52.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.707" endtime="20201029 18:16:52.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.709" endtime="20201029 18:16:52.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.677" endtime="20201029 18:16:52.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.675" endtime="20201029 18:16:52.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.719" endtime="20201029 18:16:53.006"></status>
</kw>
<msg timestamp="20201029 18:16:53.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023730764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023811056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.718" endtime="20201029 18:16:53.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023730764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023811056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.011" endtime="20201029 18:16:53.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.019" endtime="20201029 18:16:53.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.715" endtime="20201029 18:16:53.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.713" endtime="20201029 18:16:53.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.026" level="INFO">${RESULT} = [{'diff': 8.029199999999917e-05}, {'diff': 8.129200000000017e-05}, {'diff': 8.222199999999985e-05}, {'diff': 8.605500000000155e-05}, {'diff': 8.238899999999869e-05}, {'diff': 8.412500000000087e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:53.023" endtime="20201029 18:16:53.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:53.031" level="INFO">${ACCURACY} = {'diff': [8.029199999999917e-05, 8.129200000000017e-05, 8.222199999999985e-05, 8.605500000000155e-05, 8.238899999999869e-05, 8.412500000000087e-05, 8.319500000000118e-05, 8.326399999999956e-05, 8.4055...</msg>
<status status="PASS" starttime="20201029 18:16:53.027" endtime="20201029 18:16:53.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.035" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:53.034" endtime="20201029 18:16:53.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.038" level="INFO">VALUE: [8.029199999999917e-05, 8.129200000000017e-05, 8.222199999999985e-05, 8.605500000000155e-05, 8.238899999999869e-05, 8.412500000000087e-05, 8.319500000000118e-05, 8.326399999999956e-05, 8.405599999999902e-05, 8.416699999999958e-05, 8.418099999999915e-05, 8.320899999999729e-05, 8.795900000000204e-05, 8.12910000000007e-05, 8.606900000000112e-05, 8.313799999999996e-05, 8.7944999999999e-05, 8.034800000000092e-05, 8.319400000000171e-05, 8.504200000000045e-05, 8.319500000000118e-05, 8.513899999999797e-05, 8.220800000000028e-05, 8.419399999999924e-05, 8.313799999999996e-05, 8.220899999999975e-05, 8.137499999999812e-05, 8.124999999999799e-05, 8.219500000000018e-05, 8.122200000000232e-05, 8.713899999999997e-05, 8.601399999999884e-05, 8.126400000000103e-05, 8.21659999999981e-05, 8.61110000000033e-05, 8.408299999999869e-05, 8.41110000000013e-05, 8.230600000000074e-05, 8.318100000000161e-05, 8.316699999999858e-05, 8.504200000000045e-05, 8.602799999999841e-05, 8.22780000000016e-05, 8.707000000000159e-05, 8.322200000000085e-05, 8.705599999999855e-05, 8.697200000000113e-05, 8.516700000000058e-05, 8.123600000000189e-05, 8.706899999999865e-05]</msg>
<status status="PASS" starttime="20201029 18:16:53.037" endtime="20201029 18:16:53.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.031" endtime="20201029 18:16:53.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.043" endtime="20201029 18:16:53.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.041" endtime="20201029 18:16:53.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.040" endtime="20201029 18:16:53.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.674" endtime="20201029 18:16:53.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.673" endtime="20201029 18:16:53.064"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.073" endtime="20201029 18:16:53.096"></status>
</kw>
<msg timestamp="20201029 18:16:53.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.071" endtime="20201029 18:16:53.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.098" endtime="20201029 18:16:53.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.100" endtime="20201029 18:16:53.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.069" endtime="20201029 18:16:53.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.067" endtime="20201029 18:16:53.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.111" endtime="20201029 18:16:53.399"></status>
</kw>
<msg timestamp="20201029 18:16:53.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024367639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.109" endtime="20201029 18:16:53.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024367639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.404" endtime="20201029 18:16:53.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.413" endtime="20201029 18:16:53.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.106" endtime="20201029 18:16:53.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.104" endtime="20201029 18:16:53.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.420" level="INFO">${RESULT} = [{'diff': 7.937499999999958e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.236099999999955e-05}, {'diff': 8.330600000000174e-05}, {'diff': 8.4153e-05}, {'diff': 8.422199999999838e-05}, {'diff': 8.6...</msg>
<status status="PASS" starttime="20201029 18:16:53.417" endtime="20201029 18:16:53.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:53.425" level="INFO">${ACCURACY} = {'diff': [7.937499999999958e-05, 8.323600000000042e-05, 8.236099999999955e-05, 8.330600000000174e-05, 8.4153e-05, 8.422199999999838e-05, 8.613899999999897e-05, 8.609700000000026e-05, 8.331899999999837...</msg>
<status status="PASS" starttime="20201029 18:16:53.421" endtime="20201029 18:16:53.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.429" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:53.428" endtime="20201029 18:16:53.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.432" level="INFO">VALUE: [7.937499999999958e-05, 8.323600000000042e-05, 8.236099999999955e-05, 8.330600000000174e-05, 8.4153e-05, 8.422199999999838e-05, 8.613899999999897e-05, 8.609700000000026e-05, 8.331899999999837e-05, 8.317999999999867e-05, 8.140200000000125e-05, 8.413800000000096e-05, 8.137500000000158e-05, 8.227799999999813e-05, 8.222199999999985e-05, 8.61249999999994e-05, 8.524999999999852e-05, 8.037500000000058e-05, 8.705600000000202e-05, 8.326399999999956e-05, 8.41660000000001e-05, 8.708399999999769e-05, 8.134700000000245e-05, 8.702799999999941e-05, 8.41660000000001e-05, 8.225000000000246e-05, 8.709699999999779e-05, 8.219400000000071e-05, 8.423600000000142e-05, 8.706900000000212e-05, 8.231900000000084e-05, 8.61249999999994e-05, 8.605600000000102e-05, 8.518000000000067e-05, 8.715299999999954e-05, 8.14170000000003e-05, 8.319500000000118e-05, 8.619400000000124e-05, 8.416700000000304e-05, 8.61249999999994e-05, 8.326400000000303e-05, 8.513899999999797e-05, 8.513900000000144e-05, 8.416699999999958e-05, 8.044499999999843e-05, 8.513900000000144e-05, 8.418100000000261e-05, 8.513900000000144e-05, 8.413800000000096e-05, 8.701400000000331e-05]</msg>
<status status="PASS" starttime="20201029 18:16:53.431" endtime="20201029 18:16:53.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.426" endtime="20201029 18:16:53.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.438" endtime="20201029 18:16:53.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.437" endtime="20201029 18:16:53.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.435" endtime="20201029 18:16:53.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.065" endtime="20201029 18:16:53.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.064" endtime="20201029 18:16:53.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.240" endtime="20201029 18:16:53.459"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:14.161" endtime="20201029 18:16:53.460" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:15:33.384" endtime="20201029 18:16:53.464"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.520" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:53.528" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:54.642" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:53.518" endtime="20201029 18:16:54.643"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.645" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:16:54.644" endtime="20201029 18:16:54.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.517" endtime="20201029 18:16:54.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:54.648" endtime="20201029 18:16:54.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.647" endtime="20201029 18:16:54.904"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.917" endtime="20201029 18:16:54.935"></status>
</kw>
<msg timestamp="20201029 18:16:54.935" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.915" endtime="20201029 18:16:54.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.936" endtime="20201029 18:16:54.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.941" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:54.939" endtime="20201029 18:16:54.941"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:54.913" endtime="20201029 18:16:54.942"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:54.910" endtime="20201029 18:16:54.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.909" endtime="20201029 18:16:54.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:54.947" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:54.946" endtime="20201029 18:16:54.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.944" endtime="20201029 18:16:54.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.908" endtime="20201029 18:16:54.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.908" endtime="20201029 18:16:54.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.948" endtime="20201029 18:16:54.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.906" endtime="20201029 18:16:54.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.951" endtime="20201029 18:16:54.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.905" endtime="20201029 18:16:54.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.516" endtime="20201029 18:16:54.954"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:54.959" endtime="20201029 18:16:54.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.958" endtime="20201029 18:16:54.980"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.993" endtime="20201029 18:16:55.010"></status>
</kw>
<msg timestamp="20201029 18:16:55.011" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.991" endtime="20201029 18:16:55.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.013" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.012" endtime="20201029 18:16:55.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.017" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:55.014" endtime="20201029 18:16:55.017"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:54.988" endtime="20201029 18:16:55.018"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:54.986" endtime="20201029 18:16:55.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.985" endtime="20201029 18:16:55.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:55.023" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:55.022" endtime="20201029 18:16:55.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.020" endtime="20201029 18:16:55.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.984" endtime="20201029 18:16:55.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.983" endtime="20201029 18:16:55.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.024" endtime="20201029 18:16:55.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.982" endtime="20201029 18:16:55.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.980" endtime="20201029 18:16:55.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.957" endtime="20201029 18:16:55.027"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.036" endtime="20201029 18:17:01.155"></status>
</kw>
<msg timestamp="20201029 18:17:01.155" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.034" endtime="20201029 18:17:01.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.156" endtime="20201029 18:17:01.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.159" endtime="20201029 18:17:01.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.031" endtime="20201029 18:17:01.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.029" endtime="20201029 18:17:01.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.164" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 18:17:01.162" endtime="20201029 18:17:01.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.169" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:01.168" endtime="20201029 18:17:01.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.171" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:01.170" endtime="20201029 18:17:01.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.165" endtime="20201029 18:17:01.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.176" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:01.175" endtime="20201029 18:17:01.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.178" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:01.177" endtime="20201029 18:17:01.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.172" endtime="20201029 18:17:01.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.183" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:01.182" endtime="20201029 18:17:01.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.185" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:17:01.184" endtime="20201029 18:17:01.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.179" endtime="20201029 18:17:01.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.192" endtime="20201029 18:17:01.495"></status>
</kw>
<msg timestamp="20201029 18:17:01.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066088042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166110653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.191" endtime="20201029 18:17:01.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066088042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166110653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.499" endtime="20201029 18:17:01.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.508" endtime="20201029 18:17:01.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.188" endtime="20201029 18:17:01.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.186" endtime="20201029 18:17:01.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:01.514" level="INFO">${FILTERED} = [{'diff': 0.100022611}, {'diff': 0.099971903}, {'diff': 0.09997187500000004}, {'diff': 0.099971847}, {'diff': 0.09997187500000004}, {'diff': 0.09997181999999993}, {'diff': 0.099971959}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201029 18:17:01.511" endtime="20201029 18:17:01.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.518" level="INFO">${RESULT} = {'diff': [0.100022611, 0.099971903, 0.09997187500000004, 0.099971847, 0.09997187500000004, 0.09997181999999993, 0.099971959, 0.09997179200000006, 0.0999718329999999, 0.099971861, 0.09997198600000012, ...</msg>
<status status="PASS" starttime="20201029 18:17:01.515" endtime="20201029 18:17:01.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.522" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:01.521" endtime="20201029 18:17:01.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.525" level="INFO">VALUE: [0.100022611, 0.099971903, 0.09997187500000004, 0.099971847, 0.09997187500000004, 0.09997181999999993, 0.099971959, 0.09997179200000006, 0.0999718329999999, 0.099971861, 0.09997198600000012, 0.099971861, 0.09997184800000003, 0.09997183399999998, 0.09997188899999987, 0.09997194399999998, 0.09997176400000019, 0.09997191599999988, 0.09997190299999992, 0.09997177799999979, 0.09997198600000035, 0.09997188899999987, 0.09997186100000022, 0.09997191699999997, 0.09997190300000014, 0.09997184699999995, 0.09997183299999968, 0.09997187500000004, 0.09997188899999987, 0.09997181899999985, 0.09997188900000031, 0.09997180499999958, 0.0999719579999998, 0.09997181899999985, 0.09997193000000015, 0.09997183300000012, 0.0999718749999996, 0.0999719029999997, 0.09997180500000002, 0.09997187500000049, 0.09997187500000049, 0.09997187500000049, 0.09997183300000057, 0.09997195800000025, 0.09997179199999984, 0.09997184800000003, 0.09997184699999995, 0.09997191700000041, 0.09997184800000003, 0.09997186100000022, 0.09997183300000057]</msg>
<status status="PASS" starttime="20201029 18:17:01.523" endtime="20201029 18:17:01.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.519" endtime="20201029 18:17:01.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.028" endtime="20201029 18:17:01.527"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:54.954" endtime="20201029 18:17:01.527" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:01.534" endtime="20201029 18:17:01.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.532" endtime="20201029 18:17:01.554"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.568" endtime="20201029 18:17:01.587"></status>
</kw>
<msg timestamp="20201029 18:17:01.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.566" endtime="20201029 18:17:01.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.590" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.589" endtime="20201029 18:17:01.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.593" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:01.591" endtime="20201029 18:17:01.593"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:01.564" endtime="20201029 18:17:01.594"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:01.561" endtime="20201029 18:17:01.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.559" endtime="20201029 18:17:01.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:01.599" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:01.598" endtime="20201029 18:17:01.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.596" endtime="20201029 18:17:01.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.558" endtime="20201029 18:17:01.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.557" endtime="20201029 18:17:01.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.601" endtime="20201029 18:17:01.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.556" endtime="20201029 18:17:01.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.554" endtime="20201029 18:17:01.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.531" endtime="20201029 18:17:01.604"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.613" endtime="20201029 18:17:07.743"></status>
</kw>
<msg timestamp="20201029 18:17:07.744" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.611" endtime="20201029 18:17:07.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.752" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.747" endtime="20201029 18:17:07.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.755" endtime="20201029 18:17:07.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.608" endtime="20201029 18:17:07.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.606" endtime="20201029 18:17:07.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.770" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 18:17:07.765" endtime="20201029 18:17:07.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.780" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:07.778" endtime="20201029 18:17:07.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.785" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:07.783" endtime="20201029 18:17:07.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.773" endtime="20201029 18:17:07.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.798" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:07.793" endtime="20201029 18:17:07.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.803" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:07.800" endtime="20201029 18:17:07.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.788" endtime="20201029 18:17:07.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.813" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:07.811" endtime="20201029 18:17:07.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.818" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:17:07.816" endtime="20201029 18:17:07.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.806" endtime="20201029 18:17:07.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.834" endtime="20201029 18:17:08.132"></status>
</kw>
<msg timestamp="20201029 18:17:08.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073435653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173535472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.830" endtime="20201029 18:17:08.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073435653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173535472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.136" endtime="20201029 18:17:08.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.144" endtime="20201029 18:17:08.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.825" endtime="20201029 18:17:08.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.821" endtime="20201029 18:17:08.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:08.151" level="INFO">${FILTERED} = [{'diff': 0.10009981899999999}, {'diff': 0.100061278}, {'diff': 0.099812403}, {'diff': 0.10000242999999998}, {'diff': 0.099971847}, {'diff': 0.09997188899999998}, {'diff': 0.09997187499999993}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:17:08.148" endtime="20201029 18:17:08.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.155" level="INFO">${RESULT} = {'diff': [0.10009981899999999, 0.100061278, 0.099812403, 0.10000242999999998, 0.099971847, 0.09997188899999998, 0.09997187499999993, 0.09997184699999995, 0.09997190300000003, 0.09997188899999998, 0.09...</msg>
<status status="PASS" starttime="20201029 18:17:08.152" endtime="20201029 18:17:08.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.160" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:08.159" endtime="20201029 18:17:08.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.162" level="INFO">VALUE: [0.10009981899999999, 0.100061278, 0.099812403, 0.10000242999999998, 0.099971847, 0.09997188899999998, 0.09997187499999993, 0.09997184699999995, 0.09997190300000003, 0.09997188899999998, 0.09997181900000007, 0.0999718329999999, 0.09997190300000014, 0.099971861, 0.09997181999999993, 0.09997184800000003, 0.09997193100000001, 0.09997187500000004, 0.09997183399999998, 0.09997176399999974, 0.09997194399999998, 0.09997194400000042, 0.09997176399999974, 0.09997188800000023, 0.09997191699999997, 0.09997190300000014, 0.09997181899999985, 0.09997180600000011, 0.09997183399999976, 0.09997195899999989, 0.09997188900000031, 0.09997186099999977, 0.09997186100000022, 0.09997186099999977, 0.09997188800000023, 0.09997188899999987, 0.09997180500000002, 0.09997184699999995, 0.09997187500000004, 0.09997190300000014, 0.09997191699999952, 0.09997179199999984, 0.0999719300000006, 0.09997190300000014, 0.09997187500000049, 0.09997187500000049, 0.09997190300000014, 0.0999718190000003, 0.09997186099999933, 0.09997188899999987, 0.0999718749999996]</msg>
<status status="PASS" starttime="20201029 18:17:08.161" endtime="20201029 18:17:08.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.156" endtime="20201029 18:17:08.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.604" endtime="20201029 18:17:08.164"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:01.529" endtime="20201029 18:17:08.164" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:08.171" endtime="20201029 18:17:08.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.169" endtime="20201029 18:17:08.191"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.204" endtime="20201029 18:17:08.223"></status>
</kw>
<msg timestamp="20201029 18:17:08.223" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.203" endtime="20201029 18:17:08.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.224" endtime="20201029 18:17:08.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.229" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:08.227" endtime="20201029 18:17:08.229"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:08.200" endtime="20201029 18:17:08.230"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:08.198" endtime="20201029 18:17:08.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.196" endtime="20201029 18:17:08.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:08.235" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:08.234" endtime="20201029 18:17:08.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.232" endtime="20201029 18:17:08.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.195" endtime="20201029 18:17:08.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.195" endtime="20201029 18:17:08.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.236" endtime="20201029 18:17:08.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.193" endtime="20201029 18:17:08.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.192" endtime="20201029 18:17:08.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.168" endtime="20201029 18:17:08.239"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.250" endtime="20201029 18:17:14.378"></status>
</kw>
<msg timestamp="20201029 18:17:14.379" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.246" endtime="20201029 18:17:14.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.384" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.381" endtime="20201029 18:17:14.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.386" endtime="20201029 18:17:14.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.243" endtime="20201029 18:17:14.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.241" endtime="20201029 18:17:14.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:14.398" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 18:17:14.393" endtime="20201029 18:17:14.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.407" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:14.404" endtime="20201029 18:17:14.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.413" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:14.410" endtime="20201029 18:17:14.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.399" endtime="20201029 18:17:14.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.423" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:14.421" endtime="20201029 18:17:14.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.427" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:14.426" endtime="20201029 18:17:14.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.416" endtime="20201029 18:17:14.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.432" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:14.431" endtime="20201029 18:17:14.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.434" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:17:14.433" endtime="20201029 18:17:14.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.429" endtime="20201029 18:17:14.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.442" endtime="20201029 18:17:14.736"></status>
</kw>
<msg timestamp="20201029 18:17:14.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073101486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173313528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.440" endtime="20201029 18:17:14.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073101486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173313528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.740" endtime="20201029 18:17:14.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.748" endtime="20201029 18:17:14.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.437" endtime="20201029 18:17:14.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.436" endtime="20201029 18:17:14.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:14.754" level="INFO">${FILTERED} = [{'diff': 0.100212042}, {'diff': 0.10006316700000004}, {'diff': 0.099687472}, {'diff': 0.099971902}, {'diff': 0.09997187499999999}, {'diff': 0.09997191699999997}, {'diff': 0.09997190200000006}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:17:14.751" endtime="20201029 18:17:14.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:14.759" level="INFO">${RESULT} = {'diff': [0.100212042, 0.10006316700000004, 0.099687472, 0.099971902, 0.09997187499999999, 0.09997191699999997, 0.09997190200000006, 0.099971806, 0.09997190299999992, 0.09997177699999993, 0.0999719580...</msg>
<status status="PASS" starttime="20201029 18:17:14.755" endtime="20201029 18:17:14.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.763" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:14.762" endtime="20201029 18:17:14.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.766" level="INFO">VALUE: [0.100212042, 0.10006316700000004, 0.099687472, 0.099971902, 0.09997187499999999, 0.09997191699999997, 0.09997190200000006, 0.099971806, 0.09997190299999992, 0.09997177699999993, 0.09997195800000003, 0.0999718329999999, 0.0999718329999999, 0.09997193100000001, 0.09997187500000004, 0.09997194500000006, 0.099971861, 0.09997176399999996, 0.09997187500000004, 0.09997179099999998, 0.09997194399999998, 0.09997190300000014, 0.09997180600000011, 0.09997181899999985, 0.09997186100000022, 0.09997188799999979, 0.09997193100000024, 0.09997187500000004, 0.09997181899999985, 0.09997194399999998, 0.09997187500000004, 0.09997180600000011, 0.09997188899999987, 0.09997193099999979, 0.09997186100000022, 0.09997184699999995, 0.09997183300000012, 0.0999717630000001, 0.09997191699999997, 0.09997194499999962, 0.0999718749999996, 0.09997176400000019, 0.09997187500000049, 0.09997190300000014, 0.09997180500000002, 0.09997184699999995, 0.0999718749999996, 0.09997183299999968, 0.09997192999999971, 0.09997184699999995, 0.09997191600000033]</msg>
<status status="PASS" starttime="20201029 18:17:14.765" endtime="20201029 18:17:14.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.760" endtime="20201029 18:17:14.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.240" endtime="20201029 18:17:14.768"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:08.166" endtime="20201029 18:17:14.768" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:14.775" endtime="20201029 18:17:14.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.773" endtime="20201029 18:17:14.795"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.808" endtime="20201029 18:17:14.825"></status>
</kw>
<msg timestamp="20201029 18:17:14.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.806" endtime="20201029 18:17:14.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.826" endtime="20201029 18:17:14.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.832" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:14.829" endtime="20201029 18:17:14.832"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:14.803" endtime="20201029 18:17:14.833"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:14.801" endtime="20201029 18:17:14.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.800" endtime="20201029 18:17:14.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:14.837" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:14.837" endtime="20201029 18:17:14.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.834" endtime="20201029 18:17:14.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.799" endtime="20201029 18:17:14.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.798" endtime="20201029 18:17:14.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.839" endtime="20201029 18:17:14.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.797" endtime="20201029 18:17:14.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.795" endtime="20201029 18:17:14.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.772" endtime="20201029 18:17:14.842"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.850" endtime="20201029 18:17:20.978"></status>
</kw>
<msg timestamp="20201029 18:17:20.979" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.848" endtime="20201029 18:17:20.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.984" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.981" endtime="20201029 18:17:20.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.987" endtime="20201029 18:17:20.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.846" endtime="20201029 18:17:20.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.844" endtime="20201029 18:17:20.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:20.998" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 18:17:20.994" endtime="20201029 18:17:20.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.007" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:21.005" endtime="20201029 18:17:21.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.011" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:21.009" endtime="20201029 18:17:21.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.000" endtime="20201029 18:17:21.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.021" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:21.019" endtime="20201029 18:17:21.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.025" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:21.023" endtime="20201029 18:17:21.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.014" endtime="20201029 18:17:21.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.035" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:21.033" endtime="20201029 18:17:21.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.040" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:17:21.038" endtime="20201029 18:17:21.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.029" endtime="20201029 18:17:21.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.055" endtime="20201029 18:17:21.359"></status>
</kw>
<msg timestamp="20201029 18:17:21.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065967556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166345764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.052" endtime="20201029 18:17:21.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065967556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166345764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.363" endtime="20201029 18:17:21.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.371" endtime="20201029 18:17:21.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.046" endtime="20201029 18:17:21.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.043" endtime="20201029 18:17:21.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:21.377" level="INFO">${FILTERED} = [{'diff': 0.10037820800000001}, {'diff': 0.10007522200000002}, {'diff': 0.09949802800000002}, {'diff': 0.099971847}, {'diff': 0.09997190300000003}, {'diff': 0.09997183399999998}, {'diff': 0.0999718339...</msg>
<status status="PASS" starttime="20201029 18:17:21.374" endtime="20201029 18:17:21.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.381" level="INFO">${RESULT} = {'diff': [0.10037820800000001, 0.10007522200000002, 0.09949802800000002, 0.099971847, 0.09997190300000003, 0.09997183399999998, 0.09997183399999998, 0.09997188899999998, 0.09997184699999995, 0.0999718...</msg>
<status status="PASS" starttime="20201029 18:17:21.378" endtime="20201029 18:17:21.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.386" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:21.385" endtime="20201029 18:17:21.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.388" level="INFO">VALUE: [0.10037820800000001, 0.10007522200000002, 0.09949802800000002, 0.099971847, 0.09997190300000003, 0.09997183399999998, 0.09997183399999998, 0.09997188899999998, 0.09997184699999995, 0.09997188899999998, 0.09997181999999993, 0.09997180600000011, 0.09997197200000008, 0.09997183399999998, 0.09997184799999981, 0.09997184800000003, 0.09997193100000001, 0.09997186200000008, 0.09997190300000014, 0.09997183399999998, 0.09997190300000014, 0.09997177699999993, 0.09997188899999987, 0.09997188900000031, 0.09997190300000014, 0.09997181899999985, 0.09997180500000002, 0.09997190300000014, 0.09997186199999986, 0.09997176400000019, 0.09997193000000015, 0.09997191699999997, 0.09997186099999977, 0.09997180600000011, 0.09997188900000031, 0.09997179199999984, 0.09997187500000004, 0.09997191699999997, 0.0999718340000002, 0.09997184700000039, 0.09997180600000011, 0.0999718749999996, 0.09997190299999925, 0.09997190300000014, 0.09997179200000073, 0.09997187500000049, 0.09997184699999995, 0.09997188899999987, 0.09997184699999995, 0.09997194399999998, 0.09997183299999968]</msg>
<status status="PASS" starttime="20201029 18:17:21.387" endtime="20201029 18:17:21.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.382" endtime="20201029 18:17:21.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.842" endtime="20201029 18:17:21.390"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:14.769" endtime="20201029 18:17:21.390" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:21.397" endtime="20201029 18:17:21.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.395" endtime="20201029 18:17:21.417"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.431" endtime="20201029 18:17:21.447"></status>
</kw>
<msg timestamp="20201029 18:17:21.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.429" endtime="20201029 18:17:21.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.450" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.449" endtime="20201029 18:17:21.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:21.451" endtime="20201029 18:17:21.453"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:21.427" endtime="20201029 18:17:21.454"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:21.423" endtime="20201029 18:17:21.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.422" endtime="20201029 18:17:21.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:21.459" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:21.458" endtime="20201029 18:17:21.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.456" endtime="20201029 18:17:21.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.421" endtime="20201029 18:17:21.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.421" endtime="20201029 18:17:21.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.460" endtime="20201029 18:17:21.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.419" endtime="20201029 18:17:21.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.418" endtime="20201029 18:17:21.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.394" endtime="20201029 18:17:21.463"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.471" endtime="20201029 18:17:27.602"></status>
</kw>
<msg timestamp="20201029 18:17:27.606" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.470" endtime="20201029 18:17:27.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.609" endtime="20201029 18:17:27.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.620" endtime="20201029 18:17:27.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.467" endtime="20201029 18:17:27.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.465" endtime="20201029 18:17:27.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:27.642" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 18:17:27.634" endtime="20201029 18:17:27.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.652" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:27.650" endtime="20201029 18:17:27.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.656" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:27.654" endtime="20201029 18:17:27.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.644" endtime="20201029 18:17:27.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.667" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:27.665" endtime="20201029 18:17:27.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.672" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:27.669" endtime="20201029 18:17:27.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.660" endtime="20201029 18:17:27.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.681" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:27.680" endtime="20201029 18:17:27.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.685" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:17:27.682" endtime="20201029 18:17:27.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.675" endtime="20201029 18:17:27.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.692" endtime="20201029 18:17:27.990"></status>
</kw>
<msg timestamp="20201029 18:17:27.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065433792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165961708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.691" endtime="20201029 18:17:27.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065433792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165961708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.994" endtime="20201029 18:17:28.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.002" endtime="20201029 18:17:28.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.688" endtime="20201029 18:17:28.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.686" endtime="20201029 18:17:28.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:28.009" level="INFO">${FILTERED} = [{'diff': 0.10052791600000001}, {'diff': 0.10007765300000002}, {'diff': 0.099353723}, {'diff': 0.09997181999999999}, {'diff': 0.09997188899999998}, {'diff': 0.09997181900000007}, {'diff': 0.0999719719...</msg>
<status status="PASS" starttime="20201029 18:17:28.006" endtime="20201029 18:17:28.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:28.013" level="INFO">${RESULT} = {'diff': [0.10052791600000001, 0.10007765300000002, 0.099353723, 0.09997181999999999, 0.09997188899999998, 0.09997181900000007, 0.09997197199999996, 0.09997187500000004, 0.09997188899999998, 0.0999717...</msg>
<status status="PASS" starttime="20201029 18:17:28.010" endtime="20201029 18:17:28.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.018" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:28.017" endtime="20201029 18:17:28.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.021" level="INFO">VALUE: [0.10052791600000001, 0.10007765300000002, 0.099353723, 0.09997181999999999, 0.09997188899999998, 0.09997181900000007, 0.09997197199999996, 0.09997187500000004, 0.09997188899999998, 0.09997179199999995, 0.09997190200000006, 0.09997188900000009, 0.09997179099999998, 0.09997191699999997, 0.09997176400000019, 0.0999719859999999, 0.09997179099999998, 0.09997184699999995, 0.09997192999999993, 0.09997175000000014, 0.0999719579999998, 0.09997180500000002, 0.09997190300000014, 0.09997177800000001, 0.09997186099999977, 0.09997190200000006, 0.09997187500000004, 0.0999717910000002, 0.09997190300000014, 0.09997183299999968, 0.09997183300000012, 0.09997194399999998, 0.0999717910000002, 0.09997186099999977, 0.09997184699999995, 0.09997188900000031, 0.09997187500000004, 0.09997183299999968, 0.0999719029999997, 0.09997177800000001, 0.09997186099999933, 0.09997190200000006, 0.0999718190000003, 0.09997191699999952, 0.09997183399999976, 0.09997183399999976, 0.09997182000000038, 0.09997183299999968, 0.09997187500000049, 0.09997193100000068, 0.09997187500000049]</msg>
<status status="PASS" starttime="20201029 18:17:28.019" endtime="20201029 18:17:28.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.014" endtime="20201029 18:17:28.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.464" endtime="20201029 18:17:28.023"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:21.392" endtime="20201029 18:17:28.023" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.030" endtime="20201029 18:17:28.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.028" endtime="20201029 18:17:28.050"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.064" endtime="20201029 18:17:28.083"></status>
</kw>
<msg timestamp="20201029 18:17:28.083" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.062" endtime="20201029 18:17:28.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.086" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.085" endtime="20201029 18:17:28.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.089" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:28.087" endtime="20201029 18:17:28.089"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:28.059" endtime="20201029 18:17:28.090"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:28.057" endtime="20201029 18:17:28.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.056" endtime="20201029 18:17:28.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:28.095" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:28.094" endtime="20201029 18:17:28.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.092" endtime="20201029 18:17:28.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.055" endtime="20201029 18:17:28.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.054" endtime="20201029 18:17:28.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.097" endtime="20201029 18:17:28.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.053" endtime="20201029 18:17:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.051" endtime="20201029 18:17:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.027" endtime="20201029 18:17:28.100"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.109" endtime="20201029 18:17:34.242"></status>
</kw>
<msg timestamp="20201029 18:17:34.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.106" endtime="20201029 18:17:34.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.248" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.245" endtime="20201029 18:17:34.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.251" endtime="20201029 18:17:34.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.104" endtime="20201029 18:17:34.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.102" endtime="20201029 18:17:34.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.263" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 18:17:34.258" endtime="20201029 18:17:34.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.272" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:34.270" endtime="20201029 18:17:34.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.277" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:34.274" endtime="20201029 18:17:34.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.265" endtime="20201029 18:17:34.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.287" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:34.285" endtime="20201029 18:17:34.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.292" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:34.290" endtime="20201029 18:17:34.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.280" endtime="20201029 18:17:34.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.297" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:34.296" endtime="20201029 18:17:34.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.300" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:17:34.299" endtime="20201029 18:17:34.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.294" endtime="20201029 18:17:34.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.307" endtime="20201029 18:17:34.605"></status>
</kw>
<msg timestamp="20201029 18:17:34.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073956556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174711361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.306" endtime="20201029 18:17:34.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073956556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.174711361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.610" endtime="20201029 18:17:34.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.620" endtime="20201029 18:17:34.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.303" endtime="20201029 18:17:34.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.301" endtime="20201029 18:17:34.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:34.629" level="INFO">${FILTERED} = [{'diff': 0.100754805}, {'diff': 0.10007533299999999}, {'diff': 0.100065083}, {'diff': 0.09904852800000002}, {'diff': 0.099971861}, {'diff': 0.099971861}, {'diff': 0.09997181899999996}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201029 18:17:34.625" endtime="20201029 18:17:34.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.634" level="INFO">${RESULT} = {'diff': [0.100754805, 0.10007533299999999, 0.100065083, 0.09904852800000002, 0.099971861, 0.099971861, 0.09997181899999996, 0.09997187500000004, 0.09997181899999996, 0.09997195799999992, 0.0999718469...</msg>
<status status="PASS" starttime="20201029 18:17:34.630" endtime="20201029 18:17:34.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.638" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:34.637" endtime="20201029 18:17:34.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.640" level="INFO">VALUE: [0.100754805, 0.10007533299999999, 0.100065083, 0.09904852800000002, 0.099971861, 0.099971861, 0.09997181899999996, 0.09997187500000004, 0.09997181899999996, 0.09997195799999992, 0.09997184699999995, 0.0999717910000002, 0.09997184699999995, 0.09997191599999988, 0.09997183300000012, 0.09997181999999993, 0.09997193100000001, 0.09997177800000001, 0.09997188900000009, 0.09997197300000016, 0.09997177800000001, 0.09997183300000012, 0.09997186099999977, 0.09997187500000004, 0.09997190300000014, 0.09997184699999995, 0.09997180600000011, 0.09997191700000041, 0.09997186099999977, 0.09997193100000024, 0.09997183299999968, 0.09997177700000037, 0.09997187500000004, 0.09997197199999963, 0.0999718190000003, 0.09997177699999993, 0.09997186099999977, 0.0999718190000003, 0.09997193099999979, 0.09997188899999943, 0.09997186100000022, 0.09997180500000002, 0.09997184699999995, 0.09997183300000057, 0.09997184699999995, 0.09997186099999933, 0.09997186100000022, 0.09997186100000022, 0.09997190299999925, 0.0999718749999996, 0.0999718749999996]</msg>
<status status="PASS" starttime="20201029 18:17:34.639" endtime="20201029 18:17:34.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.635" endtime="20201029 18:17:34.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.100" endtime="20201029 18:17:34.642"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:28.025" endtime="20201029 18:17:34.643" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:53.474" endtime="20201029 18:17:34.649"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:14:48.188" endtime="20201029 18:17:34.681"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
