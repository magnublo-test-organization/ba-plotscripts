<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201103 12:24:09.775" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201103 12:24:10.357" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201103 12:24:10.365" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201103 12:24:11.548" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201103 12:24:10.355" endtime="20201103 12:24:11.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.551" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201103 12:24:11.550" endtime="20201103 12:24:11.552"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:10.354" endtime="20201103 12:24:11.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:11.554" endtime="20201103 12:24:11.741"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.553" endtime="20201103 12:24:11.742"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:11.754" endtime="20201103 12:24:11.775"></status>
</kw>
<msg timestamp="20201103 12:24:11.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:11.753" endtime="20201103 12:24:11.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:11.776" endtime="20201103 12:24:11.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.781" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:11.779" endtime="20201103 12:24:11.781"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:11.750" endtime="20201103 12:24:11.782"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:11.748" endtime="20201103 12:24:11.783"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.747" endtime="20201103 12:24:11.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:11.788" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:11.787" endtime="20201103 12:24:11.789"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.784" endtime="20201103 12:24:11.790"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.746" endtime="20201103 12:24:11.790"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.745" endtime="20201103 12:24:11.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:11.792" endtime="20201103 12:24:11.795"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.744" endtime="20201103 12:24:11.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:11.797" endtime="20201103 12:24:11.801"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.742" endtime="20201103 12:24:11.802"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:10.352" endtime="20201103 12:24:11.802"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:11.814" endtime="20201103 12:24:11.836"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.812" endtime="20201103 12:24:11.837"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:11.865" endtime="20201103 12:24:11.888"></status>
</kw>
<msg timestamp="20201103 12:24:11.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:11.861" endtime="20201103 12:24:11.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:11.890" endtime="20201103 12:24:11.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.894" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:11.893" endtime="20201103 12:24:11.895"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:11.856" endtime="20201103 12:24:11.895"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:11.851" endtime="20201103 12:24:11.896"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.848" endtime="20201103 12:24:11.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:11.900" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:11.899" endtime="20201103 12:24:11.900"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.897" endtime="20201103 12:24:11.900"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.846" endtime="20201103 12:24:11.901"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.845" endtime="20201103 12:24:11.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:11.901" endtime="20201103 12:24:11.903"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.842" endtime="20201103 12:24:11.903"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.839" endtime="20201103 12:24:11.904"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.809" endtime="20201103 12:24:11.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:11.912" endtime="20201103 12:24:11.931"></status>
</kw>
<msg timestamp="20201103 12:24:11.931" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:11.910" endtime="20201103 12:24:11.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.933" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:11.932" endtime="20201103 12:24:11.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:11.934" endtime="20201103 12:24:11.936"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.907" endtime="20201103 12:24:11.936"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.905" endtime="20201103 12:24:11.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.941" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201103 12:24:11.940" endtime="20201103 12:24:11.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.943" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201103 12:24:11.942" endtime="20201103 12:24:11.943"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.938" endtime="20201103 12:24:11.944"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:24:11.803" endtime="20201103 12:24:11.944" critical="yes"></status>
</test>
<status status="PASS" starttime="20201103 12:24:09.897" endtime="20201103 12:24:11.946"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201103 12:24:11.995" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201103 12:24:12.004" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201103 12:24:13.129" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201103 12:24:11.994" endtime="20201103 12:24:13.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201103 12:24:13.132" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201103 12:24:13.131" endtime="20201103 12:24:13.133"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.992" endtime="20201103 12:24:13.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:13.135" endtime="20201103 12:24:13.394"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.134" endtime="20201103 12:24:13.395"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:13.416" endtime="20201103 12:24:13.432"></status>
</kw>
<msg timestamp="20201103 12:24:13.433" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:13.414" endtime="20201103 12:24:13.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:13.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:13.434" endtime="20201103 12:24:13.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:13.438" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:13.436" endtime="20201103 12:24:13.439"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:13.412" endtime="20201103 12:24:13.439"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:13.408" endtime="20201103 12:24:13.440"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.405" endtime="20201103 12:24:13.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:13.444" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:13.443" endtime="20201103 12:24:13.444"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.441" endtime="20201103 12:24:13.445"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.403" endtime="20201103 12:24:13.445"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.402" endtime="20201103 12:24:13.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:13.446" endtime="20201103 12:24:13.447"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.400" endtime="20201103 12:24:13.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:13.448" endtime="20201103 12:24:13.450"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.397" endtime="20201103 12:24:13.450"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:11.991" endtime="20201103 12:24:13.451"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:13.457" endtime="20201103 12:24:13.476"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.455" endtime="20201103 12:24:13.477"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:13.490" endtime="20201103 12:24:13.513"></status>
</kw>
<msg timestamp="20201103 12:24:13.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:13.488" endtime="20201103 12:24:13.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:13.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:13.515" endtime="20201103 12:24:13.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:13.519" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:13.517" endtime="20201103 12:24:13.519"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:13.486" endtime="20201103 12:24:13.520"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:13.483" endtime="20201103 12:24:13.520"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.482" endtime="20201103 12:24:13.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:13.524" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:13.524" endtime="20201103 12:24:13.525"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.522" endtime="20201103 12:24:13.525"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.481" endtime="20201103 12:24:13.525"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.481" endtime="20201103 12:24:13.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:13.526" endtime="20201103 12:24:13.527"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.479" endtime="20201103 12:24:13.528"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.478" endtime="20201103 12:24:13.528"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.453" endtime="20201103 12:24:13.529"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:13.537" endtime="20201103 12:24:20.560"></status>
</kw>
<msg timestamp="20201103 12:24:20.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:13.535" endtime="20201103 12:24:20.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.566" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:20.564" endtime="20201103 12:24:20.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:20.569" endtime="20201103 12:24:20.574"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.533" endtime="20201103 12:24:20.575"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.531" endtime="20201103 12:24:20.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:20.581" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201103 12:24:20.578" endtime="20201103 12:24:20.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.589" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:20.587" endtime="20201103 12:24:20.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.594" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:24:20.592" endtime="20201103 12:24:20.594"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.583" endtime="20201103 12:24:20.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.603" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:20.601" endtime="20201103 12:24:20.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.608" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:24:20.606" endtime="20201103 12:24:20.608"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.597" endtime="20201103 12:24:20.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.617" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:24:20.615" endtime="20201103 12:24:20.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.622" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201103 12:24:20.620" endtime="20201103 12:24:20.623"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.611" endtime="20201103 12:24:20.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:20.637" endtime="20201103 12:24:20.947"></status>
</kw>
<msg timestamp="20201103 12:24:20.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070886014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170858139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:20.634" endtime="20201103 12:24:20.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070886014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170858139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:20.951" endtime="20201103 12:24:20.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:20.959" endtime="20201103 12:24:20.961"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.629" endtime="20201103 12:24:20.962"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.625" endtime="20201103 12:24:20.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:24:20.966" level="INFO">${FILTERED} = [{'time': 1.170858139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09997212499999986, 'source_diff': 0.09997212499999986}, {'time': 1.270830569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:24:20.963" endtime="20201103 12:24:20.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:20.980" level="INFO">${RESULT} = {'diff': [0.09997212499999986, 0.09997156899999982, 0.09997163900000006, 0.09997152799999998, 0.09997156900000004, 0.09997155499999999, 0.09997158399999995, 0.0999716530000001, 0.09997151399999993, 0....</msg>
<status status="PASS" starttime="20201103 12:24:20.967" endtime="20201103 12:24:20.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.984" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:24:20.983" endtime="20201103 12:24:20.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:20.987" level="INFO">VALUE: [0.09997212499999986, 0.09997156899999982, 0.09997163900000006, 0.09997152799999998, 0.09997156900000004, 0.09997155499999999, 0.09997158399999995, 0.0999716530000001, 0.09997151399999993, 0.09997159700000013, 0.09997159799999977, 0.09997172200000026, 0.09997155599999985, 0.0999716110000004, 0.09997162499999979, 0.09997159700000013, 0.09997159800000022, 0.0999716799999999, 0.09997149999999966, 0.09997158399999995, 0.09997165300000033, 0.09997154099999994, 0.09997161099999996, 0.09997158299999986, 0.09997161099999996, 0.09997158300000031, 0.09997158299999986, 0.09997159700000013, 0.09997158399999995, 0.09997158300000031, 0.09997156900000004, 0.09997156900000004, 0.09997154200000047, 0.09997165299999988, 0.09997154199999958, 0.09997159700000058, 0.09997151399999993, 0.09997162500000023, 0.0999715839999995, 0.09997155600000074, 0.09997162500000023, 0.09997163899999961, 0.09997155600000074, 0.09997162500000023, 0.09997166700000015, 0.09997158300000031, 0.09997152799999931, 0.09997158400000039, 0.09997159699999969, 0.09997165299999988]</msg>
<status status="PASS" starttime="20201103 12:24:20.985" endtime="20201103 12:24:20.988"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.981" endtime="20201103 12:24:20.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:20.990" endtime="20201103 12:24:20.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:20.994" endtime="20201103 12:24:21.014"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.992" endtime="20201103 12:24:21.014"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:20.989" endtime="20201103 12:24:21.015"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:13.529" endtime="20201103 12:24:21.015"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:24:13.451" endtime="20201103 12:24:21.015" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:21.022" endtime="20201103 12:24:21.042"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.021" endtime="20201103 12:24:21.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:21.056" endtime="20201103 12:24:21.078"></status>
</kw>
<msg timestamp="20201103 12:24:21.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:21.054" endtime="20201103 12:24:21.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:21.081" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:21.080" endtime="20201103 12:24:21.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:21.084" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:21.082" endtime="20201103 12:24:21.085"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:21.052" endtime="20201103 12:24:21.085"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:21.049" endtime="20201103 12:24:21.086"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.048" endtime="20201103 12:24:21.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:21.090" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:21.089" endtime="20201103 12:24:21.091"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.087" endtime="20201103 12:24:21.091"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.047" endtime="20201103 12:24:21.091"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.046" endtime="20201103 12:24:21.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:21.092" endtime="20201103 12:24:21.093"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.045" endtime="20201103 12:24:21.094"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.043" endtime="20201103 12:24:21.094"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.019" endtime="20201103 12:24:21.095"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:21.104" endtime="20201103 12:24:28.127"></status>
</kw>
<msg timestamp="20201103 12:24:28.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:21.103" endtime="20201103 12:24:28.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:28.131" endtime="20201103 12:24:28.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:28.136" endtime="20201103 12:24:28.140"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.099" endtime="20201103 12:24:28.141"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.097" endtime="20201103 12:24:28.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:28.147" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201103 12:24:28.143" endtime="20201103 12:24:28.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.156" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:28.154" endtime="20201103 12:24:28.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.161" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:24:28.159" endtime="20201103 12:24:28.162"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.149" endtime="20201103 12:24:28.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.172" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:28.169" endtime="20201103 12:24:28.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.176" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:24:28.174" endtime="20201103 12:24:28.177"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.164" endtime="20201103 12:24:28.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.187" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:24:28.185" endtime="20201103 12:24:28.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.191" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201103 12:24:28.189" endtime="20201103 12:24:28.192"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.180" endtime="20201103 12:24:28.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:28.208" endtime="20201103 12:24:28.504"></status>
</kw>
<msg timestamp="20201103 12:24:28.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071970389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171942375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:28.204" endtime="20201103 12:24:28.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071970389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171942375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:28.508" endtime="20201103 12:24:28.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:28.517" endtime="20201103 12:24:28.518"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.198" endtime="20201103 12:24:28.519"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.195" endtime="20201103 12:24:28.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:24:28.523" level="INFO">${FILTERED} = [{'time': 1.171942375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0999719859999999, 'source_diff': 0.0999719859999999}, {'time': 1.271914819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0...</msg>
<status status="PASS" starttime="20201103 12:24:28.520" endtime="20201103 12:24:28.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:28.538" level="INFO">${RESULT} = {'diff': [0.0999719859999999, 0.09997158300000009, 0.09997158299999986, 0.09997159700000013, 0.099971598, 0.09997158400000017, 0.09997161099999996, 0.09997148600000005, 0.09997159699999991, 0.09997166...</msg>
<status status="PASS" starttime="20201103 12:24:28.524" endtime="20201103 12:24:28.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.542" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:24:28.541" endtime="20201103 12:24:28.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.545" level="INFO">VALUE: [0.0999719859999999, 0.09997158300000009, 0.09997158299999986, 0.09997159700000013, 0.099971598, 0.09997158400000017, 0.09997161099999996, 0.09997148600000005, 0.09997159699999991, 0.09997166699999993, 0.09997151399999993, 0.09997163799999997, 0.09997152700000012, 0.09997158299999986, 0.09997152699999967, 0.09997165200000024, 0.09997158299999986, 0.09997157000000012, 0.09997159700000013, 0.09997158399999995, 0.09997154200000002, 0.09997163900000006, 0.09997163900000006, 0.09997161099999996, 0.09997154200000002, 0.09997158299999986, 0.09997159699999969, 0.09997162500000023, 0.09997154099999994, 0.0999716519999998, 0.09997156900000004, 0.09997155499999977, 0.09997168100000042, 0.099971472, 0.09997161200000004, 0.09997172200000026, 0.09997152700000012, 0.09997157000000012, 0.09997161099999996, 0.09997151399999993, 0.09997159700000058, 0.09997161099999996, 0.09997158300000031, 0.09997151400000082, 0.09997159699999969, 0.09997161099999996, 0.09997158299999942, 0.09997156999999923, 0.09997159700000058, 0.09997156999999923]</msg>
<status status="PASS" starttime="20201103 12:24:28.543" endtime="20201103 12:24:28.545"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.539" endtime="20201103 12:24:28.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:28.548" endtime="20201103 12:24:28.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:28.552" endtime="20201103 12:24:28.571"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.550" endtime="20201103 12:24:28.572"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.546" endtime="20201103 12:24:28.572"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:21.095" endtime="20201103 12:24:28.572"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:24:21.017" endtime="20201103 12:24:28.573" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:28.580" endtime="20201103 12:24:28.600"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.578" endtime="20201103 12:24:28.600"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:28.614" endtime="20201103 12:24:28.635"></status>
</kw>
<msg timestamp="20201103 12:24:28.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:28.612" endtime="20201103 12:24:28.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:28.637" endtime="20201103 12:24:28.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:28.641" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:28.639" endtime="20201103 12:24:28.642"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:28.609" endtime="20201103 12:24:28.642"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:28.607" endtime="20201103 12:24:28.643"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.605" endtime="20201103 12:24:28.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:28.647" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:28.646" endtime="20201103 12:24:28.648"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.644" endtime="20201103 12:24:28.649"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.605" endtime="20201103 12:24:28.649"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.604" endtime="20201103 12:24:28.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:28.650" endtime="20201103 12:24:28.651"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.603" endtime="20201103 12:24:28.652"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.601" endtime="20201103 12:24:28.652"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.577" endtime="20201103 12:24:28.653"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:28.661" endtime="20201103 12:24:35.688"></status>
</kw>
<msg timestamp="20201103 12:24:35.689" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:28.660" endtime="20201103 12:24:35.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:35.695" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:35.692" endtime="20201103 12:24:35.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:35.697" endtime="20201103 12:24:35.701"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.657" endtime="20201103 12:24:35.702"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.655" endtime="20201103 12:24:35.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:35.708" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201103 12:24:35.705" endtime="20201103 12:24:35.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:35.718" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:35.716" endtime="20201103 12:24:35.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:35.723" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:24:35.721" endtime="20201103 12:24:35.723"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:35.710" endtime="20201103 12:24:35.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:35.733" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:35.731" endtime="20201103 12:24:35.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:35.737" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:24:35.735" endtime="20201103 12:24:35.738"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:35.726" endtime="20201103 12:24:35.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:35.748" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:24:35.746" endtime="20201103 12:24:35.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:35.752" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201103 12:24:35.750" endtime="20201103 12:24:35.753"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:35.741" endtime="20201103 12:24:35.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:35.769" endtime="20201103 12:24:36.074"></status>
</kw>
<msg timestamp="20201103 12:24:36.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.075374014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.175315667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:35.765" endtime="20201103 12:24:36.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:36.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.075374014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.175315667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:36.078" endtime="20201103 12:24:36.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:36.086" endtime="20201103 12:24:36.088"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:35.759" endtime="20201103 12:24:36.088"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:35.756" endtime="20201103 12:24:36.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:24:36.093" level="INFO">${FILTERED} = [{'time': 1.175315667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09994165299999991, 'source_diff': 0.09994165299999991}, {'time': 1.275288014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:24:36.089" endtime="20201103 12:24:36.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:36.106" level="INFO">${RESULT} = {'diff': [0.09994165299999991, 0.09997155600000007, 0.09997159700000013, 0.09997156900000004, 0.09997161099999996, 0.09997158300000009, 0.09997159699999991, 0.09997156900000004, 0.0999715699999999, 0....</msg>
<status status="PASS" starttime="20201103 12:24:36.094" endtime="20201103 12:24:36.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:36.110" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:24:36.109" endtime="20201103 12:24:36.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:36.113" level="INFO">VALUE: [0.09994165299999991, 0.09997155600000007, 0.09997159700000013, 0.09997156900000004, 0.09997161099999996, 0.09997158300000009, 0.09997159699999991, 0.09997156900000004, 0.0999715699999999, 0.09997163900000028, 0.09997159700000013, 0.0999715280000002, 0.09997165200000024, 0.09997159800000022, 0.09997156900000004, 0.09997158299999986, 0.09997162500000023, 0.09997159700000013, 0.09997162499999979, 0.09997154200000002, 0.09997161099999996, 0.09997155499999977, 0.09997166700000015, 0.09997159700000013, 0.09997152799999975, 0.09997156999999968, 0.09997161099999996, 0.0999715280000002, 0.09997162500000023, 0.09997154200000002, 0.09997162500000023, 0.09997154200000047, 0.09997162500000023, 0.09997154100000039, 0.09997162499999934, 0.09997161099999996, 0.09997154200000047, 0.09997158300000031, 0.09997156900000004, 0.09997159700000058, 0.09997161099999996, 0.09997152799999931, 0.09997151400000082, 0.0999716390000005, 0.09997161100000085, 0.09997161099999996, 0.09997154199999958, 0.09997158300000031, 0.09997162500000023, 0.09997157000000012]</msg>
<status status="PASS" starttime="20201103 12:24:36.111" endtime="20201103 12:24:36.113"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.107" endtime="20201103 12:24:36.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:36.116" endtime="20201103 12:24:36.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:36.120" endtime="20201103 12:24:36.139"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.118" endtime="20201103 12:24:36.140"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.115" endtime="20201103 12:24:36.140"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:28.653" endtime="20201103 12:24:36.141"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:24:28.575" endtime="20201103 12:24:36.141" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:36.148" endtime="20201103 12:24:36.167"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.146" endtime="20201103 12:24:36.168"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:36.181" endtime="20201103 12:24:36.206"></status>
</kw>
<msg timestamp="20201103 12:24:36.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:36.180" endtime="20201103 12:24:36.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:36.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:36.207" endtime="20201103 12:24:36.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:36.212" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:36.210" endtime="20201103 12:24:36.212"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:36.177" endtime="20201103 12:24:36.213"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:36.175" endtime="20201103 12:24:36.213"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.173" endtime="20201103 12:24:36.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:36.217" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:36.217" endtime="20201103 12:24:36.218"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.215" endtime="20201103 12:24:36.218"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.172" endtime="20201103 12:24:36.218"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.172" endtime="20201103 12:24:36.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:36.219" endtime="20201103 12:24:36.221"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.170" endtime="20201103 12:24:36.221"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.169" endtime="20201103 12:24:36.222"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.145" endtime="20201103 12:24:36.222"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:36.230" endtime="20201103 12:24:43.255"></status>
</kw>
<msg timestamp="20201103 12:24:43.256" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:36.229" endtime="20201103 12:24:43.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.262" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:43.259" endtime="20201103 12:24:43.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:43.265" endtime="20201103 12:24:43.269"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.226" endtime="20201103 12:24:43.270"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.224" endtime="20201103 12:24:43.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:43.276" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201103 12:24:43.273" endtime="20201103 12:24:43.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.285" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:43.283" endtime="20201103 12:24:43.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.290" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:24:43.288" endtime="20201103 12:24:43.291"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.278" endtime="20201103 12:24:43.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.301" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:43.298" endtime="20201103 12:24:43.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.305" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:24:43.303" endtime="20201103 12:24:43.306"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.293" endtime="20201103 12:24:43.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.316" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:24:43.313" endtime="20201103 12:24:43.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.320" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201103 12:24:43.318" endtime="20201103 12:24:43.321"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.308" endtime="20201103 12:24:43.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:43.339" endtime="20201103 12:24:43.643"></status>
</kw>
<msg timestamp="20201103 12:24:43.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073802569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.173774569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:43.333" endtime="20201103 12:24:43.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073802569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.173774569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:43.647" endtime="20201103 12:24:43.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:43.655" endtime="20201103 12:24:43.657"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.327" endtime="20201103 12:24:43.658"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.324" endtime="20201103 12:24:43.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:24:43.662" level="INFO">${FILTERED} = [{'time': 1.173774569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09997200000000017, 'source_diff': 0.09997200000000017}, {'time': 1.273747014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:24:43.659" endtime="20201103 12:24:43.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:43.675" level="INFO">${RESULT} = {'diff': [0.09997200000000017, 0.09997157000000012, 0.09997159700000013, 0.09997157000000012, 0.09997152799999998, 0.09997162500000001, 0.09997158300000009, 0.09997161200000004, 0.09997151399999993, 0...</msg>
<status status="PASS" starttime="20201103 12:24:43.663" endtime="20201103 12:24:43.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.680" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:24:43.678" endtime="20201103 12:24:43.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.682" level="INFO">VALUE: [0.09997200000000017, 0.09997157000000012, 0.09997159700000013, 0.09997157000000012, 0.09997152799999998, 0.09997162500000001, 0.09997158300000009, 0.09997161200000004, 0.09997151399999993, 0.09997163900000028, 0.09997159700000013, 0.09997157000000012, 0.0999715280000002, 0.09997166600000007, 0.0999715689999996, 0.09997163900000006, 0.09997159700000013, 0.09997156999999968, 0.09997158299999986, 0.09997151400000037, 0.09997163900000006, 0.09997162499999979, 0.09997154200000002, 0.09997158299999986, 0.099971472, 0.09997159699999969, 0.09997168099999998, 0.09997157000000012, 0.09997159800000022, 0.09997158300000031, 0.09997162499999934, 0.09997156900000004, 0.09997155600000074, 0.09997168099999953, 0.0999716390000005, 0.09997148599999939, 0.0999715839999995, 0.09997155499999977, 0.09997159800000066, 0.09997158299999942, 0.09997168100000042, 0.09997158300000031, 0.09997149999999966, 0.09997158300000031, 0.09997156999999923, 0.09997163899999961, 0.0999715409999995, 0.0999716390000005, 0.09997154199999958, 0.09997159700000058]</msg>
<status status="PASS" starttime="20201103 12:24:43.681" endtime="20201103 12:24:43.683"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.676" endtime="20201103 12:24:43.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:43.686" endtime="20201103 12:24:43.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:43.689" endtime="20201103 12:24:43.709"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.688" endtime="20201103 12:24:43.709"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.684" endtime="20201103 12:24:43.710"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:36.223" endtime="20201103 12:24:43.710"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:24:36.143" endtime="20201103 12:24:43.711" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:43.717" endtime="20201103 12:24:43.737"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.716" endtime="20201103 12:24:43.737"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:43.752" endtime="20201103 12:24:43.771"></status>
</kw>
<msg timestamp="20201103 12:24:43.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:43.750" endtime="20201103 12:24:43.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:43.773" endtime="20201103 12:24:43.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:43.777" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:43.775" endtime="20201103 12:24:43.778"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:43.747" endtime="20201103 12:24:43.778"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:43.744" endtime="20201103 12:24:43.779"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.743" endtime="20201103 12:24:43.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:43.783" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:43.782" endtime="20201103 12:24:43.784"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.780" endtime="20201103 12:24:43.784"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.742" endtime="20201103 12:24:43.784"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.741" endtime="20201103 12:24:43.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:43.785" endtime="20201103 12:24:43.786"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.740" endtime="20201103 12:24:43.787"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.738" endtime="20201103 12:24:43.787"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.714" endtime="20201103 12:24:43.788"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:43.796" endtime="20201103 12:24:50.821"></status>
</kw>
<msg timestamp="20201103 12:24:50.822" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:43.795" endtime="20201103 12:24:50.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:50.828" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:50.825" endtime="20201103 12:24:50.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:50.831" endtime="20201103 12:24:50.835"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.792" endtime="20201103 12:24:50.836"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.790" endtime="20201103 12:24:50.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:50.842" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201103 12:24:50.838" endtime="20201103 12:24:50.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:50.851" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:50.849" endtime="20201103 12:24:50.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:50.856" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:24:50.854" endtime="20201103 12:24:50.856"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:50.844" endtime="20201103 12:24:50.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:50.866" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:50.864" endtime="20201103 12:24:50.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:50.870" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:24:50.869" endtime="20201103 12:24:50.870"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:50.859" endtime="20201103 12:24:50.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:50.875" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:24:50.874" endtime="20201103 12:24:50.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:50.878" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201103 12:24:50.876" endtime="20201103 12:24:50.878"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:50.871" endtime="20201103 12:24:50.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:50.885" endtime="20201103 12:24:51.183"></status>
</kw>
<msg timestamp="20201103 12:24:51.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070674917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170646944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:50.884" endtime="20201103 12:24:51.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:51.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070674917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170646944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:51.187" endtime="20201103 12:24:51.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:51.195" endtime="20201103 12:24:51.197"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:50.881" endtime="20201103 12:24:51.197"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:50.879" endtime="20201103 12:24:51.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:24:51.202" level="INFO">${FILTERED} = [{'time': 1.170646944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09997202699999996, 'source_diff': 0.09997202699999996}, {'time': 1.270619389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:24:51.199" endtime="20201103 12:24:51.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:51.217" level="INFO">${RESULT} = {'diff': [0.09997202699999996, 0.09997161099999996, 0.09997162500000001, 0.09997155499999999, 0.09997158400000017, 0.09997154099999994, 0.09997158300000009, 0.09997163900000006, 0.09997152799999998, 0...</msg>
<status status="PASS" starttime="20201103 12:24:51.203" endtime="20201103 12:24:51.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:51.222" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:24:51.221" endtime="20201103 12:24:51.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:51.224" level="INFO">VALUE: [0.09997202699999996, 0.09997161099999996, 0.09997162500000001, 0.09997155499999999, 0.09997158400000017, 0.09997154099999994, 0.09997158300000009, 0.09997163900000006, 0.09997152799999998, 0.0999715139999997, 0.0999715000000001, 0.09997158299999986, 0.09997159799999977, 0.09997162500000023, 0.09997151399999993, 0.09997162500000023, 0.09997163900000006, 0.09997151399999993, 0.09997162499999979, 0.09997155500000021, 0.09997158299999986, 0.09997157000000012, 0.09997161099999996, 0.09997154200000002, 0.0999715000000001, 0.09997158299999986, 0.09997163900000006, 0.09997159799999977, 0.09997163900000006, 0.0999715560000003, 0.09997154200000047, 0.09997157000000012, 0.09997157000000012, 0.09997163899999961, 0.09997154199999958, 0.09997161099999996, 0.09997151399999993, 0.09997158300000031, 0.0999715280000002, 0.09997161099999996, 0.09997156900000004, 0.09997147300000009, 0.09997172200000026, 0.09997158400000039, 0.09997159699999969, 0.09997154199999958, 0.09997156900000004, 0.09997162500000023, 0.09997150000000055, 0.09997156899999915]</msg>
<status status="PASS" starttime="20201103 12:24:51.223" endtime="20201103 12:24:51.225"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.218" endtime="20201103 12:24:51.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:51.228" endtime="20201103 12:24:51.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:51.231" endtime="20201103 12:24:51.251"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.230" endtime="20201103 12:24:51.251"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.226" endtime="20201103 12:24:51.252"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:43.788" endtime="20201103 12:24:51.252"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:24:43.712" endtime="20201103 12:24:51.253" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:51.259" endtime="20201103 12:24:51.279"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.258" endtime="20201103 12:24:51.280"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:51.294" endtime="20201103 12:24:51.317"></status>
</kw>
<msg timestamp="20201103 12:24:51.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:51.292" endtime="20201103 12:24:51.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:51.320" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:51.318" endtime="20201103 12:24:51.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201103 12:24:51.323" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201103 12:24:51.321" endtime="20201103 12:24:51.323"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:51.290" endtime="20201103 12:24:51.324"></status>
</kw>
<status status="FAIL" starttime="20201103 12:24:51.286" endtime="20201103 12:24:51.325"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.285" endtime="20201103 12:24:51.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201103 12:24:51.329" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201103 12:24:51.328" endtime="20201103 12:24:51.329"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.326" endtime="20201103 12:24:51.330"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.284" endtime="20201103 12:24:51.330"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.284" endtime="20201103 12:24:51.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:51.331" endtime="20201103 12:24:51.332"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.282" endtime="20201103 12:24:51.333"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.280" endtime="20201103 12:24:51.333"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.257" endtime="20201103 12:24:51.333"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:51.342" endtime="20201103 12:24:58.367"></status>
</kw>
<msg timestamp="20201103 12:24:58.368" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:51.340" endtime="20201103 12:24:58.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.374" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201103 12:24:58.371" endtime="20201103 12:24:58.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:58.377" endtime="20201103 12:24:58.381"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.338" endtime="20201103 12:24:58.382"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.336" endtime="20201103 12:24:58.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:58.388" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201103 12:24:58.385" endtime="20201103 12:24:58.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.397" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:58.395" endtime="20201103 12:24:58.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.402" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201103 12:24:58.400" endtime="20201103 12:24:58.403"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.390" endtime="20201103 12:24:58.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.412" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201103 12:24:58.410" endtime="20201103 12:24:58.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.417" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201103 12:24:58.415" endtime="20201103 12:24:58.418"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.405" endtime="20201103 12:24:58.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.427" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201103 12:24:58.425" endtime="20201103 12:24:58.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.434" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201103 12:24:58.432" endtime="20201103 12:24:58.435"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.420" endtime="20201103 12:24:58.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:58.451" endtime="20201103 12:24:58.757"></status>
</kw>
<msg timestamp="20201103 12:24:58.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.074661208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174633333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:58.447" endtime="20201103 12:24:58.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.074661208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174633333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201103 12:24:58.762" endtime="20201103 12:24:58.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:58.770" endtime="20201103 12:24:58.771"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.442" endtime="20201103 12:24:58.772"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.438" endtime="20201103 12:24:58.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201103 12:24:58.776" level="INFO">${FILTERED} = [{'time': 1.174633333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.09997212500000008, 'source_diff': 0.09997212500000008}, {'time': 1.274605667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201103 12:24:58.773" endtime="20201103 12:24:58.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201103 12:24:58.790" level="INFO">${RESULT} = {'diff': [0.09997212500000008, 0.09997154200000002, 0.09997159699999991, 0.0999715000000001, 0.09997162500000001, 0.09997151399999993, 0.09997163899999983, 0.09997158300000009, 0.09997161099999996, 0....</msg>
<status status="PASS" starttime="20201103 12:24:58.777" endtime="20201103 12:24:58.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.794" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201103 12:24:58.793" endtime="20201103 12:24:58.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201103 12:24:58.796" level="INFO">VALUE: [0.09997212500000008, 0.09997154200000002, 0.09997159699999991, 0.0999715000000001, 0.09997162500000001, 0.09997151399999993, 0.09997163899999983, 0.09997158300000009, 0.09997161099999996, 0.0999715699999999, 0.09997158300000031, 0.09997140300000007, 0.09997173600000009, 0.0999715000000001, 0.09997163900000006, 0.09997155599999985, 0.09997144399999991, 0.09997169400000017, 0.0999716110000004, 0.09997159699999969, 0.0999715560000003, 0.09997166699999971, 0.09997158299999986, 0.09997158299999986, 0.09997157000000012, 0.09997158300000031, 0.09997159799999977, 0.09997154200000002, 0.0999715000000001, 0.09997166600000007, 0.0999715839999995, 0.09997148600000028, 0.09997163899999961, 0.09997156900000004, 0.09997173600000053, 0.09997155599999985, 0.09997158300000031, 0.09997155599999985, 0.09997156900000004, 0.09997149999999966, 0.09997156900000004, 0.09997165299999988, 0.0999715409999995, 0.09997161099999996, 0.09997154100000039, 0.09997158400000039, 0.099971472, 0.09997155599999985, 0.09997162499999934, 0.09997166700000015]</msg>
<status status="PASS" starttime="20201103 12:24:58.795" endtime="20201103 12:24:58.797"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.791" endtime="20201103 12:24:58.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201103 12:24:58.800" endtime="20201103 12:24:58.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201103 12:24:58.804" endtime="20201103 12:24:58.823"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.802" endtime="20201103 12:24:58.824"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:58.798" endtime="20201103 12:24:58.824"></status>
</kw>
<status status="PASS" starttime="20201103 12:24:51.334" endtime="20201103 12:24:58.825"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201103 12:24:51.254" endtime="20201103 12:24:58.825" critical="yes"></status>
</test>
<status status="PASS" starttime="20201103 12:24:11.951" endtime="20201103 12:24:58.832"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201103 12:24:09.778" endtime="20201103 12:24:58.858"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="7" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="7" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="7" fail="0">dev</stat>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="6" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
