<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:32:45.320" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:32:45.912" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:32:45.921" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:32:47.109" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:32:45.911" endtime="20201029 09:32:47.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.113" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:32:47.111" endtime="20201029 09:32:47.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:45.909" endtime="20201029 09:32:47.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:47.118" endtime="20201029 09:32:47.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.116" endtime="20201029 09:32:47.364"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:47.378" endtime="20201029 09:32:47.398"></status>
</kw>
<msg timestamp="20201029 09:32:47.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:47.376" endtime="20201029 09:32:47.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.401" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:47.400" endtime="20201029 09:32:47.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.405" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:47.403" endtime="20201029 09:32:47.405"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:47.374" endtime="20201029 09:32:47.406"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:47.371" endtime="20201029 09:32:47.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.369" endtime="20201029 09:32:47.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:47.411" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:47.410" endtime="20201029 09:32:47.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.408" endtime="20201029 09:32:47.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.369" endtime="20201029 09:32:47.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.368" endtime="20201029 09:32:47.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:47.413" endtime="20201029 09:32:47.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.366" endtime="20201029 09:32:47.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:47.415" endtime="20201029 09:32:47.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.365" endtime="20201029 09:32:47.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:45.907" endtime="20201029 09:32:47.418"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:47.424" endtime="20201029 09:32:47.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.423" endtime="20201029 09:32:47.444"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:47.459" endtime="20201029 09:32:47.478"></status>
</kw>
<msg timestamp="20201029 09:32:47.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:47.458" endtime="20201029 09:32:47.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.482" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:47.480" endtime="20201029 09:32:47.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.485" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:47.483" endtime="20201029 09:32:47.485"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:47.455" endtime="20201029 09:32:47.486"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:47.453" endtime="20201029 09:32:47.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.451" endtime="20201029 09:32:47.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:47.490" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:47.490" endtime="20201029 09:32:47.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.488" endtime="20201029 09:32:47.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.450" endtime="20201029 09:32:47.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.449" endtime="20201029 09:32:47.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:47.492" endtime="20201029 09:32:47.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.448" endtime="20201029 09:32:47.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.445" endtime="20201029 09:32:47.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.421" endtime="20201029 09:32:47.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:47.502" endtime="20201029 09:32:47.517"></status>
</kw>
<msg timestamp="20201029 09:32:47.518" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:47.500" endtime="20201029 09:32:47.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.520" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:47.519" endtime="20201029 09:32:47.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:47.521" endtime="20201029 09:32:47.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.498" endtime="20201029 09:32:47.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.496" endtime="20201029 09:32:47.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.528" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:32:47.527" endtime="20201029 09:32:47.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.530" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:32:47.529" endtime="20201029 09:32:47.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.525" endtime="20201029 09:32:47.531"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:32:47.418" endtime="20201029 09:32:47.532" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:32:45.442" endtime="20201029 09:32:47.534"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:32:47.590" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:32:47.599" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:32:48.868" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:32:47.588" endtime="20201029 09:32:48.869"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:32:48.875" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:32:48.872" endtime="20201029 09:32:48.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.587" endtime="20201029 09:32:48.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:48.881" endtime="20201029 09:32:49.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:48.878" endtime="20201029 09:32:49.106"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.122" endtime="20201029 09:32:49.142"></status>
</kw>
<msg timestamp="20201029 09:32:49.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.118" endtime="20201029 09:32:49.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.144" endtime="20201029 09:32:49.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.149" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:49.147" endtime="20201029 09:32:49.149"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.114" endtime="20201029 09:32:49.150"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.112" endtime="20201029 09:32:49.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.111" endtime="20201029 09:32:49.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:49.154" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:49.154" endtime="20201029 09:32:49.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.151" endtime="20201029 09:32:49.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.110" endtime="20201029 09:32:49.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.109" endtime="20201029 09:32:49.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.156" endtime="20201029 09:32:49.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.108" endtime="20201029 09:32:49.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.159" endtime="20201029 09:32:49.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.106" endtime="20201029 09:32:49.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:47.585" endtime="20201029 09:32:49.161"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:49.167" endtime="20201029 09:32:49.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.165" endtime="20201029 09:32:49.187"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.199" endtime="20201029 09:32:49.217"></status>
</kw>
<msg timestamp="20201029 09:32:49.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.198" endtime="20201029 09:32:49.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.219" endtime="20201029 09:32:49.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.223" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:49.221" endtime="20201029 09:32:49.224"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.195" endtime="20201029 09:32:49.224"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.193" endtime="20201029 09:32:49.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.192" endtime="20201029 09:32:49.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:49.229" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:49.228" endtime="20201029 09:32:49.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.226" endtime="20201029 09:32:49.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.191" endtime="20201029 09:32:49.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.190" endtime="20201029 09:32:49.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.230" endtime="20201029 09:32:49.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.189" endtime="20201029 09:32:49.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.187" endtime="20201029 09:32:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.164" endtime="20201029 09:32:49.233"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.242" endtime="20201029 09:32:49.256"></status>
</kw>
<msg timestamp="20201029 09:32:49.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.240" endtime="20201029 09:32:49.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.257" endtime="20201029 09:32:49.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.259" endtime="20201029 09:32:49.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.237" endtime="20201029 09:32:49.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.236" endtime="20201029 09:32:49.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.268" endtime="20201029 09:32:49.560"></status>
</kw>
<msg timestamp="20201029 09:32:49.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065101611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065102083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:49.267" endtime="20201029 09:32:49.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065101611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065102083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:49.564" endtime="20201029 09:32:49.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.573" endtime="20201029 09:32:49.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.264" endtime="20201029 09:32:49.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.263" endtime="20201029 09:32:49.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:49.579" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:32:49.576" endtime="20201029 09:32:49.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:49.585" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 09:32:49.581" endtime="20201029 09:32:49.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.589" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:49.588" endtime="20201029 09:32:49.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.592" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07]</msg>
<status status="PASS" starttime="20201029 09:32:49.591" endtime="20201029 09:32:49.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.586" endtime="20201029 09:32:49.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.235" endtime="20201029 09:32:49.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.234" endtime="20201029 09:32:49.594"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.604" endtime="20201029 09:32:49.617"></status>
</kw>
<msg timestamp="20201029 09:32:49.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.602" endtime="20201029 09:32:49.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.619" endtime="20201029 09:32:49.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.621" endtime="20201029 09:32:49.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.599" endtime="20201029 09:32:49.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.597" endtime="20201029 09:32:49.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.632" endtime="20201029 09:32:49.949"></status>
</kw>
<msg timestamp="20201029 09:32:49.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065628292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065628764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:49.629" endtime="20201029 09:32:49.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065628292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065628764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:49.954" endtime="20201029 09:32:49.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.964" endtime="20201029 09:32:49.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.626" endtime="20201029 09:32:49.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.624" endtime="20201029 09:32:49.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:49.971" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.86000000007869e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:32:49.968" endtime="20201029 09:32:49.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:49.976" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7200...</msg>
<status status="PASS" starttime="20201029 09:32:49.972" endtime="20201029 09:32:49.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:49.980" endtime="20201029 09:32:49.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.983" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.720000000291158e-07]</msg>
<status status="PASS" starttime="20201029 09:32:49.982" endtime="20201029 09:32:49.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.977" endtime="20201029 09:32:49.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.595" endtime="20201029 09:32:49.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.595" endtime="20201029 09:32:49.985"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.993" endtime="20201029 09:32:50.011"></status>
</kw>
<msg timestamp="20201029 09:32:50.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.992" endtime="20201029 09:32:50.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:50.015" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:50.013" endtime="20201029 09:32:50.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:50.016" endtime="20201029 09:32:50.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.988" endtime="20201029 09:32:50.019"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.987" endtime="20201029 09:32:50.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:50.029" endtime="20201029 09:32:50.339"></status>
</kw>
<msg timestamp="20201029 09:32:50.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418299028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418299514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:50.027" endtime="20201029 09:32:50.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:50.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418299028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418299514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:50.345" endtime="20201029 09:32:50.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:50.356" endtime="20201029 09:32:50.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:50.023" endtime="20201029 09:32:50.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:50.021" endtime="20201029 09:32:50.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:50.365" level="INFO">${RESULT} = [{'diff': 4.859999999662357e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 09:32:50.361" endtime="20201029 09:32:52.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:52.630" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, ...</msg>
<status status="PASS" starttime="20201029 09:32:52.621" endtime="20201029 09:32:52.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:52.639" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:52.637" endtime="20201029 09:32:52.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:52.644" level="INFO">VALUE: [4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.869999999934649e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201029 09:32:52.641" endtime="20201029 09:32:52.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.632" endtime="20201029 09:32:52.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.985" endtime="20201029 09:32:52.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.985" endtime="20201029 09:32:52.647"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:52.664" endtime="20201029 09:32:52.684"></status>
</kw>
<msg timestamp="20201029 09:32:52.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:52.660" endtime="20201029 09:32:52.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:52.690" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:52.687" endtime="20201029 09:32:52.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:52.692" endtime="20201029 09:32:52.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.655" endtime="20201029 09:32:52.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.651" endtime="20201029 09:32:52.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:52.711" endtime="20201029 09:32:53.036"></status>
</kw>
<msg timestamp="20201029 09:32:53.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.801073403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.801073875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:52.708" endtime="20201029 09:32:53.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.801073403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.801073875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:53.040" endtime="20201029 09:32:53.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.050" endtime="20201029 09:32:53.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.702" endtime="20201029 09:32:53.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.698" endtime="20201029 09:32:53.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:53.057" level="INFO">${RESULT} = [{'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:32:53.054" endtime="20201029 09:32:53.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:53.063" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:32:53.058" endtime="20201029 09:32:53.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.067" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:53.066" endtime="20201029 09:32:53.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.070" level="INFO">VALUE: [4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.869999998824426e-07]</msg>
<status status="PASS" starttime="20201029 09:32:53.068" endtime="20201029 09:32:53.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.064" endtime="20201029 09:32:53.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.649" endtime="20201029 09:32:53.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.648" endtime="20201029 09:32:53.071"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.079" endtime="20201029 09:32:53.094"></status>
</kw>
<msg timestamp="20201029 09:32:53.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.077" endtime="20201029 09:32:53.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.097" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.096" endtime="20201029 09:32:53.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.098" endtime="20201029 09:32:53.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.075" endtime="20201029 09:32:53.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.073" endtime="20201029 09:32:53.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.108" endtime="20201029 09:32:53.426"></status>
</kw>
<msg timestamp="20201029 09:32:53.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.462286417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.462286903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:53.106" endtime="20201029 09:32:53.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.462286417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.462286903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:53.431" endtime="20201029 09:32:53.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.441" endtime="20201029 09:32:53.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.103" endtime="20201029 09:32:53.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.101" endtime="20201029 09:32:53.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:53.449" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:32:53.445" endtime="20201029 09:32:53.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:53.453" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 09:32:53.450" endtime="20201029 09:32:53.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.458" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:53.457" endtime="20201029 09:32:53.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.461" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:32:53.459" endtime="20201029 09:32:53.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.454" endtime="20201029 09:32:53.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.072" endtime="20201029 09:32:53.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.071" endtime="20201029 09:32:53.462"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.470" endtime="20201029 09:32:53.486"></status>
</kw>
<msg timestamp="20201029 09:32:53.487" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.469" endtime="20201029 09:32:53.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.492" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.489" endtime="20201029 09:32:53.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.494" endtime="20201029 09:32:53.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.466" endtime="20201029 09:32:53.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.464" endtime="20201029 09:32:53.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.513" endtime="20201029 09:32:53.832"></status>
</kw>
<msg timestamp="20201029 09:32:53.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.865169611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.865170097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:53.510" endtime="20201029 09:32:53.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.865169611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.865170097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:53.837" endtime="20201029 09:32:53.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.847" endtime="20201029 09:32:53.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.505" endtime="20201029 09:32:53.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.501" endtime="20201029 09:32:53.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:53.854" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:32:53.851" endtime="20201029 09:32:53.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:53.862" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:32:53.855" endtime="20201029 09:32:53.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.866" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:53.865" endtime="20201029 09:32:53.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.869" level="INFO">VALUE: [4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:32:53.867" endtime="20201029 09:32:53.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.863" endtime="20201029 09:32:53.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.463" endtime="20201029 09:32:53.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.463" endtime="20201029 09:32:53.870"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.878" endtime="20201029 09:32:53.893"></status>
</kw>
<msg timestamp="20201029 09:32:53.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.876" endtime="20201029 09:32:53.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.896" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.895" endtime="20201029 09:32:53.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.897" endtime="20201029 09:32:53.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.874" endtime="20201029 09:32:53.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.872" endtime="20201029 09:32:53.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.906" endtime="20201029 09:32:54.222"></status>
</kw>
<msg timestamp="20201029 09:32:54.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.246182042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.246182514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:53.905" endtime="20201029 09:32:54.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.246182042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.246182514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:54.230" endtime="20201029 09:32:54.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.249" endtime="20201029 09:32:54.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.902" endtime="20201029 09:32:54.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.900" endtime="20201029 09:32:54.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:54.257" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:32:54.253" endtime="20201029 09:32:54.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:54.261" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:32:54.257" endtime="20201029 09:32:54.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.265" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:54.264" endtime="20201029 09:32:54.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.268" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:32:54.266" endtime="20201029 09:32:54.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.262" endtime="20201029 09:32:54.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.871" endtime="20201029 09:32:54.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.870" endtime="20201029 09:32:54.269"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.278" endtime="20201029 09:32:54.297"></status>
</kw>
<msg timestamp="20201029 09:32:54.298" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.276" endtime="20201029 09:32:54.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.304" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.300" endtime="20201029 09:32:54.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.307" endtime="20201029 09:32:54.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.273" endtime="20201029 09:32:54.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.271" endtime="20201029 09:32:54.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.330" endtime="20201029 09:32:54.659"></status>
</kw>
<msg timestamp="20201029 09:32:54.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.643180444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.643180917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:54.326" endtime="20201029 09:32:54.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.643180444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.643180917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:54.664" endtime="20201029 09:32:54.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.674" endtime="20201029 09:32:54.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.320" endtime="20201029 09:32:54.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.315" endtime="20201029 09:32:54.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:54.681" level="INFO">${RESULT} = [{'diff': 4.729999991681666e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:32:54.677" endtime="20201029 09:32:54.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:54.686" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:32:54.682" endtime="20201029 09:32:54.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.690" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:54.689" endtime="20201029 09:32:54.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.693" level="INFO">VALUE: [4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:32:54.691" endtime="20201029 09:32:54.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.687" endtime="20201029 09:32:54.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.270" endtime="20201029 09:32:54.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.270" endtime="20201029 09:32:54.694"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.702" endtime="20201029 09:32:54.717"></status>
</kw>
<msg timestamp="20201029 09:32:54.717" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.701" endtime="20201029 09:32:54.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.720" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.719" endtime="20201029 09:32:54.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.721" endtime="20201029 09:32:54.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.698" endtime="20201029 09:32:54.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.696" endtime="20201029 09:32:54.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.730" endtime="20201029 09:32:55.041"></status>
</kw>
<msg timestamp="20201029 09:32:55.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.035105778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.03510625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:32:54.729" endtime="20201029 09:32:55.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.035105778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.03510625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:32:55.046" endtime="20201029 09:32:55.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.057" endtime="20201029 09:32:55.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.726" endtime="20201029 09:32:55.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.724" endtime="20201029 09:32:55.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:55.064" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:32:55.060" endtime="20201029 09:32:55.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:55.070" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 09:32:55.065" endtime="20201029 09:32:55.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.074" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:55.073" endtime="20201029 09:32:55.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.076" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07]</msg>
<status status="PASS" starttime="20201029 09:32:55.075" endtime="20201029 09:32:55.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.070" endtime="20201029 09:32:55.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.695" endtime="20201029 09:32:55.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.695" endtime="20201029 09:32:55.078"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.086" endtime="20201029 09:32:55.104"></status>
</kw>
<msg timestamp="20201029 09:32:55.105" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.085" endtime="20201029 09:32:55.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.107" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.106" endtime="20201029 09:32:55.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.108" endtime="20201029 09:32:55.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.082" endtime="20201029 09:32:55.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.080" endtime="20201029 09:32:55.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.117" endtime="20201029 09:32:55.436"></status>
</kw>
<msg timestamp="20201029 09:32:55.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.446247819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.446248292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:55.116" endtime="20201029 09:32:55.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.446247819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.446248292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:55.441" endtime="20201029 09:33:07.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.345" endtime="20201029 09:33:07.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.113" endtime="20201029 09:33:07.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.111" endtime="20201029 09:33:07.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.361" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:07.353" endtime="20201029 09:33:07.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.371" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 09:33:07.363" endtime="20201029 09:33:07.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.380" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:07.378" endtime="20201029 09:33:07.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.386" level="INFO">VALUE: [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:07.382" endtime="20201029 09:33:07.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.373" endtime="20201029 09:33:07.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.079" endtime="20201029 09:33:07.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.078" endtime="20201029 09:33:07.389"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.407" endtime="20201029 09:33:07.423"></status>
</kw>
<msg timestamp="20201029 09:33:07.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.404" endtime="20201029 09:33:07.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.429" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.426" endtime="20201029 09:33:07.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.431" endtime="20201029 09:33:07.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.397" endtime="20201029 09:33:07.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.393" endtime="20201029 09:33:07.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.451" endtime="20201029 09:33:07.772"></status>
</kw>
<msg timestamp="20201029 09:33:07.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.8249445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.824944972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:07.448" endtime="20201029 09:33:07.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.8249445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.824944972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:07.777" endtime="20201029 09:33:07.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.788" endtime="20201029 09:33:07.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.442" endtime="20201029 09:33:07.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.438" endtime="20201029 09:33:07.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.794" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:33:07.791" endtime="20201029 09:33:07.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.800" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:33:07.796" endtime="20201029 09:33:07.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.805" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:07.804" endtime="20201029 09:33:07.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.808" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.869999976619965e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999976619965e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:07.806" endtime="20201029 09:33:07.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.801" endtime="20201029 09:33:07.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.391" endtime="20201029 09:33:07.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.390" endtime="20201029 09:33:07.810"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.818" endtime="20201029 09:33:07.836"></status>
</kw>
<msg timestamp="20201029 09:33:07.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.816" endtime="20201029 09:33:07.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.837" endtime="20201029 09:33:07.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.840" endtime="20201029 09:33:07.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.813" endtime="20201029 09:33:07.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.812" endtime="20201029 09:33:07.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.849" endtime="20201029 09:33:08.167"></status>
</kw>
<msg timestamp="20201029 09:33:08.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 18.135907639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 18.135908111, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:07.847" endtime="20201029 09:33:08.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 18.135907639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 18.135908111, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:08.172" endtime="20201029 09:33:08.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.183" endtime="20201029 09:33:08.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.845" endtime="20201029 09:33:08.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.843" endtime="20201029 09:33:08.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.190" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.73000000056345e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:08.186" endtime="20201029 09:33:08.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.195" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:33:08.191" endtime="20201029 09:33:08.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.199" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.198" endtime="20201029 09:33:08.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.202" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.869999976619965e-07, 4.7199999997360464e-07, 4.869999976619965e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07]</msg>
<status status="PASS" starttime="20201029 09:33:08.201" endtime="20201029 09:33:08.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.196" endtime="20201029 09:33:08.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.810" endtime="20201029 09:33:08.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.810" endtime="20201029 09:33:08.204"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.211" endtime="20201029 09:33:08.226"></status>
</kw>
<msg timestamp="20201029 09:33:08.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.210" endtime="20201029 09:33:08.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.229" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.228" endtime="20201029 09:33:08.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.230" endtime="20201029 09:33:08.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.207" endtime="20201029 09:33:08.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.206" endtime="20201029 09:33:08.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.240" endtime="20201029 09:33:08.552"></status>
</kw>
<msg timestamp="20201029 09:33:08.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 18.538823958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 18.538824431, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:08.238" endtime="20201029 09:33:08.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 18.538823958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 18.538824431, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:08.558" endtime="20201029 09:33:08.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.568" endtime="20201029 09:33:08.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.235" endtime="20201029 09:33:08.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.233" endtime="20201029 09:33:08.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.575" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:08.572" endtime="20201029 09:33:08.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.580" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:33:08.576" endtime="20201029 09:33:08.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.584" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.583" endtime="20201029 09:33:08.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.587" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.720000035263183e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:08.585" endtime="20201029 09:33:08.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.581" endtime="20201029 09:33:08.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.204" endtime="20201029 09:33:08.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.204" endtime="20201029 09:33:08.588"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.597" endtime="20201029 09:33:08.613"></status>
</kw>
<msg timestamp="20201029 09:33:08.613" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.595" endtime="20201029 09:33:08.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.616" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.614" endtime="20201029 09:33:08.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.617" endtime="20201029 09:33:08.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.593" endtime="20201029 09:33:08.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.590" endtime="20201029 09:33:08.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.626" endtime="20201029 09:33:08.944"></status>
</kw>
<msg timestamp="20201029 09:33:08.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 18.920742625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 18.920743097, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:08.624" endtime="20201029 09:33:08.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 18.920742625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 18.920743097, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:08.949" endtime="20201029 09:33:08.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.959" endtime="20201029 09:33:08.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.622" endtime="20201029 09:33:08.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.620" endtime="20201029 09:33:08.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.966" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:33:08.962" endtime="20201029 09:33:08.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.971" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:33:08.967" endtime="20201029 09:33:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.975" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.974" endtime="20201029 09:33:08.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.978" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999976619965e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:08.976" endtime="20201029 09:33:08.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.972" endtime="20201029 09:33:08.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.589" endtime="20201029 09:33:08.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.589" endtime="20201029 09:33:08.979"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.987" endtime="20201029 09:33:09.005"></status>
</kw>
<msg timestamp="20201029 09:33:09.006" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.986" endtime="20201029 09:33:09.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.008" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.007" endtime="20201029 09:33:09.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.009" endtime="20201029 09:33:09.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.983" endtime="20201029 09:33:09.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.981" endtime="20201029 09:33:09.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.019" endtime="20201029 09:33:09.336"></status>
</kw>
<msg timestamp="20201029 09:33:09.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 19.297602181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 19.297602667, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:09.017" endtime="20201029 09:33:09.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 19.297602181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 19.297602667, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:09.341" endtime="20201029 09:33:09.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.351" endtime="20201029 09:33:09.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.015" endtime="20201029 09:33:09.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.013" endtime="20201029 09:33:09.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.361" level="INFO">${RESULT} = [{'diff': 4.860000011319698e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:09.354" endtime="20201029 09:33:09.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.366" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.71999...</msg>
<status status="PASS" starttime="20201029 09:33:09.362" endtime="20201029 09:33:09.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.370" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.369" endtime="20201029 09:33:09.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.372" level="INFO">VALUE: [4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:09.371" endtime="20201029 09:33:09.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.366" endtime="20201029 09:33:09.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.980" endtime="20201029 09:33:09.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.980" endtime="20201029 09:33:09.374"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.382" endtime="20201029 09:33:09.397"></status>
</kw>
<msg timestamp="20201029 09:33:09.398" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.380" endtime="20201029 09:33:09.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.400" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.399" endtime="20201029 09:33:09.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.401" endtime="20201029 09:33:09.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.377" endtime="20201029 09:33:09.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.376" endtime="20201029 09:33:09.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.412" endtime="20201029 09:33:09.722"></status>
</kw>
<msg timestamp="20201029 09:33:09.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 19.679478139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 19.679478625, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:09.410" endtime="20201029 09:33:09.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 19.679478139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 19.679478625, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:09.727" endtime="20201029 09:33:09.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.737" endtime="20201029 09:33:09.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.406" endtime="20201029 09:33:09.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.405" endtime="20201029 09:33:09.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.744" level="INFO">${RESULT} = [{'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:09.740" endtime="20201029 09:33:09.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.748" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 09:33:09.745" endtime="20201029 09:33:09.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.753" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.752" endtime="20201029 09:33:09.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.756" level="INFO">VALUE: [4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000012147102e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.870000012147102e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.870000012147102e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:09.755" endtime="20201029 09:33:09.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.749" endtime="20201029 09:33:09.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.375" endtime="20201029 09:33:09.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.374" endtime="20201029 09:33:09.758"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.765" endtime="20201029 09:33:09.778"></status>
</kw>
<msg timestamp="20201029 09:33:09.779" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.764" endtime="20201029 09:33:09.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.780" endtime="20201029 09:33:09.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.782" endtime="20201029 09:33:09.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.761" endtime="20201029 09:33:09.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.760" endtime="20201029 09:33:09.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.792" endtime="20201029 09:33:10.107"></status>
</kw>
<msg timestamp="20201029 09:33:10.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 20.059597819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.059598306, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:09.790" endtime="20201029 09:33:10.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 20.059597819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.059598306, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:10.112" endtime="20201029 09:33:10.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.122" endtime="20201029 09:33:10.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.788" endtime="20201029 09:33:10.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.785" endtime="20201029 09:33:10.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.129" level="INFO">${RESULT} = [{'diff': 4.870000012147102e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07},...</msg>
<status status="PASS" starttime="20201029 09:33:10.126" endtime="20201029 09:33:10.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.134" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000012147102e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:33:10.130" endtime="20201029 09:33:10.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.139" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.138" endtime="20201029 09:33:10.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.141" level="INFO">VALUE: [4.870000012147102e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.870000012147102e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.140" endtime="20201029 09:33:10.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.135" endtime="20201029 09:33:10.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.758" endtime="20201029 09:33:10.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.758" endtime="20201029 09:33:10.143"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.150" endtime="20201029 09:33:10.165"></status>
</kw>
<msg timestamp="20201029 09:33:10.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.149" endtime="20201029 09:33:10.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.168" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.166" endtime="20201029 09:33:10.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.169" endtime="20201029 09:33:10.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.146" endtime="20201029 09:33:10.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.145" endtime="20201029 09:33:10.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.178" endtime="20201029 09:33:10.491"></status>
</kw>
<msg timestamp="20201029 09:33:10.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 20.431424306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.431424792, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:10.177" endtime="20201029 09:33:10.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 20.431424306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.431424792, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:10.496" endtime="20201029 09:33:10.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.506" endtime="20201029 09:33:10.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.174" endtime="20201029 09:33:10.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.173" endtime="20201029 09:33:10.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.513" level="INFO">${RESULT} = [{'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07...</msg>
<status status="PASS" starttime="20201029 09:33:10.509" endtime="20201029 09:33:10.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.518" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:10.514" endtime="20201029 09:33:10.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.522" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.521" endtime="20201029 09:33:10.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.525" level="INFO">VALUE: [4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999976619965e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.523" endtime="20201029 09:33:10.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.519" endtime="20201029 09:33:10.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.144" endtime="20201029 09:33:10.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.143" endtime="20201029 09:33:10.526"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.535" endtime="20201029 09:33:10.553"></status>
</kw>
<msg timestamp="20201029 09:33:10.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.532" endtime="20201029 09:33:10.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.556" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.554" endtime="20201029 09:33:10.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.557" endtime="20201029 09:33:10.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.530" endtime="20201029 09:33:10.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.528" endtime="20201029 09:33:10.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.566" endtime="20201029 09:33:10.885"></status>
</kw>
<msg timestamp="20201029 09:33:10.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 20.806467431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.806467903, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:10.565" endtime="20201029 09:33:10.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 20.806467431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 20.806467903, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:10.890" endtime="20201029 09:33:10.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.900" endtime="20201029 09:33:10.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.562" endtime="20201029 09:33:10.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.560" endtime="20201029 09:33:10.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.907" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999975792562e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 09:33:10.904" endtime="20201029 09:33:10.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.913" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 09:33:10.908" endtime="20201029 09:33:10.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:10.916" endtime="20201029 09:33:10.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.919" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.918" endtime="20201029 09:33:10.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.913" endtime="20201029 09:33:10.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.527" endtime="20201029 09:33:10.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.526" endtime="20201029 09:33:10.921"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.929" endtime="20201029 09:33:10.949"></status>
</kw>
<msg timestamp="20201029 09:33:10.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.927" endtime="20201029 09:33:10.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.951" endtime="20201029 09:33:10.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.953" endtime="20201029 09:33:10.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.925" endtime="20201029 09:33:10.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.923" endtime="20201029 09:33:10.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.962" endtime="20201029 09:33:11.282"></status>
</kw>
<msg timestamp="20201029 09:33:11.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 21.184274444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 21.184274917, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:10.961" endtime="20201029 09:33:11.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 21.184274444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 21.184274917, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 09:33:11.287" endtime="20201029 09:33:11.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.297" endtime="20201029 09:33:11.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.958" endtime="20201029 09:33:11.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.957" endtime="20201029 09:33:11.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.303" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999975792562e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000012147102e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:11.300" endtime="20201029 09:33:11.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.309" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 09:33:11.304" endtime="20201029 09:33:11.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.313" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:11.312" endtime="20201029 09:33:11.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.316" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999976619965e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000035263183e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.870000012147102e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999975792562e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999975792562e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:11.314" endtime="20201029 09:33:11.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.310" endtime="20201029 09:33:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.922" endtime="20201029 09:33:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.921" endtime="20201029 09:33:11.318"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.233" endtime="20201029 09:33:11.318"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:32:49.162" endtime="20201029 09:33:11.318" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:11.325" endtime="20201029 09:33:11.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.324" endtime="20201029 09:33:11.345"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.358" endtime="20201029 09:33:11.377"></status>
</kw>
<msg timestamp="20201029 09:33:11.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.357" endtime="20201029 09:33:11.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.379" endtime="20201029 09:33:11.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.383" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:11.381" endtime="20201029 09:33:11.383"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.354" endtime="20201029 09:33:11.384"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.352" endtime="20201029 09:33:11.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.350" endtime="20201029 09:33:11.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:11.389" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:11.388" endtime="20201029 09:33:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.386" endtime="20201029 09:33:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.349" endtime="20201029 09:33:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.349" endtime="20201029 09:33:11.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.390" endtime="20201029 09:33:11.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.347" endtime="20201029 09:33:11.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.346" endtime="20201029 09:33:11.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.322" endtime="20201029 09:33:11.393"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.401" endtime="20201029 09:33:11.416"></status>
</kw>
<msg timestamp="20201029 09:33:11.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.400" endtime="20201029 09:33:11.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.419" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.418" endtime="20201029 09:33:11.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.420" endtime="20201029 09:33:11.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.397" endtime="20201029 09:33:11.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.396" endtime="20201029 09:33:11.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.429" endtime="20201029 09:33:11.715"></status>
</kw>
<msg timestamp="20201029 09:33:11.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067851194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:11.428" endtime="20201029 09:33:11.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067851194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:11.720" endtime="20201029 09:33:11.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.728" endtime="20201029 09:33:11.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.425" endtime="20201029 09:33:11.731"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.424" endtime="20201029 09:33:11.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.735" level="INFO">${RESULT} = [{'diff': 4.193999999999032e-06}, {'diff': 4.250000000011189e-06}, {'diff': 4.2360000000046805e-06}, {'diff': 4.222999999997645e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.2360000000046805e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:11.732" endtime="20201029 09:33:11.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.740" level="INFO">${OVERHEAD} = {'diff': [4.193999999999032e-06, 4.250000000011189e-06, 4.2360000000046805e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.2499999999973115e-06, 4....</msg>
<status status="PASS" starttime="20201029 09:33:11.736" endtime="20201029 09:33:11.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.744" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:11.743" endtime="20201029 09:33:11.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.747" level="INFO">VALUE: [4.193999999999032e-06, 4.250000000011189e-06, 4.2360000000046805e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.2499999999973115e-06, 4.2499999999973115e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.2499999999973115e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.26400000000382e-06, 4.208000000005541e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.2089999999911365e-06, 4.2499999999973115e-06, 4.26400000000382e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2220000000120494e-06, 4.221999999998172e-06, 4.250000000011189e-06, 4.208000000005541e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.153000000006735e-06, 4.208000000005541e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4.2639999999899425e-06, 4.235999999990803e-06, 4.209000000005014e-06, 4.2499999999973115e-06, 4.2220000000120494e-06, 4.2499999999973115e-06, 4.29200000000296e-06, 4.2360000000046805e-06, 4.165999999999892e-06, 4.152999999992857e-06, 4.207999999991663e-06]</msg>
<status status="PASS" starttime="20201029 09:33:11.746" endtime="20201029 09:33:11.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.741" endtime="20201029 09:33:11.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.394" endtime="20201029 09:33:11.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.394" endtime="20201029 09:33:11.748"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.756" endtime="20201029 09:33:11.773"></status>
</kw>
<msg timestamp="20201029 09:33:11.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.755" endtime="20201029 09:33:11.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.776" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.774" endtime="20201029 09:33:11.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.777" endtime="20201029 09:33:11.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.752" endtime="20201029 09:33:11.779"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.750" endtime="20201029 09:33:11.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.786" endtime="20201029 09:33:12.093"></status>
</kw>
<msg timestamp="20201029 09:33:12.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068254167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068258389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.784" endtime="20201029 09:33:12.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068254167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068258389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.097" endtime="20201029 09:33:12.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.107" endtime="20201029 09:33:12.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.782" endtime="20201029 09:33:12.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.780" endtime="20201029 09:33:12.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.115" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.2360000000046805e-06}, {'diff': 4.1949999999985055e-06}, {'diff': 4.2639999999899425e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.209000000005014e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:12.111" endtime="20201029 09:33:12.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.119" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4.2639999999899425e-06, 4.235999999990803e-06, 4.209000000005014e-06, 4.2499999999973115e-06, 4.2220000000120494e-06, 4...</msg>
<status status="PASS" starttime="20201029 09:33:12.116" endtime="20201029 09:33:12.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.124" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.123" endtime="20201029 09:33:12.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.126" level="INFO">VALUE: [4.221999999998172e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4.2639999999899425e-06, 4.235999999990803e-06, 4.209000000005014e-06, 4.2499999999973115e-06, 4.2220000000120494e-06, 4.2499999999973115e-06, 4.29200000000296e-06, 4.2360000000046805e-06, 4.165999999999892e-06, 4.152999999992857e-06, 4.207999999991663e-06, 4.166999999999366e-06, 4.221999999998172e-06, 4.153000000006735e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.249999999983434e-06, 4.208000000005541e-06, 4.22299999996989e-06, 4.235999999990803e-06, 4.249999999983434e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.221999999998172e-06, 4.264000000031576e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.250000000038945e-06, 4.236000000046314e-06, 4.22299999996989e-06, 4.235999999990803e-06, 4.208999999977259e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.208999999977259e-06, 4.235999999990803e-06, 4.264000000031576e-06, 4.223000000025401e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.236000000046314e-06, 4.235999999990803e-06, 4.194999999984628e-06, 4.208000000005541e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.249999999983434e-06]</msg>
<status status="PASS" starttime="20201029 09:33:12.125" endtime="20201029 09:33:12.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.120" endtime="20201029 09:33:12.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.749" endtime="20201029 09:33:12.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.749" endtime="20201029 09:33:12.128"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.136" endtime="20201029 09:33:12.152"></status>
</kw>
<msg timestamp="20201029 09:33:12.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.135" endtime="20201029 09:33:12.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.154" endtime="20201029 09:33:12.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.156" endtime="20201029 09:33:12.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.131" endtime="20201029 09:33:12.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.130" endtime="20201029 09:33:12.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.165" endtime="20201029 09:33:12.466"></status>
</kw>
<msg timestamp="20201029 09:33:12.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.415895222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.415899458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.164" endtime="20201029 09:33:12.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.415895222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.415899458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.471" endtime="20201029 09:33:12.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.481" endtime="20201029 09:33:12.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.161" endtime="20201029 09:33:12.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.159" endtime="20201029 09:33:12.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.488" level="INFO">${RESULT} = [{'diff': 4.235999999990803e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.235999999990803e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:12.485" endtime="20201029 09:33:12.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.496" level="INFO">${OVERHEAD} = {'diff': [4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.221999999998172e-06, 4.2219...</msg>
<status status="PASS" starttime="20201029 09:33:12.489" endtime="20201029 09:33:12.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.500" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.499" endtime="20201029 09:33:12.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.503" level="INFO">VALUE: [4.235999999990803e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.249999999983434e-06, 4.235999999990803e-06, 4.223000000025401e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.2219999999426605e-06, 4.222999999914379e-06, 4.208000000005541e-06, 4.223000000025401e-06, 4.2219999999426605e-06, 4.208000000005541e-06, 4.180999999991997e-06, 4.235999999990803e-06, 4.179999999909256e-06, 4.209000000088281e-06, 4.263999999976065e-06, 4.208999999977259e-06, 4.278000000024207e-06, 4.250000000038945e-06, 4.1949999999291165e-06, 4.236999999962521e-06, 4.235999999990803e-06, 4.1939999999573985e-06, 4.235999999990803e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.277000000052489e-06, 4.250000000038945e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.222000000053683e-06, 4.208000000005541e-06, 4.194000000068421e-06, 4.235999999990803e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.1939999999573985e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.250000000038945e-06, 4.208000000005541e-06, 4.2219999999426605e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.2219999999426605e-06]</msg>
<status status="PASS" starttime="20201029 09:33:12.501" endtime="20201029 09:33:12.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.497" endtime="20201029 09:33:12.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.128" endtime="20201029 09:33:12.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.128" endtime="20201029 09:33:12.504"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.512" endtime="20201029 09:33:12.527"></status>
</kw>
<msg timestamp="20201029 09:33:12.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.510" endtime="20201029 09:33:12.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.529" endtime="20201029 09:33:12.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.531" endtime="20201029 09:33:12.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.508" endtime="20201029 09:33:12.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.506" endtime="20201029 09:33:12.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.543" endtime="20201029 09:33:12.851"></status>
</kw>
<msg timestamp="20201029 09:33:12.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.782701903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.782706125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.541" endtime="20201029 09:33:12.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.782701903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.782706125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.857" endtime="20201029 09:33:12.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.872" endtime="20201029 09:33:12.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.538" endtime="20201029 09:33:12.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.536" endtime="20201029 09:33:12.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.880" level="INFO">${RESULT} = [{'diff': 4.222000000053683e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.1939999999573985e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.2499999999279225e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:12.876" endtime="20201029 09:33:12.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.885" level="INFO">${OVERHEAD} = {'diff': [4.222000000053683e-06, 4.222000000053683e-06, 4.1939999999573985e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.2...</msg>
<status status="PASS" starttime="20201029 09:33:12.881" endtime="20201029 09:33:12.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.890" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.889" endtime="20201029 09:33:12.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.892" level="INFO">VALUE: [4.222000000053683e-06, 4.222000000053683e-06, 4.1939999999573985e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.250000000038945e-06, 4.208000000005541e-06, 4.2219999999426605e-06, 4.235999999990803e-06, 4.235999999990803e-06, 4.2219999999426605e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.263999999976065e-06, 4.23599999987978e-06, 4.236999999962521e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.23599999987978e-06, 4.221999999831638e-06, 4.23599999987978e-06, 4.236999999962521e-06, 4.222000000053683e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.223000000136423e-06, 4.23599999987978e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.180999999991997e-06, 4.222000000053683e-06, 4.2769999999414665e-06, 4.318999999863848e-06, 4.223000000136423e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.223000000136423e-06, 4.208000000005541e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.1669999999438545e-06, 4.208999999866236e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.179999999909256e-06, 4.1939999999573985e-06, 4.23599999987978e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.292000000072349e-06, 4.263999999976065e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.222999999914379e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.208999999866236e-06, 4.209000000088281e-06, 4.222000000053683e-06]</msg>
<status status="PASS" starttime="20201029 09:33:12.891" endtime="20201029 09:33:12.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.886" endtime="20201029 09:33:12.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.505" endtime="20201029 09:33:12.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.505" endtime="20201029 09:33:12.894"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.902" endtime="20201029 09:33:12.919"></status>
</kw>
<msg timestamp="20201029 09:33:12.919" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.900" endtime="20201029 09:33:12.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.920" endtime="20201029 09:33:12.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.923" endtime="20201029 09:33:12.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.898" endtime="20201029 09:33:12.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.896" endtime="20201029 09:33:12.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.932" endtime="20201029 09:33:13.239"></status>
</kw>
<msg timestamp="20201029 09:33:13.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.149547264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.149551458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.930" endtime="20201029 09:33:13.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.149547264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.149551458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.245" endtime="20201029 09:33:13.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.255" endtime="20201029 09:33:13.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.928" endtime="20201029 09:33:13.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.926" endtime="20201029 09:33:13.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.262" level="INFO">${RESULT} = [{'diff': 4.1939999999573985e-06}, {'diff': 4.23599999987978e-06}, {'diff': 4.23599999987978e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.292000000072349e-06}, {'diff': 4.263999999976065e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:13.258" endtime="20201029 09:33:13.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.266" level="INFO">${OVERHEAD} = {'diff': [4.1939999999573985e-06, 4.23599999987978e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.292000000072349e-06, 4.263999999976065e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.222...</msg>
<status status="PASS" starttime="20201029 09:33:13.263" endtime="20201029 09:33:13.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.271" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:13.269" endtime="20201029 09:33:13.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.273" level="INFO">VALUE: [4.1939999999573985e-06, 4.23599999987978e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.292000000072349e-06, 4.263999999976065e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.222999999914379e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.208999999866236e-06, 4.209000000088281e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.208999999866236e-06, 4.208000000005541e-06, 4.292000000072349e-06, 4.262999999893324e-06, 4.236000000101825e-06, 4.263999999976065e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.236999999962521e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.180000000131301e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.290999999989609e-06, 4.2499999999279225e-06, 4.250000000149967e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.180999999991997e-06, 4.222000000053683e-06, 4.292000000072349e-06, 4.139000000069615e-06, 4.223000000136423e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.208000000005541e-06, 4.23599999987978e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.262999999893324e-06, 4.23599999987978e-06, 4.23599999987978e-06]</msg>
<status status="PASS" starttime="20201029 09:33:13.272" endtime="20201029 09:33:13.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.267" endtime="20201029 09:33:13.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.895" endtime="20201029 09:33:13.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.894" endtime="20201029 09:33:13.275"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.283" endtime="20201029 09:33:13.305"></status>
</kw>
<msg timestamp="20201029 09:33:13.305" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.282" endtime="20201029 09:33:13.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.306" endtime="20201029 09:33:13.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.309" endtime="20201029 09:33:13.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.279" endtime="20201029 09:33:13.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.277" endtime="20201029 09:33:13.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.318" endtime="20201029 09:33:13.619"></status>
</kw>
<msg timestamp="20201029 09:33:13.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.532359875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.532364083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.316" endtime="20201029 09:33:13.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.532359875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.532364083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.624" endtime="20201029 09:33:13.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.634" endtime="20201029 09:33:13.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.314" endtime="20201029 09:33:13.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.312" endtime="20201029 09:33:13.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.641" level="INFO">${RESULT} = [{'diff': 4.208000000005541e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.23599999987978e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:13.638" endtime="20201029 09:33:13.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.646" level="INFO">${OVERHEAD} = {'diff': [4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.208000000005541e-06, 4.23599999987978e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.2080...</msg>
<status status="PASS" starttime="20201029 09:33:13.642" endtime="20201029 09:33:13.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.651" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:13.650" endtime="20201029 09:33:13.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.653" level="INFO">VALUE: [4.208000000005541e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.208000000005541e-06, 4.23599999987978e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.262999999893324e-06, 4.23599999987978e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.236999999962521e-06, 4.222000000053683e-06, 4.1939999999573985e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.180000000131301e-06, 4.222000000053683e-06, 4.209000000088281e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.23599999987978e-06, 4.250000000149967e-06, 4.179999999909256e-06, 4.250000000149967e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.1939999999573985e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.1939999999573985e-06, 4.305999999898447e-06, 4.194000000179443e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.237000000184565e-06, 4.208999999866236e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.208000000005541e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.153000000117757e-06, 4.222000000053683e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.23599999987978e-06]</msg>
<status status="PASS" starttime="20201029 09:33:13.652" endtime="20201029 09:33:13.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.647" endtime="20201029 09:33:13.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.275" endtime="20201029 09:33:13.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.275" endtime="20201029 09:33:13.655"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.663" endtime="20201029 09:33:13.678"></status>
</kw>
<msg timestamp="20201029 09:33:13.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.661" endtime="20201029 09:33:13.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.679" endtime="20201029 09:33:13.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.682" endtime="20201029 09:33:13.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.659" endtime="20201029 09:33:13.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.657" endtime="20201029 09:33:13.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.691" endtime="20201029 09:33:13.993"></status>
</kw>
<msg timestamp="20201029 09:33:13.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.904193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.904197306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.689" endtime="20201029 09:33:13.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.904193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.904197306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.999" endtime="20201029 09:33:14.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.009" endtime="20201029 09:33:14.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.687" endtime="20201029 09:33:14.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.685" endtime="20201029 09:33:14.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.018" level="INFO">${RESULT} = [{'diff': 4.208999999866236e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.222999999914379e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.223000000136423e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:14.013" endtime="20201029 09:33:14.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.026" level="INFO">${OVERHEAD} = {'diff': [4.208999999866236e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.208000000005541e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.236...</msg>
<status status="PASS" starttime="20201029 09:33:14.019" endtime="20201029 09:33:14.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.031" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.029" endtime="20201029 09:33:14.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.035" level="INFO">VALUE: [4.208999999866236e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.208000000005541e-06, 4.223000000136423e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.153000000117757e-06, 4.222000000053683e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.194000000179443e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.250000000372012e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.26399999975402e-06, 4.221999999831638e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.263000000115369e-06, 4.208000000005541e-06, 4.1950000002621834e-06, 4.208000000005541e-06, 4.152999999895712e-06, 4.235999999657736e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.26399999975402e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.194999999818094e-06, 4.166000000083159e-06, 4.26399999975402e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.209000000088281e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.033" endtime="20201029 09:33:14.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.027" endtime="20201029 09:33:14.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.656" endtime="20201029 09:33:14.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.655" endtime="20201029 09:33:14.037"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.048" endtime="20201029 09:33:14.064"></status>
</kw>
<msg timestamp="20201029 09:33:14.065" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.046" endtime="20201029 09:33:14.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.066" endtime="20201029 09:33:14.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.068" endtime="20201029 09:33:14.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.043" endtime="20201029 09:33:14.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.041" endtime="20201029 09:33:14.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.079" endtime="20201029 09:33:14.385"></status>
</kw>
<msg timestamp="20201029 09:33:14.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.271945333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.271949597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.077" endtime="20201029 09:33:14.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.271945333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.271949597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.390" endtime="20201029 09:33:14.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.400" endtime="20201029 09:33:14.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.074" endtime="20201029 09:33:14.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.072" endtime="20201029 09:33:14.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.407" level="INFO">${RESULT} = [{'diff': 4.26399999975402e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.264000000198109e-06}, {'diff': 4.264000000198109e-06}, {'diff': 4.222000000275727e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:14.403" endtime="20201029 09:33:14.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.411" level="INFO">${OVERHEAD} = {'diff': [4.26399999975402e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.2080...</msg>
<status status="PASS" starttime="20201029 09:33:14.408" endtime="20201029 09:33:14.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.416" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.415" endtime="20201029 09:33:14.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.418" level="INFO">VALUE: [4.26399999975402e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.209000000088281e-06, 4.221999999831638e-06, 4.208999999644192e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.208999999644192e-06, 4.250000000372012e-06, 4.290999999767564e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.305000000037751e-06, 4.179999999909256e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208999999644192e-06, 4.306000000120491e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.235999999657736e-06, 4.194999999818094e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.221999999831638e-06, 4.292000000294394e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.417" endtime="20201029 09:33:14.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.412" endtime="20201029 09:33:14.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.039" endtime="20201029 09:33:14.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.038" endtime="20201029 09:33:14.420"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.428" endtime="20201029 09:33:14.446"></status>
</kw>
<msg timestamp="20201029 09:33:14.446" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.427" endtime="20201029 09:33:14.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.447" endtime="20201029 09:33:14.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.450" endtime="20201029 09:33:14.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.424" endtime="20201029 09:33:14.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.422" endtime="20201029 09:33:14.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.459" endtime="20201029 09:33:14.782"></status>
</kw>
<msg timestamp="20201029 09:33:14.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.648806292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.648810528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.457" endtime="20201029 09:33:14.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.648806292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.648810528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.787" endtime="20201029 09:33:14.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.797" endtime="20201029 09:33:14.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.455" endtime="20201029 09:33:14.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.453" endtime="20201029 09:33:14.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.804" level="INFO">${RESULT} = [{'diff': 4.235999999657736e-06}, {'diff': 4.194999999818094e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.194999999818094e-06}, {'diff': 4.180999999991997e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:14.801" endtime="20201029 09:33:14.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.810" level="INFO">${OVERHEAD} = {'diff': [4.235999999657736e-06, 4.194999999818094e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.278...</msg>
<status status="PASS" starttime="20201029 09:33:14.805" endtime="20201029 09:33:14.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.815" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.814" endtime="20201029 09:33:14.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.817" level="INFO">VALUE: [4.235999999657736e-06, 4.194999999818094e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.221999999831638e-06, 4.292000000294394e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.139000000069615e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.223000000358468e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.208999999644192e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.278000000024207e-06, 4.235999999657736e-06, 4.2769999999414665e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.1950000002621834e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.237000000184565e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.221999999831638e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.816" endtime="20201029 09:33:14.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.811" endtime="20201029 09:33:14.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.420" endtime="20201029 09:33:14.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.420" endtime="20201029 09:33:14.819"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.827" endtime="20201029 09:33:14.844"></status>
</kw>
<msg timestamp="20201029 09:33:14.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.825" endtime="20201029 09:33:14.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.847" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.846" endtime="20201029 09:33:14.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.848" endtime="20201029 09:33:14.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.823" endtime="20201029 09:33:14.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.821" endtime="20201029 09:33:14.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.858" endtime="20201029 09:33:15.179"></status>
</kw>
<msg timestamp="20201029 09:33:15.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.01975475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.019758986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:14.856" endtime="20201029 09:33:15.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.01975475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.019758986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:15.184" endtime="20201029 09:33:15.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.194" endtime="20201029 09:33:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.853" endtime="20201029 09:33:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.851" endtime="20201029 09:33:15.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.202" level="INFO">${RESULT} = [{'diff': 4.235999999657736e-06}, {'diff': 4.2769999999414665e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.209000000088281e-06}, {'diff': 4.1950000002621834e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:15.198" endtime="20201029 09:33:15.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.207" level="INFO">${OVERHEAD} = {'diff': [4.235999999657736e-06, 4.2769999999414665e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.1950000002621834e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.23...</msg>
<status status="PASS" starttime="20201029 09:33:15.203" endtime="20201029 09:33:15.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.211" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.210" endtime="20201029 09:33:15.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.213" level="INFO">VALUE: [4.235999999657736e-06, 4.2769999999414665e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.1950000002621834e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.237000000184565e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.221999999831638e-06, 4.26299999967128e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.167000000165899e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.306000000120491e-06, 4.2499999999279225e-06, 4.278000000024207e-06, 4.278000000024207e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.139000000069615e-06, 4.1950000002621834e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.221999999831638e-06, 4.193999999735354e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.193999999735354e-06, 4.26399999975402e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.208999999644192e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.250000000372012e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.139000000069615e-06, 4.236000000101825e-06, 4.221999999831638e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.212" endtime="20201029 09:33:15.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.207" endtime="20201029 09:33:15.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.820" endtime="20201029 09:33:15.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.819" endtime="20201029 09:33:15.215"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.223" endtime="20201029 09:33:15.241"></status>
</kw>
<msg timestamp="20201029 09:33:15.241" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.221" endtime="20201029 09:33:15.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.244" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.242" endtime="20201029 09:33:15.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.246" endtime="20201029 09:33:15.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.218" endtime="20201029 09:33:15.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.217" endtime="20201029 09:33:15.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.257" endtime="20201029 09:33:15.572"></status>
</kw>
<msg timestamp="20201029 09:33:15.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.404855347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.404859597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.255" endtime="20201029 09:33:15.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.404855347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.404859597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.577" endtime="20201029 09:33:15.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.587" endtime="20201029 09:33:15.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.252" endtime="20201029 09:33:15.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.250" endtime="20201029 09:33:15.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.594" level="INFO">${RESULT} = [{'diff': 4.250000000372012e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.222000000275727e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:15.590" endtime="20201029 09:33:15.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.599" level="INFO">${OVERHEAD} = {'diff': [4.250000000372012e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.193...</msg>
<status status="PASS" starttime="20201029 09:33:15.595" endtime="20201029 09:33:15.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.603" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.602" endtime="20201029 09:33:15.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.606" level="INFO">VALUE: [4.250000000372012e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.139000000069615e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.124999999799428e-06, 4.16699999972181e-06, 4.222999999914379e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.264000000198109e-06, 4.250000000372012e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.237000000184565e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.139000000069615e-06, 4.222000000275727e-06, 4.194000000179443e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.278000000024207e-06, 4.237000000184565e-06, 4.194000000179443e-06, 4.290999999767564e-06, 4.222999999914379e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.26399999975402e-06, 4.263000000115369e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.223000000358468e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.237000000184565e-06, 4.264000000198109e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.604" endtime="20201029 09:33:15.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.600" endtime="20201029 09:33:15.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.216" endtime="20201029 09:33:15.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.215" endtime="20201029 09:33:15.607"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.615" endtime="20201029 09:33:15.632"></status>
</kw>
<msg timestamp="20201029 09:33:15.632" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.613" endtime="20201029 09:33:15.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.633" endtime="20201029 09:33:15.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.636" endtime="20201029 09:33:15.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.611" endtime="20201029 09:33:15.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.609" endtime="20201029 09:33:15.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.645" endtime="20201029 09:33:15.961"></status>
</kw>
<msg timestamp="20201029 09:33:15.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.789953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.789958125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.644" endtime="20201029 09:33:15.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.789953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.789958125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.965" endtime="20201029 09:33:15.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.975" endtime="20201029 09:33:15.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.641" endtime="20201029 09:33:15.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.639" endtime="20201029 09:33:15.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.982" level="INFO">${RESULT} = [{'diff': 4.208000000005541e-06}, {'diff': 4.26399999975402e-06}, {'diff': 4.263000000115369e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.221999999831638e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:15.979" endtime="20201029 09:33:15.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.990" level="INFO">${OVERHEAD} = {'diff': [4.208000000005541e-06, 4.26399999975402e-06, 4.263000000115369e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.223000000358468e-06, 4.23600...</msg>
<status status="PASS" starttime="20201029 09:33:15.983" endtime="20201029 09:33:15.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.994" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.993" endtime="20201029 09:33:15.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.997" level="INFO">VALUE: [4.208000000005541e-06, 4.26399999975402e-06, 4.263000000115369e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.223000000358468e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.237000000184565e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.179999999465167e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.221999999387549e-06, 4.193999999735354e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.194000000623532e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.167000000165899e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.264000000198109e-06, 4.194999999818094e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.995" endtime="20201029 09:33:15.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.991" endtime="20201029 09:33:15.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.608" endtime="20201029 09:33:15.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.607" endtime="20201029 09:33:15.998"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.006" endtime="20201029 09:33:16.023"></status>
</kw>
<msg timestamp="20201029 09:33:16.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.005" endtime="20201029 09:33:16.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.027" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.025" endtime="20201029 09:33:16.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.028" endtime="20201029 09:33:16.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.002" endtime="20201029 09:33:16.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.000" endtime="20201029 09:33:16.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.040" endtime="20201029 09:33:16.364"></status>
</kw>
<msg timestamp="20201029 09:33:16.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.170037347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.170041583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.038" endtime="20201029 09:33:16.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.170037347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.170041583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.369" endtime="20201029 09:33:16.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.379" endtime="20201029 09:33:16.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.035" endtime="20201029 09:33:16.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.033" endtime="20201029 09:33:16.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.385" level="INFO">${RESULT} = [{'diff': 4.235999999657736e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.277999999580118e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:16.382" endtime="20201029 09:33:16.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.390" level="INFO">${OVERHEAD} = {'diff': [4.235999999657736e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.222...</msg>
<status status="PASS" starttime="20201029 09:33:16.386" endtime="20201029 09:33:16.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.394" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.393" endtime="20201029 09:33:16.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.397" level="INFO">VALUE: [4.235999999657736e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.264000000198109e-06, 4.194999999818094e-06, 4.2499999999279225e-06, 4.166000000083159e-06, 4.152999999895712e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.193999999735354e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.179999999465167e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.222999999470289e-06, 4.306000000120491e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.166000000083159e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.2370000006286546e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.194000000623532e-06, 4.221999999387549e-06, 4.236999999740476e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.1800000003533455e-06, 4.222000000275727e-06, 4.264000000198109e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.223000000358468e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.395" endtime="20201029 09:33:16.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.391" endtime="20201029 09:33:16.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.999" endtime="20201029 09:33:16.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.999" endtime="20201029 09:33:16.398"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.407" endtime="20201029 09:33:16.423"></status>
</kw>
<msg timestamp="20201029 09:33:16.423" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.405" endtime="20201029 09:33:16.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.424" endtime="20201029 09:33:16.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.427" endtime="20201029 09:33:16.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.402" endtime="20201029 09:33:16.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.400" endtime="20201029 09:33:16.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.436" endtime="20201029 09:33:16.747"></status>
</kw>
<msg timestamp="20201029 09:33:16.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.551904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.551908583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.435" endtime="20201029 09:33:16.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.551904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.551908583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.752" endtime="20201029 09:33:16.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.761" endtime="20201029 09:33:16.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.432" endtime="20201029 09:33:16.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.430" endtime="20201029 09:33:16.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.768" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.1800000003533455e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.264000000198109e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:16.765" endtime="20201029 09:33:16.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.774" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.1800000003533455e-06, 4.222000000275727e-06, 4.264000000198109e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4....</msg>
<status status="PASS" starttime="20201029 09:33:16.769" endtime="20201029 09:33:16.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.777" endtime="20201029 09:33:16.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.781" level="INFO">VALUE: [4.2499999999279225e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.1800000003533455e-06, 4.222000000275727e-06, 4.264000000198109e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.264000000198109e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.152999999895712e-06, 4.221999999387549e-06, 4.250000000816101e-06, 4.223000000358468e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.179999999465167e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.2370000006286546e-06, 4.263999999309931e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.222999999470289e-06, 4.181000000436086e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.263000000115369e-06, 4.221999999387549e-06, 4.2919999998503044e-06, 4.194999999818094e-06, 4.209000000088281e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.2919999998503044e-06, 4.264000000198109e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.779" endtime="20201029 09:33:16.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.775" endtime="20201029 09:33:16.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.399" endtime="20201029 09:33:16.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.399" endtime="20201029 09:33:16.782"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.790" endtime="20201029 09:33:16.807"></status>
</kw>
<msg timestamp="20201029 09:33:16.808" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.788" endtime="20201029 09:33:16.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.811" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.809" endtime="20201029 09:33:16.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.812" endtime="20201029 09:33:16.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.786" endtime="20201029 09:33:16.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.784" endtime="20201029 09:33:16.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.821" endtime="20201029 09:33:17.138"></status>
</kw>
<msg timestamp="20201029 09:33:17.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.939772222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.939776458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.819" endtime="20201029 09:33:17.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.939772222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.939776458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.143" endtime="20201029 09:33:17.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.152" endtime="20201029 09:33:17.154"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.817" endtime="20201029 09:33:17.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.815" endtime="20201029 09:33:17.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.159" level="INFO">${RESULT} = [{'diff': 4.235999999657736e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.263000000115369e-06}, {'diff': 4.221999999387549e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:17.156" endtime="20201029 09:33:17.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.165" level="INFO">${OVERHEAD} = {'diff': [4.235999999657736e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.263000000115369e-06, 4.221999999387549e-06, 4.2919999998503044e-06, 4.194999999818094e-06, 4.20...</msg>
<status status="PASS" starttime="20201029 09:33:17.160" endtime="20201029 09:33:17.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.169" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.168" endtime="20201029 09:33:17.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.172" level="INFO">VALUE: [4.235999999657736e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.263000000115369e-06, 4.221999999387549e-06, 4.2919999998503044e-06, 4.194999999818094e-06, 4.209000000088281e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.2919999998503044e-06, 4.264000000198109e-06, 4.209000000088281e-06, 4.223000000358468e-06, 4.277999999580118e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.1389999996255256e-06, 4.235999999657736e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.263999999309931e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.179999999465167e-06, 4.181000000436086e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.195000000706273e-06, 4.264000000198109e-06, 4.193999999735354e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.1809999995479075e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.179999999465167e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.170" endtime="20201029 09:33:17.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.166" endtime="20201029 09:33:17.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.783" endtime="20201029 09:33:17.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.783" endtime="20201029 09:33:17.173"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.181" endtime="20201029 09:33:17.199"></status>
</kw>
<msg timestamp="20201029 09:33:17.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.180" endtime="20201029 09:33:17.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.202" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.201" endtime="20201029 09:33:17.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.203" endtime="20201029 09:33:17.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.177" endtime="20201029 09:33:17.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.175" endtime="20201029 09:33:17.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.213" endtime="20201029 09:33:17.530"></status>
</kw>
<msg timestamp="20201029 09:33:17.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.314801333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.314805569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.211" endtime="20201029 09:33:17.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.314801333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.314805569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.535" endtime="20201029 09:33:17.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.545" endtime="20201029 09:33:17.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.208" endtime="20201029 09:33:17.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.207" endtime="20201029 09:33:17.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.552" level="INFO">${RESULT} = [{'diff': 4.235999999657736e-06}, {'diff': 4.236999999740476e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.2499999999279225e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:17.548" endtime="20201029 09:33:17.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.556" level="INFO">${OVERHEAD} = {'diff': [4.235999999657736e-06, 4.236999999740476e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.235...</msg>
<status status="PASS" starttime="20201029 09:33:17.553" endtime="20201029 09:33:17.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.561" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.560" endtime="20201029 09:33:17.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.563" level="INFO">VALUE: [4.235999999657736e-06, 4.236999999740476e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.1809999995479075e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.179999999465167e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.223000000358468e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.151999999812972e-06, 4.2499999999279225e-06, 4.195000000706273e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.278000000468296e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.276999999497377e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.1809999995479075e-06, 4.208000000005541e-06, 4.236999999740476e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.223000000358468e-06, 4.209000000088281e-06, 4.166000000083159e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.250000000816101e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.562" endtime="20201029 09:33:17.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.557" endtime="20201029 09:33:17.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.174" endtime="20201029 09:33:17.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.173" endtime="20201029 09:33:17.565"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.574" endtime="20201029 09:33:17.596"></status>
</kw>
<msg timestamp="20201029 09:33:17.597" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.572" endtime="20201029 09:33:17.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.598" endtime="20201029 09:33:17.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.601" endtime="20201029 09:33:17.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.569" endtime="20201029 09:33:17.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.567" endtime="20201029 09:33:17.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.610" endtime="20201029 09:33:17.918"></status>
</kw>
<msg timestamp="20201029 09:33:17.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.695804208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.695808458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.608" endtime="20201029 09:33:17.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.695804208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.695808458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.923" endtime="20201029 09:33:17.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.933" endtime="20201029 09:33:17.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.606" endtime="20201029 09:33:17.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.604" endtime="20201029 09:33:17.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.940" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.1809999995479075e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.236999999740476e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:17.937" endtime="20201029 09:33:17.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.946" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.1809999995479075e-06, 4.208000000005541e-06, 4.236999999740476e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.2...</msg>
<status status="PASS" starttime="20201029 09:33:17.941" endtime="20201029 09:33:17.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.950" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.949" endtime="20201029 09:33:17.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.953" level="INFO">VALUE: [4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.1809999995479075e-06, 4.208000000005541e-06, 4.236999999740476e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.223000000358468e-06, 4.209000000088281e-06, 4.166000000083159e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.250000000816101e-06, 4.278000000468296e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.223000000358468e-06, 4.236000000545914e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.209000000088281e-06, 4.1800000003533455e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.195000000706273e-06, 4.193999999735354e-06, 4.208000000005541e-06, 4.250000000816101e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.166999999277721e-06, 4.221999999387549e-06, 4.263000000115369e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.194000000623532e-06, 4.209000000088281e-06, 4.235999999657736e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.951" endtime="20201029 09:33:17.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.947" endtime="20201029 09:33:17.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.566" endtime="20201029 09:33:17.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.565" endtime="20201029 09:33:17.955"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.963" endtime="20201029 09:33:17.988"></status>
</kw>
<msg timestamp="20201029 09:33:17.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.962" endtime="20201029 09:33:17.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.991" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.990" endtime="20201029 09:33:17.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.992" endtime="20201029 09:33:17.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.959" endtime="20201029 09:33:17.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.957" endtime="20201029 09:33:17.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.001" endtime="20201029 09:33:18.314"></status>
</kw>
<msg timestamp="20201029 09:33:18.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.077720181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.077724403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.000" endtime="20201029 09:33:18.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.077720181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.077724403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.319" endtime="20201029 09:33:18.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.329" endtime="20201029 09:33:18.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.997" endtime="20201029 09:33:18.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.996" endtime="20201029 09:33:18.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.337" level="INFO">${RESULT} = [{'diff': 4.222000000275727e-06}, {'diff': 4.236999999740476e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.221999999387549e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:18.333" endtime="20201029 09:33:18.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.342" level="INFO">${OVERHEAD} = {'diff': [4.222000000275727e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.249...</msg>
<status status="PASS" starttime="20201029 09:33:18.338" endtime="20201029 09:33:18.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.346" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:18.345" endtime="20201029 09:33:18.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.349" level="INFO">VALUE: [4.222000000275727e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.194000000623532e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.167000000165899e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.263999999309931e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.194000000623532e-06, 4.277999999580118e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.195000000706273e-06, 4.277999999580118e-06, 4.235999999657736e-06, 4.194999999818094e-06, 4.194999999818094e-06, 4.223000000358468e-06, 4.221999999387549e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.166000000083159e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.1809999995479075e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.209000000088281e-06]</msg>
<status status="PASS" starttime="20201029 09:33:18.347" endtime="20201029 09:33:18.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.343" endtime="20201029 09:33:18.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.956" endtime="20201029 09:33:18.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.955" endtime="20201029 09:33:18.350"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.359" endtime="20201029 09:33:18.375"></status>
</kw>
<msg timestamp="20201029 09:33:18.375" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.357" endtime="20201029 09:33:18.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.378" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.376" endtime="20201029 09:33:18.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.379" endtime="20201029 09:33:18.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.354" endtime="20201029 09:33:18.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.352" endtime="20201029 09:33:18.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.389" endtime="20201029 09:33:18.696"></status>
</kw>
<msg timestamp="20201029 09:33:18.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.464626917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.464631153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.388" endtime="20201029 09:33:18.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.464626917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.464631153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.701" endtime="20201029 09:33:18.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.711" endtime="20201029 09:33:18.712"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.384" endtime="20201029 09:33:18.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.382" endtime="20201029 09:33:18.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.718" level="INFO">${RESULT} = [{'diff': 4.235999999657736e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.166000000083159e-06}, {'diff': 4.209000000088281e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.236999999740476e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:18.714" endtime="20201029 09:33:18.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.722" level="INFO">${OVERHEAD} = {'diff': [4.235999999657736e-06, 4.221999999387549e-06, 4.166000000083159e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.1809999995479075e-06, 4.221999999387549e-06, 4.235...</msg>
<status status="PASS" starttime="20201029 09:33:18.719" endtime="20201029 09:33:18.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.727" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:18.725" endtime="20201029 09:33:18.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.730" level="INFO">VALUE: [4.235999999657736e-06, 4.221999999387549e-06, 4.166000000083159e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.236999999740476e-06, 4.1809999995479075e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.222999999470289e-06, 4.278000000468296e-06, 4.2919999998503044e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.3199999995025e-06, 4.222999999470289e-06, 4.236000000545914e-06, 4.194999999818094e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.235999999657736e-06]</msg>
<status status="PASS" starttime="20201029 09:33:18.728" endtime="20201029 09:33:18.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.723" endtime="20201029 09:33:18.731"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.351" endtime="20201029 09:33:18.731"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.351" endtime="20201029 09:33:18.731"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.740" endtime="20201029 09:33:18.756"></status>
</kw>
<msg timestamp="20201029 09:33:18.757" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.738" endtime="20201029 09:33:18.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.759" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.758" endtime="20201029 09:33:18.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.760" endtime="20201029 09:33:18.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.735" endtime="20201029 09:33:18.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.734" endtime="20201029 09:33:18.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.769" endtime="20201029 09:33:19.090"></status>
</kw>
<msg timestamp="20201029 09:33:19.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.842405903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.842410139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.768" endtime="20201029 09:33:19.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.842405903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.842410139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.095" endtime="20201029 09:33:19.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.104" endtime="20201029 09:33:19.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.765" endtime="20201029 09:33:19.107"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.764" endtime="20201029 09:33:19.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.111" level="INFO">${RESULT} = [{'diff': 4.235999999657736e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.3199999995025e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:19.108" endtime="20201029 09:33:19.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.117" level="INFO">${OVERHEAD} = {'diff': [4.235999999657736e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.3199999995025e-06, 4.222999999470289e-06, 4.236000000545914e-06, 4.194999...</msg>
<status status="PASS" starttime="20201029 09:33:19.112" endtime="20201029 09:33:19.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.121" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:19.120" endtime="20201029 09:33:19.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.124" level="INFO">VALUE: [4.235999999657736e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.3199999995025e-06, 4.222999999470289e-06, 4.236000000545914e-06, 4.194999999818094e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.194000000623532e-06, 4.1809999995479075e-06, 4.222000000275727e-06, 4.2370000006286546e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.277999999580118e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.223000000358468e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.1809999995479075e-06, 4.208000000005541e-06, 4.1800000003533455e-06, 4.181000000436086e-06, 4.235999999657736e-06, 4.250000000816101e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.153000000783891e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.193999999735354e-06, 4.221999999387549e-06, 4.193999999735354e-06, 4.278000000468296e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.278000000468296e-06, 4.263000000115369e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.166999999277721e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.122" endtime="20201029 09:33:19.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.118" endtime="20201029 09:33:19.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.732" endtime="20201029 09:33:19.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.732" endtime="20201029 09:33:19.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.393" endtime="20201029 09:33:19.125"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:11.320" endtime="20201029 09:33:19.126" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.133" endtime="20201029 09:33:19.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.132" endtime="20201029 09:33:19.153"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.166" endtime="20201029 09:33:19.186"></status>
</kw>
<msg timestamp="20201029 09:33:19.186" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.165" endtime="20201029 09:33:19.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.187" endtime="20201029 09:33:19.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.192" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:19.190" endtime="20201029 09:33:19.192"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.162" endtime="20201029 09:33:19.193"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.159" endtime="20201029 09:33:19.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.158" endtime="20201029 09:33:19.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:19.197" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:19.197" endtime="20201029 09:33:19.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.194" endtime="20201029 09:33:19.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.157" endtime="20201029 09:33:19.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.157" endtime="20201029 09:33:19.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.199" endtime="20201029 09:33:19.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.156" endtime="20201029 09:33:19.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.154" endtime="20201029 09:33:19.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.130" endtime="20201029 09:33:19.202"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.210" endtime="20201029 09:33:19.230"></status>
</kw>
<msg timestamp="20201029 09:33:19.231" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.208" endtime="20201029 09:33:19.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.234" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.232" endtime="20201029 09:33:19.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.235" endtime="20201029 09:33:19.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.206" endtime="20201029 09:33:19.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.204" endtime="20201029 09:33:19.237"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.240" endtime="20201029 09:33:19.242"></status>
</kw>
<msg timestamp="20201029 09:33:19.242" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:19.238" endtime="20201029 09:33:19.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.246" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:19.245" endtime="20201029 09:33:19.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.248" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:19.247" endtime="20201029 09:33:19.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.243" endtime="20201029 09:33:19.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.253" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:19.252" endtime="20201029 09:33:19.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.255" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:19.254" endtime="20201029 09:33:19.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.250" endtime="20201029 09:33:19.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.262" endtime="20201029 09:33:19.550"></status>
</kw>
<msg timestamp="20201029 09:33:19.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067812972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067821542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.261" endtime="20201029 09:33:19.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067812972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067821542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.554" endtime="20201029 09:33:19.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.562" endtime="20201029 09:33:19.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.258" endtime="20201029 09:33:19.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.256" endtime="20201029 09:33:19.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.569" level="INFO">${RESULT} = [{'diff': 8.569999999999411e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.694000000003532e-06}, {'diff': 8.694000000003532e-06}, {'diff': 8.680999999996497e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:19.566" endtime="20201029 09:33:19.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.573" level="INFO">${OVERHEAD} = {'diff': [8.569999999999411e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.7090...</msg>
<status status="PASS" starttime="20201029 09:33:19.570" endtime="20201029 09:33:19.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.578" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:19.577" endtime="20201029 09:33:19.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.580" level="INFO">VALUE: [8.569999999999411e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.709000000009515e-06, 8.708999999995637e-06, 8.680999999996497e-06, 8.681000000010375e-06, 8.707999999996163e-06, 8.680000000010901e-06, 8.708000000010041e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.723000000002146e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.680000000010901e-06, 8.695000000003006e-06, 8.736000000009181e-06, 8.722000000002672e-06, 8.708000000010041e-06, 8.695000000003006e-06, 8.735999999995303e-06, 8.680999999996497e-06, 8.694000000003532e-06, 8.611000000005586e-06, 8.735999999995303e-06, 8.693999999989654e-06, 8.666000000004392e-06, 8.778000000000952e-06, 8.679999999997023e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.737000000008655e-06, 8.723000000002146e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.666999999989988e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.736000000009181e-06, 8.721999999988794e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.579" endtime="20201029 09:33:19.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.574" endtime="20201029 09:33:19.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.202" endtime="20201029 09:33:19.582"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:19.128" endtime="20201029 09:33:19.582" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.589" endtime="20201029 09:33:19.609"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.588" endtime="20201029 09:33:19.609"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.623" endtime="20201029 09:33:19.647"></status>
</kw>
<msg timestamp="20201029 09:33:19.647" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.622" endtime="20201029 09:33:19.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.650" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.648" endtime="20201029 09:33:19.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.653" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:19.651" endtime="20201029 09:33:19.653"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.619" endtime="20201029 09:33:19.654"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.617" endtime="20201029 09:33:19.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.615" endtime="20201029 09:33:19.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:19.658" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:19.658" endtime="20201029 09:33:19.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.656" endtime="20201029 09:33:19.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.614" endtime="20201029 09:33:19.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.613" endtime="20201029 09:33:19.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.660" endtime="20201029 09:33:19.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.612" endtime="20201029 09:33:19.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.610" endtime="20201029 09:33:19.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.587" endtime="20201029 09:33:19.663"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.675" endtime="20201029 09:33:19.772"></status>
</kw>
<msg timestamp="20201029 09:33:19.773" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.672" endtime="20201029 09:33:19.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.775" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.774" endtime="20201029 09:33:19.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.776" endtime="20201029 09:33:19.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.669" endtime="20201029 09:33:19.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.666" endtime="20201029 09:33:19.779"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.781" endtime="20201029 09:33:19.783"></status>
</kw>
<msg timestamp="20201029 09:33:19.783" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:19.780" endtime="20201029 09:33:19.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.788" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:19.787" endtime="20201029 09:33:19.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.790" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:19.789" endtime="20201029 09:33:19.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.784" endtime="20201029 09:33:19.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.796" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:19.794" endtime="20201029 09:33:19.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.798" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:19.797" endtime="20201029 09:33:19.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.791" endtime="20201029 09:33:19.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.805" endtime="20201029 09:33:20.099"></status>
</kw>
<msg timestamp="20201029 09:33:20.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080376292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080426583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.804" endtime="20201029 09:33:20.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080376292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080426583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.103" endtime="20201029 09:33:20.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.111" endtime="20201029 09:33:20.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.801" endtime="20201029 09:33:20.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.799" endtime="20201029 09:33:20.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.117" level="INFO">${RESULT} = [{'diff': 5.029099999999398e-05}, {'diff': 5.023600000000905e-05}, {'diff': 5.032000000000647e-05}, {'diff': 5.025000000000168e-05}, {'diff': 5.037500000000528e-05}, {'diff': 5.027700000000135e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:20.114" endtime="20201029 09:33:20.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.122" level="INFO">${OVERHEAD} = {'diff': [5.029099999999398e-05, 5.023600000000905e-05, 5.032000000000647e-05, 5.025000000000168e-05, 5.037500000000528e-05, 5.027700000000135e-05, 5.033400000001298e-05, 5.0235999999995173e-05, 5.033...</msg>
<status status="PASS" starttime="20201029 09:33:20.118" endtime="20201029 09:33:20.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.126" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:20.125" endtime="20201029 09:33:20.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.129" level="INFO">VALUE: [5.029099999999398e-05, 5.023600000000905e-05, 5.032000000000647e-05, 5.025000000000168e-05, 5.037500000000528e-05, 5.027700000000135e-05, 5.033400000001298e-05, 5.0235999999995173e-05, 5.033299999999963e-05, 5.0249999999987804e-05, 5.029099999999398e-05, 5.0319000000007e-05, 5.0249999999987804e-05, 5.03339999999991e-05, 5.0223000000002016e-05, 5.029099999999398e-05, 5.034699999999226e-05, 5.036199999999824e-05, 5.038899999999791e-05, 5.030599999999996e-05, 5.033299999999963e-05, 5.034700000000614e-05, 5.030599999999996e-05, 5.029099999999398e-05, 5.030599999999996e-05, 5.029199999999345e-05, 5.027800000000082e-05, 5.034699999999226e-05, 5.030599999999996e-05, 5.027800000000082e-05, 5.031899999999312e-05, 5.031999999999259e-05, 5.036099999999877e-05, 5.0277999999986944e-05, 5.032000000002035e-05, 5.034700000000614e-05, 5.034700000000614e-05, 5.0237000000008525e-05, 5.025000000000168e-05, 5.033299999998575e-05, 5.0333999999985224e-05, 5.029200000000733e-05, 5.031999999999259e-05, 5.036099999999877e-05, 5.031899999999312e-05, 5.0333000000013506e-05, 5.025000000000168e-05, 5.033299999998575e-05, 5.0235999999981296e-05, 5.0333000000013506e-05]</msg>
<status status="PASS" starttime="20201029 09:33:20.127" endtime="20201029 09:33:20.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.122" endtime="20201029 09:33:20.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.663" endtime="20201029 09:33:20.131"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:19.584" endtime="20201029 09:33:20.131" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:20.139" endtime="20201029 09:33:20.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.137" endtime="20201029 09:33:20.159"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.172" endtime="20201029 09:33:20.193"></status>
</kw>
<msg timestamp="20201029 09:33:20.194" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.170" endtime="20201029 09:33:20.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.195" endtime="20201029 09:33:20.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.199" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:20.197" endtime="20201029 09:33:20.199"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.167" endtime="20201029 09:33:20.200"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.165" endtime="20201029 09:33:20.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.164" endtime="20201029 09:33:20.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:20.205" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:20.204" endtime="20201029 09:33:20.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.202" endtime="20201029 09:33:20.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.163" endtime="20201029 09:33:20.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.162" endtime="20201029 09:33:20.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.206" endtime="20201029 09:33:20.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.161" endtime="20201029 09:33:20.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.159" endtime="20201029 09:33:20.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.135" endtime="20201029 09:33:20.209"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.219" endtime="20201029 09:33:20.506"></status>
</kw>
<msg timestamp="20201029 09:33:20.506" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.216" endtime="20201029 09:33:20.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.509" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.507" endtime="20201029 09:33:20.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.510" endtime="20201029 09:33:20.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.213" endtime="20201029 09:33:20.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.211" endtime="20201029 09:33:20.512"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.515" endtime="20201029 09:33:20.516"></status>
</kw>
<msg timestamp="20201029 09:33:20.517" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:20.513" endtime="20201029 09:33:20.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.521" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:20.520" endtime="20201029 09:33:20.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.523" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:20.522" endtime="20201029 09:33:20.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.518" endtime="20201029 09:33:20.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.528" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:20.527" endtime="20201029 09:33:20.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.530" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:20.529" endtime="20201029 09:33:20.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.525" endtime="20201029 09:33:20.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.537" endtime="20201029 09:33:20.828"></status>
</kw>
<msg timestamp="20201029 09:33:20.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077026167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077120056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.536" endtime="20201029 09:33:20.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077026167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077120056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.832" endtime="20201029 09:33:20.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.840" endtime="20201029 09:33:20.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.533" endtime="20201029 09:33:20.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.531" endtime="20201029 09:33:20.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.847" level="INFO">${RESULT} = [{'diff': 9.388899999999978e-05}, {'diff': 9.323599999999654e-05}, {'diff': 9.331900000000837e-05}, {'diff': 9.329199999999482e-05}, {'diff': 9.327700000000272e-05}, {'diff': 9.334699999999363e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:20.844" endtime="20201029 09:33:20.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.852" level="INFO">${OVERHEAD} = {'diff': [9.388899999999978e-05, 9.323599999999654e-05, 9.331900000000837e-05, 9.329199999999482e-05, 9.327700000000272e-05, 9.334699999999363e-05, 9.329100000000923e-05, 9.323600000001042e-05, 9.3194...</msg>
<status status="PASS" starttime="20201029 09:33:20.848" endtime="20201029 09:33:20.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.856" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:20.855" endtime="20201029 09:33:20.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.859" level="INFO">VALUE: [9.388899999999978e-05, 9.323599999999654e-05, 9.331900000000837e-05, 9.329199999999482e-05, 9.327700000000272e-05, 9.334699999999363e-05, 9.329100000000923e-05, 9.323600000001042e-05, 9.319499999999037e-05, 9.331900000000837e-05, 9.325000000001693e-05, 9.323599999999654e-05, 9.332000000000784e-05, 9.324999999998917e-05, 9.316700000000511e-05, 9.330600000001521e-05, 9.333400000000047e-05, 9.337499999997889e-05, 9.331900000000837e-05, 9.330499999998798e-05, 9.330599999998745e-05, 9.322200000000391e-05, 9.325000000001693e-05, 9.327800000000219e-05, 9.329199999999482e-05, 9.329199999999482e-05, 9.334699999999363e-05, 9.3333000000001e-05, 9.320800000001128e-05, 9.330600000001521e-05, 9.320799999998353e-05, 9.329199999999482e-05, 9.325000000001693e-05, 9.333300000002875e-05, 9.327700000000272e-05, 9.320799999995577e-05, 9.322200000000391e-05, 9.331900000003612e-05, 9.333299999997324e-05, 9.332000000000784e-05, 9.338899999999928e-05, 9.319399999996314e-05, 9.330600000001521e-05, 9.31669999999496e-05, 9.326400000003732e-05, 9.33479999999931e-05, 9.333300000002875e-05, 9.334700000002139e-05, 9.323599999999654e-05, 9.330499999998798e-05]</msg>
<status status="PASS" starttime="20201029 09:33:20.857" endtime="20201029 09:33:20.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.853" endtime="20201029 09:33:20.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.210" endtime="20201029 09:33:20.860"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:20.133" endtime="20201029 09:33:20.861" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:20.867" endtime="20201029 09:33:20.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.866" endtime="20201029 09:33:20.890"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.922" endtime="20201029 09:33:20.953"></status>
</kw>
<msg timestamp="20201029 09:33:20.957" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.914" endtime="20201029 09:33:20.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.964" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.961" endtime="20201029 09:33:20.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.970" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:20.966" endtime="20201029 09:33:20.971"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.909" endtime="20201029 09:33:20.973"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.904" endtime="20201029 09:33:20.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.901" endtime="20201029 09:33:20.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:20.978" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:20.977" endtime="20201029 09:33:20.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.975" endtime="20201029 09:33:20.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.899" endtime="20201029 09:33:20.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.898" endtime="20201029 09:33:20.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.980" endtime="20201029 09:33:20.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.895" endtime="20201029 09:33:20.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.892" endtime="20201029 09:33:20.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.865" endtime="20201029 09:33:20.983"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.992" endtime="20201029 09:33:21.014"></status>
</kw>
<msg timestamp="20201029 09:33:21.014" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.991" endtime="20201029 09:33:21.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.017" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.015" endtime="20201029 09:33:21.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.018" endtime="20201029 09:33:21.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.988" endtime="20201029 09:33:21.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.986" endtime="20201029 09:33:21.021"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.023" endtime="20201029 09:33:21.024"></status>
</kw>
<msg timestamp="20201029 09:33:21.025" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:21.021" endtime="20201029 09:33:21.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.029" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:21.028" endtime="20201029 09:33:21.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.031" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:21.030" endtime="20201029 09:33:21.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.026" endtime="20201029 09:33:21.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.036" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:21.035" endtime="20201029 09:33:21.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.038" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:21.037" endtime="20201029 09:33:21.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.033" endtime="20201029 09:33:21.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.046" endtime="20201029 09:33:21.340"></status>
</kw>
<msg timestamp="20201029 09:33:21.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.116938347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.116940347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.044" endtime="20201029 09:33:21.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.116938347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.116940347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.344" endtime="20201029 09:33:21.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.352" endtime="20201029 09:33:21.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.041" endtime="20201029 09:33:21.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.040" endtime="20201029 09:33:21.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.360" level="INFO">${RESULT} = [{'diff': 2.000000000002e-06}, {'diff': 1.986000000009369e-06}, {'diff': 1.9999999999881224e-06}, {'diff': 2.0130000000090353e-06}, {'diff': 1.9859999999954914e-06}, {'diff': 1.9720000000028604e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:21.356" endtime="20201029 09:33:21.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.364" level="INFO">${OVERHEAD} = {'diff': [2.000000000002e-06, 1.986000000009369e-06, 1.9999999999881224e-06, 2.0130000000090353e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 2.02800000000114e-06, 1.9439999999898427e-06, 2.000...</msg>
<status status="PASS" starttime="20201029 09:33:21.361" endtime="20201029 09:33:21.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.368" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:21.367" endtime="20201029 09:33:21.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.371" level="INFO">VALUE: [2.000000000002e-06, 1.986000000009369e-06, 1.9999999999881224e-06, 2.0130000000090353e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 2.02800000000114e-06, 1.9439999999898427e-06, 2.000000000002e-06, 1.986000000009369e-06, 1.9859999999954914e-06, 2.014000000008509e-06, 1.986000000009369e-06, 1.9720000000028604e-06, 1.9999999999881224e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.013999999994631e-06, 1.986000000009369e-06, 2.000000000002e-06, 1.9720000000028604e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.0270000000016664e-06, 1.9720000000028604e-06, 1.9580000000102293e-06, 2.05600000000028e-06, 2.000000000002e-06, 1.986000000009369e-06, 1.9579999999963515e-06, 1.987000000008843e-06, 2.05600000000028e-06, 1.958999999995825e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.000000000002e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.986000000009369e-06, 1.958999999995825e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 1.959000000009703e-06, 2.0270000000016664e-06, 2.0129999999951576e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.000000000002e-06, 1.9859999999954914e-06]</msg>
<status status="PASS" starttime="20201029 09:33:21.369" endtime="20201029 09:33:21.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.365" endtime="20201029 09:33:21.372"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.984" endtime="20201029 09:33:21.372"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:20.862" endtime="20201029 09:33:21.373" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:21.379" endtime="20201029 09:33:21.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.378" endtime="20201029 09:33:21.399"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.414" endtime="20201029 09:33:21.431"></status>
</kw>
<msg timestamp="20201029 09:33:21.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.412" endtime="20201029 09:33:21.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.434" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.432" endtime="20201029 09:33:21.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.437" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:21.435" endtime="20201029 09:33:21.437"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:21.409" endtime="20201029 09:33:21.438"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:21.407" endtime="20201029 09:33:21.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.405" endtime="20201029 09:33:21.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:21.442" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:21.442" endtime="20201029 09:33:21.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.439" endtime="20201029 09:33:21.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.404" endtime="20201029 09:33:21.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.404" endtime="20201029 09:33:21.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.444" endtime="20201029 09:33:21.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.402" endtime="20201029 09:33:21.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.401" endtime="20201029 09:33:21.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.377" endtime="20201029 09:33:21.447"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.455" endtime="20201029 09:33:21.553"></status>
</kw>
<msg timestamp="20201029 09:33:21.553" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.454" endtime="20201029 09:33:21.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.556" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.554" endtime="20201029 09:33:21.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.558" endtime="20201029 09:33:21.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.451" endtime="20201029 09:33:21.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.449" endtime="20201029 09:33:21.570"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.574" endtime="20201029 09:33:21.576"></status>
</kw>
<msg timestamp="20201029 09:33:21.577" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:21.571" endtime="20201029 09:33:21.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.585" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:21.583" endtime="20201029 09:33:21.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.590" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:21.588" endtime="20201029 09:33:21.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.578" endtime="20201029 09:33:21.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.597" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:21.596" endtime="20201029 09:33:21.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.599" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:21.598" endtime="20201029 09:33:21.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.593" endtime="20201029 09:33:21.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.608" endtime="20201029 09:33:21.938"></status>
</kw>
<msg timestamp="20201029 09:33:21.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069096931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069109125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.606" endtime="20201029 09:33:21.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069096931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069109125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.942" endtime="20201029 09:33:21.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.951" endtime="20201029 09:33:21.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.602" endtime="20201029 09:33:21.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.600" endtime="20201029 09:33:21.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.957" level="INFO">${RESULT} = [{'diff': 1.2193999999993155e-05}, {'diff': 1.2180999999999997e-05}, {'diff': 1.2166999999993489e-05}, {'diff': 1.2193999999993155e-05}, {'diff': 1.2180000000000524e-05}, {'diff': 1.2180999999999997e-...</msg>
<status status="PASS" starttime="20201029 09:33:21.954" endtime="20201029 09:33:21.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.962" level="INFO">${OVERHEAD} = {'diff': [1.2193999999993155e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2193999999993155e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2097000000002578e-05, 1.2180000000000524e-05...</msg>
<status status="PASS" starttime="20201029 09:33:21.958" endtime="20201029 09:33:21.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.966" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:21.965" endtime="20201029 09:33:21.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.969" level="INFO">VALUE: [1.2193999999993155e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2193999999993155e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2097000000002578e-05, 1.2180000000000524e-05, 1.2166999999993489e-05, 1.2110999999995209e-05, 1.2137999999994875e-05, 1.2125000000001718e-05, 1.2139000000008227e-05, 1.2194999999992628e-05, 1.2194000000007033e-05, 1.2152000000001384e-05, 1.2194000000007033e-05, 1.2153000000000858e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2193999999993155e-05, 1.2180999999999997e-05, 1.2194000000007033e-05, 1.2165999999994015e-05, 1.2166000000007893e-05, 1.2208000000013541e-05, 1.2153000000000858e-05, 1.2207999999999664e-05, 1.2166000000007893e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.215299999998698e-05, 1.2195000000006506e-05, 1.2152000000001384e-05, 1.2153000000000858e-05, 1.2193999999993155e-05, 1.2153000000000858e-05, 1.2193999999993155e-05, 1.2208000000013541e-05, 1.2180999999999997e-05, 1.215299999998698e-05, 1.2180000000000524e-05, 1.215299999998698e-05, 1.2180999999999997e-05, 1.2167000000007366e-05, 1.216699999997961e-05, 1.209800000001593e-05, 1.2194999999992628e-05, 1.2194999999992628e-05, 1.2193999999993155e-05]</msg>
<status status="PASS" starttime="20201029 09:33:21.967" endtime="20201029 09:33:21.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.962" endtime="20201029 09:33:21.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.447" endtime="20201029 09:33:21.970"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:21.374" endtime="20201029 09:33:21.971" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:21.978" endtime="20201029 09:33:21.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.976" endtime="20201029 09:33:21.998"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.014" endtime="20201029 09:33:22.033"></status>
</kw>
<msg timestamp="20201029 09:33:22.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.012" endtime="20201029 09:33:22.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.036" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.034" endtime="20201029 09:33:22.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.039" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:22.037" endtime="20201029 09:33:22.039"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.009" endtime="20201029 09:33:22.040"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.006" endtime="20201029 09:33:22.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.005" endtime="20201029 09:33:22.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:22.045" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:22.044" endtime="20201029 09:33:22.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.042" endtime="20201029 09:33:22.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.004" endtime="20201029 09:33:22.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.003" endtime="20201029 09:33:22.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.047" endtime="20201029 09:33:22.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.002" endtime="20201029 09:33:22.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.999" endtime="20201029 09:33:22.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.975" endtime="20201029 09:33:22.050"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.058" endtime="20201029 09:33:22.345"></status>
</kw>
<msg timestamp="20201029 09:33:22.346" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.057" endtime="20201029 09:33:22.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.349" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.347" endtime="20201029 09:33:22.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.350" endtime="20201029 09:33:22.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.054" endtime="20201029 09:33:22.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.052" endtime="20201029 09:33:22.352"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.355" endtime="20201029 09:33:22.360"></status>
</kw>
<msg timestamp="20201029 09:33:22.360" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:22.353" endtime="20201029 09:33:22.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.365" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:22.363" endtime="20201029 09:33:22.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.367" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:22.366" endtime="20201029 09:33:22.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.361" endtime="20201029 09:33:22.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.375" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:22.373" endtime="20201029 09:33:22.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.377" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:22.376" endtime="20201029 09:33:22.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.370" endtime="20201029 09:33:22.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.384" endtime="20201029 09:33:22.691"></status>
</kw>
<msg timestamp="20201029 09:33:22.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076918208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07694075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:22.383" endtime="20201029 09:33:22.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076918208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07694075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:22.695" endtime="20201029 09:33:22.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.703" endtime="20201029 09:33:22.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.380" endtime="20201029 09:33:22.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.378" endtime="20201029 09:33:22.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.710" level="INFO">${RESULT} = [{'diff': 2.2542000000000395e-05}, {'diff': 2.2555999999993026e-05}, {'diff': 2.2555999999993026e-05}, {'diff': 2.2555999999993026e-05}, {'diff': 2.262499999999834e-05}, {'diff': 2.258300000000657e-05...</msg>
<status status="PASS" starttime="20201029 09:33:22.707" endtime="20201029 09:33:22.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.715" level="INFO">${OVERHEAD} = {'diff': [2.2542000000000395e-05, 2.2555999999993026e-05, 2.2555999999993026e-05, 2.2555999999993026e-05, 2.262499999999834e-05, 2.258300000000657e-05, 2.2583999999992166e-05, 2.2542000000000395e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:22.711" endtime="20201029 09:33:22.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.720" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:22.719" endtime="20201029 09:33:22.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.723" level="INFO">VALUE: [2.2542000000000395e-05, 2.2555999999993026e-05, 2.2555999999993026e-05, 2.2555999999993026e-05, 2.262499999999834e-05, 2.258300000000657e-05, 2.2583999999992166e-05, 2.2542000000000395e-05, 2.2583999999992166e-05, 2.2541999999986517e-05, 2.2541999999986517e-05, 2.2582999999992692e-05, 2.2526999999994413e-05, 2.2541999999986517e-05, 2.2541999999986517e-05, 2.2526999999994413e-05, 2.2596999999985323e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.2542000000014273e-05, 2.2569999999999535e-05, 2.2556000000006904e-05, 2.2583999999992166e-05, 2.2582999999992692e-05, 2.2527999999993886e-05, 2.2541999999986517e-05, 2.265199999998413e-05, 2.2527999999993886e-05, 2.2639000000018727e-05, 2.2569999999999535e-05, 2.2597999999984797e-05, 2.2596999999985323e-05, 2.2652999999983603e-05, 2.2568999999972306e-05, 2.261100000000571e-05, 2.2568999999972306e-05, 2.259700000001308e-05, 2.2569999999999535e-05, 2.2569000000027817e-05, 2.2596999999957568e-05, 2.2583000000020448e-05, 2.2569999999999535e-05, 2.2583000000020448e-05, 2.2597999999984797e-05, 2.2526999999994413e-05, 2.2582999999964937e-05, 2.26109999999502e-05, 2.2542000000014273e-05, 2.259700000001308e-05]</msg>
<status status="PASS" starttime="20201029 09:33:22.721" endtime="20201029 09:33:22.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.716" endtime="20201029 09:33:22.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.050" endtime="20201029 09:33:22.724"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:21.972" endtime="20201029 09:33:22.725" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.731" endtime="20201029 09:33:22.751"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.730" endtime="20201029 09:33:22.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.765" endtime="20201029 09:33:22.782"></status>
</kw>
<msg timestamp="20201029 09:33:22.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.764" endtime="20201029 09:33:22.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.784" endtime="20201029 09:33:22.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.789" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:22.787" endtime="20201029 09:33:22.789"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.761" endtime="20201029 09:33:22.790"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.759" endtime="20201029 09:33:22.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.757" endtime="20201029 09:33:22.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:22.794" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:22.794" endtime="20201029 09:33:22.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.791" endtime="20201029 09:33:22.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.757" endtime="20201029 09:33:22.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.756" endtime="20201029 09:33:22.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.796" endtime="20201029 09:33:22.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.754" endtime="20201029 09:33:22.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.752" endtime="20201029 09:33:22.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.729" endtime="20201029 09:33:22.799"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.803" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:22.811" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:24.009" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:22.801" endtime="20201029 09:33:24.010"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.014" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:24.011" endtime="20201029 09:33:24.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.800" endtime="20201029 09:33:24.015"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.018" endtime="20201029 09:33:24.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.017" endtime="20201029 09:33:24.043"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.053" endtime="20201029 09:33:24.063"></status>
</kw>
<msg timestamp="20201029 09:33:24.063" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.051" endtime="20201029 09:33:24.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.066" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.064" endtime="20201029 09:33:24.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.067" endtime="20201029 09:33:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.048" endtime="20201029 09:33:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.045" endtime="20201029 09:33:24.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.077" endtime="20201029 09:33:24.383"></status>
</kw>
<msg timestamp="20201029 09:33:24.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.075" endtime="20201029 09:33:24.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.388" endtime="20201029 09:33:24.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.396" endtime="20201029 09:33:24.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.073" endtime="20201029 09:33:24.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.070" endtime="20201029 09:33:24.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:24.403" level="INFO">${PHILIP_RES} = [{'diff': 8.903000000001077e-06}, {'diff': 8.971999999999453e-06}, {'diff': 8.987000000001966e-06}, {'diff': 8.985999999999023e-06}, {'diff': 8.957999999999883e-06}, {'diff': 8.971999999999453e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:24.400" endtime="20201029 09:33:24.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.408" level="INFO">${RESULT} = {'diff': [8.903000000001077e-06, 8.971999999999453e-06, 8.987000000001966e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.9719...</msg>
<status status="PASS" starttime="20201029 09:33:24.404" endtime="20201029 09:33:24.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.413" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:24.412" endtime="20201029 09:33:24.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.416" level="INFO">VALUE: [8.903000000001077e-06, 8.971999999999453e-06, 8.987000000001966e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.917000000000647e-06, 8.958999999999356e-06, 9.013999999998162e-06, 8.985999999999023e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.985999999999023e-06, 8.986000000002492e-06, 9.014000000001632e-06, 8.916000000001173e-06, 8.985999999999023e-06, 8.986000000002492e-06, 8.972999999998926e-06, 8.986999999998496e-06, 8.930000000000743e-06, 8.999999999998592e-06, 9.013999999998162e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.986000000002492e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.916000000001173e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.930000000000743e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.999999999998592e-06, 8.971999999999453e-06, 8.972999999998926e-06, 8.888000000002033e-06, 8.986000000002492e-06, 8.986000000002492e-06]</msg>
<status status="PASS" starttime="20201029 09:33:24.414" endtime="20201029 09:33:24.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.409" endtime="20201029 09:33:24.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.044" endtime="20201029 09:33:24.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.016" endtime="20201029 09:33:24.417"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.420" endtime="20201029 09:33:24.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.418" endtime="20201029 09:33:24.440"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.448" endtime="20201029 09:33:24.460"></status>
</kw>
<msg timestamp="20201029 09:33:24.461" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.447" endtime="20201029 09:33:24.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.463" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.462" endtime="20201029 09:33:24.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.464" endtime="20201029 09:33:24.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.444" endtime="20201029 09:33:24.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.442" endtime="20201029 09:33:24.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.474" endtime="20201029 09:33:24.763"></status>
</kw>
<msg timestamp="20201029 09:33:24.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.473" endtime="20201029 09:33:24.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.767" endtime="20201029 09:33:24.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.776" endtime="20201029 09:33:24.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.470" endtime="20201029 09:33:24.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.468" endtime="20201029 09:33:24.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:24.783" level="INFO">${PHILIP_RES} = [{'diff': 1.7208000000001195e-05}, {'diff': 1.730500000000218e-05}, {'diff': 1.7277999999999044e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.7291999999998614e-05}, {'diff': 1.7319999999997754e-05...</msg>
<status status="PASS" starttime="20201029 09:33:24.780" endtime="20201029 09:33:24.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.787" level="INFO">${RESULT} = {'diff': [1.7208000000001195e-05, 1.730500000000218e-05, 1.7277999999999044e-05, 1.737500000000003e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:24.784" endtime="20201029 09:33:24.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.792" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:24.791" endtime="20201029 09:33:24.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.794" level="INFO">VALUE: [1.7208000000001195e-05, 1.730500000000218e-05, 1.7277999999999044e-05, 1.737500000000003e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, 1.734700000000089e-05, 1.7277999999999044e-05, 1.7263999999999474e-05, 1.727699999999957e-05, 1.734699999999742e-05, 1.727699999999957e-05, 1.730499999999871e-05, 1.729100000000261e-05, 1.731900000000175e-05, 1.731899999999828e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7263999999999474e-05, 1.7305999999998184e-05, 1.7305999999998184e-05, 1.7291999999998614e-05, 1.733299999999785e-05, 1.730499999999871e-05, 1.730499999999871e-05, 1.7291999999998614e-05, 1.7221999999997295e-05, 1.7291999999998614e-05, 1.7319999999997754e-05, 1.7306000000001653e-05, 1.7291999999998614e-05, 1.729099999999914e-05, 1.7305999999998184e-05, 1.7292000000002083e-05, 1.7263999999999474e-05, 1.7291999999998614e-05, 1.7320000000001223e-05, 1.730500000000218e-05, 1.7320000000001223e-05, 1.7306000000001653e-05, 1.7320000000001223e-05, 1.729099999999914e-05, 1.7306000000001653e-05, 1.7320000000001223e-05, 1.7306000000001653e-05, 1.7291999999998614e-05, 1.7222000000000764e-05, 1.727699999999957e-05]</msg>
<status status="PASS" starttime="20201029 09:33:24.793" endtime="20201029 09:33:24.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.788" endtime="20201029 09:33:24.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.440" endtime="20201029 09:33:24.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.417" endtime="20201029 09:33:24.796"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.798" endtime="20201029 09:33:24.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.797" endtime="20201029 09:33:24.818"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.827" endtime="20201029 09:33:24.837"></status>
</kw>
<msg timestamp="20201029 09:33:24.837" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.825" endtime="20201029 09:33:24.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.840" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.838" endtime="20201029 09:33:24.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.841" endtime="20201029 09:33:24.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.822" endtime="20201029 09:33:24.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.820" endtime="20201029 09:33:24.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.852" endtime="20201029 09:33:25.138"></status>
</kw>
<msg timestamp="20201029 09:33:25.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017902361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017928792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.850" endtime="20201029 09:33:25.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017902361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017928792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.142" endtime="20201029 09:33:25.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.151" endtime="20201029 09:33:25.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.847" endtime="20201029 09:33:25.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.846" endtime="20201029 09:33:25.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.157" level="INFO">${PHILIP_RES} = [{'diff': 2.643100000000037e-05}, {'diff': 2.6486000000002646e-05}, {'diff': 2.6513999999998317e-05}, {'diff': 2.6556000000000496e-05}, {'diff': 2.6471999999999607e-05}, {'diff': 2.6486000000002646e-0...</msg>
<status status="PASS" starttime="20201029 09:33:25.154" endtime="20201029 09:33:25.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.162" level="INFO">${RESULT} = {'diff': [2.643100000000037e-05, 2.6486000000002646e-05, 2.6513999999998317e-05, 2.6556000000000496e-05, 2.6471999999999607e-05, 2.6486000000002646e-05, 2.6527999999997887e-05, 2.6596999999999732e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:25.159" endtime="20201029 09:33:25.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.166" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.165" endtime="20201029 09:33:25.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.169" level="INFO">VALUE: [2.643100000000037e-05, 2.6486000000002646e-05, 2.6513999999998317e-05, 2.6556000000000496e-05, 2.6471999999999607e-05, 2.6486000000002646e-05, 2.6527999999997887e-05, 2.6596999999999732e-05, 2.6513999999998317e-05, 2.6471999999999607e-05, 2.6541999999997457e-05, 2.6527999999997887e-05, 2.6540999999997983e-05, 2.6527999999997887e-05, 2.6513999999998317e-05, 2.6513999999998317e-05, 2.6500000000002216e-05, 2.6542000000000926e-05, 2.6569000000000592e-05, 2.6526999999998413e-05, 2.6485999999999177e-05, 2.6514000000001786e-05, 2.6555000000001022e-05, 2.6471999999999607e-05, 2.6485999999999177e-05, 2.6541000000001452e-05, 2.6542000000000926e-05, 2.6514000000001786e-05, 2.648699999999865e-05, 2.6541000000001452e-05, 2.6527999999997887e-05, 2.6556000000000496e-05, 2.6540999999997983e-05, 2.6500000000002216e-05, 2.6569000000000592e-05, 2.6540999999997983e-05, 2.6485999999999177e-05, 2.6486000000002646e-05, 2.6527999999997887e-05, 2.6526999999998413e-05, 2.6485999999999177e-05, 2.6486000000002646e-05, 2.6540999999997983e-05, 2.6540999999997983e-05, 2.6541999999997457e-05, 2.6499999999998747e-05, 2.645899999999951e-05, 2.6514000000001786e-05, 2.6499999999998747e-05, 2.6541999999997457e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.167" endtime="20201029 09:33:25.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.163" endtime="20201029 09:33:25.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.819" endtime="20201029 09:33:25.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.796" endtime="20201029 09:33:25.171"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.174" endtime="20201029 09:33:25.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.172" endtime="20201029 09:33:25.194"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.202" endtime="20201029 09:33:25.217"></status>
</kw>
<msg timestamp="20201029 09:33:25.217" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.201" endtime="20201029 09:33:25.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.220" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.218" endtime="20201029 09:33:25.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.221" endtime="20201029 09:33:25.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.198" endtime="20201029 09:33:25.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.196" endtime="20201029 09:33:25.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.231" endtime="20201029 09:33:25.517"></status>
</kw>
<msg timestamp="20201029 09:33:25.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019044236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019080736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.229" endtime="20201029 09:33:25.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019044236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019080736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.521" endtime="20201029 09:33:25.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.529" endtime="20201029 09:33:25.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.226" endtime="20201029 09:33:25.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.225" endtime="20201029 09:33:25.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.536" level="INFO">${PHILIP_RES} = [{'diff': 3.650000000000181e-05}, {'diff': 3.6610999999998894e-05}, {'diff': 3.6596999999999325e-05}, {'diff': 3.6597000000002794e-05}, {'diff': 3.6667000000000644e-05}, {'diff': 3.6625000000001934e-0...</msg>
<status status="PASS" starttime="20201029 09:33:25.533" endtime="20201029 09:33:25.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.541" level="INFO">${RESULT} = {'diff': [3.650000000000181e-05, 3.6610999999998894e-05, 3.6596999999999325e-05, 3.6597000000002794e-05, 3.6667000000000644e-05, 3.6625000000001934e-05, 3.6582999999999755e-05, 3.6653000000001074e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:25.537" endtime="20201029 09:33:25.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.546" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.545" endtime="20201029 09:33:25.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.548" level="INFO">VALUE: [3.650000000000181e-05, 3.6610999999998894e-05, 3.6596999999999325e-05, 3.6597000000002794e-05, 3.6667000000000644e-05, 3.6625000000001934e-05, 3.6582999999999755e-05, 3.6653000000001074e-05, 3.65979999999988e-05, 3.6610999999998894e-05, 3.6638999999998034e-05, 3.6526999999998006e-05, 3.6555000000000615e-05, 3.6625000000001934e-05, 3.6569000000000185e-05, 3.6610999999998894e-05, 3.6625000000001934e-05, 3.6569000000000185e-05, 3.6653000000001074e-05, 3.658399999999923e-05, 3.658399999999923e-05, 3.6582999999999755e-05, 3.6653000000001074e-05, 3.65979999999988e-05, 3.65840000000027e-05, 3.6681000000000213e-05, 3.6582999999999755e-05, 3.655600000000009e-05, 3.6582999999999755e-05, 3.6653000000001074e-05, 3.6666999999997174e-05, 3.6624999999998464e-05, 3.6569000000000185e-05, 3.6625000000001934e-05, 3.65979999999988e-05, 3.656999999999966e-05, 3.670799999999988e-05, 3.6610999999998894e-05, 3.65840000000027e-05, 3.6596999999999325e-05, 3.6652999999997604e-05, 3.6582999999999755e-05, 3.65979999999988e-05, 3.6681000000000213e-05, 3.6667000000000644e-05, 3.6569000000000185e-05, 3.6666999999997174e-05, 3.656999999999966e-05, 3.656999999999966e-05, 3.6582999999999755e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.547" endtime="20201029 09:33:25.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.542" endtime="20201029 09:33:25.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.194" endtime="20201029 09:33:25.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.172" endtime="20201029 09:33:25.550"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.553" endtime="20201029 09:33:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.551" endtime="20201029 09:33:25.574"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.587" endtime="20201029 09:33:25.603"></status>
</kw>
<msg timestamp="20201029 09:33:25.604" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.585" endtime="20201029 09:33:25.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.607" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.605" endtime="20201029 09:33:25.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.608" endtime="20201029 09:33:25.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.581" endtime="20201029 09:33:25.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.577" endtime="20201029 09:33:25.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.618" endtime="20201029 09:33:25.904"></status>
</kw>
<msg timestamp="20201029 09:33:25.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027213972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027261486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.616" endtime="20201029 09:33:25.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027213972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027261486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.908" endtime="20201029 09:33:25.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.917" endtime="20201029 09:33:25.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.613" endtime="20201029 09:33:25.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.611" endtime="20201029 09:33:25.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.924" level="INFO">${PHILIP_RES} = [{'diff': 4.751400000000197e-05}, {'diff': 4.756899999999731e-05}, {'diff': 4.755500000000121e-05}, {'diff': 4.759699999999992e-05}, {'diff': 4.76529999999982e-05}, {'diff': 4.761099999999949e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:25.921" endtime="20201029 09:33:25.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.929" level="INFO">${RESULT} = {'diff': [4.751400000000197e-05, 4.756899999999731e-05, 4.755500000000121e-05, 4.759699999999992e-05, 4.76529999999982e-05, 4.761099999999949e-05, 4.754100000000164e-05, 4.761099999999949e-05, 4.75839...</msg>
<status status="PASS" starttime="20201029 09:33:25.925" endtime="20201029 09:33:25.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.933" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.932" endtime="20201029 09:33:25.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.936" level="INFO">VALUE: [4.751400000000197e-05, 4.756899999999731e-05, 4.755500000000121e-05, 4.759699999999992e-05, 4.76529999999982e-05, 4.761099999999949e-05, 4.754100000000164e-05, 4.761099999999949e-05, 4.758399999999982e-05, 4.7639000000002096e-05, 4.75139999999985e-05, 4.762499999999906e-05, 4.754100000000164e-05, 4.762499999999906e-05, 4.763899999999863e-05, 4.756899999999731e-05, 4.756900000000078e-05, 4.762499999999906e-05, 4.762499999999906e-05, 4.754200000000111e-05, 4.7625000000002526e-05, 4.754200000000111e-05, 4.7667000000001236e-05, 4.754100000000164e-05, 4.762499999999906e-05, 4.762499999999906e-05, 4.752800000000154e-05, 4.759699999999992e-05, 4.75269999999986e-05, 4.759699999999992e-05, 4.762499999999906e-05, 4.757000000000025e-05, 4.757000000000025e-05, 4.761099999999949e-05, 4.761099999999949e-05, 4.755600000000068e-05, 4.761099999999949e-05, 4.752799999999807e-05, 4.762499999999906e-05, 4.752800000000154e-05, 4.762499999999906e-05, 4.762499999999906e-05, 4.755600000000068e-05, 4.759699999999992e-05, 4.763899999999863e-05, 4.755600000000068e-05, 4.758399999999982e-05, 4.762499999999906e-05, 4.763799999999915e-05, 4.762499999999906e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.934" endtime="20201029 09:33:25.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.930" endtime="20201029 09:33:25.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.575" endtime="20201029 09:33:25.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.550" endtime="20201029 09:33:25.937"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.940" endtime="20201029 09:33:25.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.938" endtime="20201029 09:33:25.960"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.968" endtime="20201029 09:33:25.987"></status>
</kw>
<msg timestamp="20201029 09:33:25.987" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.967" endtime="20201029 09:33:25.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.990" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.989" endtime="20201029 09:33:25.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.991" endtime="20201029 09:33:25.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.964" endtime="20201029 09:33:25.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.962" endtime="20201029 09:33:25.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.002" endtime="20201029 09:33:26.287"></status>
</kw>
<msg timestamp="20201029 09:33:26.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.000" endtime="20201029 09:33:26.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.292" endtime="20201029 09:33:26.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.300" endtime="20201029 09:33:26.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.997" endtime="20201029 09:33:26.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.996" endtime="20201029 09:33:26.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.307" level="INFO">${PHILIP_RES} = [{'diff': 5.941700000000258e-05}, {'diff': 5.938899999999997e-05}, {'diff': 5.947300000000086e-05}, {'diff': 5.9457999999998346e-05}, {'diff': 5.938899999999997e-05}, {'diff': 5.9500000000000525e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:26.304" endtime="20201029 09:33:26.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.311" level="INFO">${RESULT} = {'diff': [5.941700000000258e-05, 5.938899999999997e-05, 5.947300000000086e-05, 5.9457999999998346e-05, 5.938899999999997e-05, 5.9500000000000525e-05, 5.940299999999954e-05, 5.9486000000000955e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 09:33:26.308" endtime="20201029 09:33:26.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.316" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.315" endtime="20201029 09:33:26.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.319" level="INFO">VALUE: [5.941700000000258e-05, 5.938899999999997e-05, 5.947300000000086e-05, 5.9457999999998346e-05, 5.938899999999997e-05, 5.9500000000000525e-05, 5.940299999999954e-05, 5.9486000000000955e-05, 5.9500000000000525e-05, 5.9320000000001594e-05, 5.9458000000001815e-05, 5.944499999999825e-05, 5.943099999999868e-05, 5.9471999999997915e-05, 5.938899999999997e-05, 5.9500000000000525e-05, 5.938899999999997e-05, 5.9472000000001385e-05, 5.940299999999954e-05, 5.9415999999999636e-05, 5.9471999999997915e-05, 5.93750000000004e-05, 5.9486000000000955e-05, 5.940299999999954e-05, 5.945900000000129e-05, 5.9416000000003105e-05, 5.941699999999911e-05, 5.93750000000004e-05, 5.9514000000000095e-05, 5.940299999999954e-05, 5.943099999999868e-05, 5.944499999999825e-05, 5.9486000000000955e-05, 5.938899999999997e-05, 5.9486000000000955e-05, 5.9415999999999636e-05, 5.9499999999997055e-05, 5.940299999999954e-05, 5.9472000000001385e-05, 5.944500000000172e-05, 5.938899999999997e-05, 5.9500000000000525e-05, 5.940299999999954e-05, 5.9471999999997915e-05, 5.9500000000000525e-05, 5.944500000000172e-05, 5.9513999999996625e-05, 5.9402000000000066e-05, 5.9472000000001385e-05, 5.940299999999954e-05]</msg>
<status status="PASS" starttime="20201029 09:33:26.317" endtime="20201029 09:33:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.312" endtime="20201029 09:33:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.960" endtime="20201029 09:33:26.321"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.938" endtime="20201029 09:33:26.321"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.323" endtime="20201029 09:33:26.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.322" endtime="20201029 09:33:26.344"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.357" endtime="20201029 09:33:26.378"></status>
</kw>
<msg timestamp="20201029 09:33:26.378" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.354" endtime="20201029 09:33:26.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.381" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.379" endtime="20201029 09:33:26.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.382" endtime="20201029 09:33:26.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.351" endtime="20201029 09:33:26.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.348" endtime="20201029 09:33:26.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.391" endtime="20201029 09:33:26.678"></status>
</kw>
<msg timestamp="20201029 09:33:26.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.390" endtime="20201029 09:33:26.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024872181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.682" endtime="20201029 09:33:26.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.690" endtime="20201029 09:33:26.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.387" endtime="20201029 09:33:26.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.385" endtime="20201029 09:33:26.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.697" level="INFO">${PHILIP_RES} = [{'diff': 7.208300000000056e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.220800000000069e-05}, {'diff': 7.220799999999722e-05}, {'diff': 7.213899999999884e-05}, {'diff': 7.220800000000069e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:26.694" endtime="20201029 09:33:26.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.702" level="INFO">${RESULT} = {'diff': [7.208300000000056e-05, 7.21109999999997e-05, 7.220800000000069e-05, 7.220799999999722e-05, 7.213899999999884e-05, 7.220800000000069e-05, 7.209799999999961e-05, 7.213899999999884e-05, 7.20980...</msg>
<status status="PASS" starttime="20201029 09:33:26.698" endtime="20201029 09:33:26.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.707" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.706" endtime="20201029 09:33:26.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.710" level="INFO">VALUE: [7.208300000000056e-05, 7.21109999999997e-05, 7.220800000000069e-05, 7.220799999999722e-05, 7.213899999999884e-05, 7.220800000000069e-05, 7.209799999999961e-05, 7.213899999999884e-05, 7.209800000000308e-05, 7.213900000000231e-05, 7.222200000000026e-05, 7.218000000000155e-05, 7.215300000000188e-05, 7.20829999999971e-05, 7.222200000000026e-05, 7.212499999999927e-05, 7.218000000000155e-05, 7.213900000000231e-05, 7.222200000000026e-05, 7.204100000000185e-05, 7.213899999999884e-05, 7.208400000000004e-05, 7.22499999999994e-05, 7.202799999999829e-05, 7.207000000000047e-05, 7.212499999999927e-05, 7.218000000000155e-05, 7.213900000000231e-05, 7.208300000000056e-05, 7.219500000000059e-05, 7.212499999999927e-05, 7.222299999999973e-05, 7.212500000000274e-05, 7.213799999999937e-05, 7.208400000000004e-05, 7.218100000000102e-05, 7.220900000000016e-05, 7.21109999999997e-05, 7.213900000000231e-05, 7.223599999999983e-05, 7.217999999999808e-05, 7.211100000000317e-05, 7.219500000000059e-05, 7.216600000000198e-05, 7.212499999999927e-05, 7.208400000000004e-05, 7.223599999999983e-05, 7.220800000000069e-05, 7.215199999999894e-05, 7.21109999999997e-05]</msg>
<status status="PASS" starttime="20201029 09:33:26.708" endtime="20201029 09:33:26.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.703" endtime="20201029 09:33:26.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.345" endtime="20201029 09:33:26.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.321" endtime="20201029 09:33:26.711"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.714" endtime="20201029 09:33:26.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.712" endtime="20201029 09:33:26.734"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.743" endtime="20201029 09:33:26.760"></status>
</kw>
<msg timestamp="20201029 09:33:26.760" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.740" endtime="20201029 09:33:26.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.763" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.761" endtime="20201029 09:33:26.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.764" endtime="20201029 09:33:26.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.738" endtime="20201029 09:33:26.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.736" endtime="20201029 09:33:26.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.773" endtime="20201029 09:33:27.059"></status>
</kw>
<msg timestamp="20201029 09:33:27.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.772" endtime="20201029 09:33:27.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.063" endtime="20201029 09:33:27.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.071" endtime="20201029 09:33:27.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.769" endtime="20201029 09:33:27.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.767" endtime="20201029 09:33:27.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.081" level="INFO">${PHILIP_RES} = [{'diff': 8.56530000000015e-05}, {'diff': 8.58050000000013e-05}, {'diff': 8.566700000000108e-05}, {'diff': 8.58059999999973e-05}, {'diff': 8.577699999999869e-05}, {'diff': 8.56530000000015e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 09:33:27.078" endtime="20201029 09:33:27.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.086" level="INFO">${RESULT} = {'diff': [8.56530000000015e-05, 8.58050000000013e-05, 8.566700000000108e-05, 8.58059999999973e-05, 8.577699999999869e-05, 8.56530000000015e-05, 8.577700000000216e-05, 8.576399999999859e-05, 8.57500000...</msg>
<status status="PASS" starttime="20201029 09:33:27.083" endtime="20201029 09:33:27.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.091" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.090" endtime="20201029 09:33:27.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.094" level="INFO">VALUE: [8.56530000000015e-05, 8.58050000000013e-05, 8.566700000000108e-05, 8.58059999999973e-05, 8.577699999999869e-05, 8.56530000000015e-05, 8.577700000000216e-05, 8.576399999999859e-05, 8.575000000000249e-05, 8.574999999999902e-05, 8.574999999999902e-05, 8.570800000000031e-05, 8.580499999999783e-05, 8.574999999999902e-05, 8.570800000000031e-05, 8.580600000000077e-05, 8.582000000000034e-05, 8.570800000000031e-05, 8.579099999999826e-05, 8.577800000000163e-05, 8.570800000000031e-05, 8.58050000000013e-05, 8.572299999999936e-05, 8.576400000000206e-05, 8.577699999999869e-05, 8.563899999999847e-05, 8.583300000000044e-05, 8.572199999999988e-05, 8.583300000000044e-05, 8.575000000000249e-05, 8.569400000000074e-05, 8.574999999999902e-05, 8.576399999999859e-05, 8.581900000000087e-05, 8.576399999999859e-05, 8.576399999999859e-05, 8.572199999999988e-05, 8.5847e-05, 8.568100000000065e-05, 8.580600000000077e-05, 8.569400000000074e-05, 8.569400000000074e-05, 8.573599999999945e-05, 8.58050000000013e-05, 8.570800000000031e-05, 8.576400000000206e-05, 8.577799999999816e-05, 8.572299999999936e-05, 8.569500000000022e-05, 8.568100000000065e-05]</msg>
<status status="PASS" starttime="20201029 09:33:27.092" endtime="20201029 09:33:27.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.087" endtime="20201029 09:33:27.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.734" endtime="20201029 09:33:27.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.711" endtime="20201029 09:33:27.096"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.098" endtime="20201029 09:33:27.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.097" endtime="20201029 09:33:27.118"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.127" endtime="20201029 09:33:27.141"></status>
</kw>
<msg timestamp="20201029 09:33:27.142" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.126" endtime="20201029 09:33:27.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.144" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.143" endtime="20201029 09:33:27.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.146" endtime="20201029 09:33:27.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.123" endtime="20201029 09:33:27.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.120" endtime="20201029 09:33:27.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.156" endtime="20201029 09:33:27.443"></status>
</kw>
<msg timestamp="20201029 09:33:27.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.154" endtime="20201029 09:33:27.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.449" endtime="20201029 09:33:27.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.460" endtime="20201029 09:33:27.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.152" endtime="20201029 09:33:27.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.150" endtime="20201029 09:33:27.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.471" level="INFO">${PHILIP_RES} = [{'diff': 0.00010022299999999998}, {'diff': 0.00010017999999999833}, {'diff': 0.00010024999999999964}, {'diff': 0.00010024999999999964}, {'diff': 0.00010027800000000225}, {'diff': 0.000100208000000000...</msg>
<status status="PASS" starttime="20201029 09:33:27.466" endtime="20201029 09:33:27.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.478" level="INFO">${RESULT} = {'diff': [0.00010022299999999998, 0.00010017999999999833, 0.00010024999999999964, 0.00010024999999999964, 0.00010027800000000225, 0.00010020800000000094, 0.00010018100000000127, 0.00010019500000000084...</msg>
<status status="PASS" starttime="20201029 09:33:27.473" endtime="20201029 09:33:27.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.488" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.485" endtime="20201029 09:33:27.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.494" level="INFO">VALUE: [0.00010022299999999998, 0.00010017999999999833, 0.00010024999999999964, 0.00010024999999999964, 0.00010027800000000225, 0.00010020800000000094, 0.00010018100000000127, 0.00010019500000000084, 0.00010029199999999835, 0.00010027800000000225, 0.00010016599999999876, 0.00010030499999999845, 0.00010020799999999747, 0.0001001939999999979, 0.00010022199999999704, 0.00010029100000000235, 0.00010016699999999823, 0.00010015199999999919, 0.00010026400000000268, 0.00010018100000000127, 0.00010023600000000008, 0.00010030499999999845, 0.00010016699999999823, 0.0001003060000000014, 0.00010027800000000225, 0.00010019400000000137, 0.00010023600000000008, 0.0001002220000000005, 0.0001002220000000005, 0.00010032000000000096, 0.00010016600000000223, 0.00010024999999999964, 0.00010020800000000094, 0.00010030500000000192, 0.00010029199999999835, 0.00010026399999999921, 0.00010026299999999974, 0.00010020800000000094, 0.00010030599999999792, 0.0001001670000000017, 0.00010026399999999921, 0.00010030599999999792, 0.00010019400000000137, 0.00010027699999999931, 0.00010023600000000008, 0.00010024999999999964, 0.00010030500000000192, 0.00010022299999999998, 0.00010031900000000149, 0.00010024999999999964]</msg>
<status status="PASS" starttime="20201029 09:33:27.490" endtime="20201029 09:33:27.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.480" endtime="20201029 09:33:27.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.119" endtime="20201029 09:33:27.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.096" endtime="20201029 09:33:27.500"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.507" endtime="20201029 09:33:27.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.503" endtime="20201029 09:33:27.528"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.544" endtime="20201029 09:33:27.566"></status>
</kw>
<msg timestamp="20201029 09:33:27.568" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.542" endtime="20201029 09:33:27.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.574" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.571" endtime="20201029 09:33:27.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.576" endtime="20201029 09:33:27.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.535" endtime="20201029 09:33:27.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.532" endtime="20201029 09:33:27.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.592" endtime="20201029 09:33:27.879"></status>
</kw>
<msg timestamp="20201029 09:33:27.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031298778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031414306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.590" endtime="20201029 09:33:27.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031298778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031414306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.883" endtime="20201029 09:33:27.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.891" endtime="20201029 09:33:27.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.586" endtime="20201029 09:33:27.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.583" endtime="20201029 09:33:27.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.898" level="INFO">${PHILIP_RES} = [{'diff': 0.00011552800000000363}, {'diff': 0.00011558400000000191}, {'diff': 0.00011567999999999995}, {'diff': 0.00011554099999999679}, {'diff': 0.00011563900000000071}, {'diff': 0.000115597000000002...</msg>
<status status="PASS" starttime="20201029 09:33:27.895" endtime="20201029 09:33:27.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.903" level="INFO">${RESULT} = {'diff': [0.00011552800000000363, 0.00011558400000000191, 0.00011567999999999995, 0.00011554099999999679, 0.00011563900000000071, 0.000115597000000002, 0.00011555600000000277, 0.00011559699999999506, ...</msg>
<status status="PASS" starttime="20201029 09:33:27.899" endtime="20201029 09:33:27.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.907" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.906" endtime="20201029 09:33:27.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.910" level="INFO">VALUE: [0.00011552800000000363, 0.00011558400000000191, 0.00011567999999999995, 0.00011554099999999679, 0.00011563900000000071, 0.000115597000000002, 0.00011555600000000277, 0.00011559699999999506, 0.0001155699999999954, 0.00011572199999999866, 0.00011557000000000234, 0.00011554099999999679, 0.00011559699999999506, 0.00011558400000000191, 0.00011563900000000071, 0.0001156249999999942, 0.00011562500000000114, 0.00011565300000000028, 0.00011551399999999712, 0.00011555599999999583, 0.000115597000000002, 0.00011558400000000191, 0.00011558399999999497, 0.0001155829999999955, 0.00011563800000000124, 0.00011552800000000363, 0.00011562500000000114, 0.00011555499999999636, 0.00011554199999999626, 0.00011566600000000038, 0.00011566699999999985, 0.00011556899999999592, 0.00011563900000000071, 0.000115597000000002, 0.00011552699999999722, 0.00011558399999999497, 0.00011566699999999985, 0.00011554100000000372, 0.00011561099999999463, 0.00011570799999999909, 0.00011555600000000277, 0.00011562500000000114, 0.00011566699999999985, 0.0001155699999999954, 0.0001155829999999955, 0.00011563900000000071, 0.00011566600000000038, 0.00011565300000000028, 0.00011567999999999995, 0.00011556899999999592]</msg>
<status status="PASS" starttime="20201029 09:33:27.908" endtime="20201029 09:33:27.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.904" endtime="20201029 09:33:27.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.529" endtime="20201029 09:33:27.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.501" endtime="20201029 09:33:27.911"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.914" endtime="20201029 09:33:27.934"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.912" endtime="20201029 09:33:27.934"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.943" endtime="20201029 09:33:27.965"></status>
</kw>
<msg timestamp="20201029 09:33:27.966" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.941" endtime="20201029 09:33:27.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.968" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.967" endtime="20201029 09:33:27.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.969" endtime="20201029 09:33:27.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.938" endtime="20201029 09:33:27.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.936" endtime="20201029 09:33:27.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.979" endtime="20201029 09:33:28.265"></status>
</kw>
<msg timestamp="20201029 09:33:28.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.977" endtime="20201029 09:33:28.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.270" endtime="20201029 09:33:28.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.278" endtime="20201029 09:33:28.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.974" endtime="20201029 09:33:28.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.973" endtime="20201029 09:33:28.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.286" level="INFO">${PHILIP_RES} = [{'diff': 0.0001317080000000012}, {'diff': 0.00013180600000000167}, {'diff': 0.00013183300000000134}, {'diff': 0.00013182000000000124}, {'diff': 0.00013173600000000035}, {'diff': 0.0001317499999999999...</msg>
<status status="PASS" starttime="20201029 09:33:28.283" endtime="20201029 09:33:28.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.290" level="INFO">${RESULT} = {'diff': [0.0001317080000000012, 0.00013180600000000167, 0.00013183300000000134, 0.00013182000000000124, 0.00013173600000000035, 0.00013174999999999992, 0.00013187500000000005, 0.00013179099999999916,...</msg>
<status status="PASS" starttime="20201029 09:33:28.287" endtime="20201029 09:33:28.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.294" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.293" endtime="20201029 09:33:28.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.297" level="INFO">VALUE: [0.0001317080000000012, 0.00013180600000000167, 0.00013183300000000134, 0.00013182000000000124, 0.00013173600000000035, 0.00013174999999999992, 0.00013187500000000005, 0.00013179099999999916, 0.0001318470000000009, 0.00013177799999999906, 0.00013174999999999992, 0.00013174999999999992, 0.00013172200000000078, 0.00013174999999999992, 0.00013180600000000167, 0.00013177799999999906, 0.0001317639999999995, 0.00013184800000000038, 0.00013174999999999992, 0.00013180499999999873, 0.0001317639999999995, 0.00013173600000000035, 0.00013180499999999873, 0.00013184699999999744, 0.00013180600000000167, 0.00013174999999999992, 0.00013187499999999658, 0.0001317639999999995, 0.00013173599999999688, 0.00013191699999999876, 0.0001317920000000021, 0.00013176300000000002, 0.00013184699999999744, 0.00013187500000000005, 0.00013177799999999906, 0.0001318050000000022, 0.00013179100000000263, 0.0001317769999999996, 0.00013177799999999906, 0.0001317639999999995, 0.00013177700000000306, 0.00013180499999999873, 0.00013187500000000005, 0.00013174999999999992, 0.00013186100000000048, 0.00013183300000000134, 0.0001317639999999995, 0.0001317639999999995, 0.00013188899999999962, 0.00013182000000000124]</msg>
<status status="PASS" starttime="20201029 09:33:28.296" endtime="20201029 09:33:28.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.291" endtime="20201029 09:33:28.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.935" endtime="20201029 09:33:28.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.912" endtime="20201029 09:33:28.306"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.309" endtime="20201029 09:33:28.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.307" endtime="20201029 09:33:28.329"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.337" endtime="20201029 09:33:28.357"></status>
</kw>
<msg timestamp="20201029 09:33:28.358" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.335" endtime="20201029 09:33:28.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.360" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.359" endtime="20201029 09:33:28.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.361" endtime="20201029 09:33:28.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.333" endtime="20201029 09:33:28.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.331" endtime="20201029 09:33:28.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.372" endtime="20201029 09:33:28.659"></status>
</kw>
<msg timestamp="20201029 09:33:28.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019336542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019485347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.370" endtime="20201029 09:33:28.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019336542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019485347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.663" endtime="20201029 09:33:28.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.671" endtime="20201029 09:33:28.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.367" endtime="20201029 09:33:28.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.366" endtime="20201029 09:33:28.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.678" level="INFO">${PHILIP_RES} = [{'diff': 0.00014880499999999838}, {'diff': 0.00014898699999999973}, {'diff': 0.0001489030000000023}, {'diff': 0.0001488749999999997}, {'diff': 0.00014886100000000013}, {'diff': 0.00014893099999999798...</msg>
<status status="PASS" starttime="20201029 09:33:28.675" endtime="20201029 09:33:28.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.682" level="INFO">${RESULT} = {'diff': [0.00014880499999999838, 0.00014898699999999973, 0.0001489030000000023, 0.0001488749999999997, 0.00014886100000000013, 0.00014893099999999798, 0.00014879100000000228, 0.0001489720000000007, 0...</msg>
<status status="PASS" starttime="20201029 09:33:28.679" endtime="20201029 09:33:28.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.686" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.685" endtime="20201029 09:33:28.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.689" level="INFO">VALUE: [0.00014880499999999838, 0.00014898699999999973, 0.0001489030000000023, 0.0001488749999999997, 0.00014886100000000013, 0.00014893099999999798, 0.00014879100000000228, 0.0001489720000000007, 0.00014884700000000056, 0.000148833000000001, 0.0001488200000000009, 0.00014894400000000155, 0.00014887500000000317, 0.00014880499999999838, 0.00014886100000000013, 0.00014883299999999752, 0.0001489590000000006, 0.00014886100000000013, 0.00014884800000000004, 0.00014893100000000145, 0.00014890299999999884, 0.00014884700000000056, 0.00014884700000000056, 0.00014883299999999752, 0.00014886100000000013, 0.00014880500000000185, 0.00014895899999999712, 0.00014895800000000112, 0.0001488749999999997, 0.00014886099999999666, 0.00014888899999999927, 0.00014888899999999927, 0.00014893100000000145, 0.00014883400000000047, 0.0001488749999999997, 0.00014884700000000056, 0.0001488749999999997, 0.00014893100000000145, 0.00014872200000000044, 0.0001489169999999984, 0.00014883400000000047, 0.00014876400000000262, 0.00014880499999999838, 0.00014883400000000047, 0.00014877800000000219, 0.00014884700000000056, 0.00014883400000000047, 0.00014888899999999927, 0.00014893100000000145, 0.00014872200000000044]</msg>
<status status="PASS" starttime="20201029 09:33:28.688" endtime="20201029 09:33:28.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.683" endtime="20201029 09:33:28.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.329" endtime="20201029 09:33:28.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.306" endtime="20201029 09:33:28.692"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.694" endtime="20201029 09:33:28.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.693" endtime="20201029 09:33:28.714"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.723" endtime="20201029 09:33:28.744"></status>
</kw>
<msg timestamp="20201029 09:33:28.744" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.721" endtime="20201029 09:33:28.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.747" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.745" endtime="20201029 09:33:28.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.748" endtime="20201029 09:33:28.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.718" endtime="20201029 09:33:28.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.716" endtime="20201029 09:33:28.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.757" endtime="20201029 09:33:29.043"></status>
</kw>
<msg timestamp="20201029 09:33:29.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020670861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.756" endtime="20201029 09:33:29.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020670861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.048" endtime="20201029 09:33:29.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.056" endtime="20201029 09:33:29.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.753" endtime="20201029 09:33:29.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.751" endtime="20201029 09:33:29.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.063" level="INFO">${PHILIP_RES} = [{'diff': 0.00016691699999999907}, {'diff': 0.00016675000000000023}, {'diff': 0.00016686099999999732}, {'diff': 0.00016675000000000023}, {'diff': 0.00016684700000000122}, {'diff': 0.000166902000000000...</msg>
<status status="PASS" starttime="20201029 09:33:29.059" endtime="20201029 09:33:29.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.068" level="INFO">${RESULT} = {'diff': [0.00016691699999999907, 0.00016675000000000023, 0.00016686099999999732, 0.00016675000000000023, 0.00016684700000000122, 0.00016690200000000002, 0.00016683400000000112, 0.00016683300000000165...</msg>
<status status="PASS" starttime="20201029 09:33:29.064" endtime="20201029 09:33:29.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.072" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.071" endtime="20201029 09:33:29.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.075" level="INFO">VALUE: [0.00016691699999999907, 0.00016675000000000023, 0.00016686099999999732, 0.00016675000000000023, 0.00016684700000000122, 0.00016690200000000002, 0.00016683400000000112, 0.00016683300000000165, 0.00016687500000000036, 0.00016688899999999993, 0.00016680600000000198, 0.00016688899999999993, 0.00016692999999999916, 0.00016681900000000208, 0.00016687500000000036, 0.00016683300000000165, 0.00016684700000000122, 0.00016682000000000155, 0.00016692999999999916, 0.0001668610000000008, 0.00016679099999999947, 0.00016690200000000002, 0.00016680499999999904, 0.00016693099999999864, 0.00016693099999999864, 0.00016683299999999818, 0.00016694500000000168, 0.0001669449999999982, 0.00016684699999999775, 0.0001668189999999986, 0.00016688899999999993, 0.00016679099999999947, 0.00016683300000000165, 0.0001668610000000008, 0.0001667220000000011, 0.00016686099999999732, 0.00016682000000000155, 0.00016681900000000208, 0.00016679099999999947, 0.0001667920000000024, 0.0001668050000000025, 0.00016682000000000155, 0.00016686099999999732, 0.00016688899999999993, 0.00016693099999999864, 0.00016680499999999904, 0.00016693099999999864, 0.00016675000000000023, 0.00016684700000000122, 0.00016681999999999808]</msg>
<status status="PASS" starttime="20201029 09:33:29.073" endtime="20201029 09:33:29.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.069" endtime="20201029 09:33:29.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.715" endtime="20201029 09:33:29.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.692" endtime="20201029 09:33:29.077"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.079" endtime="20201029 09:33:29.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.078" endtime="20201029 09:33:29.099"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.107" endtime="20201029 09:33:29.127"></status>
</kw>
<msg timestamp="20201029 09:33:29.127" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.106" endtime="20201029 09:33:29.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.130" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.128" endtime="20201029 09:33:29.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.131" endtime="20201029 09:33:29.133"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.103" endtime="20201029 09:33:29.133"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.101" endtime="20201029 09:33:29.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.140" endtime="20201029 09:33:29.426"></status>
</kw>
<msg timestamp="20201029 09:33:29.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017532361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.139" endtime="20201029 09:33:29.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017532361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.431" endtime="20201029 09:33:29.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.439" endtime="20201029 09:33:29.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.136" endtime="20201029 09:33:29.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.134" endtime="20201029 09:33:29.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.447" level="INFO">${PHILIP_RES} = [{'diff': 0.00018545799999999946}, {'diff': 0.0001856110000000022}, {'diff': 0.00018558399999999906}, {'diff': 0.000185666999999997}, {'diff': 0.0001856249999999983}, {'diff': 0.00018563899999999786},...</msg>
<status status="PASS" starttime="20201029 09:33:29.443" endtime="20201029 09:33:29.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.451" level="INFO">${RESULT} = {'diff': [0.00018545799999999946, 0.0001856110000000022, 0.00018558399999999906, 0.000185666999999997, 0.0001856249999999983, 0.00018563899999999786, 0.0001855270000000013, 0.00018568100000000004, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:29.448" endtime="20201029 09:33:29.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.455" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.454" endtime="20201029 09:33:29.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.458" level="INFO">VALUE: [0.00018545799999999946, 0.0001856110000000022, 0.00018558399999999906, 0.000185666999999997, 0.0001856249999999983, 0.00018563899999999786, 0.0001855270000000013, 0.00018568100000000004, 0.00018558399999999906, 0.00018568000000000057, 0.00018563899999999786, 0.00018566700000000047, 0.00018552800000000078, 0.00018558399999999906, 0.00018569400000000014, 0.00018562500000000176, 0.00018555599999999992, 0.00018563900000000133, 0.0001856530000000009, 0.00018556999999999949, 0.00018555599999999992, 0.00018569400000000014, 0.000185666999999997, 0.00018563899999999786, 0.0001856110000000022, 0.0001856379999999984, 0.00018559700000000262, 0.000185666000000001, 0.00018555599999999992, 0.00018561200000000166, 0.00018555599999999992, 0.000185666000000001, 0.000185569, 0.00018566700000000047, 0.00018570900000000265, 0.00018561099999999872, 0.00018563800000000186, 0.00018554199999999688, 0.00018558399999999906, 0.000185569, 0.00018555500000000044, 0.00018554100000000087, 0.00018555500000000044, 0.0001856949999999996, 0.0001856530000000009, 0.0001855270000000013, 0.00018563900000000133, 0.00018573599999999885, 0.00018561099999999872, 0.00018565200000000143]</msg>
<status status="PASS" starttime="20201029 09:33:29.456" endtime="20201029 09:33:29.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.452" endtime="20201029 09:33:29.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.100" endtime="20201029 09:33:29.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.077" endtime="20201029 09:33:29.460"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.462" endtime="20201029 09:33:29.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.461" endtime="20201029 09:33:29.482"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.491" endtime="20201029 09:33:29.513"></status>
</kw>
<msg timestamp="20201029 09:33:29.514" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.489" endtime="20201029 09:33:29.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.516" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.515" endtime="20201029 09:33:29.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.517" endtime="20201029 09:33:29.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.486" endtime="20201029 09:33:29.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.484" endtime="20201029 09:33:29.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.528" endtime="20201029 09:33:29.814"></status>
</kw>
<msg timestamp="20201029 09:33:29.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021361417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.526" endtime="20201029 09:33:29.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021156222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021361417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.818" endtime="20201029 09:33:29.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.827" endtime="20201029 09:33:29.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.523" endtime="20201029 09:33:29.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.521" endtime="20201029 09:33:29.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.834" level="INFO">${PHILIP_RES} = [{'diff': 0.00020519500000000176}, {'diff': 0.00020536099999999766}, {'diff': 0.00020530499999999938}, {'diff': 0.00020536100000000113}, {'diff': 0.00020526400000000014}, {'diff': 0.000205264000000000...</msg>
<status status="PASS" starttime="20201029 09:33:29.830" endtime="20201029 09:33:29.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.838" level="INFO">${RESULT} = {'diff': [0.00020519500000000176, 0.00020536099999999766, 0.00020530499999999938, 0.00020536100000000113, 0.00020526400000000014, 0.00020526400000000014, 0.00020536100000000113, 0.00020534700000000156...</msg>
<status status="PASS" starttime="20201029 09:33:29.835" endtime="20201029 09:33:29.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.842" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.841" endtime="20201029 09:33:29.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.845" level="INFO">VALUE: [0.00020519500000000176, 0.00020536099999999766, 0.00020530499999999938, 0.00020536100000000113, 0.00020526400000000014, 0.00020526400000000014, 0.00020536100000000113, 0.00020534700000000156, 0.00020527700000000024, 0.00020536099999999766, 0.000205236000000001, 0.00020541599999999993, 0.00020538900000000027, 0.00020534800000000103, 0.00020533299999999852, 0.00020540200000000036, 0.0002054169999999994, 0.00020529100000000328, 0.00020538900000000027, 0.00020534799999999756, 0.0002053889999999968, 0.0002053750000000007, 0.00020544499999999855, 0.00020547200000000168, 0.00020544400000000254, 0.0002053620000000006, 0.0002053750000000007, 0.00020548599999999778, 0.00020530499999999938, 0.00020540299999999984, 0.0002053880000000008, 0.00020541599999999993, 0.00020526400000000014, 0.0002054169999999994, 0.00020527800000000318, 0.00020530599999999885, 0.00020530599999999885, 0.00020529199999999928, 0.0002052909999999998, 0.00020527800000000318, 0.0002052629999999972, 0.0002053200000000019, 0.00020525000000000057, 0.00020537499999999723, 0.0002051520000000001, 0.00020523599999999753, 0.00020527799999999624, 0.00020527799999999624, 0.00020520899999999787, 0.0002052919999999958]</msg>
<status status="PASS" starttime="20201029 09:33:29.843" endtime="20201029 09:33:29.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.839" endtime="20201029 09:33:29.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.483" endtime="20201029 09:33:29.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.460" endtime="20201029 09:33:29.848"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.850" endtime="20201029 09:33:29.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.849" endtime="20201029 09:33:29.870"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.878" endtime="20201029 09:33:29.904"></status>
</kw>
<msg timestamp="20201029 09:33:29.905" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.877" endtime="20201029 09:33:29.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.907" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.906" endtime="20201029 09:33:29.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.908" endtime="20201029 09:33:29.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.874" endtime="20201029 09:33:29.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.872" endtime="20201029 09:33:29.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.918" endtime="20201029 09:33:30.204"></status>
</kw>
<msg timestamp="20201029 09:33:30.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020323181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020549028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.916" endtime="20201029 09:33:30.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020323181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020549028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.208" endtime="20201029 09:33:30.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.217" endtime="20201029 09:33:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.914" endtime="20201029 09:33:30.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.912" endtime="20201029 09:33:30.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.223" level="INFO">${PHILIP_RES} = [{'diff': 0.00022584700000000124}, {'diff': 0.00022594399999999876}, {'diff': 0.0002258199999999981}, {'diff': 0.00022581899999999863}, {'diff': 0.00022583300000000167}, {'diff': 0.0002259029999999995...</msg>
<status status="PASS" starttime="20201029 09:33:30.220" endtime="20201029 09:33:30.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.228" level="INFO">${RESULT} = {'diff': [0.00022584700000000124, 0.00022594399999999876, 0.0002258199999999981, 0.00022581899999999863, 0.00022583300000000167, 0.00022590299999999952, 0.0002258329999999982, 0.0002258190000000021, 0...</msg>
<status status="PASS" starttime="20201029 09:33:30.224" endtime="20201029 09:33:30.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.233" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.232" endtime="20201029 09:33:30.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.235" level="INFO">VALUE: [0.00022584700000000124, 0.00022594399999999876, 0.0002258199999999981, 0.00022581899999999863, 0.00022583300000000167, 0.00022590299999999952, 0.0002258329999999982, 0.0002258190000000021, 0.0002259589999999978, 0.00022593099999999866, 0.00022580599999999854, 0.0002258610000000008, 0.000225806000000002, 0.00022587500000000038, 0.00022587500000000038, 0.00022581899999999863, 0.00022590299999999952, 0.0002256939999999985, 0.00022586099999999734, 0.0002257909999999995, 0.00022594400000000223, 0.00022591700000000256, 0.00022582000000000158, 0.00022591599999999962, 0.0002258610000000008, 0.00022584699999999777, 0.00022583300000000167, 0.00022590200000000005, 0.00022582000000000158, 0.00022594400000000223, 0.00022581899999999863, 0.00022584800000000071, 0.00022587500000000038, 0.0002257499999999968, 0.00022590299999999952, 0.00022576399999999983, 0.0002258749999999969, 0.00022579200000000244, 0.00022583400000000114, 0.00022584700000000124, 0.00022582000000000158, 0.00022588800000000048, 0.0002257909999999995, 0.0002257640000000033, 0.00022581899999999516, 0.00022587500000000038, 0.00022583400000000114, 0.0002259169999999991, 0.00022584700000000124, 0.00022583299999999473]</msg>
<status status="PASS" starttime="20201029 09:33:30.234" endtime="20201029 09:33:30.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.229" endtime="20201029 09:33:30.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.871" endtime="20201029 09:33:30.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.848" endtime="20201029 09:33:30.238"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.240" endtime="20201029 09:33:30.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.238" endtime="20201029 09:33:30.260"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.268" endtime="20201029 09:33:30.296"></status>
</kw>
<msg timestamp="20201029 09:33:30.297" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.267" endtime="20201029 09:33:30.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.299" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.298" endtime="20201029 09:33:30.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.300" endtime="20201029 09:33:30.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.264" endtime="20201029 09:33:30.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.262" endtime="20201029 09:33:30.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.310" endtime="20201029 09:33:30.596"></status>
</kw>
<msg timestamp="20201029 09:33:30.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.308" endtime="20201029 09:33:30.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.600" endtime="20201029 09:33:30.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.609" endtime="20201029 09:33:30.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.306" endtime="20201029 09:33:30.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.304" endtime="20201029 09:33:30.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.618" level="INFO">${PHILIP_RES} = [{'diff': 0.0002473470000000019}, {'diff': 0.0002473329999999989}, {'diff': 0.0002473329999999989}, {'diff': 0.0002473749999999976}, {'diff': 0.0002473470000000019}, {'diff': 0.00024722199999999833}, ...</msg>
<status status="PASS" starttime="20201029 09:33:30.615" endtime="20201029 09:33:30.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.623" level="INFO">${RESULT} = {'diff': [0.0002473470000000019, 0.0002473329999999989, 0.0002473329999999989, 0.0002473749999999976, 0.0002473470000000019, 0.00024722199999999833, 0.0002473329999999989, 0.0002473329999999989, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:30.619" endtime="20201029 09:33:30.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.627" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.626" endtime="20201029 09:33:30.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.629" level="INFO">VALUE: [0.0002473470000000019, 0.0002473329999999989, 0.0002473329999999989, 0.0002473749999999976, 0.0002473470000000019, 0.00024722199999999833, 0.0002473329999999989, 0.0002473329999999989, 0.00024732000000000226, 0.0002473470000000019, 0.0002472910000000002, 0.00024740200000000073, 0.00024734699999999846, 0.00024729199999999965, 0.0002472770000000006, 0.0002473199999999988, 0.0002473189999999993, 0.0002473059999999992, 0.00024733300000000236, 0.00024738900000000064, 0.00024733300000000236, 0.00024737500000000107, 0.0002473060000000027, 0.0002473059999999992, 0.00024738900000000064, 0.0002472230000000013, 0.00024738900000000064, 0.00024737500000000107, 0.00024723600000000137, 0.0002473199999999988, 0.0002472220000000018, 0.0002474169999999998, 0.0002473050000000032, 0.0002473060000000027, 0.00024731899999999585, 0.0002473610000000015, 0.000247346999999995, 0.0002473470000000019, 0.00024733300000000236, 0.000247264000000004, 0.00024737500000000107, 0.00024727800000000355, 0.0002473190000000028, 0.00024747299999999806, 0.0002474030000000002, 0.0002473329999999954, 0.0002471669999999995, 0.0002472919999999962, 0.00024736099999999456, 0.00024737500000000107]</msg>
<status status="PASS" starttime="20201029 09:33:30.628" endtime="20201029 09:33:30.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.623" endtime="20201029 09:33:30.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.261" endtime="20201029 09:33:30.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.238" endtime="20201029 09:33:30.631"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.634" endtime="20201029 09:33:30.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.632" endtime="20201029 09:33:30.654"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.662" endtime="20201029 09:33:30.689"></status>
</kw>
<msg timestamp="20201029 09:33:30.690" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.661" endtime="20201029 09:33:30.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.692" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.691" endtime="20201029 09:33:30.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.693" endtime="20201029 09:33:30.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.658" endtime="20201029 09:33:30.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.656" endtime="20201029 09:33:30.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.704" endtime="20201029 09:33:30.989"></status>
</kw>
<msg timestamp="20201029 09:33:30.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.702" endtime="20201029 09:33:30.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.993" endtime="20201029 09:33:31.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.001" endtime="20201029 09:33:31.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.699" endtime="20201029 09:33:31.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.697" endtime="20201029 09:33:31.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.008" level="INFO">${PHILIP_RES} = [{'diff': 0.0002695419999999976}, {'diff': 0.0002697229999999995}, {'diff': 0.00026965200000000217}, {'diff': 0.00026974999999999916}, {'diff': 0.00026965200000000217}, {'diff': 0.0002697639999999987}...</msg>
<status status="PASS" starttime="20201029 09:33:31.005" endtime="20201029 09:33:31.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.012" level="INFO">${RESULT} = {'diff': [0.0002695419999999976, 0.0002697229999999995, 0.00026965200000000217, 0.00026974999999999916, 0.00026965200000000217, 0.0002697639999999987, 0.0002697359999999996, 0.0002696940000000009, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:31.009" endtime="20201029 09:33:31.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.017" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.016" endtime="20201029 09:33:31.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.019" level="INFO">VALUE: [0.0002695419999999976, 0.0002697229999999995, 0.00026965200000000217, 0.00026974999999999916, 0.00026965200000000217, 0.0002697639999999987, 0.0002697359999999996, 0.0002696940000000009, 0.0002696800000000013, 0.0002696670000000012, 0.000269722, 0.0002696809999999973, 0.00026970800000000045, 0.00026970800000000045, 0.0002696810000000008, 0.00026980599999999744, 0.00026965300000000164, 0.0002699450000000006, 0.00026961099999999946, 0.0002698060000000009, 0.0002696940000000009, 0.0002697909999999984, 0.0002697639999999987, 0.0002697769999999988, 0.000269722, 0.00026963900000000207, 0.00026981899999999753, 0.0002697359999999996, 0.000269707999999997, 0.00026970800000000045, 0.0002697909999999984, 0.00026980500000000143, 0.00026966600000000174, 0.0002697909999999984, 0.00026970800000000045, 0.00026961099999999946, 0.00026973600000000306, 0.0002698610000000032, 0.0002697229999999995, 0.0002698060000000044, 0.0002697779999999983, 0.00026974999999999916, 0.00026969500000000035, 0.00026969500000000035, 0.000269722, 0.0002698610000000032, 0.00026980499999999796, 0.0002697359999999996, 0.0002697769999999988, 0.00026974999999999916]</msg>
<status status="PASS" starttime="20201029 09:33:31.018" endtime="20201029 09:33:31.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.013" endtime="20201029 09:33:31.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.654" endtime="20201029 09:33:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.632" endtime="20201029 09:33:31.022"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.024" endtime="20201029 09:33:31.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.023" endtime="20201029 09:33:31.044"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.053" endtime="20201029 09:33:31.081"></status>
</kw>
<msg timestamp="20201029 09:33:31.081" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.051" endtime="20201029 09:33:31.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.084" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.082" endtime="20201029 09:33:31.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.085" endtime="20201029 09:33:31.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.049" endtime="20201029 09:33:31.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.047" endtime="20201029 09:33:31.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.094" endtime="20201029 09:33:31.381"></status>
</kw>
<msg timestamp="20201029 09:33:31.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.093" endtime="20201029 09:33:31.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.386" endtime="20201029 09:33:31.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.395" endtime="20201029 09:33:31.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.090" endtime="20201029 09:33:31.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.088" endtime="20201029 09:33:31.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.402" level="INFO">${PHILIP_RES} = [{'diff': 0.0002927640000000009}, {'diff': 0.0002927359999999983}, {'diff': 0.0002927230000000017}, {'diff': 0.00029286099999999843}, {'diff': 0.000292874999999998}, {'diff': 0.00029283300000000276}, ...</msg>
<status status="PASS" starttime="20201029 09:33:31.399" endtime="20201029 09:33:31.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.407" level="INFO">${RESULT} = {'diff': [0.0002927640000000009, 0.0002927359999999983, 0.0002927230000000017, 0.00029286099999999843, 0.000292874999999998, 0.00029283300000000276, 0.0002928329999999993, 0.00029275000000000134, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:31.403" endtime="20201029 09:33:31.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.411" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.410" endtime="20201029 09:33:31.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.414" level="INFO">VALUE: [0.0002927640000000009, 0.0002927359999999983, 0.0002927230000000017, 0.00029286099999999843, 0.000292874999999998, 0.00029283300000000276, 0.0002928329999999993, 0.00029275000000000134, 0.00029279200000000005, 0.000292874999999998, 0.00029287500000000147, 0.0002928189999999997, 0.0002927640000000009, 0.00029282000000000266, 0.0002929170000000002, 0.0002927780000000005, 0.00029288899999999757, 0.00029284799999999833, 0.00029290199999999766, 0.00029298599999999855, 0.0002929450000000028, 0.0002930420000000003, 0.0002929579999999994, 0.0002929170000000002, 0.0002929870000000015, 0.0002929579999999994, 0.000292971999999999, 0.00029290200000000113, 0.00029283399999999876, 0.00029280500000000015, 0.000292874999999998, 0.00029295900000000236, 0.0002929160000000042, 0.000292986000000002, 0.0002929719999999955, 0.0002929309999999963, 0.0002930000000000016, 0.00029286100000000537, 0.0002928329999999993, 0.000292874999999998, 0.00029288899999999757, 0.00029284699999999886, 0.00029301400000000116, 0.000292986000000002, 0.0002928059999999996, 0.0002928329999999993, 0.00029284799999999833, 0.00029283300000000623, 0.0002928329999999993, 0.00029286099999999843]</msg>
<status status="PASS" starttime="20201029 09:33:31.413" endtime="20201029 09:33:31.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.408" endtime="20201029 09:33:31.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.045" endtime="20201029 09:33:31.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.022" endtime="20201029 09:33:31.416"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.418" endtime="20201029 09:33:31.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.417" endtime="20201029 09:33:31.439"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.447" endtime="20201029 09:33:31.477"></status>
</kw>
<msg timestamp="20201029 09:33:31.477" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.445" endtime="20201029 09:33:31.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.480" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.478" endtime="20201029 09:33:31.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.481" endtime="20201029 09:33:31.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.443" endtime="20201029 09:33:31.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.441" endtime="20201029 09:33:31.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.490" endtime="20201029 09:33:31.776"></status>
</kw>
<msg timestamp="20201029 09:33:31.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019340264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.489" endtime="20201029 09:33:31.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019340264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.780" endtime="20201029 09:33:31.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.788" endtime="20201029 09:33:31.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.486" endtime="20201029 09:33:31.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.484" endtime="20201029 09:33:31.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.796" level="INFO">${PHILIP_RES} = [{'diff': 0.00031693}, {'diff': 0.00031713899999999753}, {'diff': 0.0003171530000000006}, {'diff': 0.00031704100000000054}, {'diff': 0.0003170970000000023}, {'diff': 0.00031699999999999784}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 09:33:31.793" endtime="20201029 09:33:31.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.800" level="INFO">${RESULT} = {'diff': [0.00031693, 0.00031713899999999753, 0.0003171530000000006, 0.00031704100000000054, 0.0003170970000000023, 0.00031699999999999784, 0.00031702800000000045, 0.0003170689999999997, 0.00031693099...</msg>
<status status="PASS" starttime="20201029 09:33:31.797" endtime="20201029 09:33:31.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.805" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.803" endtime="20201029 09:33:31.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.807" level="INFO">VALUE: [0.00031693, 0.00031713899999999753, 0.0003171530000000006, 0.00031704100000000054, 0.0003170970000000023, 0.00031699999999999784, 0.00031702800000000045, 0.0003170689999999997, 0.00031693099999999946, 0.00031693, 0.000317042, 0.00031699999999999784, 0.0003169169999999999, 0.0003170000000000013, 0.00031695900000000207, 0.00031707000000000263, 0.00031698599999999827, 0.0003169030000000003, 0.0003169870000000012, 0.0003170970000000023, 0.00031694399999999956, 0.00031699999999999784, 0.00031697300000000164, 0.00031695799999999913, 0.00031716700000000014, 0.0003170000000000013, 0.00031698600000000174, 0.00031706999999999916, 0.00031694499999999903, 0.0003170550000000001, 0.00031706999999999916, 0.00031704100000000054, 0.00031693, 0.0003169719999999987, 0.00031704199999999655, 0.00031695799999999913, 0.00031705499999999665, 0.00031698599999999827, 0.00031707000000000263, 0.0003170550000000036, 0.00031701400000000435, 0.00031697200000000564, 0.0003170280000000039, 0.00031707000000000263, 0.0003169719999999987, 0.0003168750000000012, 0.000317027999999997, 0.00031711100000000186, 0.00031705600000000306, 0.00031705499999999665]</msg>
<status status="PASS" starttime="20201029 09:33:31.806" endtime="20201029 09:33:31.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.801" endtime="20201029 09:33:31.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.439" endtime="20201029 09:33:31.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.416" endtime="20201029 09:33:31.809"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.812" endtime="20201029 09:33:31.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.810" endtime="20201029 09:33:31.832"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.840" endtime="20201029 09:33:31.870"></status>
</kw>
<msg timestamp="20201029 09:33:31.870" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.838" endtime="20201029 09:33:31.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.873" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.871" endtime="20201029 09:33:31.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.874" endtime="20201029 09:33:31.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.836" endtime="20201029 09:33:31.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.834" endtime="20201029 09:33:31.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.885" endtime="20201029 09:33:32.170"></status>
</kw>
<msg timestamp="20201029 09:33:32.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017984431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018326361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.883" endtime="20201029 09:33:32.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017984431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018326361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.174" endtime="20201029 09:33:32.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.183" endtime="20201029 09:33:32.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.880" endtime="20201029 09:33:32.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.878" endtime="20201029 09:33:32.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.190" level="INFO">${PHILIP_RES} = [{'diff': 0.0003419300000000007}, {'diff': 0.0003420699999999999}, {'diff': 0.0003420269999999982}, {'diff': 0.00034204200000000073}, {'diff': 0.00034209699999999954}, {'diff': 0.0003419310000000002},...</msg>
<status status="PASS" starttime="20201029 09:33:32.186" endtime="20201029 09:33:32.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.194" level="INFO">${RESULT} = {'diff': [0.0003419300000000007, 0.0003420699999999999, 0.0003420269999999982, 0.00034204200000000073, 0.00034209699999999954, 0.0003419310000000002, 0.00034208399999999944, 0.00034209699999999954, 0....</msg>
<status status="PASS" starttime="20201029 09:33:32.191" endtime="20201029 09:33:32.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.198" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.197" endtime="20201029 09:33:32.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.201" level="INFO">VALUE: [0.0003419300000000007, 0.0003420699999999999, 0.0003420269999999982, 0.00034204200000000073, 0.00034209699999999954, 0.0003419310000000002, 0.00034208399999999944, 0.00034209699999999954, 0.0003419310000000002, 0.0003420269999999982, 0.0003419589999999993, 0.000341888999999998, 0.0003419440000000003, 0.00034173599999999874, 0.0003419019999999981, 0.0003418329999999997, 0.00034184700000000276, 0.00034180600000000005, 0.000341888999999998, 0.00034176400000000134, 0.0003417499999999983, 0.00034187499999999843, 0.000341791000000001, 0.00034181900000000015, 0.00034173599999999874, 0.00034186100000000233, 0.000342000000000002, 0.0003417920000000005, 0.0003418329999999997, 0.0003417780000000009, 0.00034188900000000147, 0.0003418339999999992, 0.0003418050000000006, 0.0003418469999999993, 0.0003418050000000006, 0.00034172200000000263, 0.00034181900000000015, 0.0003418469999999993, 0.0003418329999999997, 0.00034176400000000134, 0.000341791000000001, 0.0003417780000000009, 0.00034172200000000263, 0.00034195899999999585, 0.0003416940000000035, 0.000341888999999998, 0.00034186099999999886, 0.00034187499999999843, 0.00034183400000000613, 0.00034169499999999603]</msg>
<status status="PASS" starttime="20201029 09:33:32.199" endtime="20201029 09:33:32.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.195" endtime="20201029 09:33:32.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.832" endtime="20201029 09:33:32.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.809" endtime="20201029 09:33:32.204"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.206" endtime="20201029 09:33:32.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.205" endtime="20201029 09:33:32.226"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.235" endtime="20201029 09:33:32.267"></status>
</kw>
<msg timestamp="20201029 09:33:32.267" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.233" endtime="20201029 09:33:32.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.270" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.268" endtime="20201029 09:33:32.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.271" endtime="20201029 09:33:32.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.230" endtime="20201029 09:33:32.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.228" endtime="20201029 09:33:32.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.280" endtime="20201029 09:33:32.566"></status>
</kw>
<msg timestamp="20201029 09:33:32.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02028275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020650375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:32.278" endtime="20201029 09:33:32.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02028275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020650375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:32.570" endtime="20201029 09:33:32.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.578" endtime="20201029 09:33:32.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.276" endtime="20201029 09:33:32.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.274" endtime="20201029 09:33:32.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.585" level="INFO">${PHILIP_RES} = [{'diff': 0.0003676249999999999}, {'diff': 0.0003676110000000003}, {'diff': 0.00036777799999999916}, {'diff': 0.0003675969999999973}, {'diff': 0.0003677369999999999}, {'diff': 0.00036775}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:32.582" endtime="20201029 09:33:32.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.590" level="INFO">${RESULT} = {'diff': [0.0003676249999999999, 0.0003676110000000003, 0.00036777799999999916, 0.0003675969999999973, 0.0003677369999999999, 0.00036775, 0.0003676110000000003, 0.00036763899999999947, 0.0003676670000...</msg>
<status status="PASS" starttime="20201029 09:33:32.586" endtime="20201029 09:33:32.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.594" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.593" endtime="20201029 09:33:32.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.597" level="INFO">VALUE: [0.0003676249999999999, 0.0003676110000000003, 0.00036777799999999916, 0.0003675969999999973, 0.0003677369999999999, 0.00036775, 0.0003676110000000003, 0.00036763899999999947, 0.0003676670000000021, 0.00036759700000000076, 0.0003675700000000011, 0.0003677090000000008, 0.00036768000000000217, 0.00036759800000000023, 0.0003676110000000003, 0.00036763899999999947, 0.0003677220000000009, 0.00036765299999999904, 0.0003675690000000016, 0.0003676249999999999, 0.0003676249999999999, 0.0003676249999999999, 0.0003677220000000009, 0.0003676110000000003, 0.0003677639999999996, 0.00036761200000000327, 0.0003676799999999987, 0.0003676669999999986, 0.00036755599999999805, 0.0003675969999999973, 0.000367638999999996, 0.0003675699999999976, 0.0003676530000000025, 0.00036775, 0.00036763900000000294, 0.00036766699999999514, 0.0003675549999999986, 0.0003675419999999985, 0.00036749999999999977, 0.0003675829999999977, 0.0003675829999999977, 0.00036765299999999557, 0.00036755599999999805, 0.0003675140000000063, 0.0003676670000000021, 0.00036766599999999566, 0.0003676660000000026, 0.00036762500000000337, 0.0003677639999999996, 0.0003677090000000008]</msg>
<status status="PASS" starttime="20201029 09:33:32.596" endtime="20201029 09:33:32.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.591" endtime="20201029 09:33:32.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.227" endtime="20201029 09:33:32.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.204" endtime="20201029 09:33:32.599"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.601" endtime="20201029 09:33:32.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.600" endtime="20201029 09:33:32.621"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.630" endtime="20201029 09:33:32.663"></status>
</kw>
<msg timestamp="20201029 09:33:32.664" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.628" endtime="20201029 09:33:32.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.666" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.665" endtime="20201029 09:33:32.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.667" endtime="20201029 09:33:32.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.626" endtime="20201029 09:33:32.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.624" endtime="20201029 09:33:32.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.677" endtime="20201029 09:33:32.964"></status>
</kw>
<msg timestamp="20201029 09:33:32.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.675" endtime="20201029 09:33:32.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.968" endtime="20201029 09:33:32.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.976" endtime="20201029 09:33:32.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.672" endtime="20201029 09:33:32.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.671" endtime="20201029 09:33:32.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.983" level="INFO">${PHILIP_RES} = [{'diff': 0.00039424999999999877}, {'diff': 0.00039422300000000257}, {'diff': 0.0003942640000000018}, {'diff': 0.0003943190000000006}, {'diff': 0.0003942640000000018}, {'diff': 0.00039422199999999963}...</msg>
<status status="PASS" starttime="20201029 09:33:32.980" endtime="20201029 09:33:32.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.987" level="INFO">${RESULT} = {'diff': [0.00039424999999999877, 0.00039422300000000257, 0.0003942640000000018, 0.0003943190000000006, 0.0003942640000000018, 0.00039422199999999963, 0.00039424999999999877, 0.0003942919999999975, 0....</msg>
<status status="PASS" starttime="20201029 09:33:32.984" endtime="20201029 09:33:32.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.991" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.990" endtime="20201029 09:33:32.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.994" level="INFO">VALUE: [0.00039424999999999877, 0.00039422300000000257, 0.0003942640000000018, 0.0003943190000000006, 0.0003942640000000018, 0.00039422199999999963, 0.00039424999999999877, 0.0003942919999999975, 0.00039424999999999877, 0.00039430500000000104, 0.0003942780000000014, 0.00039426399999999834, 0.00039440299999999803, 0.00039437500000000236, 0.00039434699999999975, 0.00039448599999999945, 0.0003943330000000002, 0.0003943749999999989, 0.00039434699999999975, 0.0003943749999999989, 0.0003942359999999992, 0.0003942359999999992, 0.00039426299999999886, 0.0003943470000000032, 0.000394179999999994, 0.0003943470000000032, 0.000394290999999998, 0.0003942779999999979, 0.0003943050000000045, 0.0003943199999999966, 0.00039438800000000246, 0.0003943199999999966, 0.0003942919999999975, 0.00039433300000000365, 0.0003942920000000044, 0.0003943610000000028, 0.0003942919999999975, 0.00039433300000000365, 0.00039440299999999456, 0.00039444400000000074, 0.0003942919999999975, 0.0003943049999999976, 0.0003943610000000028, 0.00039426399999999834, 0.0003943749999999954, 0.00039426399999999834, 0.00039437500000000236, 0.00039438900000000193, 0.00039427699999999843, 0.00039430599999999705]</msg>
<status status="PASS" starttime="20201029 09:33:32.993" endtime="20201029 09:33:32.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.988" endtime="20201029 09:33:32.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.622" endtime="20201029 09:33:32.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.599" endtime="20201029 09:33:32.996"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.999" endtime="20201029 09:33:33.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.997" endtime="20201029 09:33:33.019"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.027" endtime="20201029 09:33:33.064"></status>
</kw>
<msg timestamp="20201029 09:33:33.065" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.026" endtime="20201029 09:33:33.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.067" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.066" endtime="20201029 09:33:33.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.068" endtime="20201029 09:33:33.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.023" endtime="20201029 09:33:33.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.021" endtime="20201029 09:33:33.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.079" endtime="20201029 09:33:33.367"></status>
</kw>
<msg timestamp="20201029 09:33:33.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.077" endtime="20201029 09:33:33.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021771236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.371" endtime="20201029 09:33:33.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.379" endtime="20201029 09:33:33.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.075" endtime="20201029 09:33:33.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.073" endtime="20201029 09:33:33.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.386" level="INFO">${PHILIP_RES} = [{'diff': 0.0004220560000000005}, {'diff': 0.0004221109999999993}, {'diff': 0.00042195899999999953}, {'diff': 0.0004219859999999992}, {'diff': 0.0004220830000000002}, {'diff': 0.00042191699999999735},...</msg>
<status status="PASS" starttime="20201029 09:33:33.383" endtime="20201029 09:33:33.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.390" level="INFO">${RESULT} = {'diff': [0.0004220560000000005, 0.0004221109999999993, 0.00042195899999999953, 0.0004219859999999992, 0.0004220830000000002, 0.00042191699999999735, 0.0004217639999999981, 0.0004218889999999982, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:33.387" endtime="20201029 09:33:33.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.394" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.393" endtime="20201029 09:33:33.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.397" level="INFO">VALUE: [0.0004220560000000005, 0.0004221109999999993, 0.00042195899999999953, 0.0004219859999999992, 0.0004220830000000002, 0.00042191699999999735, 0.0004217639999999981, 0.0004218889999999982, 0.0004218469999999995, 0.0004219310000000004, 0.00042183299999999993, 0.0004217370000000019, 0.000421750000000002, 0.00042190300000000125, 0.00042181999999999983, 0.00042190300000000125, 0.00042186099999999907, 0.00042195899999999953, 0.0004216949999999997, 0.00042191699999999735, 0.0004218330000000034, 0.00042186100000000254, 0.0004217499999999985, 0.00042180500000000426, 0.0004218330000000034, 0.0004218890000000017, 0.0004218609999999956, 0.0004218609999999956, 0.00042179200000000416, 0.0004218609999999956, 0.0004217639999999981, 0.0004218609999999956, 0.00042186100000000254, 0.0004218750000000021, 0.00042194499999999996, 0.00042183299999999646, 0.00042184700000000297, 0.00042195899999999953, 0.00042184700000000297, 0.0004217780000000046, 0.00042183399999999593, 0.00042180500000000426, 0.0004218330000000034, 0.00042183299999999646, 0.000421929999999994, 0.0004217219999999994, 0.0004217780000000046, 0.00042177799999999765, 0.0004217499999999985, 0.00042180500000000426]</msg>
<status status="PASS" starttime="20201029 09:33:33.396" endtime="20201029 09:33:33.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.391" endtime="20201029 09:33:33.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.019" endtime="20201029 09:33:33.406"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.996" endtime="20201029 09:33:33.406"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.408" endtime="20201029 09:33:33.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.407" endtime="20201029 09:33:33.429"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.437" endtime="20201029 09:33:33.472"></status>
</kw>
<msg timestamp="20201029 09:33:33.473" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.435" endtime="20201029 09:33:33.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.475" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.474" endtime="20201029 09:33:33.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.477" endtime="20201029 09:33:33.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.433" endtime="20201029 09:33:33.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.431" endtime="20201029 09:33:33.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.486" endtime="20201029 09:33:33.772"></status>
</kw>
<msg timestamp="20201029 09:33:33.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018776889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019227236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.484" endtime="20201029 09:33:33.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018776889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019227236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.776" endtime="20201029 09:33:33.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.784" endtime="20201029 09:33:33.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.482" endtime="20201029 09:33:33.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.480" endtime="20201029 09:33:33.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.791" level="INFO">${PHILIP_RES} = [{'diff': 0.00045034700000000025}, {'diff': 0.0004502909999999985}, {'diff': 0.0004502079999999971}, {'diff': 0.000450097}, {'diff': 0.00045025000000000273}, {'diff': 0.00045033400000000015}, {'diff':...</msg>
<status status="PASS" starttime="20201029 09:33:33.788" endtime="20201029 09:33:33.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.796" level="INFO">${RESULT} = {'diff': [0.00045034700000000025, 0.0004502909999999985, 0.0004502079999999971, 0.000450097, 0.00045025000000000273, 0.00045033400000000015, 0.0004502359999999997, 0.0004502220000000001, 0.00045019500...</msg>
<status status="PASS" starttime="20201029 09:33:33.792" endtime="20201029 09:33:33.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.800" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.799" endtime="20201029 09:33:33.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.803" level="INFO">VALUE: [0.00045034700000000025, 0.0004502909999999985, 0.0004502079999999971, 0.000450097, 0.00045025000000000273, 0.00045033400000000015, 0.0004502359999999997, 0.0004502220000000001, 0.00045019500000000046, 0.0004502640000000023, 0.0004503749999999994, 0.00045024999999999926, 0.00045025000000000273, 0.00045030499999999807, 0.00045024999999999926, 0.0004502640000000023, 0.00045027800000000187, 0.0004503330000000007, 0.0004503200000000006, 0.00045026399999999883, 0.0004503330000000007, 0.0004502779999999984, 0.0004503200000000006, 0.00045027800000000187, 0.000450194000000001, 0.0004503890000000024, 0.0004501529999999948, 0.00045037500000000286, 0.00045027699999999893, 0.0004503060000000045, 0.0004502779999999984, 0.0004503329999999972, 0.00045031899999999764, 0.0004502779999999984, 0.00045026399999999883, 0.0004502359999999997, 0.0004503199999999971, 0.0004503470000000037, 0.00045024999999999926, 0.00045036099999999635, 0.00045026399999999883, 0.00045026399999999883, 0.0004502229999999996, 0.000450305000000005, 0.0004503190000000046, 0.0004501810000000009, 0.0004501800000000014, 0.0004501250000000026, 0.0004502500000000062, 0.0004503469999999968]</msg>
<status status="PASS" starttime="20201029 09:33:33.802" endtime="20201029 09:33:33.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.797" endtime="20201029 09:33:33.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.429" endtime="20201029 09:33:33.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.406" endtime="20201029 09:33:33.805"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.807" endtime="20201029 09:33:33.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.806" endtime="20201029 09:33:33.828"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.836" endtime="20201029 09:33:33.874"></status>
</kw>
<msg timestamp="20201029 09:33:33.874" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.834" endtime="20201029 09:33:33.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.877" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.876" endtime="20201029 09:33:33.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.878" endtime="20201029 09:33:33.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.832" endtime="20201029 09:33:33.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.830" endtime="20201029 09:33:33.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.887" endtime="20201029 09:33:34.177"></status>
</kw>
<msg timestamp="20201029 09:33:34.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021706319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.886" endtime="20201029 09:33:34.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021706319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.181" endtime="20201029 09:33:34.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.190" endtime="20201029 09:33:34.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.883" endtime="20201029 09:33:34.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.881" endtime="20201029 09:33:34.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.198" level="INFO">${PHILIP_RES} = [{'diff': 0.0004796119999999973}, {'diff': 0.00047954199999999947}, {'diff': 0.00047972200000000187}, {'diff': 0.0004796250000000009}, {'diff': 0.0004794860000000012}, {'diff': 0.0004795969999999983},...</msg>
<status status="PASS" starttime="20201029 09:33:34.194" endtime="20201029 09:33:34.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.202" level="INFO">${RESULT} = {'diff': [0.0004796119999999973, 0.00047954199999999947, 0.00047972200000000187, 0.0004796250000000009, 0.0004794860000000012, 0.0004795969999999983, 0.0004796799999999997, 0.00047968099999999916, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:34.199" endtime="20201029 09:33:34.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.206" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.205" endtime="20201029 09:33:34.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.209" level="INFO">VALUE: [0.0004796119999999973, 0.00047954199999999947, 0.00047972200000000187, 0.0004796250000000009, 0.0004794860000000012, 0.0004795969999999983, 0.0004796799999999997, 0.00047968099999999916, 0.0004794859999999977, 0.00047951400000000033, 0.00047941699999999934, 0.0004796110000000013, 0.00047955499999999956, 0.00047970799999999883, 0.0004796669999999996, 0.0004794720000000016, 0.00047945899999999805, 0.0004794860000000012, 0.0004795830000000022, 0.00047965299999999655, 0.00047979100000000025, 0.0004796950000000022, 0.0004795969999999983, 0.00047968100000000263, 0.00047972200000000187, 0.00047973600000000144, 0.000479750000000001, 0.0004796809999999957, 0.00047970900000000177, 0.0004797640000000006, 0.000479750000000001, 0.0004797080000000023, 0.0004797080000000023, 0.0004797080000000023, 0.00047977800000000015, 0.00047977800000000015, 0.0004796530000000035, 0.000479750000000001, 0.0004797640000000006, 0.00047969400000000273, 0.00047956899999999913, 0.00047972300000000134, 0.00047980600000000623, 0.00047986100000000503, 0.000479638999999997, 0.0004796390000000039, 0.00047973600000000144, 0.00047979100000000025, 0.000479750000000001, 0.000479750000000001]</msg>
<status status="PASS" starttime="20201029 09:33:34.207" endtime="20201029 09:33:34.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.203" endtime="20201029 09:33:34.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.828" endtime="20201029 09:33:34.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.805" endtime="20201029 09:33:34.211"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.213" endtime="20201029 09:33:34.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.212" endtime="20201029 09:33:34.233"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.242" endtime="20201029 09:33:34.280"></status>
</kw>
<msg timestamp="20201029 09:33:34.281" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.240" endtime="20201029 09:33:34.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.283" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.282" endtime="20201029 09:33:34.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.284" endtime="20201029 09:33:34.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.237" endtime="20201029 09:33:34.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.235" endtime="20201029 09:33:34.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.295" endtime="20201029 09:33:34.581"></status>
</kw>
<msg timestamp="20201029 09:33:34.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018313764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.293" endtime="20201029 09:33:34.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018313764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.585" endtime="20201029 09:33:34.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.593" endtime="20201029 09:33:34.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.290" endtime="20201029 09:33:34.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.288" endtime="20201029 09:33:34.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.600" level="INFO">${PHILIP_RES} = [{'diff': 0.0005096389999999992}, {'diff': 0.0005097360000000002}, {'diff': 0.000509792000000002}, {'diff': 0.0005098189999999982}, {'diff': 0.0005098060000000015}, {'diff': 0.0005098189999999982}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:34.597" endtime="20201029 09:33:34.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.604" level="INFO">${RESULT} = {'diff': [0.0005096389999999992, 0.0005097360000000002, 0.000509792000000002, 0.0005098189999999982, 0.0005098060000000015, 0.0005098189999999982, 0.0005098889999999995, 0.0005098329999999977, 0.00050...</msg>
<status status="PASS" starttime="20201029 09:33:34.601" endtime="20201029 09:33:34.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.609" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.608" endtime="20201029 09:33:34.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.611" level="INFO">VALUE: [0.0005096389999999992, 0.0005097360000000002, 0.000509792000000002, 0.0005098189999999982, 0.0005098060000000015, 0.0005098189999999982, 0.0005098889999999995, 0.0005098329999999977, 0.0005098189999999982, 0.0005098049999999986, 0.0005098330000000012, 0.0005097779999999989, 0.0005098330000000012, 0.0005096809999999979, 0.0005098609999999969, 0.000509790999999999, 0.000509790999999999, 0.0005098189999999982, 0.0005097360000000002, 0.0005098330000000012, 0.0005097779999999989, 0.0005097640000000028, 0.0005097639999999994, 0.0005097910000000025, 0.0005096109999999966, 0.0005095970000000005, 0.0005098330000000012, 0.0005097229999999967, 0.0005097639999999959, 0.0005098189999999947, 0.0005098189999999947, 0.0005097639999999959, 0.0005096809999999979, 0.0005098329999999943, 0.000509902999999999, 0.0005096800000000054, 0.0005096389999999992, 0.0005098470000000008, 0.0005097770000000029, 0.0005098049999999951, 0.0005098330000000012, 0.000509792000000002, 0.0005098330000000012, 0.0005097080000000045, 0.0005097640000000028, 0.0005098749999999999, 0.0005098200000000011, 0.0005098610000000003, 0.0005096249999999997, 0.0005098050000000021]</msg>
<status status="PASS" starttime="20201029 09:33:34.610" endtime="20201029 09:33:34.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.605" endtime="20201029 09:33:34.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.234" endtime="20201029 09:33:34.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.211" endtime="20201029 09:33:34.614"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.616" endtime="20201029 09:33:34.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.615" endtime="20201029 09:33:34.636"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.645" endtime="20201029 09:33:34.688"></status>
</kw>
<msg timestamp="20201029 09:33:34.689" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.643" endtime="20201029 09:33:34.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.691" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.690" endtime="20201029 09:33:34.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.693" endtime="20201029 09:33:34.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.641" endtime="20201029 09:33:34.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.639" endtime="20201029 09:33:34.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.702" endtime="20201029 09:33:34.988"></status>
</kw>
<msg timestamp="20201029 09:33:34.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.700" endtime="20201029 09:33:34.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.992" endtime="20201029 09:33:35.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.000" endtime="20201029 09:33:35.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.698" endtime="20201029 09:33:35.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.696" endtime="20201029 09:33:35.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.007" level="INFO">${PHILIP_RES} = [{'diff': 0.0005408200000000009}, {'diff': 0.0005408750000000032}, {'diff': 0.0005409860000000002}, {'diff': 0.0005407499999999996}, {'diff': 0.0005406529999999986}, {'diff': 0.0005406950000000008}, {...</msg>
<status status="PASS" starttime="20201029 09:33:35.004" endtime="20201029 09:33:35.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.012" level="INFO">${RESULT} = {'diff': [0.0005408200000000009, 0.0005408750000000032, 0.0005409860000000002, 0.0005407499999999996, 0.0005406529999999986, 0.0005406950000000008, 0.0005408059999999978, 0.0005407629999999997, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:35.008" endtime="20201029 09:33:35.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.017" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.016" endtime="20201029 09:33:35.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.019" level="INFO">VALUE: [0.0005408200000000009, 0.0005408750000000032, 0.0005409860000000002, 0.0005407499999999996, 0.0005406529999999986, 0.0005406950000000008, 0.0005408059999999978, 0.0005407629999999997, 0.000540736, 0.000540848, 0.0005408329999999975, 0.0005407909999999988, 0.000540833000000001, 0.0005408049999999984, 0.0005407779999999987, 0.0005407639999999991, 0.0005407780000000022, 0.0005408049999999984, 0.0005408189999999979, 0.0005407919999999983, 0.0005406519999999956, 0.000540736, 0.0005408200000000044, 0.000540833999999997, 0.0005409310000000014, 0.0005407920000000052, 0.0005408330000000044, 0.000540653000000002, 0.0005407909999999988, 0.0005407499999999996, 0.0005408469999999971, 0.0005409170000000019, 0.0005407080000000009, 0.0005409030000000023, 0.0005407499999999996, 0.0005408750000000032, 0.0005407499999999996, 0.0005408610000000036, 0.0005408889999999958, 0.0005406660000000021, 0.0005407499999999996, 0.0005407079999999939, 0.0005409170000000019, 0.0005406939999999943, 0.0005406110000000033, 0.0005407499999999996, 0.0005407080000000009, 0.0005407779999999987, 0.0005407229999999999, 0.0005408050000000053]</msg>
<status status="PASS" starttime="20201029 09:33:35.018" endtime="20201029 09:33:35.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.013" endtime="20201029 09:33:35.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.637" endtime="20201029 09:33:35.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.614" endtime="20201029 09:33:35.021"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.024" endtime="20201029 09:33:35.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.022" endtime="20201029 09:33:35.044"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.052" endtime="20201029 09:33:35.095"></status>
</kw>
<msg timestamp="20201029 09:33:35.095" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.050" endtime="20201029 09:33:35.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.098" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.097" endtime="20201029 09:33:35.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.099" endtime="20201029 09:33:35.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.048" endtime="20201029 09:33:35.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.046" endtime="20201029 09:33:35.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.108" endtime="20201029 09:33:35.395"></status>
</kw>
<msg timestamp="20201029 09:33:35.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.107" endtime="20201029 09:33:35.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.400" endtime="20201029 09:33:35.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.408" endtime="20201029 09:33:35.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.104" endtime="20201029 09:33:35.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.102" endtime="20201029 09:33:35.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.415" level="INFO">${PHILIP_RES} = [{'diff': 0.0005725419999999988}, {'diff': 0.0005727500000000003}, {'diff': 0.0005726940000000021}, {'diff': 0.0005726669999999989}, {'diff': 0.0005727779999999995}, {'diff': 0.0005727370000000002}, {...</msg>
<status status="PASS" starttime="20201029 09:33:35.411" endtime="20201029 09:33:35.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.419" level="INFO">${RESULT} = {'diff': [0.0005725419999999988, 0.0005727500000000003, 0.0005726940000000021, 0.0005726669999999989, 0.0005727779999999995, 0.0005727370000000002, 0.0005727219999999977, 0.000572791999999999, 0.00057...</msg>
<status status="PASS" starttime="20201029 09:33:35.416" endtime="20201029 09:33:35.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.423" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.422" endtime="20201029 09:33:35.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.426" level="INFO">VALUE: [0.0005725419999999988, 0.0005727500000000003, 0.0005726940000000021, 0.0005726669999999989, 0.0005727779999999995, 0.0005727370000000002, 0.0005727219999999977, 0.000572791999999999, 0.0005726249999999967, 0.0005726950000000015, 0.0005727219999999977, 0.0005726250000000002, 0.0005725970000000011, 0.0005726109999999972, 0.0005727220000000012, 0.0005726250000000002, 0.0005726660000000029, 0.0005725830000000015, 0.0005729450000000053, 0.0005726809999999985, 0.0005726940000000055, 0.0005728610000000009, 0.0005729029999999996, 0.0005726250000000002, 0.0005727499999999969, 0.0005727220000000047, 0.0005726389999999998, 0.0005727909999999961, 0.0005726389999999998, 0.0005727640000000034, 0.0005725970000000011, 0.0005728469999999944, 0.0005727229999999972, 0.0005725970000000011, 0.0005728050000000026, 0.0005725969999999941, 0.0005726110000000006, 0.0005726939999999986, 0.0005725700000000014, 0.0005726120000000001, 0.0005726939999999986, 0.0005726809999999985, 0.0005727359999999973, 0.0005727080000000051, 0.0005727919999999956, 0.000572860999999994, 0.0005729579999999984, 0.0005729020000000001, 0.0005729029999999996, 0.000572778000000003]</msg>
<status status="PASS" starttime="20201029 09:33:35.424" endtime="20201029 09:33:35.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.420" endtime="20201029 09:33:35.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.044" endtime="20201029 09:33:35.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.022" endtime="20201029 09:33:35.428"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.430" endtime="20201029 09:33:35.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.429" endtime="20201029 09:33:35.450"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.459" endtime="20201029 09:33:35.506"></status>
</kw>
<msg timestamp="20201029 09:33:35.507" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.457" endtime="20201029 09:33:35.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.509" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.508" endtime="20201029 09:33:35.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.510" endtime="20201029 09:33:35.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.454" endtime="20201029 09:33:35.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.452" endtime="20201029 09:33:35.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.521" endtime="20201029 09:33:35.807"></status>
</kw>
<msg timestamp="20201029 09:33:35.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.519" endtime="20201029 09:33:35.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.811" endtime="20201029 09:33:35.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.819" endtime="20201029 09:33:35.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.516" endtime="20201029 09:33:35.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.515" endtime="20201029 09:33:35.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.826" level="INFO">${PHILIP_RES} = [{'diff': 0.0006053750000000017}, {'diff': 0.0006053469999999991}, {'diff': 0.0006054579999999997}, {'diff': 0.0006054859999999988}, {'diff': 0.0006054859999999988}, {'diff': 0.0006054720000000027}, {...</msg>
<status status="PASS" starttime="20201029 09:33:35.823" endtime="20201029 09:33:35.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.830" level="INFO">${RESULT} = {'diff': [0.0006053750000000017, 0.0006053469999999991, 0.0006054579999999997, 0.0006054859999999988, 0.0006054859999999988, 0.0006054720000000027, 0.0006054719999999993, 0.0006054860000000023, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:33:35.827" endtime="20201029 09:33:35.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.835" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.834" endtime="20201029 09:33:35.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.837" level="INFO">VALUE: [0.0006053750000000017, 0.0006053469999999991, 0.0006054579999999997, 0.0006054859999999988, 0.0006054859999999988, 0.0006054720000000027, 0.0006054719999999993, 0.0006054860000000023, 0.0006054999999999984, 0.0006055129999999985, 0.0006054859999999988, 0.0006054170000000005, 0.0006054859999999988, 0.0006054579999999997, 0.000605431, 0.0006054030000000044, 0.0006054450000000031, 0.0006055000000000019, 0.0006054439999999967, 0.0006054860000000023, 0.0006054310000000035, 0.0006053889999999978, 0.0006053750000000052, 0.0006054440000000036, 0.0006054720000000027, 0.0006054019999999979, 0.000605319, 0.0006052920000000003, 0.0006053469999999991, 0.0006053750000000052, 0.0006054729999999953, 0.0006054719999999958, 0.0006055140000000014, 0.0006055279999999941, 0.0006054860000000023, 0.0006054440000000036, 0.0006054160000000045, 0.0006052780000000008, 0.0006054730000000022, 0.0006054999999999949, 0.0006054030000000044, 0.0006053199999999995, 0.0006054999999999949, 0.000605319, 0.0006054999999999949, 0.0006054159999999975, 0.0006053329999999996, 0.0006054439999999967, 0.0006054720000000027, 0.0006055420000000006]</msg>
<status status="PASS" starttime="20201029 09:33:35.836" endtime="20201029 09:33:35.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.831" endtime="20201029 09:33:35.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.451" endtime="20201029 09:33:35.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.428" endtime="20201029 09:33:35.840"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.842" endtime="20201029 09:33:35.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.841" endtime="20201029 09:33:35.862"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.871" endtime="20201029 09:33:35.919"></status>
</kw>
<msg timestamp="20201029 09:33:35.920" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.869" endtime="20201029 09:33:35.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.922" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.921" endtime="20201029 09:33:35.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.923" endtime="20201029 09:33:35.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.867" endtime="20201029 09:33:35.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.865" endtime="20201029 09:33:35.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.933" endtime="20201029 09:33:36.219"></status>
</kw>
<msg timestamp="20201029 09:33:36.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021496417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.931" endtime="20201029 09:33:36.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021496417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.223" endtime="20201029 09:33:36.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.232" endtime="20201029 09:33:36.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.928" endtime="20201029 09:33:36.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.927" endtime="20201029 09:33:36.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.239" level="INFO">${PHILIP_RES} = [{'diff': 0.0006392770000000006}, {'diff': 0.000639472999999998}, {'diff': 0.0006393890000000006}, {'diff': 0.0006394030000000002}, {'diff': 0.0006393339999999983}, {'diff': 0.0006393890000000006}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:36.235" endtime="20201029 09:33:36.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.244" level="INFO">${RESULT} = {'diff': [0.0006392770000000006, 0.000639472999999998, 0.0006393890000000006, 0.0006394030000000002, 0.0006393339999999983, 0.0006393890000000006, 0.0006393470000000019, 0.0006395970000000022, 0.00063...</msg>
<status status="PASS" starttime="20201029 09:33:36.240" endtime="20201029 09:33:36.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.248" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.247" endtime="20201029 09:33:36.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.251" level="INFO">VALUE: [0.0006392770000000006, 0.000639472999999998, 0.0006393890000000006, 0.0006394030000000002, 0.0006393339999999983, 0.0006393890000000006, 0.0006393470000000019, 0.0006395970000000022, 0.0006394590000000019, 0.0006394449999999989, 0.0006395139999999973, 0.0006395280000000003, 0.0006395279999999968, 0.0006395420000000034, 0.0006394719999999986, 0.0006393749999999976, 0.0006393059999999992, 0.0006392220000000018, 0.0006394030000000037, 0.0006393749999999976, 0.0006393749999999976, 0.0006393049999999997, 0.0006394449999999954, 0.0006394169999999963, 0.0006393200000000057, 0.0006394299999999964, 0.0006395139999999938, 0.000639361000000005, 0.0006395279999999934, 0.0006393469999999984, 0.0006393199999999988, 0.0006394580000000025, 0.0006394029999999967, 0.0006393749999999976, 0.0006394440000000029, 0.0006394860000000016, 0.0006393479999999979, 0.0006394030000000037, 0.0006392780000000001, 0.0006392500000000009, 0.0006393750000000045, 0.0006393329999999989, 0.0006394299999999964, 0.0006393750000000045, 0.0006395559999999995, 0.0006395140000000007, 0.0006393750000000045, 0.0006393469999999984, 0.000639443999999996, 0.0006393749999999976]</msg>
<status status="PASS" starttime="20201029 09:33:36.249" endtime="20201029 09:33:36.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.245" endtime="20201029 09:33:36.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.863" endtime="20201029 09:33:36.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.840" endtime="20201029 09:33:36.253"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.255" endtime="20201029 09:33:36.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.254" endtime="20201029 09:33:36.275"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.284" endtime="20201029 09:33:36.331"></status>
</kw>
<msg timestamp="20201029 09:33:36.331" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.282" endtime="20201029 09:33:36.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.334" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.332" endtime="20201029 09:33:36.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.335" endtime="20201029 09:33:36.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.279" endtime="20201029 09:33:36.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.277" endtime="20201029 09:33:36.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.344" endtime="20201029 09:33:36.631"></status>
</kw>
<msg timestamp="20201029 09:33:36.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020588181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021261944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.343" endtime="20201029 09:33:36.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020588181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021261944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.635" endtime="20201029 09:33:36.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.644" endtime="20201029 09:33:36.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.340" endtime="20201029 09:33:36.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.338" endtime="20201029 09:33:36.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.650" level="INFO">${PHILIP_RES} = [{'diff': 0.0006737630000000008}, {'diff': 0.0006739579999999988}, {'diff': 0.000673888999999997}, {'diff': 0.0006739589999999983}, {'diff': 0.0006739580000000023}, {'diff': 0.000674112000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:36.647" endtime="20201029 09:33:36.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.655" level="INFO">${RESULT} = {'diff': [0.0006737630000000008, 0.0006739579999999988, 0.000673888999999997, 0.0006739589999999983, 0.0006739580000000023, 0.000674112000000001, 0.0006737220000000016, 0.0006736809999999989, 0.000673...</msg>
<status status="PASS" starttime="20201029 09:33:36.651" endtime="20201029 09:33:36.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.659" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.658" endtime="20201029 09:33:36.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.661" level="INFO">VALUE: [0.0006737630000000008, 0.0006739579999999988, 0.000673888999999997, 0.0006739589999999983, 0.0006739580000000023, 0.000674112000000001, 0.0006737220000000016, 0.0006736809999999989, 0.0006739309999999991, 0.000673708000000002, 0.000673805999999999, 0.0006737220000000016, 0.000673611000000001, 0.0006735419999999992, 0.0006736660000000033, 0.0006736109999999976, 0.000673596999999998, 0.000673708000000002, 0.0006737500000000007, 0.0006737779999999999, 0.0006738469999999983, 0.0006737090000000015, 0.0006736939999999955, 0.0006736249999999971, 0.0006737359999999942, 0.0006737779999999999, 0.0006737360000000012, 0.0006736809999999954, 0.0006737360000000012, 0.0006736950000000019, 0.0006735559999999988, 0.0006735279999999996, 0.0006735829999999984, 0.0006736660000000033, 0.000673679999999996, 0.0006738200000000055, 0.0006735560000000057, 0.0006737640000000003, 0.0006735829999999984, 0.0006736529999999963, 0.0006736110000000045, 0.0006736670000000028, 0.0006736519999999968, 0.0006735420000000061, 0.0006735689999999989, 0.000673596999999998, 0.0006736390000000037, 0.0006735140000000001, 0.0006735549999999993, 0.0006736950000000019]</msg>
<status status="PASS" starttime="20201029 09:33:36.660" endtime="20201029 09:33:36.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.655" endtime="20201029 09:33:36.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.276" endtime="20201029 09:33:36.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.253" endtime="20201029 09:33:36.664"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.666" endtime="20201029 09:33:36.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.665" endtime="20201029 09:33:36.686"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.694" endtime="20201029 09:33:36.747"></status>
</kw>
<msg timestamp="20201029 09:33:36.747" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.693" endtime="20201029 09:33:36.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.750" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.749" endtime="20201029 09:33:36.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.751" endtime="20201029 09:33:36.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.690" endtime="20201029 09:33:36.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.688" endtime="20201029 09:33:36.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.761" endtime="20201029 09:33:37.067"></status>
</kw>
<msg timestamp="20201029 09:33:37.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.760" endtime="20201029 09:33:37.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.071" endtime="20201029 09:33:37.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.079" endtime="20201029 09:33:37.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.757" endtime="20201029 09:33:37.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.755" endtime="20201029 09:33:37.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.086" level="INFO">${PHILIP_RES} = [{'diff': 0.0007089860000000017}, {'diff': 0.000709027000000001}, {'diff': 0.0007090689999999997}, {'diff': 0.0007090140000000009}, {'diff': 0.0007090000000000013}, {'diff': 0.0007091110000000019}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:37.083" endtime="20201029 09:33:37.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.090" level="INFO">${RESULT} = {'diff': [0.0007089860000000017, 0.000709027000000001, 0.0007090689999999997, 0.0007090140000000009, 0.0007090000000000013, 0.0007091110000000019, 0.0007091389999999975, 0.0007090550000000001, 0.00070...</msg>
<status status="PASS" starttime="20201029 09:33:37.087" endtime="20201029 09:33:37.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.095" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.094" endtime="20201029 09:33:37.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.097" level="INFO">VALUE: [0.0007089860000000017, 0.000709027000000001, 0.0007090689999999997, 0.0007090140000000009, 0.0007090000000000013, 0.0007091110000000019, 0.0007091389999999975, 0.0007090550000000001, 0.000709042, 0.0007090829999999992, 0.0007089999999999978, 0.0007090970000000023, 0.0007091109999999984, 0.0007091250000000049, 0.0007090550000000001, 0.0007091120000000048, 0.0007090970000000058, 0.0007092369999999945, 0.000709124999999998, 0.0007091670000000036, 0.0007091809999999962, 0.000709236000000002, 0.0007090829999999992, 0.0007089580000000026, 0.0007091939999999963, 0.0007090550000000001, 0.0007092770000000012, 0.0007091799999999968, 0.0007091529999999971, 0.0007092080000000028, 0.0007090689999999997, 0.0007090699999999991, 0.0007089860000000017, 0.0007090969999999988, 0.0007090000000000013, 0.0007089170000000034, 0.0007090830000000062, 0.0007090969999999988, 0.0007091520000000046, 0.0007090409999999936, 0.0007091389999999975, 0.0007090829999999992, 0.000709124999999998, 0.0007089720000000022, 0.0007091810000000032, 0.0007090829999999992, 0.0007090000000000013, 0.0007092500000000015, 0.0007091110000000053, 0.000709042]</msg>
<status status="PASS" starttime="20201029 09:33:37.096" endtime="20201029 09:33:37.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.091" endtime="20201029 09:33:37.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.687" endtime="20201029 09:33:37.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.664" endtime="20201029 09:33:37.100"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.103" endtime="20201029 09:33:37.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.101" endtime="20201029 09:33:37.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.131" endtime="20201029 09:33:37.180"></status>
</kw>
<msg timestamp="20201029 09:33:37.181" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.129" endtime="20201029 09:33:37.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.183" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.182" endtime="20201029 09:33:37.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.184" endtime="20201029 09:33:37.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.127" endtime="20201029 09:33:37.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.125" endtime="20201029 09:33:37.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.194" endtime="20201029 09:33:37.481"></status>
</kw>
<msg timestamp="20201029 09:33:37.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017347083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018092722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.192" endtime="20201029 09:33:37.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017347083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018092722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.486" endtime="20201029 09:33:37.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.494" endtime="20201029 09:33:37.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.189" endtime="20201029 09:33:37.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.188" endtime="20201029 09:33:37.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.500" level="INFO">${PHILIP_RES} = [{'diff': 0.0007456389999999993}, {'diff': 0.0007457220000000007}, {'diff': 0.0007457499999999999}, {'diff': 0.0007457780000000025}, {'diff': 0.0007457080000000012}, {'diff': 0.0007457080000000012}, {...</msg>
<status status="PASS" starttime="20201029 09:33:37.497" endtime="20201029 09:33:37.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.505" level="INFO">${RESULT} = {'diff': [0.0007456389999999993, 0.0007457220000000007, 0.0007457499999999999, 0.0007457780000000025, 0.0007457080000000012, 0.0007457080000000012, 0.000745860999999997, 0.0007458059999999982, 0.00074...</msg>
<status status="PASS" starttime="20201029 09:33:37.501" endtime="20201029 09:33:37.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.510" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.509" endtime="20201029 09:33:37.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.513" level="INFO">VALUE: [0.0007456389999999993, 0.0007457220000000007, 0.0007457499999999999, 0.0007457780000000025, 0.0007457080000000012, 0.0007457080000000012, 0.000745860999999997, 0.0007458059999999982, 0.0007457499999999999, 0.0007455970000000006, 0.000745875, 0.0007458330000000013, 0.0007457080000000012, 0.0007458059999999982, 0.0007456810000000015, 0.0007457370000000033, 0.000745777999999999, 0.0007458199999999977, 0.0007457769999999961, 0.0007456389999999993, 0.000745875, 0.0007459160000000062, 0.0007456529999999989, 0.0007455970000000006, 0.0007458050000000022, 0.0007456669999999985, 0.0007456939999999981, 0.0007456799999999986, 0.0007457500000000034, 0.0007457219999999973, 0.0007456389999999993, 0.0007457499999999964, 0.0007458059999999947, 0.0007458330000000013, 0.0007457370000000033, 0.0007458889999999996, 0.0007458059999999947, 0.0007458060000000016, 0.0007458470000000009, 0.0007457500000000034, 0.0007458200000000012, 0.0007457640000000029, 0.0007458889999999996, 0.0007457079999999977, 0.0007457219999999973, 0.0007458190000000017, 0.0007456939999999981, 0.0007456249999999998, 0.0007457779999999956, 0.0007457499999999964]</msg>
<status status="PASS" starttime="20201029 09:33:37.511" endtime="20201029 09:33:37.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.506" endtime="20201029 09:33:37.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.123" endtime="20201029 09:33:37.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.100" endtime="20201029 09:33:37.515"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.517" endtime="20201029 09:33:37.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.516" endtime="20201029 09:33:37.537"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.545" endtime="20201029 09:33:37.601"></status>
</kw>
<msg timestamp="20201029 09:33:37.601" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.544" endtime="20201029 09:33:37.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.604" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.603" endtime="20201029 09:33:37.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.606" endtime="20201029 09:33:37.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.541" endtime="20201029 09:33:37.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.539" endtime="20201029 09:33:37.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.616" endtime="20201029 09:33:37.905"></status>
</kw>
<msg timestamp="20201029 09:33:37.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020605806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.614" endtime="20201029 09:33:37.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020605806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.909" endtime="20201029 09:33:37.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.917" endtime="20201029 09:33:37.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.611" endtime="20201029 09:33:37.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.609" endtime="20201029 09:33:37.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.924" level="INFO">${PHILIP_RES} = [{'diff': 0.0007825980000000024}, {'diff': 0.0007825699999999998}, {'diff': 0.0007824440000000002}, {'diff': 0.0007826110000000025}, {'diff': 0.0007825410000000012}, {'diff': 0.0007824579999999998}, {...</msg>
<status status="PASS" starttime="20201029 09:33:37.921" endtime="20201029 09:33:37.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.928" level="INFO">${RESULT} = {'diff': [0.0007825980000000024, 0.0007825699999999998, 0.0007824440000000002, 0.0007826110000000025, 0.0007825410000000012, 0.0007824579999999998, 0.0007825140000000015, 0.0007824860000000024, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:33:37.925" endtime="20201029 09:33:37.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.932" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.931" endtime="20201029 09:33:37.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.935" level="INFO">VALUE: [0.0007825980000000024, 0.0007825699999999998, 0.0007824440000000002, 0.0007826110000000025, 0.0007825410000000012, 0.0007824579999999998, 0.0007825140000000015, 0.0007824860000000024, 0.0007826520000000017, 0.0007826110000000025, 0.0007825969999999995, 0.000782722000000003, 0.0007826940000000004, 0.0007824589999999992, 0.0007825840000000028, 0.0007826249999999951, 0.0007826110000000025, 0.0007825419999999972, 0.0007824020000000015, 0.0007825409999999977, 0.0007825689999999969, 0.0007826530000000012, 0.0007826669999999938, 0.0007827229999999991, 0.0007824729999999988, 0.0007824579999999998, 0.0007824589999999992, 0.0007825830000000034, 0.0007826390000000016, 0.0007827089999999995, 0.0007826249999999951, 0.0007824729999999988, 0.0007825419999999972, 0.0007825269999999981, 0.000782708, 0.0007828050000000045, 0.0007829169999999941, 0.0007829719999999998, 0.0007829450000000002, 0.0007828060000000039, 0.000782819000000004, 0.0007829859999999994, 0.000782999999999999, 0.0007827499999999987, 0.0007828890000000019, 0.0007827500000000057, 0.0007827359999999992, 0.0007827499999999987, 0.0007829160000000016, 0.0007829589999999997]</msg>
<status status="PASS" starttime="20201029 09:33:37.934" endtime="20201029 09:33:37.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.929" endtime="20201029 09:33:37.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.538" endtime="20201029 09:33:37.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.515" endtime="20201029 09:33:37.937"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.939" endtime="20201029 09:33:37.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.938" endtime="20201029 09:33:37.959"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.968" endtime="20201029 09:33:38.028"></status>
</kw>
<msg timestamp="20201029 09:33:38.029" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.966" endtime="20201029 09:33:38.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.031" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.030" endtime="20201029 09:33:38.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.032" endtime="20201029 09:33:38.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.964" endtime="20201029 09:33:38.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.962" endtime="20201029 09:33:38.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.043" endtime="20201029 09:33:38.328"></status>
</kw>
<msg timestamp="20201029 09:33:38.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019445667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.041" endtime="20201029 09:33:38.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019445667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.332" endtime="20201029 09:33:38.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.342" endtime="20201029 09:33:38.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.038" endtime="20201029 09:33:38.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.037" endtime="20201029 09:33:38.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.351" level="INFO">${PHILIP_RES} = [{'diff': 0.0008207079999999999}, {'diff': 0.0008206670000000006}, {'diff': 0.0008205829999999997}, {'diff': 0.0008206670000000006}, {'diff': 0.0008204300000000005}, {'diff': 0.0008206110000000023}, {...</msg>
<status status="PASS" starttime="20201029 09:33:38.347" endtime="20201029 09:33:38.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.357" level="INFO">${RESULT} = {'diff': [0.0008207079999999999, 0.0008206670000000006, 0.0008205829999999997, 0.0008206670000000006, 0.0008204300000000005, 0.0008206110000000023, 0.0008205840000000027, 0.000820653000000001, 0.00082...</msg>
<status status="PASS" starttime="20201029 09:33:38.353" endtime="20201029 09:33:38.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.363" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.362" endtime="20201029 09:33:38.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.367" level="INFO">VALUE: [0.0008207079999999999, 0.0008206670000000006, 0.0008205829999999997, 0.0008206670000000006, 0.0008204300000000005, 0.0008206110000000023, 0.0008205840000000027, 0.000820653000000001, 0.0008206949999999998, 0.0008205280000000009, 0.0008205699999999996, 0.0008205980000000022, 0.0008205280000000009, 0.000820541999999997, 0.0008204440000000035, 0.0008203609999999986, 0.0008204310000000034, 0.0008205969999999993, 0.0008205280000000009, 0.000820541000000001, 0.0008205690000000002, 0.0008206669999999971, 0.000820652000000005, 0.0008205979999999988, 0.0008205979999999988, 0.0008206249999999984, 0.0008205140000000014, 0.0008205979999999988, 0.0008202780000000007, 0.0008204720000000026, 0.0008202500000000015, 0.0008204720000000026, 0.0008205420000000005, 0.000820429999999997, 0.0008205829999999997, 0.0008204719999999957, 0.0008204309999999965, 0.0008204310000000034, 0.000820444999999996, 0.0008204170000000038, 0.0008205839999999992, 0.0008203059999999998, 0.000820638999999998, 0.0008204170000000038, 0.0008205560000000001, 0.0008203479999999985, 0.000820346999999999, 0.0008205700000000066, 0.0008205560000000001, 0.0008204860000000092]</msg>
<status status="PASS" starttime="20201029 09:33:38.365" endtime="20201029 09:33:38.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.358" endtime="20201029 09:33:38.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.960" endtime="20201029 09:33:38.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.937" endtime="20201029 09:33:38.370"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.372" endtime="20201029 09:33:38.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.370" endtime="20201029 09:33:38.392"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.400" endtime="20201029 09:33:38.458"></status>
</kw>
<msg timestamp="20201029 09:33:38.459" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.399" endtime="20201029 09:33:38.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.464" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.461" endtime="20201029 09:33:38.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.467" endtime="20201029 09:33:38.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.396" endtime="20201029 09:33:38.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.394" endtime="20201029 09:33:38.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.487" endtime="20201029 09:33:38.780"></status>
</kw>
<msg timestamp="20201029 09:33:38.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018887611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.483" endtime="20201029 09:33:38.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018887611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.785" endtime="20201029 09:33:38.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.793" endtime="20201029 09:33:38.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.478" endtime="20201029 09:33:38.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.474" endtime="20201029 09:33:38.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.799" level="INFO">${PHILIP_RES} = [{'diff': 0.0008593750000000025}, {'diff': 0.000859374999999999}, {'diff': 0.0008594170000000012}, {'diff': 0.000859569000000001}, {'diff': 0.0008596670000000015}, {'diff': 0.0008594299999999978}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:38.796" endtime="20201029 09:33:38.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.804" level="INFO">${RESULT} = {'diff': [0.0008593750000000025, 0.000859374999999999, 0.0008594170000000012, 0.000859569000000001, 0.0008596670000000015, 0.0008594299999999978, 0.0008593050000000012, 0.000859472, 0.0008593330000000...</msg>
<status status="PASS" starttime="20201029 09:33:38.800" endtime="20201029 09:33:38.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.809" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.808" endtime="20201029 09:33:38.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.811" level="INFO">VALUE: [0.0008593750000000025, 0.000859374999999999, 0.0008594170000000012, 0.000859569000000001, 0.0008596670000000015, 0.0008594299999999978, 0.0008593050000000012, 0.000859472, 0.0008593330000000003, 0.0008595560000000009, 0.0008595000000000026, 0.0008594440000000009, 0.0008595420000000013, 0.0008593890000000021, 0.0008595279999999983, 0.0008594589999999999, 0.0008593470000000034, 0.0008595139999999987, 0.0008594999999999992, 0.0008595420000000048, 0.0008594310000000008, 0.0008596119999999957, 0.0008594170000000012, 0.0008594170000000012, 0.0008595689999999975, 0.0008594160000000017, 0.0008593610000000029, 0.000859472, 0.0008594170000000012, 0.0008594299999999944, 0.0008593329999999968, 0.0008592499999999989, 0.0008593189999999973, 0.0008592219999999998, 0.0008594030000000016, 0.0008595279999999983, 0.0008595560000000044, 0.0008594859999999996, 0.000859472, 0.0008593890000000021, 0.0008594859999999996, 0.000859472, 0.0008594859999999996, 0.0008595559999999974, 0.0008597090000000002, 0.0008596670000000015, 0.0008595550000000049, 0.0008595689999999975, 0.0008595829999999971, 0.0008595970000000036]</msg>
<status status="PASS" starttime="20201029 09:33:38.810" endtime="20201029 09:33:38.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.805" endtime="20201029 09:33:38.813"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.393" endtime="20201029 09:33:38.813"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.370" endtime="20201029 09:33:38.813"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.816" endtime="20201029 09:33:38.835"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.814" endtime="20201029 09:33:38.836"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.844" endtime="20201029 09:33:38.907"></status>
</kw>
<msg timestamp="20201029 09:33:38.908" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.843" endtime="20201029 09:33:38.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.910" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.909" endtime="20201029 09:33:38.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.911" endtime="20201029 09:33:38.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.840" endtime="20201029 09:33:38.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.838" endtime="20201029 09:33:38.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.921" endtime="20201029 09:33:39.208"></status>
</kw>
<msg timestamp="20201029 09:33:39.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.919" endtime="20201029 09:33:39.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.212" endtime="20201029 09:33:39.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.221" endtime="20201029 09:33:39.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.917" endtime="20201029 09:33:39.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.915" endtime="20201029 09:33:39.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.227" level="INFO">${PHILIP_RES} = [{'diff': 0.0008990559999999988}, {'diff': 0.0008991799999999994}, {'diff': 0.0008991390000000002}, {'diff': 0.0008991950000000019}, {'diff': 0.0008992500000000007}, {'diff': 0.0008992500000000007}, {...</msg>
<status status="PASS" starttime="20201029 09:33:39.224" endtime="20201029 09:33:39.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.231" level="INFO">${RESULT} = {'diff': [0.0008990559999999988, 0.0008991799999999994, 0.0008991390000000002, 0.0008991950000000019, 0.0008992500000000007, 0.0008992500000000007, 0.0008992079999999986, 0.0008992220000000016, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:33:39.228" endtime="20201029 09:33:39.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.236" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.235" endtime="20201029 09:33:39.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.238" level="INFO">VALUE: [0.0008990559999999988, 0.0008991799999999994, 0.0008991390000000002, 0.0008991950000000019, 0.0008992500000000007, 0.0008992500000000007, 0.0008992079999999986, 0.0008992220000000016, 0.0008991659999999999, 0.0008991810000000024, 0.0008992500000000042, 0.0008992769999999969, 0.0008992079999999986, 0.0008993060000000025, 0.0008992219999999981, 0.0008992639999999968, 0.0008993329999999952, 0.0008993610000000013, 0.0008992779999999964, 0.0008991659999999999, 0.000899000000000004, 0.0008991520000000003, 0.0008991530000000067, 0.0008991669999999993, 0.0008991809999999989, 0.0008991659999999999, 0.0008992500000000042, 0.0008991809999999989, 0.000899111000000001, 0.0008992500000000042, 0.000899208999999998, 0.000899111000000001, 0.0008992499999999973, 0.0008991659999999999, 0.0008989860000000044, 0.0008991529999999998, 0.0008993470000000017, 0.0008992219999999981, 0.000899111000000001, 0.0008990689999999954, 0.0008991669999999993, 0.0008991380000000007, 0.0008990970000000015, 0.0008990690000000023, 0.0008994160000000001, 0.0008992500000000042, 0.0008993330000000022, 0.0008992780000000034, 0.0008991390000000071, 0.0008991520000000003]</msg>
<status status="PASS" starttime="20201029 09:33:39.237" endtime="20201029 09:33:39.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.232" endtime="20201029 09:33:39.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.836" endtime="20201029 09:33:39.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.814" endtime="20201029 09:33:39.240"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.243" endtime="20201029 09:33:39.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.241" endtime="20201029 09:33:39.263"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.272" endtime="20201029 09:33:39.335"></status>
</kw>
<msg timestamp="20201029 09:33:39.336" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.271" endtime="20201029 09:33:39.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.338" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.337" endtime="20201029 09:33:39.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.340" endtime="20201029 09:33:39.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.268" endtime="20201029 09:33:39.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.265" endtime="20201029 09:33:39.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.350" endtime="20201029 09:33:39.636"></status>
</kw>
<msg timestamp="20201029 09:33:39.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02324225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:39.348" endtime="20201029 09:33:39.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02324225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:39.640" endtime="20201029 09:33:39.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.648" endtime="20201029 09:33:39.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.346" endtime="20201029 09:33:39.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.344" endtime="20201029 09:33:39.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.655" level="INFO">${PHILIP_RES} = [{'diff': 0.0009399169999999984}, {'diff': 0.0009400409999999991}, {'diff': 0.0009404029999999994}, {'diff': 0.0009402500000000001}, {'diff': 0.0009403610000000007}, {'diff': 0.0009404029999999994}, {...</msg>
<status status="PASS" starttime="20201029 09:33:39.652" endtime="20201029 09:33:39.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.659" level="INFO">${RESULT} = {'diff': [0.0009399169999999984, 0.0009400409999999991, 0.0009404029999999994, 0.0009402500000000001, 0.0009403610000000007, 0.0009404029999999994, 0.0009403889999999998, 0.0009403050000000024, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:33:39.656" endtime="20201029 09:33:39.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.663" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.662" endtime="20201029 09:33:39.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.666" level="INFO">VALUE: [0.0009399169999999984, 0.0009400409999999991, 0.0009404029999999994, 0.0009402500000000001, 0.0009403610000000007, 0.0009404029999999994, 0.0009403889999999998, 0.0009403050000000024, 0.000940512999999997, 0.0009401669999999987, 0.0009402370000000035, 0.0009402230000000039, 0.0009403200000000014, 0.0009403609999999937, 0.0009405419999999956, 0.000940429999999999, 0.0009405839999999943, 0.0009403880000000003, 0.0009403060000000019, 0.0009402769999999963, 0.0009403470000000011, 0.000940318999999995, 0.0009402640000000032, 0.0009402920000000023, 0.0009404579999999982, 0.0009402920000000023, 0.0009402080000000049, 0.0009401809999999983, 0.0009400840000000008, 0.0009402220000000044, 0.0009401799999999988, 0.0009402499999999966, 0.0009403469999999942, 0.0009400830000000013, 0.0009397920000000018, 0.0009398749999999997, 0.0009399029999999989, 0.0009399579999999977, 0.0009398889999999993, 0.000939930999999998, 0.0009400970000000008, 0.0009400829999999943, 0.0009399300000000055, 0.000940042000000002, 0.0009398610000000002, 0.0009399169999999984, 0.0009396529999999986, 0.0009400000000000103, 0.0009400269999999961, 0.0009399300000000055]</msg>
<status status="PASS" starttime="20201029 09:33:39.665" endtime="20201029 09:33:39.667"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.660" endtime="20201029 09:33:39.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.264" endtime="20201029 09:33:39.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.241" endtime="20201029 09:33:39.669"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.671" endtime="20201029 09:33:39.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.670" endtime="20201029 09:33:39.691"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.700" endtime="20201029 09:33:39.766"></status>
</kw>
<msg timestamp="20201029 09:33:39.767" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.698" endtime="20201029 09:33:39.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.769" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.768" endtime="20201029 09:33:39.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.770" endtime="20201029 09:33:39.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.695" endtime="20201029 09:33:39.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.694" endtime="20201029 09:33:39.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.780" endtime="20201029 09:33:40.084"></status>
</kw>
<msg timestamp="20201029 09:33:40.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020828153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.778" endtime="20201029 09:33:40.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020828153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.088" endtime="20201029 09:33:40.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.097" endtime="20201029 09:33:40.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.776" endtime="20201029 09:33:40.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.774" endtime="20201029 09:33:40.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.103" level="INFO">${PHILIP_RES} = [{'diff': 0.000981250000000003}, {'diff': 0.0009811800000000016}, {'diff': 0.0009811109999999998}, {'diff': 0.0009812920000000017}, {'diff': 0.000981236}, {'diff': 0.000981333000000001}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:40.100" endtime="20201029 09:33:40.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.108" level="INFO">${RESULT} = {'diff': [0.000981250000000003, 0.0009811800000000016, 0.0009811109999999998, 0.0009812920000000017, 0.000981236, 0.000981333000000001, 0.000981361, 0.000981348, 0.0009812229999999998, 0.0009814860000...</msg>
<status status="PASS" starttime="20201029 09:33:40.104" endtime="20201029 09:33:40.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.113" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.112" endtime="20201029 09:33:40.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.115" level="INFO">VALUE: [0.000981250000000003, 0.0009811800000000016, 0.0009811109999999998, 0.0009812920000000017, 0.000981236, 0.000981333000000001, 0.000981361, 0.000981348, 0.0009812229999999998, 0.0009814860000000002, 0.000981278000000002, 0.0009812639999999956, 0.0009813190000000013, 0.0009812920000000017, 0.0009813190000000013, 0.0009813049999999948, 0.000981361, 0.000981333000000001, 0.0009813470000000005, 0.0009815280000000023, 0.0009813190000000013, 0.000981570000000001, 0.0009814299999999984, 0.000981472000000004, 0.0009814019999999993, 0.0009814169999999983, 0.0009814449999999975, 0.0009814170000000053, 0.000981472000000004, 0.0009815280000000023, 0.0009811949999999972, 0.000981443999999998, 0.0009814029999999987, 0.0009812629999999961, 0.0009811659999999986, 0.000981278000000002, 0.0009813749999999996, 0.0009812910000000022, 0.0009811949999999972, 0.0009812080000000042, 0.0009811529999999985, 0.0009814019999999923, 0.0009812229999999894, 0.0009811249999999994, 0.0009814159999999988, 0.0009812359999999964, 0.0009812229999999894, 0.0009810420000000014, 0.0009812089999999968, 0.0009815140000000028]</msg>
<status status="PASS" starttime="20201029 09:33:40.114" endtime="20201029 09:33:40.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.109" endtime="20201029 09:33:40.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.692" endtime="20201029 09:33:40.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.669" endtime="20201029 09:33:40.117"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.120" endtime="20201029 09:33:40.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.118" endtime="20201029 09:33:40.140"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.148" endtime="20201029 09:33:40.214"></status>
</kw>
<msg timestamp="20201029 09:33:40.214" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.147" endtime="20201029 09:33:40.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.217" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.215" endtime="20201029 09:33:40.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.218" endtime="20201029 09:33:40.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.144" endtime="20201029 09:33:40.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.142" endtime="20201029 09:33:40.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.227" endtime="20201029 09:33:40.515"></status>
</kw>
<msg timestamp="20201029 09:33:40.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020547014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.226" endtime="20201029 09:33:40.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020547014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.519" endtime="20201029 09:33:40.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.528" endtime="20201029 09:33:40.529"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.223" endtime="20201029 09:33:40.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.221" endtime="20201029 09:33:40.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.534" level="INFO">${PHILIP_RES} = [{'diff': 0.0010235419999999988}, {'diff': 0.001023861000000001}, {'diff': 0.0010238750000000005}, {'diff': 0.0010238469999999979}, {'diff': 0.0010238329999999983}, {'diff': 0.001023764}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:40.531" endtime="20201029 09:33:40.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.538" level="INFO">${RESULT} = {'diff': [0.0010235419999999988, 0.001023861000000001, 0.0010238750000000005, 0.0010238469999999979, 0.0010238329999999983, 0.001023764, 0.0010237090000000011, 0.0010237500000000004, 0.001023804999999...</msg>
<status status="PASS" starttime="20201029 09:33:40.535" endtime="20201029 09:33:40.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.543" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.542" endtime="20201029 09:33:40.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.545" level="INFO">VALUE: [0.0010235419999999988, 0.001023861000000001, 0.0010238750000000005, 0.0010238469999999979, 0.0010238329999999983, 0.001023764, 0.0010237090000000011, 0.0010237500000000004, 0.0010238049999999992, 0.0010239720000000015, 0.0010237220000000012, 0.001023778000000003, 0.0010237499999999969, 0.0010238330000000018, 0.0010237079999999982, 0.0010236110000000007, 0.001023584000000001, 0.0010240410000000033, 0.0010241390000000003, 0.001024083000000002, 0.0010242220000000052, 0.0010241669999999994, 0.0010242359999999978, 0.0010242909999999966, 0.0010242499999999974, 0.0010242630000000044, 0.0010242219999999982, 0.0010241390000000003, 0.0010242779999999965, 0.001024263999999997, 0.0010243610000000014, 0.001024083000000002, 0.0010240139999999967, 0.0010242360000000048, 0.0010243200000000022, 0.0010242779999999965, 0.001024193999999999, 0.0010241949999999986, 0.0010242780000000035, 0.0010242499999999974, 0.001024277000000004, 0.0010239449999999983, 0.0010241389999999934, 0.0010241949999999916, 0.0010242220000000052, 0.0010241939999999922, 0.0010242780000000035, 0.001024291999999996, 0.0010241390000000072, 0.0010241389999999934]</msg>
<status status="PASS" starttime="20201029 09:33:40.544" endtime="20201029 09:33:40.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.539" endtime="20201029 09:33:40.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.140" endtime="20201029 09:33:40.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.118" endtime="20201029 09:33:40.547"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.550" endtime="20201029 09:33:40.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.548" endtime="20201029 09:33:40.570"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.578" endtime="20201029 09:33:40.646"></status>
</kw>
<msg timestamp="20201029 09:33:40.647" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.577" endtime="20201029 09:33:40.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.649" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.648" endtime="20201029 09:33:40.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.650" endtime="20201029 09:33:40.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.574" endtime="20201029 09:33:40.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.572" endtime="20201029 09:33:40.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.661" endtime="20201029 09:33:40.967"></status>
</kw>
<msg timestamp="20201029 09:33:40.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.659" endtime="20201029 09:33:40.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.971" endtime="20201029 09:33:40.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.980" endtime="20201029 09:33:40.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.657" endtime="20201029 09:33:40.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.655" endtime="20201029 09:33:40.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.986" level="INFO">${PHILIP_RES} = [{'diff': 0.0010671249999999986}, {'diff': 0.0010672369999999987}, {'diff': 0.0010673749999999989}, {'diff': 0.0010674030000000015}, {'diff': 0.0010672639999999983}, {'diff': 0.0010674719999999999}, {...</msg>
<status status="PASS" starttime="20201029 09:33:40.983" endtime="20201029 09:33:40.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.990" level="INFO">${RESULT} = {'diff': [0.0010671249999999986, 0.0010672369999999987, 0.0010673749999999989, 0.0010674030000000015, 0.0010672639999999983, 0.0010674719999999999, 0.0010673049999999976, 0.0010672499999999988, 0.0010...</msg>
<status status="PASS" starttime="20201029 09:33:40.987" endtime="20201029 09:33:40.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.995" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.994" endtime="20201029 09:33:40.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.997" level="INFO">VALUE: [0.0010671249999999986, 0.0010672369999999987, 0.0010673749999999989, 0.0010674030000000015, 0.0010672639999999983, 0.0010674719999999999, 0.0010673049999999976, 0.0010672499999999988, 0.0010673750000000023, 0.0010674029999999946, 0.0010672919999999975, 0.001067417000000001, 0.0010674029999999946, 0.0010675419999999977, 0.001067417000000001, 0.0010675970000000035, 0.001067319000000004, 0.0010672359999999992, 0.0010673329999999967, 0.0010674030000000015, 0.0010674029999999946, 0.0010673470000000032, 0.0010674589999999998, 0.0010673199999999966, 0.0010675830000000039, 0.0010674720000000068, 0.0010672359999999992, 0.0010674439999999938, 0.0010672639999999983, 0.0010675279999999981, 0.001067417000000001, 0.001067097000000003, 0.0010668890000000014, 0.001066694, 0.0010670549999999973, 0.0010669020000000015, 0.001067223000000006, 0.001067097000000003, 0.001067125000000002, 0.0010670830000000103, 0.0010670409999999908, 0.001066985999999992, 0.0010669440000000002, 0.001066874999999995, 0.001066902999999994, 0.0010669589999999923, 0.0010670829999999965, 0.0010671389999999947, 0.0010668610000000023, 0.0010670139999999911]</msg>
<status status="PASS" starttime="20201029 09:33:40.996" endtime="20201029 09:33:40.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.991" endtime="20201029 09:33:41.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.570" endtime="20201029 09:33:41.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.548" endtime="20201029 09:33:41.000"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.003" endtime="20201029 09:33:41.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.001" endtime="20201029 09:33:41.023"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.031" endtime="20201029 09:33:41.107"></status>
</kw>
<msg timestamp="20201029 09:33:41.108" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.030" endtime="20201029 09:33:41.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.111" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.109" endtime="20201029 09:33:41.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.112" endtime="20201029 09:33:41.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.027" endtime="20201029 09:33:41.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.025" endtime="20201029 09:33:41.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.121" endtime="20201029 09:33:41.407"></status>
</kw>
<msg timestamp="20201029 09:33:41.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.119" endtime="20201029 09:33:41.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.412" endtime="20201029 09:33:41.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.420" endtime="20201029 09:33:41.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.117" endtime="20201029 09:33:41.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.115" endtime="20201029 09:33:41.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.426" level="INFO">${PHILIP_RES} = [{'diff': 0.001111444999999999}, {'diff': 0.0011111809999999993}, {'diff': 0.0011112640000000007}, {'diff': 0.0011112640000000007}, {'diff': 0.0011113889999999974}, {'diff': 0.001111332999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:41.423" endtime="20201029 09:33:41.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.431" level="INFO">${RESULT} = {'diff': [0.001111444999999999, 0.0011111809999999993, 0.0011112640000000007, 0.0011112640000000007, 0.0011113889999999974, 0.001111332999999999, 0.0011113470000000021, 0.0011112640000000007, 0.001111...</msg>
<status status="PASS" starttime="20201029 09:33:41.427" endtime="20201029 09:33:41.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.436" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.435" endtime="20201029 09:33:41.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.438" level="INFO">VALUE: [0.001111444999999999, 0.0011111809999999993, 0.0011112640000000007, 0.0011112640000000007, 0.0011113889999999974, 0.001111332999999999, 0.0011113470000000021, 0.0011112640000000007, 0.001111417, 0.001111237000000001, 0.0011112500000000011, 0.0011113749999999978, 0.0011113059999999994, 0.0011113340000000055, 0.0011113609999999982, 0.0011114450000000026, 0.0011114449999999956, 0.0011112640000000007, 0.0011115839999999988, 0.001111319999999999, 0.0011112360000000016, 0.0011113479999999981, 0.0011112640000000007, 0.0011114590000000021, 0.0011113469999999986, 0.0011111249999999975, 0.0011113189999999995, 0.0011114590000000021, 0.001111444000000003, 0.0011114720000000022, 0.0011112499999999942, 0.0011113610000000052, 0.0011113469999999986, 0.0011113889999999974, 0.0011113750000000047, 0.0011113889999999974, 0.0011116389999999976, 0.0011111800000000033, 0.0011113050000000069, 0.0011113749999999978, 0.0011112919999999998, 0.0011112910000000004, 0.0011113050000000069, 0.0011112779999999933, 0.0011112499999999942, 0.0011112919999999998, 0.001111319999999999, 0.0011111530000000036, 0.0011111810000000027, 0.0011112499999999942]</msg>
<status status="PASS" starttime="20201029 09:33:41.437" endtime="20201029 09:33:41.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.432" endtime="20201029 09:33:41.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.024" endtime="20201029 09:33:41.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.001" endtime="20201029 09:33:41.440"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.443" endtime="20201029 09:33:41.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.441" endtime="20201029 09:33:41.463"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.471" endtime="20201029 09:33:41.541"></status>
</kw>
<msg timestamp="20201029 09:33:41.541" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.470" endtime="20201029 09:33:41.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.544" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.542" endtime="20201029 09:33:41.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.545" endtime="20201029 09:33:41.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.467" endtime="20201029 09:33:41.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.465" endtime="20201029 09:33:41.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.554" endtime="20201029 09:33:41.866"></status>
</kw>
<msg timestamp="20201029 09:33:41.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017531417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018687958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.553" endtime="20201029 09:33:41.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017531417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018687958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.870" endtime="20201029 09:33:41.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.878" endtime="20201029 09:33:41.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.550" endtime="20201029 09:33:41.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.548" endtime="20201029 09:33:41.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.885" level="INFO">${PHILIP_RES} = [{'diff': 0.0011565410000000005}, {'diff': 0.0011567359999999985}, {'diff': 0.0011567220000000024}, {'diff': 0.0011566250000000014}, {'diff': 0.0011562910000000003}, {'diff': 0.0011565280000000004}, {...</msg>
<status status="PASS" starttime="20201029 09:33:41.882" endtime="20201029 09:33:41.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.889" level="INFO">${RESULT} = {'diff': [0.0011565410000000005, 0.0011567359999999985, 0.0011567220000000024, 0.0011566250000000014, 0.0011562910000000003, 0.0011565280000000004, 0.0011565000000000013, 0.0011565829999999992, 0.0011...</msg>
<status status="PASS" starttime="20201029 09:33:41.886" endtime="20201029 09:33:41.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.894" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.892" endtime="20201029 09:33:41.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.896" level="INFO">VALUE: [0.0011565410000000005, 0.0011567359999999985, 0.0011567220000000024, 0.0011566250000000014, 0.0011562910000000003, 0.0011565280000000004, 0.0011565000000000013, 0.0011565829999999992, 0.0011564859999999982, 0.0011566109999999984, 0.0011566660000000006, 0.0011566669999999966, 0.0011566250000000014, 0.0011565980000000017, 0.001156556000000003, 0.0011563609999999946, 0.0011564719999999987, 0.0011564999999999978, 0.0011565419999999965, 0.0011566530000000005, 0.001156346999999995, 0.0011565830000000027, 0.0011564719999999987, 0.0011563199999999954, 0.0011564719999999987, 0.0011564160000000004, 0.0011567640000000046, 0.0011564999999999978, 0.0011566250000000014, 0.0011567079999999993, 0.0011566939999999998, 0.0011567080000000063, 0.0011564169999999999, 0.0011565690000000031, 0.0011567780000000041, 0.001156527999999997, 0.0011565420000000035, 0.0011564030000000003, 0.0011563750000000012, 0.001156639000000001, 0.0011564439999999926, 0.001156445000000006, 0.0011565139999999974, 0.0011566529999999936, 0.0011566939999999998, 0.0011566809999999927, 0.0011565419999999965, 0.0011563609999999946, 0.0011565969999999953, 0.0011564170000000068]</msg>
<status status="PASS" starttime="20201029 09:33:41.895" endtime="20201029 09:33:41.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.890" endtime="20201029 09:33:41.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.464" endtime="20201029 09:33:41.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.441" endtime="20201029 09:33:41.898"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.900" endtime="20201029 09:33:41.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.899" endtime="20201029 09:33:41.920"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.929" endtime="20201029 09:33:42.007"></status>
</kw>
<msg timestamp="20201029 09:33:42.008" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.927" endtime="20201029 09:33:42.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.010" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.009" endtime="20201029 09:33:42.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.012" endtime="20201029 09:33:42.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.925" endtime="20201029 09:33:42.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.923" endtime="20201029 09:33:42.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.022" endtime="20201029 09:33:42.308"></status>
</kw>
<msg timestamp="20201029 09:33:42.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02352275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:42.020" endtime="20201029 09:33:42.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02352275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:42.312" endtime="20201029 09:33:42.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.321" endtime="20201029 09:33:42.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.018" endtime="20201029 09:33:42.323"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.016" endtime="20201029 09:33:42.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.327" level="INFO">${PHILIP_RES} = [{'diff': 0.0012020279999999973}, {'diff': 0.0012020980000000021}, {'diff': 0.0012022219999999993}, {'diff': 0.0012021249999999983}, {'diff': 0.0012021670000000005}, {'diff': 0.0012022359999999989}, {...</msg>
<status status="PASS" starttime="20201029 09:33:42.324" endtime="20201029 09:33:42.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.332" level="INFO">${RESULT} = {'diff': [0.0012020279999999973, 0.0012020980000000021, 0.0012022219999999993, 0.0012021249999999983, 0.0012021670000000005, 0.0012022359999999989, 0.001202250000000002, 0.0012022910000000012, 0.00120...</msg>
<status status="PASS" starttime="20201029 09:33:42.328" endtime="20201029 09:33:42.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.336" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.335" endtime="20201029 09:33:42.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.339" level="INFO">VALUE: [0.0012020279999999973, 0.0012020980000000021, 0.0012022219999999993, 0.0012021249999999983, 0.0012021670000000005, 0.0012022359999999989, 0.001202250000000002, 0.0012022910000000012, 0.0012021529999999975, 0.001202138999999998, 0.0012021530000000044, 0.0012021109999999988, 0.0012019999999999947, 0.001201764000000001, 0.001201846999999999, 0.0012020969999999992, 0.0012018609999999985, 0.0012371669999999974, 0.0012018329999999994, 0.0012018889999999977, 0.001202166999999997, 0.0012019439999999965, 0.0012019859999999952, 0.0012021249999999983, 0.0012020000000000017, 0.0012020699999999995, 0.001202151999999998, 0.0012020000000000017, 0.001201846999999999, 0.0012020000000000017, 0.001201958000000003, 0.0012022359999999954, 0.0012019719999999956, 0.0012021249999999983, 0.0012020830000000066, 0.0012019439999999965, 0.0012019300000000038, 0.001201972999999995, 0.0012018470000000059, 0.0012019030000000042, 0.0012022359999999954, 0.0012023190000000072, 0.0012020699999999995, 0.0012018329999999994, 0.0012018749999999911, 0.0012019999999999947, 0.0012022089999999958, 0.0012020979999999987, 0.0012019300000000038, 0.0012019169999999968]</msg>
<status status="PASS" starttime="20201029 09:33:42.337" endtime="20201029 09:33:42.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.332" endtime="20201029 09:33:42.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.921" endtime="20201029 09:33:42.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.898" endtime="20201029 09:33:42.341"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.344" endtime="20201029 09:33:42.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.342" endtime="20201029 09:33:42.364"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.372" endtime="20201029 09:33:42.450"></status>
</kw>
<msg timestamp="20201029 09:33:42.451" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.371" endtime="20201029 09:33:42.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.453" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.452" endtime="20201029 09:33:42.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.454" endtime="20201029 09:33:42.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.368" endtime="20201029 09:33:42.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.366" endtime="20201029 09:33:42.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.464" endtime="20201029 09:33:42.749"></status>
</kw>
<msg timestamp="20201029 09:33:42.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.462" endtime="20201029 09:33:42.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021006708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.754" endtime="20201029 09:33:42.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.762" endtime="20201029 09:33:42.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.459" endtime="20201029 09:33:42.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.458" endtime="20201029 09:33:42.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.768" level="INFO">${PHILIP_RES} = [{'diff': 0.0012485840000000005}, {'diff': 0.0012488200000000012}, {'diff': 0.0012487499999999999}, {'diff': 0.0012487079999999977}, {'diff': 0.0012487919999999986}, {'diff': 0.001248889000000003}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:42.765" endtime="20201029 09:33:42.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.774" level="INFO">${RESULT} = {'diff': [0.0012485840000000005, 0.0012488200000000012, 0.0012487499999999999, 0.0012487079999999977, 0.0012487919999999986, 0.001248889000000003, 0.0012487639999999994, 0.0012487499999999999, 0.00124...</msg>
<status status="PASS" starttime="20201029 09:33:42.770" endtime="20201029 09:33:42.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.778" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.777" endtime="20201029 09:33:42.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.781" level="INFO">VALUE: [0.0012485840000000005, 0.0012488200000000012, 0.0012487499999999999, 0.0012487079999999977, 0.0012487919999999986, 0.001248889000000003, 0.0012487639999999994, 0.0012487499999999999, 0.0012488880000000036, 0.0012488200000000046, 0.001248679999999995, 0.0012487360000000003, 0.001248486, 0.0012487220000000007, 0.001248597000000004, 0.0012486939999999946, 0.0012488049999999987, 0.0012488339999999973, 0.001248403000000002, 0.0012484720000000005, 0.0012483610000000034, 0.0012485139999999992, 0.001248374999999996, 0.0012486110000000036, 0.0012485269999999993, 0.0012483470000000038, 0.001248403000000002, 0.0012485699999999975, 0.0012484999999999996, 0.0012485830000000045, 0.0012484999999999996, 0.0012485979999999966, 0.0012484160000000022, 0.0012481250000000027, 0.0012485139999999922, 0.0012486389999999958, 0.0012487360000000003, 0.0012486109999999967, 0.0012484999999999996, 0.0012487360000000003, 0.0012488329999999909, 0.001248597000000004, 0.0012486389999999958, 0.0012487080000000012, 0.001248790999999999, 0.0012487090000000006, 0.0012486389999999958, 0.0012489159999999888, 0.001248790999999999, 0.001248695000000008]</msg>
<status status="PASS" starttime="20201029 09:33:42.779" endtime="20201029 09:33:42.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.774" endtime="20201029 09:33:42.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.364" endtime="20201029 09:33:42.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.342" endtime="20201029 09:33:42.783"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.785" endtime="20201029 09:33:42.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.784" endtime="20201029 09:33:42.805"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.814" endtime="20201029 09:33:42.897"></status>
</kw>
<msg timestamp="20201029 09:33:42.897" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.812" endtime="20201029 09:33:42.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.900" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.898" endtime="20201029 09:33:42.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.901" endtime="20201029 09:33:42.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.809" endtime="20201029 09:33:42.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.807" endtime="20201029 09:33:42.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.910" endtime="20201029 09:33:43.215"></status>
</kw>
<msg timestamp="20201029 09:33:43.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.909" endtime="20201029 09:33:43.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023150847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.219" endtime="20201029 09:33:43.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.227" endtime="20201029 09:33:43.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.906" endtime="20201029 09:33:43.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.904" endtime="20201029 09:33:43.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.234" level="INFO">${PHILIP_RES} = [{'diff': 0.0012967079999999971}, {'diff': 0.001296791999999998}, {'diff': 0.0012965280000000017}, {'diff': 0.0012966249999999992}, {'diff': 0.0012966670000000013}, {'diff': 0.001296597}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:43.231" endtime="20201029 09:33:43.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.238" level="INFO">${RESULT} = {'diff': [0.0012967079999999971, 0.001296791999999998, 0.0012965280000000017, 0.0012966249999999992, 0.0012966670000000013, 0.001296597, 0.0012965969999999966, 0.0012961810000000004, 0.001296332999999...</msg>
<status status="PASS" starttime="20201029 09:33:43.235" endtime="20201029 09:33:43.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.243" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.241" endtime="20201029 09:33:43.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.245" level="INFO">VALUE: [0.0012967079999999971, 0.001296791999999998, 0.0012965280000000017, 0.0012966249999999992, 0.0012966670000000013, 0.001296597, 0.0012965969999999966, 0.0012961810000000004, 0.0012963329999999967, 0.0012964440000000008, 0.0012963330000000037, 0.0012965970000000035, 0.001296472, 0.0012963609999999959, 0.0012964589999999998, 0.0012963750000000024, 0.0012965970000000035, 0.0012967220000000002, 0.0012966530000000018, 0.001296681000000001, 0.0012964589999999998, 0.0012963610000000028, 0.0012967499999999993, 0.0012966800000000014, 0.001296389000000002, 0.001296472, 0.001296681000000001, 0.0012965409999999983, 0.0012965139999999986, 0.0012966390000000022, 0.0012963470000000032, 0.0012965969999999966, 0.001296389000000009, 0.0012964169999999942, 0.0012965700000000108, 0.0012965139999999986, 0.0012966250000000096, 0.001296583000000004, 0.0012964859999999995, 0.0012963750000000024, 0.0012965280000000051, 0.0012965560000000043, 0.0012965280000000051, 0.001296388999999995, 0.0012965419999999978, 0.0012964440000000077, 0.001296486999999999, 0.001296319000000004, 0.0012963049999999976, 0.0012962079999999931]</msg>
<status status="PASS" starttime="20201029 09:33:43.244" endtime="20201029 09:33:43.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.239" endtime="20201029 09:33:43.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.806" endtime="20201029 09:33:43.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.783" endtime="20201029 09:33:43.247"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.250" endtime="20201029 09:33:43.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.248" endtime="20201029 09:33:43.270"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.278" endtime="20201029 09:33:43.360"></status>
</kw>
<msg timestamp="20201029 09:33:43.360" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.277" endtime="20201029 09:33:43.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.363" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.361" endtime="20201029 09:33:43.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.364" endtime="20201029 09:33:43.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.274" endtime="20201029 09:33:43.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.272" endtime="20201029 09:33:43.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.374" endtime="20201029 09:33:43.661"></status>
</kw>
<msg timestamp="20201029 09:33:43.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020990389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.373" endtime="20201029 09:33:43.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020990389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.665" endtime="20201029 09:33:43.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.674" endtime="20201029 09:33:43.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.370" endtime="20201029 09:33:43.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.368" endtime="20201029 09:33:43.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.680" level="INFO">${PHILIP_RES} = [{'diff': 0.0013448060000000005}, {'diff': 0.0013449869999999989}, {'diff': 0.0013450409999999982}, {'diff': 0.0013451529999999982}, {'diff': 0.001345291000000002}, {'diff': 0.0013452359999999997}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:43.677" endtime="20201029 09:33:43.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.685" level="INFO">${RESULT} = {'diff': [0.0013448060000000005, 0.0013449869999999989, 0.0013450409999999982, 0.0013451529999999982, 0.001345291000000002, 0.0013452359999999997, 0.0013452369999999991, 0.0013451529999999982, 0.00134...</msg>
<status status="PASS" starttime="20201029 09:33:43.681" endtime="20201029 09:33:43.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.689" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.688" endtime="20201029 09:33:43.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.691" level="INFO">VALUE: [0.0013448060000000005, 0.0013449869999999989, 0.0013450409999999982, 0.0013451529999999982, 0.001345291000000002, 0.0013452359999999997, 0.0013452369999999991, 0.0013451529999999982, 0.001344999999999999, 0.001345110999999996, 0.0013450830000000039, 0.0013449589999999997, 0.0013448890000000019, 0.0013450139999999985, 0.0013450559999999973, 0.0013451800000000014, 0.001344917000000001, 0.0013451670000000013, 0.0013449310000000006, 0.001345222, 0.001345111000000003, 0.0013450970000000034, 0.0013451810000000008, 0.0013451530000000017, 0.0013450279999999981, 0.0013449160000000016, 0.0013450419999999977, 0.0013450969999999965, 0.0013450139999999985, 0.0013450139999999985, 0.0013450419999999977, 0.0013449860000000063, 0.0013450840000000103, 0.0013449719999999998, 0.0013449859999999925, 0.0013451659999999949, 0.0013446810000000003, 0.001344806000000004, 0.0013447359999999992, 0.0013449440000000007, 0.001344999999999999, 0.0013446950000000069, 0.0013448749999999954, 0.0013448330000000036, 0.0013449450000000002, 0.0013448050000000045, 0.0013449719999999998, 0.0013447499999999918, 0.0013448610000000027, 0.0013448199999999966]</msg>
<status status="PASS" starttime="20201029 09:33:43.690" endtime="20201029 09:33:43.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.685" endtime="20201029 09:33:43.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.270" endtime="20201029 09:33:43.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.247" endtime="20201029 09:33:43.694"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.697" endtime="20201029 09:33:43.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.695" endtime="20201029 09:33:43.717"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.725" endtime="20201029 09:33:43.811"></status>
</kw>
<msg timestamp="20201029 09:33:43.811" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.724" endtime="20201029 09:33:43.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.814" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.813" endtime="20201029 09:33:43.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.815" endtime="20201029 09:33:43.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.721" endtime="20201029 09:33:43.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.719" endtime="20201029 09:33:43.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.825" endtime="20201029 09:33:44.130"></status>
</kw>
<msg timestamp="20201029 09:33:44.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020914917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.823" endtime="20201029 09:33:44.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020914917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.134" endtime="20201029 09:33:44.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.142" endtime="20201029 09:33:44.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.820" endtime="20201029 09:33:44.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.818" endtime="20201029 09:33:44.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.149" level="INFO">${PHILIP_RES} = [{'diff': 0.001394514000000003}, {'diff': 0.0013942780000000023}, {'diff': 0.0013945549999999987}, {'diff': 0.0013943340000000005}, {'diff': 0.0013943610000000002}, {'diff': 0.001394402999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:44.146" endtime="20201029 09:33:44.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.154" level="INFO">${RESULT} = {'diff': [0.001394514000000003, 0.0013942780000000023, 0.0013945549999999987, 0.0013943340000000005, 0.0013943610000000002, 0.001394402999999999, 0.0013944299999999986, 0.001394542000000002, 0.0013943...</msg>
<status status="PASS" starttime="20201029 09:33:44.150" endtime="20201029 09:33:44.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.158" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.157" endtime="20201029 09:33:44.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.161" level="INFO">VALUE: [0.001394514000000003, 0.0013942780000000023, 0.0013945549999999987, 0.0013943340000000005, 0.0013943610000000002, 0.001394402999999999, 0.0013944299999999986, 0.001394542000000002, 0.0013943889999999959, 0.0013943750000000033, 0.0013942090000000004, 0.0013943329999999976, 0.0013943609999999967, 0.0013942639999999992, 0.0013946249999999966, 0.0013943749999999963, 0.0013945829999999979, 0.0013946519999999962, 0.0013945, 0.001394305999999998, 0.001394236, 0.0013943479999999966, 0.0013943879999999964, 0.001394318999999998, 0.0013944440000000016, 0.0013944299999999951, 0.0013945689999999983, 0.0013945699999999978, 0.0013942220000000005, 0.001394417000000002, 0.001394319000000005, 0.0013946249999999966, 0.0013943609999999967, 0.001394305999999998, 0.0013942089999999935, 0.001394513, 0.001394528000000006, 0.0013943609999999967, 0.0013945419999999986, 0.0013943750000000033, 0.001394499999999993, 0.0013945830000000048, 0.0013944720000000077, 0.0013943610000000106, 0.0013945139999999995, 0.0013942080000000079, 0.0013943889999999959, 0.0013945830000000048, 0.001394597999999997, 0.001394527999999992]</msg>
<status status="PASS" starttime="20201029 09:33:44.159" endtime="20201029 09:33:44.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.155" endtime="20201029 09:33:44.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.717" endtime="20201029 09:33:44.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.695" endtime="20201029 09:33:44.167"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.169" endtime="20201029 09:33:44.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.168" endtime="20201029 09:33:44.189"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.198" endtime="20201029 09:33:44.288"></status>
</kw>
<msg timestamp="20201029 09:33:44.289" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.196" endtime="20201029 09:33:44.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.291" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.290" endtime="20201029 09:33:44.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.293" endtime="20201029 09:33:44.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.194" endtime="20201029 09:33:44.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.192" endtime="20201029 09:33:44.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.302" endtime="20201029 09:33:44.590"></status>
</kw>
<msg timestamp="20201029 09:33:44.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020646597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.300" endtime="20201029 09:33:44.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020646597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.594" endtime="20201029 09:33:44.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.602" endtime="20201029 09:33:44.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.298" endtime="20201029 09:33:44.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.296" endtime="20201029 09:33:44.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.609" level="INFO">${PHILIP_RES} = [{'diff': 0.0014444160000000004}, {'diff': 0.0014444719999999987}, {'diff': 0.0014445689999999997}, {'diff': 0.0014444720000000022}, {'diff': 0.0014447079999999994}, {'diff': 0.0014446939999999998}, {...</msg>
<status status="PASS" starttime="20201029 09:33:44.606" endtime="20201029 09:33:44.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.613" level="INFO">${RESULT} = {'diff': [0.0014444160000000004, 0.0014444719999999987, 0.0014445689999999997, 0.0014444720000000022, 0.0014447079999999994, 0.0014446939999999998, 0.001444723000000002, 0.0014446800000000003, 0.00144...</msg>
<status status="PASS" starttime="20201029 09:33:44.610" endtime="20201029 09:33:44.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.617" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.616" endtime="20201029 09:33:44.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.620" level="INFO">VALUE: [0.0014444160000000004, 0.0014444719999999987, 0.0014445689999999997, 0.0014444720000000022, 0.0014447079999999994, 0.0014446939999999998, 0.001444723000000002, 0.0014446800000000003, 0.0014450690000000002, 0.0014447780000000007, 0.001444723000000002, 0.0014448199999999994, 0.0014444859999999948, 0.0014446810000000032, 0.0014448050000000004, 0.0014447780000000007, 0.0014448050000000004, 0.0014447220000000024, 0.0014446110000000054, 0.0014445559999999996, 0.0014446800000000037, 0.0014446389999999976, 0.0014447640000000012, 0.001444527000000001, 0.0014448749999999982, 0.0014445970000000058, 0.0014445839999999988, 0.0014448889999999978, 0.0014446389999999906, 0.001444846999999999, 0.0014448890000000048, 0.0014447219999999955, 0.0014447500000000085, 0.001444707999999989, 0.0014448480000000125, 0.0014450550000000006, 0.0014446950000000097, 0.0014445699999999922, 0.0014447780000000077, 0.001444625000000005, 0.001444736000000002, 0.001444722999999995, 0.0014448610000000056, 0.001444527000000001, 0.0014447219999999955, 0.0014447370000000015, 0.0014449859999999953, 0.001444846999999999, 0.0014447499999999946, 0.0014445690000000067]</msg>
<status status="PASS" starttime="20201029 09:33:44.618" endtime="20201029 09:33:44.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.614" endtime="20201029 09:33:44.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.190" endtime="20201029 09:33:44.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.167" endtime="20201029 09:33:44.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.015" endtime="20201029 09:33:44.622"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:22.726" endtime="20201029 09:33:44.623" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:32:47.539" endtime="20201029 09:33:44.631"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:32:45.333" endtime="20201029 09:33:44.662"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
